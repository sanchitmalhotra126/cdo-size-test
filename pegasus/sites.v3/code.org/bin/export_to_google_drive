#!/usr/bin/env ruby
require 'csv'
require_relative '../../../src/env'
require src_dir 'database'
require 'cdo/google_drive'

GDRIVE = Google::Drive.new

def export_table_to_csv(kind, csv_path, columns=nil)
  $log.debug "Exporting #{kind.count} rows from #{kind.to_s} to '#{csv_path}'"

  CSV.open(csv_path, 'wb') do |csv|
    count = 1

    kind.all.each do |i|
      row = block_given? ? yield(i) : i.attributes
      next if row.nil?

      if count == 1
        columns ||= row.keys
        csv << columns
      end

      $log.debug "Exporting #{kind.to_s} row #{count}" if((count+=1)%1000)==0
      csv << columns.map { |column| row[column] }
    end
  end
end

def main()
  return unless only_one_running?(__FILE__)

  [
    { kind: DistrictPartnerInfo, gsheet: 'Forms/District Partners' },
  ].each do |i|
    kind = i[:kind]
    cache_path = pegasus_dir("cache/#{kind.to_s}.table.csv")

    $log.info "Exporting #{kind.to_s} to '#{cache_path}'"

    processor = i[:processor]
    unless processor
      export_table_to_csv(kind, cache_path, i[:columns])
    else
      export_table_to_csv(kind, cache_path, i[:columns]) { |row| processor.call(row) }
    end

    if i.has_key? :gsheet
      gsheet_path = i[:gsheet]
      $log.info "Uploading '#{cache_path}' to Google Drive as '#{gsheet_path}'"
      GDRIVE.upload_file_to_folder(cache_path, gsheet_path)
    end
  end
end

main()
