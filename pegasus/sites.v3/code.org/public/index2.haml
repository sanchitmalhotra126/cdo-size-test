---
theme: responsive_wide
banner: null
layout: wide
<%
  if request.site == 'csedweek.org'
%>
social:
  "og:title": "The Hour of Code is here"
  "og:description": "The Hour of Code is a global movement reaching tens of millions of students in 180+ countries and over 30 languages. Ages 4 to 104."
  "og:image": "http://csedweek.org/images/hoc-video-thumbnail.jpg"
  "og:image:width": "1200"
  "og:image:height": "627"
  "og:video:url": "http://youtubeeducation.com/v/FC5FbmsH4fw"
  "og:video:secure_url": "https://youtubeeducation.com/v/FC5FbmsH4fw"
  "og:video:type": "application/x-shockwave-flash"
  "og:video:width": "640"
  "og:video:height": "360"
  "twitter:card": "player"
  "twitter:site": "@codeorg"
  "twitter:url": "http://code.org/"
  "twitter:title": "The Hour of Code is here"
  "twitter:description": "The Hour of Code is a global movement reaching tens of millions of students in 180+ countries and over 30 languages. Ages 4 to 104."
  "twitter:image:src": "http://csedweek.org/images/hoc-video-thumbnail.jpg"
  "twitter:player": "https://youtubeeducation.com/v/FC5FbmsH4fw"
  "twitter:player:width": "640"
  "twitter:player:height": "360"
<%
  else
%>
social:
  "og:title": "Every child deserves opportunity"
  "og:description": "Every student in every school deserves the opportunity to study computer science."
  "og:image": "http://code.org/images/code-video-thumbnail.jpg"
  "og:image:width": "1440"
  "og:image:height": "810"
  "og:video:url": "http://youtubeeducation.com/v/nKIu9yen5nc"
  "og:video:secure_url": "https://youtubeeducation.com/v/nKIu9yen5nc"
  "og:video:type": "application/x-shockwave-flash"
  "og:video:width": "640"
  "og:video:height": "360"
<%
  end
%>

---

:css
  @media screen and (max-width: 600px)
  {
    .captions {font-size: 12px}
  }
  @media screen and (min-width: 601px)
  {
    .captions {font-size:18px}
  }

  body.modal-open .supreme-container{
    -webkit-filter: blur(2px);
    -moz-filter: blur(2px);
    -o-filter: blur(2px);
    -ms-filter: blur(2px);
    filter: blur(2px);
  }

.supreme-container
  #top{style: "position:relative; width:100%; overflow:hidden"}
    - heroes = DB[:cdo_homepage].where(type_s: "widehero", active_s: ["show","hide"], site_s: [request.site,"both"]).all
    - heroes.shuffle!
    - heroes.each_with_index do |entry, index|
      - display = entry[:active_s] == "hide" ? "none" : "block"
      - opacity = index == 0 ? 1 : 0
      .widehero{id: "fullwidth#{index}", style: "display: #{display}; z-index: -5; position:absolute; left: 0; top: 0; background-image: url(#{entry[:image_t]}); background-repeat: no-repeat; background-size: cover; width: 100%; height:100%; opacity: #{opacity}; background-position: 50% 20%"}

    #fullwidth{style: "width: 100%;"}
      .thegap{style: "height: 1px"}
        &nbsp;
      #desktop-header.desktop-feature
        = view :header
      #mobile-header.mobile-feature
        = view :header

    .container_responsive{style: "color: white; font-size: 20px"}
      .col-66{style: "position:relative;"}
        - heroes.each_with_index do |entry, index|
          - display = entry[:active_s] == "hide" ? "none" : "block"
          - unless entry[:text1_s].nil_or_empty?
            - text = I18n.t(entry[:text1_s])
            - unless text.nil_or_empty?
              - lines = text.lines 
              .captions{id: "captionarea#{index}", style: "position:absolute; left:0; top:0; text-align:center; width:100%; color:#eee; line-height:22px"}
                .caption1{style: "left: 50px; top: 68px; position: absolute; opacity: 0; background-color: rgba(0,0,0,0); padding:8px"}
                  = lines[0]
                .caption2{style: "left: 30px; top: 106px; position: absolute; opacity: 0; background-color: rgba(0,0,0,0); padding:8px"}
                  = lines[1]
                .caption3{style: "left: 40px; top: 156px; position: absolute; opacity: 0; font-size: 14px; background-color: rgba(0,0,0,0); padding:8px"}
                  = lines[2]

        &nbsp;

        -# Maintains a large empty 16x9 chunk so that the hero image remains large and visible at all browser sizes.
        #blankspaceleft{style: "text-align:right"}
          %div{style: "width:100%; height: 100%; margin: 0 auto;"}
            #notvideodiv{style: "position:relative;"}
              %img{style: "display:block; width:100%; height:auto", src: "/images/16x9.png"}/        

      .col-33{style: "position:relative; padding: 20px; margin-top:40px; text-align:center"}   
        - actions = DB[:cdo_homepage].where(type_s: "action", active_s: ["show","hide"], site_s: [request.site,"both"]).all
        - actions.each_with_index do |entry, index|
          - display = entry[:active_s] == "hide" ? "none" : "block"
          .action{style: "display: #{display}; opacity: 0"}
            - if entry[:param1_s] == "video"
              %img{src: "/shared/images/play-button.png", width:"40", onclick: "return showVideo_mainvideo();", style: "cursor: pointer"}
              %span{style: "font-size:20px", onclick: "return showVideo_mainvideo();", style: "cursor: pointer"}
                = I18n.t(entry[:text1_s])
            - elsif entry[:param1_s] == "petition"
              %button{style: "font-weight: 500; font-size: 20px; height: 50px", onclick: "expandPetition(); adjustScroll('petitionblock');"}
                = I18n.t(entry[:text1_s])
            %div{style: "height:40px"}

    #bottomhero{style:"position:absolute; bottom:0px; width:100%; background-color:rgba(0,0,0,0.2)"}
      #petition_message{:style=>"font-size: 17px; line-height:28px; font-family: 'Gotham 5r', sans-serif; padding: 5px; color:white; text-align:center"}=I18n.t:petition_message

  #slots{style: "text-align:center"}
    - DB[:cdo_homepage].where(type_s: "slot", active_s: ["show","hide"], site_s: [request.site,"both"]).all do |entry|
      - display = entry[:active_s] == "hide" ? "none" : "block"
      .slot{style: "display: #{display}"}
        = view :homepage_quarterslot, entry: entry
    -# DB[:cdo_homepage].where(type_s: "slot", active_s: ["show","hide"], site_s: [request.site,"both"]).all do |entry|
      - display = entry[:active_s] == "hide" ? "none" : "block"
      .slot{style: "display: #{display}"}
        = view :homepage_halfslot, entry: entry

  %script{:src=>"/js/jquery.placeholder.js"}

  - if request.site == 'code.org'
    #user_hero

    %div{style: 'clear:both;'}

  - if DB[:cdo_homepage].where(type_s: "petition")
    = view :petition_expand

  -if request.site != 'csedweek.org'
    .container_responsive{style: "margin-top:40px; margin-bottom:40px"}
      #donor_slider.desktop-feature{:style=>'width: 100%'}
        = view :donor_slider

= view 'popup_window.js'


- video_code = nil
- download_filename = nil
- facebook = nil
- twitter = nil

- video_actions = DB[:cdo_homepage].where(type_s: "action", param1_s: "video", active_s: ["show","hide"], site_s: [request.site,"both"]).all
- video_actions.each_with_index do |entry, index|
  - video_code = entry[:param2_s]
  - if video_code == "nKIu9yen5nc"
    - download_filename = 'HoC-video-15mb.mp4'
    - facebook = {:u=>"http://#{request.site}/"}
    - if request.site == 'csedweek.org'
      - twitter = {:related=>'codeorg', :hashtags=>'', :text=>I18n.t(:hoc_is_here)}
      - twitter[:hashtags] = 'HourOfCode' unless I18n.t(:hoc_is_here).include? '#HourOfCode'
    - else
      - twitter = {:related=>'codeorg', :hashtags=>'', :text=>I18n.t(:twitter_teach_cs)}
    - twitter[:url] = "http://#{request.site}/" unless twitter[:text].include? "http://#{request.site}/" || "#{twitter[:text]} http://#{request.site}/".length > 140

- unless video_code.nil_or_empty?
  #videofullwidth{style: "position:absolute; left: 0; top: 0; width: 100%"}
    = view :display_video_lightbox, id: "mainvideo", video_code: video_code, download_filename: download_filename, facebook:facebook, twitter:twitter


:javascript
  var petition;

  $(document).ready()
  {
    petition = new Petition();
  }
  
  $(document).ready()
  {
    showQuote(null, 0);
  }

  function showQuote(lastImage, nextImage)
  {
    if (lastImage !== null)
    {
      var lastImageId = "#captionarea" + lastImage;
      //console.log("hiding", lastImageId);
      $(lastImageId + " .caption1").animate({left: "50px", opacity:0}, { duration: 2000 });
      $(lastImageId + " .caption2").animate({left: "30px", opacity:0}, { duration: 2000 });
      $(lastImageId + " .caption3").animate({opacity:0}, { duration: 2000 });
    }

    if (nextImageId !== null) 
    {
      var nextImageId = "#captionarea" + nextImage;
      //console.log("showing", nextImageId);
      $(nextImageId + " .caption1").delay(1500).animate({ left: "0px", opacity: 0.8 }, { duration: 2000 });
      $(nextImageId + " .caption2").delay(2000).animate({ left: "60px", opacity: 0.8 }, { duration: 2000 });
      $(nextImageId + " .caption3").delay(4500).animate({ opacity: 0.6 }, { duration: 2000 });
    }

    $(".action").delay(4000).animate({ opacity: 1 }, { duration: 2000 });
  }

- if request.site == 'code.org'
  :javascript
    $(document).ready_not(function() {
      $.ajax({
        type: "GET",
        url: '/dashboardapi/user_hero',
        //data: "id=" + id, // appears as $_GET['id'] @ ur backend side
        success: function(data) {
          // data is ur summary
          $('#user_hero').html(data);
        }
      });
    });

:javascript

  function adjustScroll(destination)
  {
    $('html, body').animate({
      scrollTop: $("#" + destination).offset().top
    }, 1000);
  }

  var currentImage = 0;
  var timerId;
  var videoStarted = false;

  function cycleImage()
  {
    var numWideHeroes = $(".widehero").length;

    var lastImage = currentImage;
    var nextImage = (currentImage + 1) % numWideHeroes;
    $("#fullwidth" + currentImage).fadeTo(4000, 0);
    $("#fullwidth" + nextImage).fadeTo(4000, videoStarted ? 0.3 : 1);
    currentImage = nextImage;

    showQuote(lastImage, currentImage);
  }

  $.ready()
  {
    timerId = setInterval(cycleImage, 13000);
  }

