---
title: Poste Stats
---
- if params[:name].blank?
  %h2
    Please select a message from
    %a{href: 'list'} this list
- else
  = view :breadcrumbs, trail: [{text: 'Poste', url: '/poste'}, {text: 'Messages', url: '/poste/list'}, {text: params[:name]}]

  :ruby
    message_id = DB[:poste_messages].where(name: params[:name]).first[:id]

    sent_count = DB[:poste_deliveries].where(message_id: message_id).count

    opens_count = DB.fetch("
      SELECT poste_opens.id
      FROM poste_opens
      INNER JOIN poste_deliveries ON poste_opens.delivery_id = poste_deliveries.id
      WHERE poste_deliveries.message_id = #{message_id}
     ").count

    unique_opens_count = DB.fetch("
      SELECT DISTINCT poste_deliveries.id
      FROM poste_deliveries
      LEFT JOIN poste_opens ON poste_opens.delivery_id = poste_deliveries.id
      WHERE poste_deliveries.message_id = #{message_id} and poste_opens.id is not null
     ").count

    clicks_count = DB[:poste_clicks].where(message_id: message_id).count

  %h2= params[:name]


  %dl
    %dt Sent:
    %dd= sent_count
    %dt Opens (the number of times any instance of this message was opened):
    %dd= opens_count
    %dt Unique opens (the number of messages of this type that were opened):
    %dd= unique_opens_count
    %dt Clicks (the total number of clicks on any link on any message):
    %dd= clicks_count

  :ruby
    click_rows = DB.fetch("
    SELECT
      poste_urls.url as url,
      COUNT(poste_clicks.id) as clicks
    FROM poste_clicks
    LEFT JOIN poste_urls ON poste_urls.id = poste_clicks.url_id
    WHERE poste_clicks.message_id = (select id from poste_messages where name = '#{params[:name]}')
    GROUP BY poste_clicks.url_id
    ")

  %h2 Click details
  %table
    %tr
      %th Link
      %th Clicks
    - click_rows.each do |row|
      %tr
        %td
          .truncate
            %a{href: row[:url]}= row[:url]
        %td= row[:clicks]
