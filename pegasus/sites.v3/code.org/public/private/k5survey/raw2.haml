- authentication_required!
- forbidden! unless dashboard_user[:admin]

:ruby
  pd_workshops = PEGASUS_DB[:forms].where(kind: 'ProfessionalDevelopmentWorkshop')
  def get_more(section_id, affiliate)
    # a row for each teacher trained by an affiliate
    DASHBOARD_DB[:followers].
      where(section_id: section_id).
      join(:users, id: :student_user_id).
      select(:users__id___id, :users__name___name, :users__email___email).map do |teacher|
      # get data on students of the teacher
      teacher_user_id = teacher[:id]
      next unless teacher_user_id
      students = DASHBOARD_DB[:followers].
        where(user_id: teacher_user_id).
        join(:users, id: :student_user_id).
        select(:users__id___id, :users__created_at___created_at)

      if students.count > 0
        lifetime = students.map{|s| (Time.now - s[:created_at]) / (60 * 60 * 24)}.reduce(:+) / students.count.to_f

        levels = students.map do |s|
          DASHBOARD_DB[:user_levels].
            where(user_id: s[:id]).
            and("best_result >= #{ActivityConstants::MINIMUM_PASS_RESULT}").
            count
        end.reduce(:+) / students.count.to_f
      else
        lifetime = 0
        levels = 0
      end

      {
        teacher_name: teacher[:name],
        teacher_email: teacher[:email],
        affiliate_name: affiliate[:name],
        affiliate_email: affiliate[:user_id],
        students_count: students.count,
        students_average_lifetime_days: lifetime.round,
        students_average_levels_completed: levels.round(2)
      }
    end.compact
  end
%link(rel='stylesheet' type='text/css' href='/css/learn_tabs.css')
%h1
  K5 Survey Statistics
#learn-tabs{style: "padding-top:20px; padding-left:20px; padding-right:20px; background-color:white; background-color: rgb(219, 219, 219); overflow: hidden; margin-bottom: 10px;"}
  %ul.nav.nav-tabs{style: "float: left;"}
    %li
      %a{href:"/private/k5survey"} Results
    %li.active.tab
      %a{href:"k5survey/raw2"} Raw2
%h2
  Raw2
%table
  %tr
    %th
      teacher_name
    %th
      teacher_email
    %th
      affiliate_name
    %th
      affiliate_email
    %th
      students_count
    %th
      students_average_lifetime_days
    %th
      students_average_levels_completed
  - pd_workshops.each do |affiliate|
    - data = JSON.parse(affiliate[:data]) rescue {}
    - section_id = data['section_id_s']
    - next unless section_id
    - temp = get_more(section_id, affiliate)
    - temp.each do |t|
      %tr
        %td
          #{t[:teacher_name]}
        %td
          #{t[:teacher_email]}
        %td
          #{t[:affiliate_name]}
        %td
          #{t[:affiliate_email]}
        %td
          #{t[:students_count]}
        %td
          #{t[:students_average_lifetime_days]}
        %td
          #{t[:students_average_levels_completed]}