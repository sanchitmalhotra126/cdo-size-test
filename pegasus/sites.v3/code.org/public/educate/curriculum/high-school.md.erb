---
title: CS Curriculum for grades 9-12
video_player: true
theme: responsive 
---
<%= view :professional_learning_apply_banner, :use_sign_up_text => true, :link_suffix => "middle-high" %>

<br>

[solid-block-header]

High School

[/solid-block-header]

[Six different studies show](https://medium.com/@codeorg/cs-helps-students-outperform-in-school-college-and-workplace-66dd64a69536): students who study computer science perform better in other subjects, excel at problem-solving, and are more likely to attend college! 

For high schools, we offer two years computer science courses for beginners: Computer Science Discoveries, and Computer Science Principles. Our curriculum is available at no cost for anyone, anywhere to teach. You can read more about our [curriculum values here](https://code.org/educate/curriculum/values).

<hr>

<a name="csd"></a>
# Computer Science Discoveries</strong>

<div class="col-40" style="padding-right: 10px;">

<% facebook = {:u=>'https://youtu.be/2-QpgNHknds'} %>
<% twitter = {:url=>'https://youtu.be/2-QpgNHknds', :related=>'codeorg', :text=>"Computer Science Discoveries. (Thanks #{get_random_donor_twitter} for supporting @codeorg)"} %>
<%=view :display_video_thumbnail, id: "intro_csd", video_code: "2-QpgNHknds", play_button: 'center', letterbox: 'false', twitter: twitter, facebook: facebook %>

</div>

[col-60]

CS Discoveries is an introductory course for 6-10th grade students that can be flexibly taught as a single semester, two semesters over multiple years, or as a full year course. Mapped to CSTA standards, the course takes a wide lens on computer science by covering topics such as problem solving, programming, physical computing, user-centered design, and data, while inspiring students as they build their own websites, apps, games, and physical computing devices.

[<button>Learn about CS Discoveries</button>](/educate/csd)&nbsp;&nbsp;[<button>Learn about professional learning</button>](/educate/professional-learning/middle-high)

[/col-60]

<div style="clear: both;"></div>

<br>
<hr>

<a name="csp"></a>
# Computer Science Principles (intro and AP course)

<% facebook = {:u=>'https://youtu.be/DMr1iFYacGQ'} %>
<% twitter = {:url=>'https://youtu.be/DMr1iFYacGQ', :related=>'codeorg', :text=>"Computer Science Principles. (Thanks #{get_random_donor_twitter} for supporting @codeorg)"} %>

<div class="col-40" style="float:left; padding:10px;">

  <%=view :display_video_thumbnail, id: "CSPrinciples", video_code: "DMr1iFYacGQ", play_button: 'center', facebook: facebook, twitter: twitter, letterbox: 'false' %>

</div>

[col-60]

Designed for 9 - 12 grade students, CS Principles introduces students to the foundational concepts of computer science and challenges them to explore how computing and technology can impact the world. This year-long course can be taught as an introductory course and as an AP course - no prerequisites required for students or teachers new to computer science! CS Principles complements CS Discoveries with a deeper focus on concepts such as how the internet works and the societal impacts of computer science.

<% facebook = {:u=>'https://youtu.be/DMr1iFYacGQ'} %>
<% twitter = {:url=>'https://youtu.be/DMr1iFYacGQ', :related=>'codeorg', :text=>"Computer Science Principles. (Thanks #{get_random_donor_twitter} for supporting @codeorg)"} %>

[<button>Learn about CS Principles</button>](/educate/csp) &nbsp;&nbsp;[<button>Learn about professional learning</button>](/educate/professional-learning/middle-high)

[/col-60]

<div style="clear: both;"></div>

<div class="breakoutquote" style="background-color:#59b9dc; padding-top:20px; padding-bottom:20px">
  <p style="font-size:14px; line-height:22px">Students who take AP Computer Science Principles are <a href="https://medium.com/@codeorg/study-computer-science-students-much-more-likely-to-enroll-in-college-faca65b1476d">12% more likely to enroll in college</a> compared to similarly-situated peers, and students who take AP exams are <a href="https://files.eric.ed.gov/fulltext/ED519365.pdf">more likely to graduate 4-year college</a>, regardless of their score on the exam. AP computer science students also earn <a href="https://blog.code.org/post/125429946375/cs-other-subjects">better AP Calculus scores</a> than comparable students who donâ€™t take AP computer science.</p>
</div>

<br>
<hr>

# Computer Science Fundamentals - Express

<div class="col-40" style="padding-right: 10px;">

<img src="/images/fill-380x215/code20hr.jpg" style="max-width: 100%">

</div>

[col-60]

For a lightweight option that can be integrated as a unit in an existing technology or programming class, or as an after-school program, Code.org offers the 30-hour Express Course. This course covers all the core concepts from the elementary school curriculum [Computer Science Fundamentals](/educate/curriculum/elementary-school), but at an accelerated pace designed for students ages 10 - 18.

[<button>Learn about CS Fundamentals Express</button>](/educate/curriculum/express-course)

[/col-60]

<div style="clear: both;"></div>

<br>
<hr>

<a name="apcsa"></a>
# AP Computer Science A in Java

There are two AP computer science offerings, and students can take either course in any order. The AP Computer Science A course and exam focuses on computing skills related to programming in Java. The AP Computer Science Principles course complements AP Computer Science A as it aims to broaden participation in the study of computer science.

While Code.org does not have an AP Computer Science A curriculum, we have recommendations for a number of great curricula and programs available to teachers and students.

[<button>Learn about AP CS A resources</button>](/educate/curriculum/apcsa)

<br>
<hr>

<a name="AppLab"></a>

# Computer science in other subjects

Are you interested in a few lessons to demonstrate how computer science can be used in another subject area? Partners have created introductory tutorials as part of the Hour of Code. These activites are ideal for math, history, or other subject-area teachers interested in supplementing their curriculum and letting students explore the cross disciplinary aspects of computer science. Activities are available for [science](https://hourofcode.com/learn?grade=9%2B&subject=science), [math](https://hourofcode.com/learn?grade=9%2B&subject=math), [social studies](https://hourofcode.com/learn?grade=9%2B&subject=history), [language arts](https://hourofcode.com/learn?grade=9%2B&subject=la), and [art/media/music](https://hourofcode.com/learn?grade=9%2B&subject=art) classes.

<br>
<hr>

<a name="AppLab"></a>
# App Lab and other resources

In addition to our courses, we have tools and resources that you can blend into your own curriculum. Teachers can use [App Lab](/applab) in any course to teach students how to create apps and games in JavaScript. If you're ready to go further, [Game Lab](/gamelab) lets students make more complex animations and games including objects and characters that interact with each other. Our [widget library](/widgets) provides lessons and tools to teach text compression, encryption, pixels/RGB, and how the internet works. And, our [video library](/educate/resources/videos) helps illustrate computer science concepts for your class.

[<button>App Lab</button>](/applab)

<br>
<hr>

<a name="thirdparty"></a>


# Recommended courses from 3rd parties

If you want to go even further with your students, or you're looking for other options, check out our [recommended third party resources](https://code.org/educate/curriculum/3rd-party) for additional courses in programming, game design, and more!

<br>