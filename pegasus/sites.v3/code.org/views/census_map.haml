%link{rel: "stylesheet", type: "text/css", href: "/css/census_map.css"}
-max_height_percentage = 0.65 if max_height_percentage.nil?

#map
  #gmap.full-width
  #belowmaplegend.legend
    .legend-title Legend
    .color.green
    .caption
      Offers computer science class(es)
    .color.blue
    .caption
      Limited or no CS opportunities
    .color.yellow
    .caption
      Inconclusive data
    .color.grey
    .caption
      No Data
  #map-footer
    %span#footer-text
      In partnership with
    %img{src: '/images/fit-200/avatars/computer_science_teachers_association.png'}
  %br
  %br

- TABLE_ID = CDO.census_map_table_id.freeze
:javascript
  var showYourSchoolFunction;
  var gmap;
  var resizeZoom;
  var scrollwheelOption = false;
  var draggableOption = false;
  var resizeThrottleTimerId;
  var resizeThrottleTimeoutMs = 500;
  var maxHeightPercentage = "#{max_height_percentage}";

  $(document).ready(function() {
    initializeMap();
    addGeocomplete();
    resizeMap();

    $(window).resize(function() {
      // Throttle calling of resizeMap
      clearTimeout(resizeThrottleTimerId);
      resizeThrottleTimerId = setTimeout(resizeMap, resizeThrottleTimeoutMs);
    });
  });

  function initializeMap() {
    var mapOptions = {
      center: new google.maps.LatLng(41,-102),
      zoom: 4,
      scrollwheel: scrollwheelOption,
      draggable: draggableOption,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };

    gmap = new google.maps.Map(document.getElementById("gmap"), mapOptions);

    var layer = new google.maps.FusionTablesLayer({
      query: {
        select: 'location',
        from: "#{TABLE_ID}",
        where: "location NOT IN ''",
      },
      styles: [
        {
          where: "teaches_cs IN ''",
          markerOptions: {
            iconName: "measle_grey"
          }
        },
        {
          where: "teaches_cs IN 'YES'",
          markerOptions: {
            iconName: "small_green"
          }
        },
        {
          where: "teaches_cs IN 'NO'",
          markerOptions: {
            iconName: "small_blue"
          }
        },
        {
          where: "teaches_cs IN 'MAYBE'",
          markerOptions: {
            iconName: "small_yellow"
          }
        },
      ],
    });

    var legend = document.createElement('div');
    legend.id = 'inmaplegend';
    legend.className = 'legend';
    legend.index = 1;
    $("#belowmaplegend div").clone().appendTo(legend);

    gmap.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(legend);

    layer.setMap(gmap);

    google.maps.event.addListener(layer, 'click', function(event) {
      enableDrag();
      let censusMessage;
      switch(event.row['teaches_cs'].value) {
        case 'YES':
          censusMessage = "We believe this school offers Computer Science class(es).";
          break;
        case 'NO':
          censusMessage = "We believe this school offers limited or no Computer Science opportunities.";
          break;
        case 'MAYBE':
          censusMessage = "We are unsure if this school offers Computer Science class(es).";
          break;
        default:
          censusMessage = "We have no data about this school.";
      }
      const schoolDropdownOptionString = `{
        value: '${event.row['school_id'].value}',
        label: '${event.row['school_name'].value}',
        school: {
          nces_id: '${event.row['school_id'].value}',
          name: '${event.row['school_name'].value}',
          city: '${event.row['city'].value}',
          state: '${event.row['state_code'].value}',
          latitude: ${event.row['location'].value.split(',')[0]},
          longitude: ${event.row['location'].value.split(',')[1]},
        },
      }`;
      event.infoWindowHtml  = '<div class="census-info-window">';
      event.infoWindowHtml += '  <h4>';
      event.infoWindowHtml += '    <b>';
      event.infoWindowHtml +=        event.row['school_name'].value;
      event.infoWindowHtml += '    </b>';
      event.infoWindowHtml += '    <br>';
      event.infoWindowHtml += '    (' + event.row['city'].value + ', ' + event.row['state_code'].value +')';
      event.infoWindowHtml += '  </h4>';
      event.infoWindowHtml += '  <hr>';
      event.infoWindowHtml += '  <div class="census-message">' + censusMessage + '</div>';
      event.infoWindowHtml += '  <div class="button-container">';
      event.infoWindowHtml += '    <a href="#form" onclick="showYourSchoolFunction(' + schoolDropdownOptionString + ');">';
      event.infoWindowHtml += '      <div class="button">';
      event.infoWindowHtml += '        <div class="button-text">Take the survey for this school</div>';
      event.infoWindowHtml += '      </div>';
      event.infoWindowHtml += '    </a>';
      event.infoWindowHtml += '    <a href="TODO: add this link once we have it">';
      event.infoWindowHtml += '      <div class="button">';
      event.infoWindowHtml += '        <div class="button-text">Send the survey to a teacher at this school</div>';
      event.infoWindowHtml += '      </div>';
      event.infoWindowHtml += '    </a>'
      event.infoWindowHtml += '    <div style="clear: both;" />';
      event.infoWindowHtml += '  </div>';
      event.infoWindowHtml += '</div>';
    });
    google.maps.event.addListener(gmap, 'zoom_changed', function(event) {
      enableDrag();
    });
    google.maps.event.addListener(gmap, 'click', function(event) {
      enableDrag();
    });
  }

  function updateCensusMapSchool(school) {
    if (school && school.latitude && school.longitude) {
      const schoolLocation = new google.maps.LatLng(school.latitude, school.longitude);
      const map_options = {
        center: schoolLocation,
        zoom: 17,
        scrollwheel: scrollwheelOption,
        draggable: draggableOption,
      }
      gmap.setOptions(map_options);

      const marker = new google.maps.Marker({
        map: gmap,
        position: schoolLocation,
        title: school.name,
        animation: google.maps.Animation.DROP,
      });

      setTimeout(function() {
        marker.setMap(null);
      }, 3000);
    }
  }

  function setShowYourSchoolFunction(f) {
    showYourSchoolFunction = f;
  }

  function enableDrag() {
    scrollwheelOption = true;
    draggableOption = true;

    var map_options = {
      scrollwheel: scrollwheelOption,
      draggable: draggableOption
    }
    gmap.setOptions(map_options);
  }

  function resizeMap() {
    var map_width = $('#gmap').width();
    var map_zoom = gmap.getZoom();

    // Max height of map is 2/3 of screen height so user can always scroll.
    var max_height = $(window).innerHeight() * maxHeightPercentage;

    var window_aspect_ratio = $(window).innerHeight() / $(window).innerWidth();

    if  (window_aspect_ratio < 1) {
      // Landscape window. Use the current 1:2 ratio map size.
      map_height = map_width / 2;

      // But, make sure this size doesn't exceed our max height.
       map_height = Math.min(map_height, max_height);
    }
    else {
      // Portrait window. Just use the max height so that it's taller and more usable.
      map_height = max_height;
    }

    $('#gmap').height(Math.round(map_height));

    if (map_width < 256 && map_zoom < 3) {
      map_zoom = 0;
    }
    else if (map_width < 512 && map_zoom < 3) {
      map_zoom = 1;
    }
    else if (map_zoom < 3) {
      map_zoom = 2;
    }

    var map_options = {
      center: new google.maps.LatLng(37.6642776,-97.7238747),
      zoom: map_zoom,
      scrollwheel: scrollwheelOption,
      draggable: draggableOption
    }

    gmap.setOptions(map_options);
  }

  function addGeocomplete() {
    var geocomplete_options = {
    };

    $("#geocomplete").geocomplete(geocomplete_options)
      .bind("geocode:result", function(event, result){
        gmap.fitBounds(result.geometry.viewport);
      });

    $("#btn-submit").click(function(){
      $("#geocomplete").trigger("geocode");
    });

    $("#btn-reset").click(function(){
      $('#geocomplete').val('');
      gmap.setCenter(new google.maps.LatLng(22.2116,4.5775));
      gmap.setZoom(2);
      info_window.close();
      resizeMap();
    });
  }
