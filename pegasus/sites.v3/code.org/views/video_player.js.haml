%script{src: "/js/videojs-ie8.min.js"}
%script{src: "/js/video.min.js"}

%link{href: "/css/video-js.css", rel: "stylesheet"}

:javascript

  $(document).ready(function() {
    if (window.location.search.indexOf("fallback_video") !== -1)
    {
      setupVideos(false);
    }
    else
    {
      testImageAccess(
        "https://www.youtube.com/favicon.ico?" + Math.random(),
        function() { setupVideos(true); },
        function() { setupVideos(false); });
    }
  });

  function setupVideos(useYoutube) {

    $(".insert_video_player").each(function() {
      var downloadPath = $(this).data("download-path");

      if (useYoutube) {
        $(this).parent().append(
          '<iframe style="position:absolute; top: 0; left: 0; width: 100%; height: 100%" src="https://www.youtube.com/embed/' + $(this).data("video-code") + '?iv_load_policy=3&rel=0&autohide=1&showinfo=0&enablejsapi=1" frameborder="0" allowfullscreen=true>');
      }
      else if (downloadPath)
      {
        $(this).parent().append(
          '<video id="'+ 'player1' +'" ' +
          'style="position:absolute; top: 0; left: 0; width: 100%; height: 100%"' +
          'width="100%" height="100%" ' +
          'class="video-js" ' +
          'controls preload="auto" >' +
          '  <source src="' + downloadPath + '" type="video/mp4"/>' +
          '</video>');
      }
    });
  }


  // Tests whether the browser can access an image URL.
  // Useful as a workaround for CORS security to test access to an origin.
  function testImageAccess(url, successCallback, failureCallback, timeoutMs) {
    timeoutMs = typeof timeoutMs !== 'undefined' ?  timeoutMs : 5000;
    var img = new Image();
    var called = false;
    function finish(callback) {
      return function() {
        if (called) {
          return;
        }
        called = true;
        window.clearTimeout(timeout);
        callback();
      }
    }
    var timeout = window.setTimeout(finish(failureCallback), timeoutMs);
    img.onerror = finish(failureCallback);
    img.onload = finish(successCallback);
    img.src = url;
    // store a reference to the Image so it doesn't get collected
    window.testImages = window.testImages || [];
    window.testImages.push(img);
  }
  window.testImageAccess = testImageAccess;
