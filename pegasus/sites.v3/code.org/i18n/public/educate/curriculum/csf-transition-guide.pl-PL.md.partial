---
title: Przewodnik po podstawach informatyki
theme: responsive
style_min: true
---

# Prowadzenie kursów A-F

## Spis Treści

* [Przegląd](#overview)
* [Prowadzenie nowego kursu](#newcourses)
* [Opowieści (Kursy A i B)](#circletime)
* [Obudowanie lekcji & łamigłówki jako wyzwania (w każdym wieku)](#scaffolding)
* [Działania wspomagające lekcje bez komputerów (w każdym wieku)](#unplugged)
* [Projekty na koniec kursu (Kursy E & F)](#endofcourse)
* [Wnioski](#conclusion)
* [FAQ - Najczęściej zadawane pytania](#faq)

<a id="overview"></a>

## Przegląd
Krajobraz edukacji informatycznej zmienił się ogromnie od czasu utworzenia oryginalnych kursów podstawy informatyki. Pierwotnie kursy 1-4 zostały zaprojektowane jako punkt startowy do zdobycia podstaw, bez względu na wiek ucznia, który zaczął interesować informatyką.  Teraz, gdy coraz więcej dzielnic, miast i stanów wprowadziło kursy informatyki poczynając od przedszkola, nauczyciele proszą o więcej treści, aby mogli się rozwijać uczniowie ze starszych klas.

Kursy A-F z podstaw informatyki są naszą odpowiedzią na te oczekiwania.  Powstanie programu nauczania dla poszczególnych klas spowodowało, że postanowiliśmy przemyśleć sposób, w jaki prezentowaliśmy materiał.  Pozwoliło nam to również na pełne uwzględnienie opinii oddanej społeczności nauczycieli, która wspierała nas w tej misji. Kursy A-F, zaprojektowane z pomocą jednych z najlepszych specjalistów w dziedzinie edukacji informatycznej w szkołach podstawowych w całym kraju, powinny być wystarczająco przystępne, aby można je przeprowadzić bez dodatkowego przygotowania, ale wystarczająco nowe, aby zaprezentować je uczniom, którzy w przeszłości wykonywali nasze lekcje.

* Kurs A: Przedszkole
* Kurs B: 1. klasa
* Kurs C: 2. klasa
* Kurs D: 3. klasa
* Kurs E: 4. klasa
* Kurs F: 5. klasa
* Przyspieszony kurs dla uczniów nie umiejących czytać: przedszkole - 1. klasa
* Przyspieszony kurs: klasy 2-5

Największa zmiana kursów podstaw informatyki polega na tym, że zawartość czterech kursów (Kursy 1-4) została przeniesiona do sześciu kursów dostosowanych do poziomu każdej klasy w K-5 (Kursy A-F).  W ten sposób lekcje zostały bardziej dostosowane do odpowiednich poziomów czytania, matematyki i ogólnego rozwoju poznawczego uczniów.  Zwróćcie uwagę na dodanie dwóch różnych kursów przyspieszonych, jednego dla uczniów, którzy jeszcze nie potrafią czytać, i jednego - dla pozostałych klas.  Są one podobne do „przyspieszonej” wersji poprzedniego pakietu.

<a id="newcourses"></a>

## Prowadzenie nowego kursu
Jak wspomniano wcześniej, kursy powinny wyglądać znajomo, ale są inne.  Jeśli uczestniczyłeś w doskonaleniu na warsztatach Code.org, to jesteś przygotowany do uczenia nowych kursów. Wprowadzono niewiele zmian, ale ogólna platforma, program nauczania i podejście pedagogiczne pozostały niezmienione. Jeśli jeszcze tego nie zrobiłeś, Code.org oferuje bezpłatne jednodniowe warsztaty, które pomogą Ci zrozumieć programy nauczania, poruszać się na platformie Code.org i prowadzić lekcje bez komputera.

Główne aktualizacje kursów to:

* Opowieści dla młodszych uczniów
* Nowe podejście do obudowania i ćwiczenia/stosowania pojęć
* Łączenie działań, aby ułatwić przejście od lekcji bez komputerów do lekcji z komputerami
* Projekty na koniec kursu dla starszych uczniów

W pozostałej części tego przewodnika, każda z tych nowości jest przedstawiona bardziej szczegółowo, zawiera wskazówki i porady dotyczące wprowadzania zmian w Twojej klasie.

<a id="circletime"></a>

## Opowieści (Kursy A i B)
Niektóre pojęci są trudne do nauczenia poprzez same ćwiczenia i łamigłówki, szczególnie w przypadku młodych uczniów.  Dlatego w programach nauczania dla przedszkola i pierwszej klasy wprowadziliśmy niewielką liczbę opowieści. Historie te mają być odczytywane przez nauczyciela całej klasie, z przerwami na dyskusję na temat przełomowych idei, takich jak: debugowanie, wytrwałość i frustracja.  Mamy nadzieję, że umożliwienie uczniom poznania tych trudnych pojęć za pośrednictwem postaci z opowieści pomoże im rozpoznać te same pojęcia, gdy pojawią się na przyszłych lekcjach.

Oto, w jaki sposób mają być wykorzystane opowieści:

### Przeczytaj odpowiednią historię całej swojej klasie
  - Make sure to check for understanding along the way with questions and comments at useful moments during the action.
  - Discuss the stories afterward. What did your students hear? Are there any ideas that stuck with them?
  - Try to get students to identify with the characters.  Is there anything that they do in their lives that remind them of one of the characters in the story?

### Remind students about the story before they begin the next activity.
  - Do you remember the main ideas we discussed?
  - How will you know if you see that idea today?
  - What did the character do to handle that idea? What would you do?

### Point out similarities between the story and the student’s situations when they intersect during an activity.
  - Describe for a student how the position that they are in resembles a situation from the book.
  - Ask a student to think about the characters and figure out what they might do.  Does that help the student figure out a next step?

If you are unable to gather your entire class together, Code.org has provided a video option at the beginning of the appropriate lesson that presents the stories with limited animations. While these videos don’t offer quite the same experience, they will allow students to get exposure to the concepts and characters before continuing on with the rest of the course.

<a id="scaffolding"></a>

## Obudowanie lekcji & łamigłówki jako wyzwania (w każdym wieku)
Kursy A-F są ogólnie mniej obudowane niż nasze poprzednie kursy.  Oznacza to, że staramy się, aby uczniowie tworzyli kod od początku tak często, jak to możliwe, chyba że specjalnie uczą się debugowania.  W ramach tego projektu większość naszych lekcji online jest zgodna z trendem, w którym przedstawiamy prostą łamigłówkę, aby rozpocząć lekcję, a następnie powoli przechodzimy do przodu z nowy pojęciem, aż do momentu, w którym uczniowie mają szansę zrozumieć to pojęcie.  Następnie przedstawiamy im wyzwanie w postaci łamigłówki, która ma ich zachęcić do myślenia o pojęciu w nowy i skomplikowany sposób.

Łamigłówki z wyzwaniami są nowością w kursach A-F.  Intencją łamigłówek z wyzwaniami jest wciągnięcie uczniów na wyższy poziom, gdzie mogą ćwiczyć wytrwałość i niezależne myślenie.  Łamigłówki z wyzwaniami są celowo trudne i tak zaprojektowane, aby tylko uczniowie, którzy naprawdę rozumieją pojęcia, przeszli przez nie rozsądnym czasie.  Oznacza to, że spora liczba uczniów nie odniesie sukcesu w przypadku tych wyzwań za pierwszym razem. Wymaga to od ucznia i nauczyciela szczególnego podejścia.

1. Uczniowie powinni spróbować tych wyzwań z sercem, a następnie odłożyć je na bok i kontynuować.  Ta praktyka pozwala na pojawienie się dwóch bardzo ważnych rzeczy:
2. Uczniowie lepiej rozumieją, kiedy i dlaczego stosować studiowane pojęcie. Poczują następne łamigłówki jako łatwiejsze, mimo że pozostają one nadal poważnymi wyzwaniami.

Pamiętaj, że uczniowie mogą w dowolnym momencie przejść lekcje i ponowić próbę wykonania niekompletnych łamigłówek.  Czasami pomocne może okazać się przespanie nocy przed powrotem do trudnego problemu.

Gdy uczniowie przejdą wyzwanie, znajdą garść czekających na nich ćwiczeń podobnych do tych, które mogli doświadczyć w pierwszej połowie etapu. Te łamigłówki zostały umieszczone celowo, aby przetestować rozumienie ucznia studiowanego przedmiotu.  Mogą wydawać się zbyt łatwe, biorąc pod uwagę wcześniej rozwiązane łamigłówki, ale zostały stworzone, aby zademonstrować dokładny poziom kompetencji pożądany na odpowiednim etapie.

W niektórych przypadkach kończymy lekcje na poziomach w stylu darmowej gry.  Poziomy te mogą albo nie mieć „złej” odpowiedzi, albo mogą pozwalać na kilka różnych sposobów rozwiązania ich podstawowego problemu.  Zachęć uczniów, aby dali z siebie co najlepsze, a nie kliknij „Kontynuuj”, nawet jeśli mogą.

Kilka uwag końcowych dla tego obszaru:

* Przypomnij uczniom, aby byli wytrwali i używali swoich umiejętności debugowania w przypadku problemów, które wydają się im trudne.
* Filmy są często wsparciem.  Kiedy uczniowie utkną, poproś ich, aby ponownie obejrzeli film po raz drugi, trzeci, a nawet czwarty.
* Wymagaj od uczniów przeczytania instrukcji.  Jeśli mają trudności, pozwól im przeczytać instrukcje na głos do kolegi z klasy.
* Można dawać wskazówki!  Uczniowie powinni wykorzystać tyle wskazówek, ile potrzebują, ale pamiętaj, aby spróbowali rozwiązać przynajmniej jedną zagadkę przed każdą nową ofertą.

<a id="unplugged"></a>

## Działania wspomagające lekcje bez komputerów (w każdym wieku)
Unplugged activities meet students where they are in terms of pointing out how they already use important CS concepts in their everyday life.  Once students can identify fundamental ideas like loops and conditionals, they get over the mental blocks that can happen when trying to use them for the first time programming online.

Unplugged experiences are so important that we chose to take them one step further and bake in activities that bridge the unplugged lessons to their online counterparts.  In Courses A-F, you will now find that lesson plans provide examples of how to take the offline exercises and translate the lessons to the following set of online puzzles.  Appropriately, we call these "Bridging Activities."

For the most part, bridging activities can be created either by taking the subject of the unplugged exercise and executing it with paper Blockly blocks, or by taking an online puzzle and solving it using the language from the unplugged exercise.  In some cases, a different relationship is introduced, but all of the examples are meant to keep the offline experiences from feeling too abstract or unrelated.

<a id="endofcourse"></a>

## Projekty na koniec kursu (Kursy E & F)
For older students, we have introduced substantial end of course projects in Courses E & F.  Though Code.org has provided the ability to build “projects” for quite a while, we felt that it would add some much needed perspective for students to be able to plan and execute their projects in a formal context.

The end of course projects are relatively straightforward.  Over the period of four to five weeks students will review project ideas, plan their application, code their program, revise based on feedback (5th grade), then present their completed work.  Each of these steps is guided by a helpful handout, as well as a teacher lesson plan that highlights the big picture.

**Review:** Students will take a look at a handful of aspirational projects, built to showcase the amazing things that can be done with the skills that they have learned up to this point.  These projects have been built either in Play Lab or Artist, but students are free to review projects from Tynker, Scratch, or even text-based languages if the teacher sees fit.

**Plan:** The intention here is for students to sit back and think about what is really possible.  They will need to think about the games that they saw, and the limitations that they faced when editing them.  Afterward, they will sketch out a plan to create something unique.  Students might need to be reminded to stay realistic, as they will have limited time and resources when bringing their visions to life.  The materials here assume the use of Artist or Play Lab, but projects can be moved to whatever platform works for each particular classroom.

**Build:** One day is not a whole lot of time to execute a plan that has been laid out on paper.  Students will face tough choices when it comes to trying to make things work as they run into one barrier after another.  They will learn to edit and adapt as bugs and program limitations change their perceptions of what can comfortably be accomplished in a restricted timeframe.

**Revise:** For older students, a day of revising their programs based on the feedback of classmates can help them improve their final product, and lets them inspire others with the things that they have achieved.  Students will practice constructive critique, as well as group brainstorming and persistence.

**Present:** Nearly a month in the making, this is the chance for students to stand-up and be proud of how far they have come.  Our lesson plan assumes an oral presentation, but teachers have the option of suggesting written or multimedia presentations instead.

No matter how thoroughly students embed themselves in their projects, they are sure to learn something useful about the processes of creativity and problem solving in computer science.

<a id="conclusion"></a>

## Wnioski
As you can see, Courses A-F in Computer Science Fundamentals contain exciting enhancements, influenced by feedback from the massive CS Fundamentals teacher & facilitator communities.

We hope this overview has been insightful.  If you have any questions or comments about this change, please visit http://forum.code.org/c/csf and post them on our forum.  We will be sure to get your questions answered as quickly as possible.  Until then, here are some of frequently asked questions about Courses A-F.

<a id="faq"></a>

## FAQ - Najczęściej zadawane pytania

| Pytanie                                                                                                                                                     | Odpowiedź                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |
| ----------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| **Wprowadzasz nowy zestaw kursów - czy to oznacza, że Kursy 1-4 znikają?**                                                                                  | Nie. Tak, jak nasze oryginalne 20-godzinne kursy są nadal dostępne i używane na naszej stronie internetowej, planujemy utrzymać Kursy 1-4 dla tych, którzy uważają, że lepiej reprezentują one doświadczenie, których potrzebują ich uczniowie/dzieci.                                                                                                                                                                                                                         |
| **Kiedy możemy zacząć korzystać z kursów A-F?**                                                                                                             | Kursy A-F są już dostępne!                                                                                                                                                                                                                                                                                                                                                                                                                                                     |
| **Niektóre moje ulubione lekcje/łamigłówki zniknęły z kursów A-F!**                                                                                         | Nie obawiaj się! Wciąż istnieją tam, gdzie je pozostawiłeś w kursach 1-4 lub w przyspieszonym 20-godzinnym kursie.                                                                                                                                                                                                                                                                                                                                                             |
| **These puzzles seem much harder.  I’m worried that they’re too difficult for my little ones.**                                                             | The backbone of these new courses is the desire to get students to think, problem solve, and practice persistence.  None of these things are required when puzzles are too easy to complete.  For this reason, we’ve had to make puzzles more difficult.  Please refer to the teacher guide for help with leading your class in building these skills.  As always, don’t underestimate the importance of using unplugged lessons before jumping in with the online puzzles.    |
| **Some puzzles only allow a certain number of specific blocks.  What if my students want to code something out the long way before they figure out loops?** | There are a few puzzles that restrict specific blocks. This is one of our new manners of scaffolding.  It is a way of giving direction, without over scaffolding the pieces in the workspace itself.  For students who like to code puzzles the long way before they pare down (and, in fact for all students, all the time) it is useful to have a journal or scratch paper beside the keyboard where they can figure out the algorithm in whatever way comes most naturally. |

