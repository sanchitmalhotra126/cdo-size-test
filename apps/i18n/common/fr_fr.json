{
  "and": "et",
  "booleanTrue": "vrai",
  "booleanFalse": "faux",
  "blocks": "blocs",
  "blocklyMessage": "Blockly",
  "catActions": "Actions",
  "catColour": "Couleur",
  "catLogic": "Logique",
  "catLists": "Listes",
  "catLoops": "Boucles",
  "catMath": "Calculs",
  "catProcedures": "Fonctions",
  "catText": "texte",
  "catVariables": "Variables",
  "clearPuzzle": "Recommencer",
  "clearPuzzleConfirm": "Cela va réinitialiser le puzzle à son état de départ et supprimer tous les blocs que tu as ajouté ou changé.",
  "clearPuzzleConfirmHeader": "Est-tu certain(e) de vouloir recommencer ?",
  "codeMode": "Code",
  "codeTooltip": "Voir le code JavaScript généré.",
  "continue": "Continuer",
  "designMode": "Design",
  "designModeHeader": "Mode création",
  "dialogCancel": "Annuler",
  "dialogOK": "OK",
  "directionNorthLetter": "N",
  "directionSouthLetter": "S",
  "directionEastLetter": "E",
  "directionWestLetter": "O",
  "dropletBlock_addOperator_description": "Ajouter deux nombres",
  "dropletBlock_andOperator_description": "Logical AND of two booleans",
  "dropletBlock_andOperator_signatureOverride": "AND boolean operator",
  "dropletBlock_arcLeft_description": "Bouge la tortue dans un arc dans le sens inverse des aiguilles d'une montre en utilisant le nombre de degrés et de rayons indiqués",
  "dropletBlock_arcRight_description": "Bouge la tortue dans un arc dans le sens des aiguilles d'une montre en utilisant le nombre de degrés et de rayons indiqués",
  "dropletBlock_assign_x_description": "Réaffecter une variable",
  "dropletBlock_button_description": "Crée un bouton et attribue-lui un élément id",
  "dropletBlock_callMyFunction_description": "Utiliser une fonction sans argument",
  "dropletBlock_callMyFunction_signatureOverride": "Call a function",
  "dropletBlock_callMyFunction_n_description": "Utiliser une fonction avec un argument",
  "dropletBlock_callMyFunction_n_signatureOverride": "Call a function with parameters",
  "dropletBlock_changeScore_description": "Ajouter ou enlever un point au score.",
  "dropletBlock_checkbox_description": "Create a checkbox and assign it an element id",
  "dropletBlock_circle_description": "Draw a circle on the active  canvas with the specified coordinates for center (x, y) and radius",
  "dropletBlock_circle_param0": "CentreX",
  "dropletBlock_circle_param1": "CentreY",
  "dropletBlock_circle_param2": "Rayon",
  "dropletBlock_clearCanvas_description": "Réinitialiser la zone de dessin active",
  "dropletBlock_clearInterval_description": "Clear an existing interval timer by passing in the value returned from setInterval()",
  "dropletBlock_clearTimeout_description": "Clear an existing timer by passing in the value returned from setTimeout()",
  "dropletBlock_console.log_description": "Log a message or variable to the output window",
  "dropletBlock_console.log_param0": "message",
  "dropletBlock_container_description": "Create a division container with the specified element id, and optionally set its inner HTML",
  "dropletBlock_createCanvas_description": "Create a canvas with the specified id, and optionally set width and height dimensions",
  "dropletBlock_createCanvas_param0": "canvasId",
  "dropletBlock_createCanvas_param1": "largeur",
  "dropletBlock_createCanvas_param2": "hauteur",
  "dropletBlock_createRecord_description": "Creates a new record in the specified table.",
  "dropletBlock_createRecord_param0": "table",
  "dropletBlock_createRecord_param1": "record",
  "dropletBlock_createRecord_param2": "onSuccess",
  "dropletBlock_declareAssign_x_array_1_4_description": "Create a variable and initialize it as an array",
  "dropletBlock_declareAssign_x_description": "Créer une variable pour la première fois",
  "dropletBlock_declareAssign_x_signatureOverride": "Declare a variable",
  "dropletBlock_declareAssign_x_prompt_description": "Create a variable and assign it a value by displaying a prompt",
  "dropletBlock_deleteElement_description": "Effacer les éléments contenant un id spécifique",
  "dropletBlock_deleteRecord_description": "Deletes a record, identified by record.id.",
  "dropletBlock_deleteRecord_param0": "table",
  "dropletBlock_deleteRecord_param1": "record",
  "dropletBlock_deleteRecord_param2": "onSuccess",
  "dropletBlock_divideOperator_description": "Diviser deux nombres",
  "dropletBlock_dot_description": "Draw a dot in the turtle's location with the specified radius",
  "dropletBlock_dot_param0": "Rayon",
  "dropletBlock_drawImage_description": "Draw an image on the active  canvas with the specified image element and x, y as the top left coordinates",
  "dropletBlock_dropdown_description": "Create a dropdown, assign it an element id, and populate it with a list of items",
  "dropletBlock_equalityOperator_description": "Test for equality",
  "dropletBlock_forLoop_i_0_4_description": "Do something multiple times",
  "dropletBlock_forLoop_i_0_4_signatureOverride": "for loop",
  "dropletBlock_functionParams_n_description": "Create a function with an argument",
  "dropletBlock_functionParams_n_signatureOverride": "Function with a Parameter",
  "dropletBlock_functionParams_none_description": "Create a function without an argument",
  "dropletBlock_functionParams_none_signatureOverride": "Function Definition",
  "dropletBlock_getAlpha_description": "Récupère l'alpha",
  "dropletBlock_getAttribute_description": "Gets the given attribute",
  "dropletBlock_getBlue_description": "Gets the given blue value",
  "dropletBlock_getBlue_param0": "imageData",
  "dropletBlock_getBlue_param1": "x",
  "dropletBlock_getBlue_param2": "y",
  "dropletBlock_getChecked_description": "Get the state of a checkbox or radio button",
  "dropletBlock_getDirection_description": "Get the turtle's direction (0 degrees is pointing up)",
  "dropletBlock_getGreen_description": "Gets the given green value",
  "dropletBlock_getGreen_param0": "imageData",
  "dropletBlock_getGreen_param1": "x",
  "dropletBlock_getGreen_param2": "y",
  "dropletBlock_getImageData_description": "Get the ImageData for a rectangle (x, y, width, height) within the active  canvas",
  "dropletBlock_getImageURL_description": "Get the URL associated with an image or image upload button",
  "dropletBlock_getKeyValue_description": "Reads the value associated with the key from the remote data store.",
  "dropletBlock_getKeyValue_param0": "key",
  "dropletBlock_getKeyValue_param1": "callbackFunction",
  "dropletBlock_getRed_description": "Gets the given red value",
  "dropletBlock_getRed_param0": "imageData",
  "dropletBlock_getRed_param1": "x",
  "dropletBlock_getRed_param2": "y",
  "dropletBlock_getText_description": "Get the text from the specified element",
  "dropletBlock_getTime_description": "Get the current time in milliseconds",
  "dropletBlock_getUserId_description": "Gets a unique identifier for the current user of this app.",
  "dropletBlock_getX_description": "Get the turtle's x position",
  "dropletBlock_getXPosition_description": "Récupère la position de l'élément sur l'axe des X",
  "dropletBlock_getY_description": "Get the turtle's y position",
  "dropletBlock_getYPosition_description": "Récupère la position de l'élément sur l'axe des Y",
  "dropletBlock_greaterThanOperator_description": "Compare deux nombres",
  "dropletBlock_hide_description": "Hide the turtle image",
  "dropletBlock_hideElement_description": "Hide the element with the specified id",
  "dropletBlock_ifBlock_description": "Do something only if a condition is true",
  "dropletBlock_ifBlock_signatureOverride": "if statement",
  "dropletBlock_ifElseBlock_description": "Do something if a condition is true, otherwise do something else",
  "dropletBlock_ifElseBlock_signatureOverride": "if/else statement",
  "dropletBlock_image_description": "Create an image and assign it an element id",
  "dropletBlock_imageUploadButton_description": "Create an image upload button and assign it an element id",
  "dropletBlock_inequalityOperator_description": "Test for inequality",
  "dropletBlock_innerHTML_description": "Set the inner HTML for the element with the specified id",
  "dropletBlock_lessThanOperator_description": "Compare deux nombres",
  "dropletBlock_line_description": "Draw a line on the active canvas from x1, y1 to x2, y2",
  "dropletBlock_line_param0": "x1",
  "dropletBlock_line_param1": "y1",
  "dropletBlock_line_param2": "x2",
  "dropletBlock_line_param3": "y2",
  "dropletBlock_mathAbs_description": "Absolute value",
  "dropletBlock_mathAbs_signatureOverride": "Math.abs(x)",
  "dropletBlock_mathMax_description": "Maximum value",
  "dropletBlock_mathMax_signatureOverride": "Math.max(n1, n2, ..., nX)",
  "dropletBlock_mathMin_description": "Minimum value",
  "dropletBlock_mathMin_signatureOverride": "Math.min(n1, n2, ..., nX)",
  "dropletBlock_mathRound_description": "Round to the nearest integer",
  "dropletBlock_move_description": "Move the turtle by the specified x and y coordinates",
  "dropletBlock_move_param0": "x",
  "dropletBlock_move_param1": "y",
  "dropletBlock_moveBackward_description": "Move the turtle backward the specified distance",
  "dropletBlock_moveBackward_param0": "pixels",
  "dropletBlock_moveForward_description": "Move the turtle forward the specified distance",
  "dropletBlock_moveForward_param0": "pixels",
  "dropletBlock_moveTo_description": "Move the turtle to the specified x and y coordinates",
  "dropletBlock_moveTo_param0": "x",
  "dropletBlock_moveTo_param1": "y",
  "dropletBlock_multiplyOperator_description": "Multiplie deux nombres",
  "dropletBlock_notOperator_description": "Logical NOT of a boolean",
  "dropletBlock_notOperator_signatureOverride": "AND boolean operator",
  "dropletBlock_onEvent_description": "Exécute du code en réponse à l'événement spécifié.",
  "dropletBlock_onEvent_param0": "identifiant",
  "dropletBlock_onEvent_param1": "événement",
  "dropletBlock_onEvent_param2": "fonction",
  "dropletBlock_orOperator_description": "Logical OR of two booleans",
  "dropletBlock_orOperator_signatureOverride": "OR boolean operator",
  "dropletBlock_penColor_description": "Set the turtle to the specified pen color",
  "dropletBlock_penColor_param0": "color",
  "dropletBlock_penColour_description": "Set the turtle to the specified pen color",
  "dropletBlock_penColour_param0": "color",
  "dropletBlock_penDown_description": "Set down the turtle's pen",
  "dropletBlock_penUp_description": "Pick up the turtle's pen",
  "dropletBlock_penWidth_description": "Set the turtle to the specified pen width",
  "dropletBlock_playSound_description": "Play the MP3, OGG, or WAV sound file from the specified URL",
  "dropletBlock_putImageData_description": "Set the ImageData for a rectangle within the active  canvas with x, y as the top left coordinates",
  "dropletBlock_radioButton_description": "Create a radio button and assign it an element id",
  "dropletBlock_randomNumber_max_description": "Get a random number between 0 and the specified maximum value",
  "dropletBlock_randomNumber_min_max_description": "Get a random number between the specified minimum and maximum values",
  "dropletBlock_readRecords_description": "Reads all records whose properties match those on the searchParams object.",
  "dropletBlock_readRecords_param0": "table",
  "dropletBlock_readRecords_param1": "searchParams",
  "dropletBlock_readRecords_param2": "onSuccess",
  "dropletBlock_rect_description": "Draw a rectangle on the active  canvas with x, y, width, and height coordinates",
  "dropletBlock_rect_param0": "upperLeftX",
  "dropletBlock_rect_param1": "upperLeftY",
  "dropletBlock_rect_param2": "largeur",
  "dropletBlock_rect_param3": "hauteur",
  "dropletBlock_return_description": "Return a value from a function",
  "dropletBlock_setActiveCanvas_description": "Set the canvas id for subsequent canvas commands (only needed when there are multiple canvas elements)",
  "dropletBlock_setAlpha_description": "Sets the given value",
  "dropletBlock_setAttribute_description": "Sets the given value",
  "dropletBlock_setBackground_description": "Définit l'image d'arrière-plan",
  "dropletBlock_setBlue_description": "Sets the given value",
  "dropletBlock_setBlue_param0": "imageData",
  "dropletBlock_setBlue_param1": "x",
  "dropletBlock_setBlue_param2": "y",
  "dropletBlock_setBlue_param3": "blueValue",
  "dropletBlock_setChecked_description": "Set the state of a checkbox or radio button",
  "dropletBlock_setFillColor_description": "Set the fill color for the active  canvas",
  "dropletBlock_setGreen_description": "Sets the given value",
  "dropletBlock_setGreen_param0": "imageData",
  "dropletBlock_setGreen_param1": "x",
  "dropletBlock_setGreen_param2": "y",
  "dropletBlock_setGreen_param3": "greenValue",
  "dropletBlock_setImageURL_description": "Set the URL for the specified image element id",
  "dropletBlock_setInterval_description": "Continue to execute code each time the specified number of milliseconds has elapsed",
  "dropletBlock_setKeyValue_description": "Saves the value associated with the key to the remote data store.",
  "dropletBlock_setKeyValue_param0": "key",
  "dropletBlock_setKeyValue_param1": "value",
  "dropletBlock_setKeyValue_param2": "callbackFunction",
  "dropletBlock_setParent_description": "Set an element to become a child of a parent element",
  "dropletBlock_setPosition_description": "Position an element with x, y, width, and height coordinates",
  "dropletBlock_setRed_description": "Sets the given value",
  "dropletBlock_setRed_param0": "imageData",
  "dropletBlock_setRed_param1": "x",
  "dropletBlock_setRed_param2": "y",
  "dropletBlock_setRed_param3": "redValue",
  "dropletBlock_setRGBA_description": "Sets the given value",
  "dropletBlock_setStrokeColor_description": "Set the stroke color for the active  canvas",
  "dropletBlock_setStrokeColor_param0": "color",
  "dropletBlock_setSprite_description": "Définit l'image de l'acteur",
  "dropletBlock_setSpriteEmotion_description": "Définit l'humeur de l'acteur",
  "dropletBlock_setSpritePosition_description": "Déplace instantanément un acteur à l'emplacement spécifié.",
  "dropletBlock_setSpriteSpeed_description": "Définit la vitesse d'un acteur",
  "dropletBlock_setStrokeWidth_description": "Set the line width for the active  canvas",
  "dropletBlock_setStrokeWidth_param0": "largeur",
  "dropletBlock_setStyle_description": "Add CSS style text to an element",
  "dropletBlock_setText_description": "Set the text for the specified element",
  "dropletBlock_setTimeout_description": "Set a timer and execute code when that number of milliseconds has elapsed",
  "dropletBlock_setTimeout_param0": "fonction",
  "dropletBlock_setTimeout_param1": "milliseconds",
  "dropletBlock_show_description": "Show the turtle image at its current location",
  "dropletBlock_showElement_description": "Show the element with the specified id",
  "dropletBlock_speed_description": "Change the execution speed of the program to the specified percentage value",
  "dropletBlock_startWebRequest_description": "Request data from the internet and execute code when the request is complete",
  "dropletBlock_startWebRequest_param0": "url",
  "dropletBlock_startWebRequest_param1": "fonction",
  "dropletBlock_subtractOperator_description": "Subtract two numbers",
  "dropletBlock_textInput_description": "Create a text input and assign it an element id",
  "dropletBlock_textLabel_description": "Create a text label, assign it an element id, and bind it to an associated element",
  "dropletBlock_throw_description": "Lance un projectile depuis l'acteur spécifié.",
  "dropletBlock_turnLeft_description": "Turn the turtle counterclockwise by the specified number of degrees",
  "dropletBlock_turnRight_description": "Turn the turtle clockwise by the specified number of degrees",
  "dropletBlock_turnTo_description": "Turn the turtle to the specified direction (0 degrees is pointing up)",
  "dropletBlock_updateRecord_description": "Updates a record, identified by record.id.",
  "dropletBlock_updateRecord_param0": "tableName",
  "dropletBlock_updateRecord_param1": "record",
  "dropletBlock_updateRecord_param2": "callbackFunction",
  "dropletBlock_vanish_description": "Fait disparaître l'acteur.",
  "dropletBlock_whileBlock_description": "Repeat something while a condition is true",
  "dropletBlock_whileBlock_signatureOverride": "while loop",
  "dropletBlock_write_description": "Create a block of text",
  "end": "fin",
  "emptyBlocksErrorMsg": "Le bloc « Répéter » ou « si » doit contenir d'autres blocs pour fonctionner. Assurez-vous que le bloc interne s'insère correctement à l'intérieur du bloc conteneur.",
  "emptyFunctionalBlock": "Un de vos blocs ne contient pas d'entrée.",
  "emptyFunctionBlocksErrorMsg": "Le bloc « Fonction » doit contenir d'autres blocs pour fonctionner.",
  "errorEmptyFunctionBlockModal": "Il faut des blocs dans votre définition de fonction. Cliquez sur \"modifier\" puis faites glisser les blocs dans le bloc vert.",
  "errorIncompleteBlockInFunction": "Cliquez sur \"modifier\" pour vous assurer qu'il ne manque pas de blocs dans votre définition de fonction.",
  "errorParamInputUnattached": "N'oubliez pas de joindre un bloc à l'entrée de chaque paramètre sur le bloc de fonction dans votre espace de travail.",
  "errorUnusedParam": "Vous avez ajouté un bloc de paramètres, mais il n'a pas été utilisé dans la définition. Assurez-vous d'utiliser votre paramètre en cliquant sur « modifier » et de placer le bloc de paramètres dans le bloc vert.",
  "errorRequiredParamsMissing": "Créez un paramètre pour votre fonction en cliquant sur « modifier » et en ajoutant les paramètres nécessaires. Faites glisser les nouveaux blocs de paramètres dans votre définition de fonction.",
  "errorUnusedFunction": "Vous avez créé une fonction mais ne l'avez pas ajoutée à votre espace de travail ! Cliquez « Fonctions » dans la boîte à outils et assurez-vous d'utiliser votre fonction dans votre programme.",
  "errorQuestionMarksInNumberField": "Essayez de remplacer \"???\" avec un nombre.",
  "extraTopBlocks": "Vous avez des blocs non attachés. Est-ce que vous vouliez les attacher au bloc \"lors du lancement\" ?",
  "extraTopBlocksWhenRun": "You have unattached blocks. Did you mean to attach these to the \"when run\" block?",
  "finalStage": "Félicitations ! Tu as terminé l'étape finale.",
  "finalStageTrophies": "Félicitations ! Tu as terminé l'étape finale et gagné {numTrophies, plural, one {un trophée} other {# trophées}}.",
  "finish": "Terminer",
  "generatedCodeInfo": "Même les plus grandes univesités enseignent la programmation basée sur les blocs. (ex., {berkeleyLink}, {harvardLink}). Mais sous le capot, les blocs que vous avez assemblés peuvent aussi être affichés en Javascript, le langage de programmation le plus utilisé au monde:",
  "hashError": "Désolé, '%1' ne correspond à aucun programme enregistré.",
  "help": "Aide",
  "hintTitle": "Indice :",
  "jump": "sauter",
  "keepPlaying": "Continuer à jouer",
  "levelIncompleteError": "Vous utilisez tous les types nécessaires de blocs, mais pas de la bonne manière.",
  "listVariable": "liste",
  "makeYourOwnFlappy": "Réalisez votre propre Flappy Bird",
  "missingBlocksErrorMsg": "Essayez un ou plusieurs des blocs ci-dessous pour résoudre ce puzzle.",
  "nextLevel": "Félicitations ! Tu as terminé le Puzzle {puzzleNumber}.",
  "nextLevelTrophies": "Félicitations ! Tu as terminé le Puzzle {puzzleNumber} et gagné {numTrophies, plural, one {un trophée} other {# trophées}}.",
  "nextStage": "Félicitations ! Vous avez terminé {stageName}.",
  "nextStageTrophies": "Félicitations ! Vous avez terminé {stageName} et gagné {numTrophies, plural, one {un trophée} other {# trophées}}.",
  "numBlocksNeeded": "Félicitations !  Vous avez terminé le Puzzle {puzzleNumber}. (Toutefois, vous auriez pu utiliser seulement {numBlocks, plural, one {1 bloc} other {# blocs}}.)",
  "numLinesOfCodeWritten": "Vous venez d'écrire {numLines, plural, one {1 ligne} other {# lignes }} de code!",
  "play": "jouer",
  "print": "Imprimer",
  "puzzleTitle": "Puzzle {puzzle_number} sur {stage_total}",
  "repeat": "répéter",
  "resetProgram": "Réinitialiser",
  "runProgram": "Démarrer",
  "runTooltip": "Exécuter le programme défini par les blocs dans l'espace de travail.",
  "score": "score",
  "showCodeHeader": "Afficher le code",
  "showBlocksHeader": "Afficher les blocs",
  "showGeneratedCode": "Afficher le code",
  "stringEquals": "Texte = ?",
  "subtitle": "un environnement de programmation visuelle",
  "textVariable": "texte",
  "tooFewBlocksMsg": "Vous utilisez tous les types des blocs nécessaires, mais essayez d'utiliser plus de ces types de blocs pour compléter ce puzzle.",
  "tooManyBlocksMsg": "Ce puzzle peut être résolu avec <x id ='START_SPAN'/><x id='END_SPAN'/> blocs.",
  "tooMuchWork": "Vous m'avez fait faire beaucoup de travail !  Pourriez-vous essayer en répétant moins de fois ?",
  "toolboxHeader": "blocs",
  "toolboxHeaderDroplet": "Toolbox",
  "hideToolbox": "(Hide)",
  "showToolbox": "Show Toolbox",
  "openWorkspace": "Comment ça marche",
  "totalNumLinesOfCodeWritten": "Production totale : {numLines, plural, one {1 ligne} other {# lignes}} de code.",
  "tryAgain": "Réessayer",
  "hintRequest": "Voir l'astuce",
  "backToPreviousLevel": "Retour au niveau précédent",
  "saveToGallery": "Sauvegarder dans la galerie",
  "savedToGallery": "Enregistré dans la galerie !",
  "shareFailure": "Désolé, nous ne pouvons pas partager ce programme.",
  "workspaceHeaderShort": "Espace de travail :",
  "infinity": "Infini",
  "rotateText": "Tournez votre appareil.",
  "orientationLock": "Désactivez le verrouillage de l'orientation dans les réglages de votre appareil.",
  "wantToLearn": "Vous souhaitez apprendre à coder ?",
  "watchVideo": "Voir la vidéo",
  "when": "lorsque",
  "whenRun": "lors du lancement",
  "tryHOC": "Essayez l'Heure de Code",
  "signup": "Inscrivez-vous au cours d'introduction",
  "hintHeader": "Voici une astuce :",
  "genericFeedback": "Observez le résultat et essayez de corriger les erreurs.",
  "toggleBlocksErrorMsg": "Vous devez corriger une erreur dans votre programme avant qu'il ne puisse être présenté sous forme de blocs.",
  "defaultTwitterText": "Découvre ce que j'ai fait"
}