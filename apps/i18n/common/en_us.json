{
  "and": "and",
  "booleanTrue": "true",
  "booleanFalse": "false",
  "blocks": "blocks",
  "blocklyMessage": "Blockly",
  "catActions": "Actions",
  "catColour": "Color",
  "catLogic": "Logic",
  "catLists": "Lists",
  "catLogic": "Logic",
  "catLoops": "Loops",
  "catMath": "Math",
  "catProcedures": "Functions",
  "catText": "Text",
  "catVariables": "Variables",
  "clearPuzzle": "Start Over",
  "clearPuzzleConfirm": "This will reset the puzzle to its start state and delete all the blocks you've added or changed.",
  "clearPuzzleConfirmHeader": "Are you sure you want to start over?",
  "codeMode": "Code",
  "codeTooltip": "See generated JavaScript code.",
  "continue": "Continue",
  "designModeHeader": "Design Mode",
  "dialogCancel": "Cancel",
  "dialogOK": "OK",
  "directionNorthLetter": "N",
  "directionSouthLetter": "S",
  "directionEastLetter": "E",
  "directionWestLetter": "W",
  "dropletBlock_arcLeft_description": "Move the turtle in a counterclockwise arc using the specified number of degrees and radius",
  "dropletBlock_arcRight_description": "Move the turtle in a clockwise arc using the specified number of degrees and radius",
  "dropletBlock_button_description": "Create a button and assign it an element id",
  "dropletBlock_checkbox_description": "Create a checkbox and assign it an element id",
  "dropletBlock_circle_description": "Draw a circle on the active  canvas with the specified coordinates for center (x, y) and radius",
  "dropletBlock_clearCanvas_description": "Clear all data on the active canvas",
  "dropletBlock_clearInterval_description": "Clear an existing interval timer by passing in the value returned from setInterval()",
  "dropletBlock_clearTimeout_description": "Clear an existing timer by passing in the value returned from setTimeout()",
  "dropletBlock_console.log_description": "Log a message or variable to the output window",
  "dropletBlock_container_description": "Create a division container with the specified element id, and optionally set its inner HTML",
  "dropletBlock_createCanvas_description": "Create a canvas with the specified id, and optionally set width and height dimensions",
  "dropletBlock_createRecord_description": "createRecord(table, record, onSuccess); Creates a new record in the specified table.",
  "dropletBlock_deleteElement_description": "Delete the element with the specified id",
  "dropletBlock_deleteRecord_description": "deleteRecord(table, record, onSuccess); Deletes a record, identified by record.id.",
  "dropletBlock_dot_description": "Draw a dot in the turtle's location with the specified radius",
  "dropletBlock_drawImage_description": "Draw an image on the active  canvas with the specified image element and x, y as the top left coordinates",
  "dropletBlock_dropdown_description": "Create a dropdown, assign it an element id, and populate it with a list of items",
  "dropletBlock_getAlpha_description": "Gets the alpha",
  "dropletBlock_getAttribute_description": "Gets the given attribute",
  "dropletBlock_getBlue_description": "Gets the given blue value",
  "dropletBlock_getChecked_description": "Get the state of a checkbox or radio button",
  "dropletBlock_getDirection_description": "Get the turtle's direction (0 degrees is pointing up)",
  "dropletBlock_getGreen_description": "Gets the given green value",
  "dropletBlock_getImageData_description": "Get the ImageData for a rectangle (x, y, width, height) within the active  canvas",
  "dropletBlock_getImageURL_description": "Get the URL associated with an image or image upload button",
  "dropletBlock_getKeyValue_description": "Reads the value associated with the key from the remote data store.",
  "dropletBlock_getRed_description": "Gets the given red value",
  "dropletBlock_getText_description": "Get the text from the specified element",
  "dropletBlock_getUserId_description": "Gets a unique identifier for the current user of this app.",
  "dropletBlock_getX_description": "Get the turtle's x position",
  "dropletBlock_getXPosition_description": "Get the element's x position",
  "dropletBlock_getY_description": "Get the turtle's y position",
  "dropletBlock_getYPosition_description": "Get the element's y position",
  "dropletBlock_hide_description": "Hide the turtle image",
  "dropletBlock_hideElement_description": "Hide the element with the specified id",
  "dropletBlock_image_description": "Create an image and assign it an element id",
  "dropletBlock_imageUploadButton_description": "Create an image upload button and assign it an element id",
  "dropletBlock_innerHTML_description": "Set the inner HTML for the element with the specified id",
  "dropletBlock_line_description": "Draw a line on the active canvas from x1, y1 to x2, y2",
  "dropletBlock_move_description": "Move the turtle by the specified x and y coordinates",
  "dropletBlock_moveBackward_description": "Move the turtle backward the specified distance",
  "dropletBlock_moveForward_description": "Move the turtle forward the specified distance",
  "dropletBlock_moveTo_description": "Move the turtle to the specified x and y coordinates",
  "dropletBlock_onEvent_description": "Execute code in response to an event for the specified element. Additional parameters are passed to the callback function.",
  "dropletBlock_onEvent_param0": "id",
  "dropletBlock_onEvent_param1": "event",
  "dropletBlock_onEvent_param2": "function",
  "dropletBlock_penColor_description": "Set the turtle to the specified pen color",
  "dropletBlock_penColour_description": "Set the turtle to the specified pen color",
  "dropletBlock_penDown_description": "Set down the turtle's pen",
  "dropletBlock_penUp_description": "Pick up the turtle's pen",
  "dropletBlock_penWidth_description": "Set the turtle to the specified pen width",
  "dropletBlock_playSound_description": "Play the MP3, OGG, or WAV sound file from the specified URL",
  "dropletBlock_putImageData_description": "Set the ImageData for a rectangle within the active  canvas with x, y as the top left coordinates",
  "dropletBlock_radioButton_description": "Create a radio button and assign it an element id",
  "dropletBlock_readRecords_description": "readRecords(table, searchParams, onSuccess); Reads all records whose properties match those on the searchParams object.",
  "dropletBlock_rect_description": "Draw a rectangle on the active  canvas with x, y, width, and height coordinates",
  "dropletBlock_setActiveCanvas_description": "Set the canvas id for subsequent canvas commands (only needed when there are multiple canvas elements)",
  "dropletBlock_setAlpha_description": "Sets the given value",
  "dropletBlock_setAttribute_description": "Sets the given value",
  "dropletBlock_setBlue_description": "Sets the given value",
  "dropletBlock_setChecked_description": "Set the state of a checkbox or radio button",
  "dropletBlock_setFillColor_description": "Set the fill color for the active  canvas",
  "dropletBlock_setGreen_description": "Sets the given value",
  "dropletBlock_setImageURL_description": "Set the URL for the specified image element id",
  "dropletBlock_setInterval_description": "Continue to execute code each time the specified number of milliseconds has elapsed",
  "dropletBlock_setKeyValue_description": "Saves the value associated with the key to the remote data store.",
  "dropletBlock_setParent_description": "Set an element to become a child of a parent element",
  "dropletBlock_setPosition_description": "Position an element with x, y, width, and height coordinates",
  "dropletBlock_setRed_description": "Sets the given value",
  "dropletBlock_setRGBA_description": "Sets the given value",
  "dropletBlock_setStrokeColor_description": "Set the stroke color for the active  canvas",
  "dropletBlock_setSprite_description": "Set the stroke color for the active  canvas",
  "dropletBlock_setStrokeWidth_description": "Set the line width for the active  canvas",
  "dropletBlock_setStyle_description": "Add CSS style text to an element",
  "dropletBlock_setText_description": "Set the text for the specified element",
  "dropletBlock_setTimeout_description": "Set a timer and execute code when that number of milliseconds has elapsed",
  "dropletBlock_show_description": "Show the turtle image at its current location",
  "dropletBlock_showElement_description": "Show the element with the specified id",
  "dropletBlock_speed_description": "Change the execution speed of the program to the specified percentage value",
  "dropletBlock_startWebRequest_description": "Request data from the internet and execute code when the request is complete",
  "dropletBlock_textInput_description": "Create a text input and assign it an element id",
  "dropletBlock_textLabel_description": "Create a text label, assign it an element id, and bind it to an associated element",
  "dropletBlock_turnLeft_description": "Turn the turtle counterclockwise by the specified number of degrees",
  "dropletBlock_turnRight_description": "Turn the turtle clockwise by the specified number of degrees",
  "dropletBlock_turnTo_description": "Turn the turtle to the specified direction (0 degrees is pointing up)",
  "dropletBlock_updateRecord_description": "Updates a record, identified by record.id.",
  "dropletBlock_write_description": "Create a block of text",
  "dropletBlock_setSprite_description": "Sets the actor image",
  "dropletBlock_setBackground_description": "Sets the background image",
  "dropletBlock_move_description": "Move an actor.",
  "dropletBlock_playSound_description": "Play the chosen sound.",
  "dropletBlock_changeScore_description" : "Add or remove a point to the score.",
  "dropletBlock_setSpritePosition_description": "Instantly moves an actor to the specified location.",
  "dropletBlock_setSpriteSpeed_description": "Sets the speed of an actor",
  "dropletBlock_setSpriteEmotion_description": "Sets the actor mood",
  "dropletBlock_throw_description": "Throws a projectile from the specified actor.",
  "dropletBlock_vanish_description": "Vanishes the actor.",
  "dropletBlock_onEvent_description": "Execute code in response to the specified event.",
  "end": "end",
  "emptyBlocksErrorMsg": "The \"Repeat\" or \"If\" block needs to have other blocks inside it to work. Make sure the inner block fits properly inside the containing block.",
  "emptyFunctionBlocksErrorMsg": "The function block needs to have other blocks inside it to work.",
  "errorEmptyFunctionBlockModal": "There need to be blocks inside your function definition. Click \"edit\" and drag blocks inside the green block.",
  "errorIncompleteBlockInFunction": "Click \"edit\" to make sure you don't have any blocks missing inside your function definition.",
  "errorParamInputUnattached": "Remember to attach a block to each parameter input on the function block in your workspace.",
  "errorUnusedParam": "You added a parameter block, but didn't use it in the definition. Make sure to use your parameter by clicking \"edit\" and placing the parameter block inside the green block.",
  "errorRequiredParamsMissing": "Create a parameter for your function by clicking \"edit\" and adding the necessary parameters. Drag the new parameter blocks into your function definition.",
  "errorUnusedFunction": "You created a function, but never used it on your workspace! Click on \"Functions\" in the toolbox and make sure you use it in your program.",
  "errorQuestionMarksInNumberField": "Try replacing \"???\" with a value.",
  "extraTopBlocks": "You have unattached blocks. Did you mean to attach these to the \"when run\" block?",
  "finalStage": "Congratulations! You have completed the final stage.",
  "finalStageTrophies": "Congratulations! You have completed the final stage and won {numTrophies, plural, one {a trophy} other {# trophies}}.",
  "finish": "Finish",
  "generatedCodeInfo": "Even top universities teach block-based coding (e.g., {berkeleyLink}, {harvardLink}). But under the hood, the blocks you have assembled can also be shown in JavaScript, the world's most widely used coding language:",
  "hashError": "Sorry, '%1' doesn't correspond with any saved program.",
  "help": "Help",
  "hintTitle": "Hint:",
  "jump": "jump",
  "keepPlaying": "Keep Playing",
  "levelIncompleteError": "You are using all of the necessary types of blocks but not in the right way.",
  "listVariable": "list",
  "makeYourOwnFlappy": "Make Your Own Flappy Game",
  "missingBlocksErrorMsg": "Try one or more of the blocks below to solve this puzzle.",
  "nextLevel": "Congratulations! You completed Puzzle {puzzleNumber}.",
  "nextLevelTrophies": "Congratulations! You completed Puzzle {puzzleNumber} and won {numTrophies, plural, one {a trophy} other {# trophies}}.",
  "nextStage": "Congratulations! You completed {stageName}.",
  "nextStageTrophies": "Congratulations! You completed {stageName} and won {numTrophies, plural, one {a trophy} other {# trophies}}.",
  "numBlocksNeeded": "Congratulations! You completed Puzzle {puzzleNumber}. (However, you could have used only {numBlocks, plural, one {1 block} other {# blocks}}.)",
  "numLinesOfCodeWritten": "You just wrote {numLines, plural, one {1 line} other {# lines}} of code!",
  "play": "play",
  "print": "Print",
  "puzzleTitle": "Puzzle {puzzle_number} of {stage_total}",
  "repeat": "repeat",
  "resetProgram": "Reset",
  "runProgram": "Run",
  "runTooltip": "Run the program defined by the blocks in the workspace.",
  "score": "score",
  "showCodeHeader": "Show Code",
  "showBlocksHeader": "Show Blocks",
  "showGeneratedCode": "Show code",
  "stringEquals": "string=?",
  "subtitle": "a visual programming environment",
  "textVariable": "text",
  "tooFewBlocksMsg": "You are using all of the necessary types of blocks, but try using more  of these types of blocks to complete this puzzle.",
  "tooManyBlocksMsg": "This puzzle can be solved with <x id='START_SPAN'/><x id='END_SPAN'/> blocks.",
  "tooMuchWork": "You made me do a lot of work!  Could you try repeating fewer times?",
  "toolboxHeader": "Blocks",
  "openWorkspace": "How It Works",
  "totalNumLinesOfCodeWritten": "All-time total: {numLines, plural, one {1 line} other {# lines}} of code.",
  "tryAgain": "Try again",
  "hintRequest": "See hint",
  "backToPreviousLevel": "Back to previous level",
  "saveToGallery": "Save to gallery",
  "savedToGallery": "Saved in gallery!",
  "shareFailure": "Sorry, we can't share this program.",
  "workspaceHeader": "Assemble your blocks here: ",
  "workspaceHeaderJavaScript": "Type your JavaScript code here",
  "workspaceHeaderShort": "Workspace: ",
  "infinity": "Infinity",
  "rotateText": "Rotate your device.",
  "orientationLock": "Turn off orientation lock in device settings.",
  "wantToLearn": "Want to learn to code?",
  "watchVideo": "Watch the Video",
  "when": "when",
  "whenRun": "when run",
  "tryHOC": "Try the Hour of Code",
  "signup": "Sign up for the intro course",
  "hintHeader": "Here's a tip:",
  "genericFeedback": "See how you ended up, and try to fix your program.",
  "whenRun": "when run",
  "toggleBlocksErrorMsg": "You need to correct an error in your program before it can be shown as blocks.",
  "defaultTwitterText": "Check out what I made"
}
