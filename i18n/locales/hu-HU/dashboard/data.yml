hu:
  data:
    script:
      name:
        20-hour:
          desc: K-8 bevezető számítógép tudomány kurzushoz
          Unplug1: 1. szakasz
          Maze: 2. szakasz
          Unplug2: 3. szakasz
          Unplug3: 4. szakasz
          Artist: 5. szakasz
          Unplug4: 6. szakasz
          Artist2: 7. szakasz
          Unplug5: 8. szakasz
          Farmer: 9. szakasz
          Unplug6: 10. szakasz
          Artist3: 11. szakasz
          Unplug7: 12. szakasz
          Farmer2: 13. szakasz
          Unplug8: 14. szakasz
          Artist4: 15. szakasz
          Unplug9: 16. szakasz
          Farmer3: 17. szakasz
          Unplug10: 18. szakasz
          Artist5: 19. szakasz
          Unplug11: 20. szakasz
        Hour of Code:
          desc: A kódolás órája
          Maze: 1. szakasz
        Edit Code:
          desc: Szerkeszd a kódot (béta)
          MazeEC: 1. szakasz
        2014 Levels:
          desc: Bounce (béta)
          Bounce: 1. szakasz
        Builder Levels:
          desc: Felhasználó által készített rejtvények (béta)
          Custom: 1. szakasz
        Flappy Levels:
          desc: Flappy madár
          Flappy: 1. szakasz
        Jigsaw Levels:
          desc: Kirakós játék (béta)
          Jigsaw: 1. szakasz
        Step Levels:
          desc: Labirintus (béta)
          MazeStep: Stage Step
        edit-code:
          desc: Szerkeszd a kódot (béta)
          MazeEC: 1. szakasz
          Webapp: 2. szakasz
          ArtistEC: 3. szakasz
          StudioEC: 4. szakasz
        events:
          desc: Bounce (béta)
          Bounce: 1. szakasz
          Studio: 2. szakasz
        builder:
          desc: Felhasználó által készített rejtvények (béta)
          Custom: 1. szakasz
        flappy:
          desc: Flappy madár
          Flappy: 1. szakasz
        jigsaw:
          desc: Kirakós játék (béta)
          Jigsaw: 1. szakasz
        step:
          desc: Labirintus (béta)
          MazeStep: Stage Step
        wordsearch:
          desc: Spelling Bee (beta)
          WordSearch: 1. szakasz
    game:
      name:
        Unplug1: Bevezetés a számítástechnikába
        Maze: A labirintus
        Multi: Multiple Choice Stuffs
        Unplug2: Számítógépes gondolkodás
        Unplug3: Grafikus programozás
        Artist: A művész
        Unplug4: algoritmusok
        Artist2: A művész 2
        Unplug5: Függvények
        Farmer: A Farmer
        Unplug6: Feltételek
        Artist3: A művész 3
        Unplug7: Dal iras
        Farmer2: A Farmer 2
        Unplug8: Absztrakció
        Artist4: A művész 4
        Unplug9: Váltó programozás
        Farmer3: A Farmer 3
        Unplug10: Az internet
        Artist5: A művész 5
        Unplug11: Összefoglaló
        MazeEC: A labirintus
        Bounce: Ugrál
        Flappy: Flappy madár
        Jigsaw: Kirakós játék
        MazeStep: Labirintus üzemmód
        Wordsearch: Wordsearch
        Webapp: Webapp
        ArtistEC: A művész
        TextMatch: Text Match
        StudioEC: Play Lab
    trophy:
      name:
        Bronze: Bronz
        Silver: Ezüst
        Gold: Arany
    concept:
      description:
        sequence: Sorozat
        if: Ha blokk
        if_else: Ha-más blokk
        loop_times: Ismételje szor blokk
        loop_until: Ismételd amíg, blokk
        loop_while: Amig blokk
        loop_for: Számláló blokk
        function: Függvények
        parameters: Paraméterezett függvények
    level:
      instructions:
        maze_2_2: 'Can you help me to catch the naughty pig? Stack a couple of "move forward" blocks together and press "Run" to help me get there. '
        maze_2_1: Ez a malac bosszantó. Segíts megtalálni!
        maze_2_2_5: Tervezd meg az utat a malacig. A TNT-t viszont kerüld el mindenképp, vagy repülsz!
        maze_2_3: Vezess el a zöld förtelemig! (Vigyázz a TNT-vel)
        maze_2_4: Őrizd meg nyugalmad, és segíts megkeresni rossz disznót. Egyébként lehet, hogy dühös!
        maze_2_5: Van egy 2 utasításból álló út a malachoz. Kitalálod?
        maze_2_6: Próbálj meg elvezetni a zöld behatolóhoz nem több mint 3 utasítás használatával.
        maze_2_7: Segíts elűzni a rossz malackát a legkevesebb blokk segítségével. Próbáld meg több, mint egy „ismétlés” blokk felhasználásával.
        maze_2_8: |-
          When a block is grey, that means you can't delete it. Solve this puzzle using the "repeat" block that repeats 3 times. Try putting these 3 blocks inside the grey "repeat" block: move, move, turn.
        maze_2_9: 'Ok, próbáld ki az új „ismételd amíg" blokkot - ez addig ismétli a benne lévő utasítást, amíg a madár el nem éri a bosszantó disznót.'
        maze_2_10: 'Ok, még egyszer, utoljára a gyakorlatban - meg tudod oldani ezt csak 4 blokkal?'
        maze_2_11: 'Arghhh - kedves akárki. Én lenni zombi. Zombi lenni éhes. El... kell... a napraforgóhoz... Eltudnál vezetni oda csupán 5 utasítással?'
        maze_2_12: Hasonló mint az előző, de picit más. 5 utasításból megoldod?
        maze_2_13: 'Használd az új „ha” blokkot, hogy el tudjam dönteni, hogy mikor forduljak el. Tipp: most csak egy blokkot kell beillesz, de megtanulhatod a szerkezet felépítését, hogy legközelebb önállóan is össze tudd állítani.'
        maze_2_14: Rendben, ez olyan, mint a legutóbbi játék, de most emlékezned kell hogyan használtad együtt az „if” és a „repeat” elemeket.
        maze_2_15: Napraforgót szeretnék! Használj egy ha blokkot, hogy a legkevesebb lépésből eljussak odáig.
        maze_2_16: 'Oké, csináljuk meg mégegyszer gyakorlásképpen -  hasonló a feladat, de vigyázz a szörnynövényekre!'
        maze_2_17: 'A "If-else" blokk ellenőriz egy feltételt és aszerint tesz meg valamit VAGY valami mást. Próbálj meg úgy eljuttatni a napraforgóhoz, hogy használod ezt az új blokkot.'
        maze_2_18: Még egy gyakorlat az „ha különben” blokkhoz. Meg tudod csinálni elsőre?
        maze_2_19: Tudsz segíteni kijutni ebből az összetett útvesztőből mindössze 3 blokk hozzáadásával? Ha jól csinálod, akkor bármilyen kacskaringós utat be tudok járni annak hosszától függetlenül.
        turtle_1_1: Szia, én egy művész vagyok. Te tudsz nekem olyan kódot írni, amivel majdnem mindent le tudok rajzolni. Használd a blokkokat hogy lefessem a képen látható szürke vonalakat.
        turtle_1_2: 'Most rajzolj egy négyzetet. Megjegyzés: használd a kedvenc színed az új "set color" blokk segítségével.'
        turtle_1_3: Rajzolj egy negyszogot csak harom blokk hasznalataval.
        turtle_1_4: 'Rajzolj egy háromszöget, amelynek oldalai különböző színűek, a "random color" beállítással válassz  különböző színt minden alkalommal. Tipp: meg kell adnod, hogy milyen messze kell fordulni, a kanyarodás elemre való szám megadásával.'
        turtle_1_5: Most a gyakorlásképpen, rajzolj egy háromszöget, majd egy négyzetet, hogy rajzoljunk egy borítékot.
        turtle_1_6: 'Gondold végig, hogyan rajzolod meg a háromszöget és a négyzetet? Tipp: Csináld a háromszöget először, majd találd ki, mekkorát kel fordulnod a négyzet rajzolása előtt.'
        turtle_1_7: OK, nézzünk egy kicsit nehezebbet. Nézzük, meg le tudod-e rajzolni ezeket a zöld ablakokat. A négyzetek oldala 100 képpont, és 50 képpontra vannak egymástól. Ne felejts el zölddel rajzolni!
        turtle_1_8: 'OK, most képzelni el, mi történhet, ha ezt a kódot futtatod (vagy nyomd meg a "Run"-t a próbához). Majd ismételd meg azt addig, míg elkészül a rajz. A színe különböző lesz minden alkalommal.'
        turtle_1_9: Ki tudod találni, melyik számot kell a kérdőjelek helyére írni, hogy rajzoljon egy kört?
        turtle_1_10: 'Megcsináltad! Most rajzolhatsz, amit csak akarsz. Néhány szórakoztató ötlet: egy pálcikaember, hópehely, vagy spirális. Próbálja ki az új "set width" (szélesség állítás) blokkot. Jó szórakozást!'
        turtle_4_1: 'Tudsz rajzolni egy háromszöget  (oldala 100 képpont) csak 3 blokkal? Tipp: használj "repeat" blokkot.'
        turtle_4_2: 'Adj hozzá egy "Fordulj jobbra 90 fokkal" elemet valahol a program közepén, hogy a munkaterületre le tudd rajzolni ezeket a háromszögeket.'
        turtle_4_3: 'OK, itt van a kód amit írtál egy háromszög rajzolásához. Adj hozzá egy "repeat" (ismételd) egy "turn" (fordulj) blokkot, hogy elkészítsen egy szép virágot!'
        turtle_4_4: 'Itt van egy kód, az előző feladatból, csak 36 fokot fordul minden egyes háromszög rajzolása után. Hányszor kell eztismételni? (Tipp: 360 fokos fordulattal a rajz megtesz egy teljes kört)'
        turtle_4_5: 'Itt van egy kód, az előző feladatból, csak 36 fokot fordul minden egyes háromszög rajzolása után. Hányszor kell ezt ismételni? (Tipp: 360 fokos fordulattal a rajz megtesz egy teljes kört)'
        turtle_4_6: Csak 3 blokk használatával tudsz rajzolni egy 20 képpont oldalú négyzetet?
        turtle_4_7: 'Itt van a kód, a rajz a tér, az utolsó puzzle. Meg tudnád ismételni, hogy dolgozzon 10 szomszédos terek, mint a létra? Tipp: csak akkor kell 2 több blokkot.'
        turtle_4_8: Itt a megoldása az előző feladatnak. Pontosan két új blokk hozzáadásával elkészítheted a rajzot?
        turtle_4_9: Itt a megoldása az előző feladatnak. Hány fokos fordulattal tudod befejezni ezt a rajzot? (Valószínűleg néhány próbálkozásra szükséged lesz.)
        turtle_4_10: Itt a megoldása az előző feladatnak. Hányszor kell ez ismételni, hogy befejezd ezt a rajzot?
        turtle_4_11: 'Próbáld meg módosítani a számokat a "turn" (fordul) és a "repeat" (ismétel) blokkokban, hogy a különböző mintákat kapj. De tetszés szerint módosíthatod a kódot is, hogy rajzolj, amit csak akarsz.'
        maze_karel_1_1: 'Szia én egy gazda vagyok. Szükségem van a segítségedre, hogy elsimítsam a földemet a palántázáshoz. Mozgass engem a földkupachoz, és a "remove" (elmozdít, eltakarít) blokkal takarítsd el azt.'
        maze_karel_1_2: 'Most mozgass a gödörhöz és töltsd fel azt két lapát földdel, a "fill" (feltölt) blokk segítségével.'
        maze_karel_1_3: Mozgass a földkupachoz, és mond meg hány lapátnyit kell eltakarítani. A lehető legkevesebb kódblokkal old meg.
        maze_karel_1_4: 'Segíts eltakarítani mind a négy földkupacot. Tipp: Használd a "repeat" (ismételd) blokkot, ha tudod.'
        maze_karel_1_5: 'Segíts feltölteni ezeket a gödröket 5 lapátnyi földdel. Tipp: A "repeat" (ismételd) blokkon belül használj "while" (amíg) blokkot.'
        maze_karel_1_6: 'Tüntesd el a földkupacokat minél kevesebb blokkal. Az új lehetőség legördülő menüben a "while" (amíg) blokk, ami jelzi, hogy egy halmon, vagy egy gödörben állok-e.'
        maze_karel_1_7: Wow. Találtam egy tényleg nagy gödröt. Azt se tudom, hány lapátnyi földre lesz szükségem. Tudsz írni olyan programot, amelyik addig tölti, amíg ki nem egyengette?
        maze_karel_1_8: Segíts feltölteni a gödröt a mező végén, a lehető legkevesebb blokk használatával.
        maze_karel_1_9: 'Tüntesd el a gödröket.  Használ a lehető legkevesebb blokkot. Tipp. használd a "while" blokkot.'
        maze_karel_1_10: 'Későig dolgoztam, annyira besötétedett, hogy nem látom mekkorák a földkupacok.  Nincsenek meg a szokott lehetőségeim a while blokkon belül. Vezess végig a földemen, és a kupacokat takaríttasd el velem.'
        maze_karel_1_11: |
          Még mindig sötét van. Vezess végig a földemen. Ha földkupacot találsz, takarítsd el, ha gödört, töltsd fel.
          Tipp: használ a legördülő menü "if" (ha) blokkját.
        turtle_2_1: 'Helló. Én lenni zombi művész. Én szeret rajzol! Segíteni nekem rajzol különleges színű négyzet. Fontos megjegyzés: ugyanazok a blokkjaid vannak, viszont most nincsenek kategorizálva.'
        turtle_2_2: 'Üdvözöljük azon funkciók honában, amelyek segítségével új blokkokat definiálhat! Próbálja ki az új "négyzet rajzolás" blokkot.  A "Funkciók" között találja, és egy 50 x 50 kis zöld négyzetet rajzol  .'
        turtle_2_3: 'Használja az "ismétlés"/repeat blokkot (a "Ciklus" kategória) , hogy rajzoljon 3, 100 egységnyi négyzetet, 120 fokkal elfordítva egymástól. Csinálja ezeket 3 különböző, véletlenszerű színnel.'
        turtle_2_4: 'Legyünk viccesek. Változtassuk meg a kódot, rajzoljunk 36, 100 képpont széles négyzetet,  10 fokkal elforgatva. Tipp: Lehet, hogy csúszkát szeretne használni, hogy gyorsítson.'
        turtle_2_5: 'Rajzoljon 50, 60, 70, 80 és 90 képpont oldalú négyzeteket.  Ötször lesz szüksége a "négyzet rajzolás" funkcióra .'
        turtle_2_6: 'OK, ez az utolsó program, egy számlálót használ, ugyanazoknak a négyzeteknek a rajzolásához, mint a múltkor. Úgy oldja meg, hogy a négyzet akkora legyen, mint a számláló, ezért használja a "counter"/számláló blokkot. Tipp: ott találja a változók között.'
        turtle_2_7: 'Ez a program egy spirált rajzolna, de a blokkok le vannak tiltva, így nem fut. Csináljon egy új programot, a "count with"/számláló blokk (ciklusok kategóriában), és a "counter"/számláló blokk (változók között) segítségével ami megrajzolja ugyan ezt a spirált.'
        turtle_2_7_5: 'Van egy új "Rajzolj hóembert" funkció (a függvények kategória). Rajzoljon két, 250 és 100 magas hóembert,  .'
        turtle_2_8: 'Ez itt egy kicsit trükkös. A "Rajzolj hóembert" funkció, és az új "ugrás előre" blokk (a műveletek kategória). A 3 hóember legyen különböző színű , 100 képpontra egymástól.'
        turtle_2_9: 'A "count with" ciklus segítségével rajzoljon egy hóember családot  110, 100, 90, 80, 70 magasságokkal. A hóemberek legyenek 60 képpontra egymástól.'
        turtle_2_10: 'Itt van egy kód, amivel kísérletezhet különböző spirálokkal.  Mi történik, ha módosítja a fordulatot? Vagy egy véletlenszerűen a színt a ciklusban?  Próbálkozzon!'
        maze_karel_2_1: 'Blokkok használatával segítsen nekem eltakarítani a földhalmokat, és feltölteni a gödröket a szántóföldön. Használjon ciklusokat a sok blokk helyett. Tipp: a ciklus belsejébe is elhelyezhet egy másik ciklust.'
        maze_karel_2_2: 'Már létrehoztunk egy saját blokkot, az úgynevezett "töltsd fel 5", amely jelenleg a függvények között található. Használja,  hogy feltöltse ezt a lyukat.'
        maze_karel_2_3: 'Az új "töltsd fel 5" funkció blokk segítségével töltse fel a lyukakat. A "töltsd fel 5" blokkot függvények között találja.'
        maze_karel_2_4: Definiáljunk egy új funkciót, amely eltávolít 7 shovelfult. Aztán használd arra, hogy írj egy programot ami segít nekem eltávolítani az összes kupacot.
        maze_karel_2_5: Hozzon létre egy új funkciót, amely eltávolít egy 6 lapátnyi kupacot, majd használja, hogy segítsen nekem eltüntetni a halmot.
        maze_karel_2_6: 'Használja a két új funkciót, a "töltsd ki a 8" és a "távolítsd el 8", hogy segítsen nekem eltüntetni a kupacot és feltölteni a lyukat.'
        maze_karel_2_7: 'Az mezőmön van egy tehén! Írjon egy új funkciót, amely segít kikerülni a tehént, és távolítsa el a halmot. Tegye mindezt egy  új funkció blokkba .'
        maze_karel_2_8: 'Használja ezt a függvényt, "kerüld ki a tehenet, és tüntess el 1", hogy segítsen nekem eltávolítani a kupacokat.'
        maze_karel_2_9: OK, itt van egy függvény, amely eltávolít a 4 kupac földet egy függőleges oszlopban. Próbálja ki ez a funkciót egy ciklus belsejében, hogy eltávolítsa az összes kupacot, csak néhány új blokkok segítségével.
        maze_karel_2_10: Mozgass a mezőn, és a két funkció segítségével segítsen nekem eltakarítani a földkupacokat, és feltölteni a lyukakat.
        turtle_3_1: 'Ez a játék megmutatja, hogy a "négyzet rajzolás" és "rajzoljon egy kört" függvényeket.  Meghatározása a funkció nem működik a blokkok.  Akkor húzza ki a "négyzet rajzolásához" blokk, valójában a négyzet rajzolásához.'
        turtle_3_2: 'A "négyzet rajzolásához" függvénnyel például, hozzon létre egy "draw egy háromszög" funkció, és használja azt.'
        turtle_3_3: 'Rajzoljon háromszög alakú kerítést a macskák körül, és négyzet alakú kerítést a tehenek körül! Tip: tesztelje a programot miközben végighalad rajta.'
        turtle_3_4: 'Lássuk tud-e rajzolni egy "négyzetet" vagy egy "háromszöget" (és pár másik blokkot) hogy egy házat rajzoljon az oroszlán körül.'
        turtle_3_5: 'Most készítsen egy új "rajzoljon házat" funkciót és használja ház készítésére a két macska körül. Tipp: készítsen egy új funkciót használva a "csinálj valamit" blokkot, majd írja be a saját szövegét, hogy elnevezze a blokkot.'
        turtle_3_6: 'Használja a "négyzet rajzolását" példaként, adjon hozzá egy bemeneti "hosszúság"-ot, ahhoz hogy "rajzoljon egy háromszöget". Aztán rajzoljon háromszögeket különböző méretben! (Tipp: kattintson a csillagra hogy hozzáadjon bemenetit egy funkcióhoz)'
        turtle_3_7: 'Add hozzá egy input nevű "hossza" a "ház" és építsenek egy nagy ház, az elefánt (a szélei 150 pixel hosszú)'
        turtle_3_8: 'Itt van minden a blokkokat az előző puzzle.  Módosítsa a "egy ház rajzolása", úgyhogy a végén a jobb alsó sarokban után rajz egy új házat. Ehhez a funkcióhoz módosított rajzoljunk három ház.'
        turtle_3_9: 'Lehet újra létrehozni segítség nélkül "dolgozzon egy ház" funkció? Próbálja ki, és Ezután rajzolja a házak sora.'
        turtle_3_10: 'Már sokmindent megtanult! Most használhatja mindezt, és azt rajzolhat, amit csak akar. Megpróbálhat  csillag, spirál, vagy akár egy izgalmas hópehely megrajzolásával.'
        maze_karel_debug_seq_1: Üdvözöljük hibakeresés földjén! A kódom nem fut helyesen. Látod már a problémát, és ki tudod javítani, hogy előkészíthessem a földet az ültetéshez?
        maze_karel_debug_seq_2: Mi a baj ezzel a programmal? Hogyan lehet kijavítani, hogy eltávolíthassam a földhányásokat?
        maze_karel_debug_repeat: Irtsd ki a programhibákat (ezt hívjuk debuggolásnak), hogy a földem sima és szép lehessen.
        maze_karel_debug_while: Mit kell változtatni a programon, hogy segítsen a gödrök feltöltésében?
        maze_karel_debug_if: segíts! Javítsd ki a program, hogy a mező teljesen lapos legyen.
        maze_karel_debug_if_else: Debuggold ez a programot, hogy is töltse fel a gödröket, és távolítsa el a födhányásokat.
        maze_karel_debug_function_1: Mit kell változtatni ezen a programon, hogy segítsen eltávolítani a földkupacokat?
        maze_karel_debug_function_2: 'Tudja Ön debuggolni  ez a programot nekem, hogy a mezőmet elegyengesse?'
        maze_karel_debug_function_3: 'Szerkessze át a programot, hogy eltüntessek minden földkupacot a földemről. '
        turtle_5_1: Próbálja meg futtatni ezt a programot, és változtassa meg, hogy lássa, mi történik. Ki tudja kitalálni, hogyan fog működni? (Akár törölheti az egészet, és írhat helyette valami teljesen mást)
        turtle_5_2: Próbálja meg futtatni ezt a programot, és változtassa meg, hogy lássa, mi történik. Ki tudja kitalálni, hogyan fog működni? (Akár törölheti az egészet, és írhat helyette valami teljesen mást)
        turtle_5_3: Próbálja meg futtatni ezt a programot, és változtassa meg, hogy lássa, mi történik. Ki tudja kitalálni, hogyan fog működni? (Akár törölheti az egészet, és írhat helyette valami teljesen mást)
        turtle_5_4: Próbálja meg futtatni ezt a programot, és változtassa meg, hogy lássa, mi történik. Ki tudja kitalálni, hogyan fog működni? (Akár törölheti az egészet, és írhat helyette valami teljesen mást)
        turtle_5_5: Próbálja meg futtatni ezt a programot, és változtassa meg, hogy lássa, mi történik. Ki tudja kitalálni, hogyan fog működni? (Akár törölheti az egészet, és írhat helyette valami teljesen mást)
        turtle_5_6: Próbálja meg futtatni ezt a programot, és változtassa meg, hogy lássa, mi történik. Ki tudja kitalálni, hogyan fog működni? (Akár törölheti az egészet, és írhat helyette valami teljesen mást)
        maze_3_1: El kell kapnom a malacot. Gépelj be néhány move(); (mozgás()) utasítást, hogy visszakapjam a tojásaimat.
        maze_3_2: Írj egy programot, hogy megtehessem az egész utat a malachoz.
        maze_3_3: Hogy jussak el a malachoz? Vigyázz, nehogy belefussak egy doboz TNT-be!
        maze_3_4: Ahh! Írj nekem egy programot amivel megkerülhetem a TNT-t és eljuthatok a malachoz.
        bounce_1: 'Attach a block to the "when left arrow" block and press "Run". Move the paddle using the left arrow to reach the finish target.'
        bounce_2: 'Csatolja a blokkot  az "Amkor jobb nyíl" blokkhoz, és nyomja meg a "Program futtatásá"-t. Mozgassa a lapátot a bal nyíl segítségével hogy elérje célját.'
        bounce_3: 'Most csinálja meg ugyanezt  a "Mikor fel nyíl" blokkal, és mozgassa a lapátot a, hogy elérje fent a célt.'
        bounce_4: Itt az idő, hogy bevezessen négy új blokkot. Mozgassa a lapátot mind a négy irányba, hogy befejezze ezt a feladatot.
        bounce_5: 'El szeretnénk dobni a labdát az ütő felé. Csatoljunk egy blokkot az "amikor a labda hozzáér az ütőhöz" (esemény-)blokkhoz, ami végtehajtódik amikor a labda eléri a célját.'
        bounce_6: 'Most a végső cél a fontos. Szükséges egy blokkot csatolni mind a két  "Amikor labda találat" blokkhoz, hogy megoldja ezt rejtvényt.'
        bounce_7: 'Csatoljon blokkok minden a "Amikor" blokkhoz. A labda addig pattog, amíg eléri a célt.'
        bounce_10: 'A felső részen jelenjenek meg a gólok. Kapcsolja a "megszerzett pontok" -at és az ellenfél pontjait a "amikor a labda gól" és az "amikor a labda nem érte az ütőt" blokkhoz, hogy elkészüljön a játék. Próbálja ki, hány pontot tud szerezni, amig az ellenfele a dupláját.'
        bounce_11: 'You can now attach blocks to the "when run" block. You have to attach the new "launch new ball" block in more than one place. Also, try changing the scene or the speed of the paddle and the ball and see how many points you can score before your opponent scores twice.'
        bounce_12: "Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones."
        Custom_builder: 'Drag blocks from the toolbox to the workspace to draw the level you wish to create. Press "Run" when you are ready.'
        flappy_1: 'Attach a block to the "when click" block, then press "Run". Click or tap the screen to move Flappy to the target.'
        flappy_2: 'Nos mi hozzáadtuk a talajt. Csatolj egy blokkot a "ha becsapódik a talajba" blokkhoz. Ha Flappy ütközik, itt a "VÉGE A JÁTÉKNAK".'
        flappy_3: 'The "when run" block allows you to run code when your game starts.  Try setting the level speed and flapping to the target.'
        flappy_4: 'Flappy át fog repülni az akadályokon, hacsak te nem írsz egy olyan parancsot, amitől nekik ütközik. Csatolj  egy blokkot a "amikor akadálynak ütközik" blokkhoz. Ha Flappy nekiütközik az első csöveknek, akkor itt a "VÉGE A JÁTÉKNAK".'
        flappy_5: 'Adjunk hozzá egy eredményjelzőt, és számoljuk  pontokat, amikor Flappy áthalad egy akadályon. Adjuk az "amikor áthalad egy akadályon" blokkhoz, és azután szerezzünk pontot Flappy-vel átrepülve az első csövek között.'
        flappy_6: See if you can still score a point after making Flappy flap either a smaller or larger amount.
        flappy_7: 'Next, try changing the scene by attaching another block to the "when run" block.'
        flappy_8: You can set visuals anytime, not just when the game starts. Try setting a RANDOM scene when other events happen, for example, when passing an obstacle.
        flappy_9: To mix things up, when hitting an obstacle or the ground, instead of ending the game try setting the score back to 0.
        flappy_11: "Create your own Flappy game. You can change all the visuals and all the rules, even the gravity. When you're done, click Finish to let friends try your game on their phones."
        flappy_k1_1: Play Flappy
        flappy_k1_2: 'Attach a block to the "when click" block, then press "Run". Click or tap the screen to move Flappy to the target.'
        flappy_k1_3: 'Nos mi hozzáadtuk a talajt. Csatolj egy blokkot a "ha becsapódik a talajba" blokkhoz. Ha Flappy ütközik, itt a "VÉGE A JÁTÉKNAK".'
        flappy_k1_4: 'The "when run" block allows you to run code when your game starts.  Try setting the level speed and flapping to the target.'
        flappy_k1_5: 'Flappy át fog repülni az akadályokon, hacsak te nem írsz egy olyan parancsot, amitől nekik ütközik. Csatolj  egy blokkot a "amikor akadálynak ütközik" blokkhoz. Ha Flappy nekiütközik az első csöveknek, akkor itt a "VÉGE A JÁTÉKNAK".'
        flappy_k1_6: 'Adjunk hozzá egy eredményjelzőt, és számoljuk  pontokat, amikor Flappy áthalad egy akadályon. Adjuk az "amikor áthalad egy akadályon" blokkhoz, és azután szerezzünk pontot Flappy-vel átrepülve az első csövek között.'
        flappy_k1_7: See if you can score multiple points for making it past an obstacle
        flappy_k1_8: 'Next, try changing the scene by attaching another block to the "when run" block.'
        flappy_k1_9: 'Try changing the player by attaching a "set player" block to the "when run" block.'
        jigsaw_1: Kattints a blokkra
        jigsaw_2: Húzd a blokkot a célhoz
        jigsaw_3: Rendezd el a blokkokat, hogy a képet adják ki
        jigsaw_4: Rendezd el a blokkokat, hogy a képet adják ki
        jigsaw_5: Rendezd el a blokkokat, hogy a képet adják ki
        jigsaw_6: Rendezd el a blokkokat, hogy a képet adják ki
        jigsaw_7: Rendezd el a blokkokat, hogy a képet adják ki
        jigsaw_8: Rendezd el a blokkokat, hogy a képet adják ki
        jigsaw_9: Rendezd el a blokkokat, hogy a képet adják ki
        jigsaw_10: Rendezd el a blokkokat, hogy a képet adják ki
        jigsaw_11: Rendezd el a blokkokat, hogy a képet adják ki
        jigsaw_12: Rendezd el a blokkokat, hogy a képet adják ki
        jigsaw_13: Fix the puzzle!
        mazestep_1: 'Labirintus lépéseinek leírása - itt'
        mazestep_2: 'Labirintus lépéseinek leírása - itt'
        mazestep_3: 'Labirintus lépéseinek leírása - itt'
        mazestep_4: 'Labirintus lépéseinek leírása - itt'
        mazestep_5: 'Labirintus lépéseinek leírása - itt'
        studio_c2_1: 'Rá tudod venni a kutyát, hogy azt mondja: "Hello világ"?'
        studio_c2_2: Can you make the dog say something and then have the cat say something afterwards?
        studio_c2_3: Can you write a program to make this dog move to the cat?
        studio_c2_4: 'Tudsz írni egy programot, amiben a kutya, a macska felé megy, és amikor a kutya odaér hozzá, a macska azt mondja "hello"?'
        studio_c2_5: 'Can you write a program to make the octopus say "hello" when it is clicked?'
        studio_c2_6: Can you write a program to make this penguin move around using the up / down / left /right keys to hit all of the targets?
        studio_c2_7: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?'
        studio_c2_8: 'Can you have the penguin say "Ouch!" and play a "hit" sound if he runs into the dinosaur, and then move him with the arrows to make that happen?'
        studio_c2_9: Can you add a block to score a point when the penguin runs into the octopus, and then move him with the arrows until you score?
        studio_c2_10: Can you add blocks to change the background and the speed of the penguin, and then move him with the arrows until you score?
        studio_c2_11: "Create your own story. When you're done, click Finish to let friends try your story on their phones."
        studio_c3_story_1: 'Rá tudod venni a kutyát, hogy azt mondja: "Hello világ"?'
        studio_c3_story_2: Can you make the dog say something and then have the cat say something afterwards?
        studio_c3_story_3: Can you write a program to make this dog move to the cat?
        studio_c3_story_4: 'Tudsz írni egy programot, amiben a kutya, a macska felé megy, és amikor a kutya odaér hozzá, a macska azt mondja "hello"?'
        studio_c3_story_5: Can you add a block to make the octopus happy?
        studio_c3_story_6: "Create your own story. When you're done, click Finish to let friends try your story on their phones."
        studio_c3_game_1: 'Can you write a program to make the octopus say "hello" when it is clicked?'
        studio_c3_game_2: Can you write a program to make this penguin move around using the up / down / left /right keys to hit all of the targets?
        studio_c3_game_3: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?'
        studio_c3_game_4: 'Can you have the penguin say "Ouch!" and play a "hit" sound if he runs into the dinosaur, and then move him with the arrows to make that happen?'
        studio_c3_game_5: Can you add a block to score a point when the penguin runs into the octopus, and then move him with the arrows until you score?
        studio_c3_game_6: Can you add blocks to change the background and the speed of the penguin, and then move him with the arrows until you score?
        studio_c3_game_7: "Create your own game. When you're done, click Finish to let friends try your game on their phones."
        studio_playlab_1: 'Rá tudod venni a kutyát, hogy azt mondja: "Hello világ"?'
        studio_playlab_2: Can you make the dog say something and then have the cat say something afterwards?
        studio_playlab_3: Can you write a program to make this dog move to the cat?
        studio_playlab_4: 'Tudsz írni egy programot, amiben a kutya, a macska felé megy, és amikor a kutya odaér hozzá, a macska azt mondja "hello"?'
        studio_playlab_5: 'Can you write a program to make the octopus say "hello" when it is clicked?'
        studio_playlab_6: Can you write a program to make this penguin move around using the up / down / left /right keys to hit all of the targets?
        studio_playlab_7: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?'
        studio_playlab_8: Can you add a block to score a point when the penguin runs into the octopus, and then move him with the arrows until you score?
        studio_playlab_9: Can you add blocks to change the background and the speed of the penguin, and then move him with the arrows until you score?
        studio_playlab_10: "Create your own game. When you're done, click Finish to let friends try your game on their phones."
        studio_full_sandbox: "Create your own game. When you're done, click Finish to let friends try your game on their phones."
        studio_k1_1: 'Rá tudod venni a kutyát, hogy azt mondja: "Hello világ"?'
        studio_k1_2: Can you make the dog say something and then have the cat say something afterwards?
        studio_k1_3: Can you write a program to make this dog move to the cat?
        studio_k1_4: 'Make the dog move to the cat and the cat say "hello" when he gets there.'
        studio_k1_5: Can you add a block to make the octopus happy?
        studio_k1_6: Create your own story! Move around the cat and dog, and make them say things.
        maze_wordsearch_k_1: Move me to spell the word EAST
        maze_wordsearch_k_2: Move me to spell the word SOUTH
        maze_wordsearch_k_3: Move me to spell the word WEST
        maze_wordsearch_k_4: Move me to spell the word NORTH
        maze_wordsearch_k_6: Move me East and then South to spell the word JUMP
        maze_wordsearch_k_9: Move me one way, then another to spell the word CODE
        maze_wordsearch_k_13: Move me one way, then another to spell the word DEBUG
        maze_wordsearch_k_15: Move me one way, then another to spell the word ABOVE
        maze_wordsearch_k_16: Move me one way, then another to spell the word BELOW
        maze_wordsearch_k_20: This is a test! Move me one way, then another to spell the word STORY
        webapp_ec_simple: Create your web app by using createHtmlBlock.
        turtle_ec_1_2: 'Now, draw a square. NOTE: use your favorite color by picking it in the new "penColor" block.'
        turtle_ec_1_10: 'You made it! Now, draw anything you want. Some fun ideas: a stick figure, snowflake, or spiral. Also try the new "penWidth" block. Have fun!'
        studio_ec_sandbox: "Create your own game. When you're done, click Finish to let friends try your game on their phones."
    video:
      name:
        maze_intro: Útvesztő ismertető
        artist_intro: Művész Intro
        farmer_intro: Farmer Intro
        flappy_intro: Flappy intró
        loop_times: Ismétlés valahányszor blokk
        loop_until: Ismételd amíg, blokk
        if: Ha blokk
        if_else: Ha/egyébként blokk
        function: Függvények
        loop_while: Amig blokk
        loop_for: Számláló blokk
        parameters: Paraméterezett függvények
        hoc_wrapup: A kódolás órája összefoglaló
        Unplug1: What is CS?
        Unplug2: Számítógépes gondolkodás
        Unplug3: Grafikus programozás
        Unplug4: algoritmusok
        Unplug5: Függvények
        Unplug6: Feltételek
        Unplug7: Songwriting
        Unplug8: Absztrakció
        Unplug9: Relay programming
        Unplug10: Internet
        Unplug11: Összefoglaló
        C1_happy_maps_unplugged: Happy Maps
        C1_moveitmoveit_unplugged: Move It, Move It
        C1_bigevent_unplugged: The Big Event
        C1_getting_loopy: Getting Loopy
        C1_pair_programming: Pair Programming
        C1_maze_intro_sequencing: Maze Sequencing Intro
        C1_maze_debugging: Maze Debugging
        C1_bee_level_intro: 'Bee Level - Intro'
        C1_artist_intro: Művész Intro
        C1_spelling_bee_intro: Spelling Bee Intro
        C1_zuck_repeat_loop: Maze Loops
        C1_bee_loops: Bee Loops
        C1_maze_loops: Maze Loops
        C1_playlab_storytelling: 'Play Lab - Create a Story'
        C1_planting_seed: Planting a Seed
        C1_building_foundation: Building a Foundation
        C2_maze_intro: Labirintus Intro
        C2_artist_intro: Művész Intro
        C2_zuck_repeat_loop: Maze Loops
        C2_artist_loops: Artist Loops
        C2_artist_debugging: Artist Debugging
        C2_bee_loops: Bee Loops
        C2_bee_debugging: Bee Debugging
        C2_bee_conditionals: Bee Conditionals
        C2_playlab_createstory: 'Play Lab - Create a Story'
        C2_graph_paper: Grafikus programozás
        C2_conditionals_with_cards: Feltételek
        C2_binary_bracelets: Binary Bracelets
        C2_relay_programming: Váltó programozás
        C2_paper_airplanes: Paper Airplanes
        C3_maze_level_4: Maze Loops
        C3_artist_intro: Művész Intro
        C3_artist_functions: Artist Functions
        C3_bee_functions: Bee Functions
        C3_bee_conditionals: Bee Conditionals
        C3_maze_conditionals: Maze Conditionals
        C3_artist_nested_loops: Nested Loops
        C3_farmer_while: While Loops
        C3_bee_nested_loops: Nested Loops
        C3_bee_debugging: Bee Debugging
        C3_bounce: Ugrál
        C3_playlab_create_game: 'Play Lab - Create a Game'
        C3_computational_thinking: Számítógépes gondolkodás
        C3_dice_race: Dice Race
        C3_internet: Internet
        C3_crowdsourcing: Crowdsourcing
        C3_functional_suncatchers: Functional Suncatchers
        C3_songwriting_with_parameters: Songwriting With Parameters
        Frozen_intro: Hour of Code Intro
        Frozen_loops: Introduction to Loops
        Frozen_functions: Introduction to Functions
    callout:
      text:
        drag_blocks: Húzz egy „előrelépni” blokkot, és csatold a másik blokk alá
        run: Nyomd meg a „Futtatás” gombot, hogy kipróbáld a programodat
        watch_again: 'Kattints ide, hogy újra megnézhesd a videót '
        gray_block_explanation: A szürke blokkok nem törölhetők. Így is meg tudod oldani a feladatot?
        show_code_explanation: Kattints ide, hogy lásd a kódot amit írtál
        instructions_repeat_explanation: Az egyes feladványokhoz tartozó leírás itt jelenik meg újra
        category_explanation: "You have all the same blocks but they've now been arranged in categories"
        set_sprite_image: 'Attach a "set actor to image" block to the "when story starts" block to enable an actor for this story'
        studio_say_text: Type what you want your actor to say within these quotes
        jigsaw_click: Click this block!
        move_elsa_forward: 'Drag a "Move Forward" block and snap it below the "When Run" block to make Elsa move forward'
        turn_elsa: 'Use the "Turn" block to make Elsa turn. The number in the drop-down determines how much Elsa turns'
        replace_questions: 'Use the drop-down to replace "???" with a number'
        replace_questions_degree: 'Use the drop-down to replace "???" with the correct degree to turn'
        repeat_blocks: 'Use the "Repeat" block and wrap it around the blocks in the workspace'
        snowflake_dropdown: Use this drop-down to create different snowflakes!
        degrees_per_side: Divide 360 by the number of sides to get the size of each angle in degrees.
        set_sides: 'Use this block to set "sides" to the number needed to complete the puzzle.'
        set_length: 'Use this block to set "length" to the correct value.'
        which_equation: 'Which equation makes each side shorter for shapes with more sides?  Try each equation!'
        get_nectar: 'Use the new "get nectar" block.'
        actions_category: 'The tool box got a new look! The "Actions" blocks are in here now.'
        draw_square_hint: 'Hint: Use the square loop you just made in the last puzzle.'
        edit_function: Use this button to edit the function.
        create_function: 'Click here to open the "Functions" flyout, then click the "Create a Function" button.'
        house_hint: "It's ok if the picture doesn't look like a house yet. We will fix it in the next puzzle."
        edit_draw_square: Use this button to edit the function and add the loop.
        edit_get_nectar: Use this button to edit the function and change the direction the Bee will turn to get the nectar.
        logic_category: 'Open the "Logic" flyout to find the "if/else" block.'
        length_parameter: 'Can you update this function so it uses the "length" parameter?'
