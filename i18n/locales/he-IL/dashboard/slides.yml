he:
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: ברוכים הבאים אל שעת הקוד הראשונה שלכם! בואו נצלול אל תוך הטעימה הראשונה שלכם בתכנות.
      2:
        image: notes/hoc1_2.jpg
        text: אנחנו נשתמש בבלוקלי, שפת תכנות חזותית בה קוד נכתב על ידי גרירה ושחרור של בלוקים.
      3:
        image: notes/hoc1_3.jpg
        text: 'רוב תוכניות המחשב נכתבות, אבל בלוקלי הינה שפה חזותית. כל בלוק מקביל לשורת קוד "אמיתית" אחת.'
      4:
        image: notes/hoc1_4.jpg
        text: כאן תלמד את יסודות מדעי המחשב, מושגים אשר משמשים בכל מקום מיצירת אפליקציות ועד שליטה על רכב החלל במאדים.
      5:
        image: notes/hoc1_5.jpg
        text: תוכנית היא אוסף של הוראות אשר על המחשב שלך לבצע.
      6:
        image: notes/hoc1_6.jpg
        text: המטרה של התוכנית הראשונה שלך היא להעביר את הציפור הכועסת דרך מבוך ולהכות חזיר ירוק.
      7:
        image: notes/hoc1_7.jpg
        text: הצד השמאלי הוא המבוך בו התוכנית שלך מופעלת. ההוראות עבור כל פאזל נמצאות מתחת למבוך.
      8:
        image: notes/hoc1_8.jpg
        text: ההוראות עבור הציפור הכועסת נמצאות בארגז הכלים האמצעי. השתמש בהן כדי לבנות את הקוד שלך.
      9:
        image: notes/hoc1_9.jpg
        text: מצד ימין נמצאת סביבת העבודה, אליה תגרור בלוקים מארגז הכלים כדי לבנות את התוכנית שלך. כדי למחוק בלוק, גרור אותו אל פח האשפה שבפינה.
      10:
        image: notes/hoc1_10.jpg
        text: 'כל בלוק הוא הוראה אחת. אם תגרור בלוק "התקדם" אל סביבת העבודה שלך ותלחץ על "הפעל תוכנית", הציפור תנוע צעד אחד על המבוך.'
      11:
        image: notes/hoc1_11.jpg
        text: כדי לבצע יותר מפעולה אחת, ניתן לגרור בלוקים רבים אל סביבת העבודה שלך ולחבר אותם יחדיו. הציפור תבצע את הפקודות מלמעלה כלפי מטה.
      12:
        image: notes/hoc1_12.jpg
        text: 'אם אתה מפעיל תוכנית ורוצה לתקן אותה ולנסות שוב, לחץ על לחצן "איפוס".'
      13:
        image: notes/hoc1_13.jpg
        text: בואו נתפוס את החזירים האלה!
    artist_intro:
      1:
        image: notes/stage5_1.jpg
        text: "הי, אני ג'וניור! כל צוות מכוניות מירוץ צריך מדעני מחשב כדי לנצח. הם מנתחים נתונים מהמכונית כדי לגרום לה לנסוע מהר יותר."
      2:
        image: notes/stage5_2.jpg
        text: במהלך החידות הבאות תהיה אמן המשרטט קו מאחוריו בכל מקום אליו הוא הולך.
      3:
        image: notes/stage5_3.jpg
        text: 'בלוק זה אומר "התקדם כ- 100 פיקסלים". פיקסלים הם נקודות ממש זעירות על המסך.'
      4:
        image: notes/stage5_4.jpg
        text: 'בלוק זה אומר "פנה ימינה ב- 90 מעלות". האמן שלך יפנה באותה צורה כמו בבלוקי ״פנה״ שבפאזלי המבוך.'
      5:
        image: notes/stage5_5.jpg
        text: לחץ על החץ באחד מבלוקים אלו כדי לשנות את הכמות שבה האמן ינוע קדימה או יפנה. שחק מעט כדי להכיר את בלוקים חדשים אלו.
    farmer_intro:
      1:
        image: notes/stage9_1.jpg
        text: היי, אני פאולה! בחידות אלו אתה איכר הצריך לשטח את השדה שלו לחלוטין לשם שתילת יבולים.
      2:
        image: notes/stage9_2.jpg
        text: עליך לעזור לה להסיר את כל ערמות העפר ולמלא את כל החורים.
      3:
        image: notes/stage9_3.jpg
        text: הבלוקים החדשים משמשים להסרת דלי עפר מהערימה ולמילוי החור בדלי עפר.
      4:
        image: notes/stage9_4.jpg
        text: הערימות והחורים הם בגדלים שונים, כך שעליך לספר לאיכר בכמה דליים עליו להשתמש.
    flappy_intro:
      1:
        image: הערות/flappy01.jpg
        text: . היי, אני קייטי! אחד הדברים הכי מרגשים על מדעי המחשב הוא כי תוכנת מחשב יכול להיות אינטראקטיביים.
      2:
        image: הערות/flappy02.jpg
        text: בכל פעם שמישהו לוחץ או מקיש או מקליד במחשב או טלפון, זה יוצר אירוע, ויש קוד שמחליט מה לעשות כאשר מתרחש אירוע.
      3:
        image: הערות/flappy03.jpg
        text: 'לדוגמה, יכולת מטפל באירועים שאומרת "בעת לחיצה על העכבר, להשמיע צליל" '
      4:
        image: הערות/flappy04.jpg
        text: אי פעם שמעת על המשחק FlappyBird ? על ידי שימוש באירועים, אנחנו הולכים ללמוד לתכנת משלנו גירסה מותאמת אישית של FlappyBird!
      5:
        image: הערות/flappy05.jpg
        text: הקוד שתכתוב מערב גרירה והוספה של בלוקים המייצגים פקודות למחשב. מתחת למכסה המנוע, כל אחת מן הלבנים הללו מייצגת קוד.
      6:
        image: הערות/flappy06.jpg
        text: 'אם אתה תסתכל על סביבת העבודה, ישנן כמה בלוקים ירוקים ימולאו עבורך - אלה "". באירועים- '
      7:
        image: הערות/flappy07.jpg
        text: 'אם אתה רוצה את הציפור על דש בעת לחיצה על העכבר, אתה יכול לעשות זאת על-ידי הצמדת את הבלוק "דש" למטפל האירוע המתאים, ולנפנף עכשיו במשחק שלך בכל פעם שתלחץ על העכבר, הציפור.'
      8:
        image: הערות/flappy08.jpg
        text: בתוך כל הפאזל של פעילות זו אנו להציג סוגים חדשים של אירועים כמו רחובות ירוקים על סביבת העבודה, באפשרותך להחליט הבלוקים המתאימים כדי להוסיף בתגובה לאירועים האלה.
      9:
        image: הערות/flappy09.jpg
        text: 'כאשר אתה רואה טיפה למטה/חץ למעלה כזה, כלומר, שבאפשרותך לשנות את ההגדרות - כמו איזה צליל שיושמע flappy פוגע בקרקע.'
      10:
        image: הערות/flappy10.jpg
        text: בפאזל הסופי תוכל ליצור משחק שלך ולשתף אותו עם חברים שלך. תהנה!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: . היי, אני מארק! בואו ללמוד על לולאות. באמצעות לולאות אתה יכול להגיד למחשב לחזור על כל סדרת פעולות שוב ושוב, אלפי או אפילו מיליארדי פעמים.
      2:
        image: notes/hoc2_2.jpg
        text: בחידה הזו, אנחנו רוצים לגרום לציפור לזוז קדימה 5 מקומות כדי להגיע לחזיר.
      3:
        image: notes/hoc2_3.jpg
        text: 'אנחנו יכולים להיעזר בבלוק "חזור" החדש.'
      4:
        image: notes/hoc2_4.jpg
        text: 'במקום לגרור 5 בלוקי ״התקדם" ...'
      5:
        image: notes/hoc2_5.jpg
        text: 'אנו יכולים למקם את הבלוק "התקדם" בתוך בלוק "חזור", ולכתוב בבלוק מספר שאומר לו כמה פעמים לחזור.'
      6:
        image: notes/hoc2_6.jpg
        text: 'וזה חשוב: אפשר לשים יותר מפקודה אחת בתוך בלוק "חזור".'
      7:
        image: notes/hoc2_7.jpg
        text: 'תיהנה מבלוק "חזור" החדש שלך!'
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: |-
          הי, אני כריס. לפני שהצטרפתי לקבוצת המיאמי היט, למדתי מדעי המחשב במכללת ג'ורג'יה טק. בואו ננסה בלוק חדש, בלוק "חזור עד".
      2:
        image: notes/hoc3_2.jpg
        text: מה אם אנחנו לא יודעים כמה רחוק הציפור צריכה לעבור כדי להגיע לחזיר?
      3:
        image: notes/hoc3_3.jpg
        text: 'אם נשים בלוק "התקדם" בתוך הבלוק "חזור עד", הציפור תזוז קדימה עד שתגיע אל החזיר (או שתתרסק לתוך קיר).'
      4:
        image: notes/hoc3_4.jpg
        text: 'וזה חשוב: בדיוק כמו מקודם, אנחנו יכולים לשים מספר בלוקים בתוך הבלוק "חזור עד", כך שכולם יתבצעו שוב ושוב.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: 'הי, אני ביל! בואו ונלמד מושג יסוד חדש: הצהרות "אם". כך מחשבים מקבלים החלטות.'
      2:
        image: notes/hoc4_2.jpg
        text: 'אתה משתמש במשפטי ״אם״ יום יום בעצמך. לפני שאתה יוצא החוצה בכל בוקר, אתה אומר - אם יורד גשם בחוץ, אני צריך ללבוש מעיל.'
      3:
        image: notes/hoc4_3.jpg
        text: אנחנו יכולים להגיד לזומבי לבדוק אם יש שביל שמאלה, ואם אכן הוא ימצא נתיב לשמאל, נוכל לגרום לו להסתובב לכיוון זה.
      4:
        image: notes/hoc4_4.jpg
        text: 'כדי לכתוב את הקוד לזה, בואו נגרור בלוק "אם" ונשים בלוק "פנה שמאלה" בתוכו.'
      5:
        image: notes/hoc4_5.jpg
        text: 'עכשיו, אם נשים בלוק "התקדם" מעליו ובלוק "חזור" סביב הכל, בכל פעם שהזומבי זז, הוא יבדוק אם ישנו שביל שמאלה ויפנה אליו. הפקודה "חזור" היא קריטית, כדי לבדוק בכל צעד האם ניתן לפנות.'
      6:
        image: notes/hoc4_6.jpg
        text: 'הצהרות ״אם״ מאד חשובות במדעי המחשב. אחת התוכניות הראשונות שכתבתי היתה משחק איקס-עיגול, והיה בה משפט ״אם״ שאמר - אם השחקן האחר עומד לנצח, חסום את המקום שמאפשר לו לנצח.'
      7:
        image: notes/hoc4_7.jpg
        text: 'תהנה בשימוש בבלוק "אם"!'
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: 'הי, שמי סלוני. אני משתמשת במדעי המחשב כדי לפתור בעיות בריאות ורפואה. בואו נלמד על בלוק ״אם-אחרת". הוא נראה דומה לבלוק "אם", אבל בסופו יש חלק נוסף האומר "אחרת".'
      2:
        image: notes/hoc5_2.jpg
        text: 'אם אשים בלוק "התקדם" היכן שכתוב "עשה", ובלוק "פנה שמאלה" היכן שכתוב "אחרת", הזומבי יבחר בין שתי אפשרויות. אם קיימת דרך לפנים, הזומבי יתקדם הלאה, אחרת (אין דרך לפנים), הזומבי יפנה שמאלה.'
      3:
        image: notes/hoc5_3.jpg
        text: 'בדיוק כמו בבלוק "אם", נוכל לשים בלוקי ״אם-אחרת" בתוך בלוקי "חזור",  כך שהזומבי יצעד ובלוק ה- "אם-אחרת" ימשיך לבדוק אם יש מקום בו ניתן לפנות.'
      4:
        image: notes/hoc5_4.jpg
        text: עכשיו, הצעידו את הזומבים למקום אליו הם שייכים!
    function:
      1:
        image: notes/stage13_1.jpg
        text: הי, שמי ברינה, מהנדסת באינסטגרם. פונקציה היא קבוצת שורות קוד שברצוננו להשתמש בהן שוב ושוב, כך שבמקום לכתוב את הקוד מחדש בכל פעם, נוכל להשתמש בבלוק אחד בלבד.
      2:
        image: notes/stage13_2.jpg
        text: כעת נלמד איך להגדיר פונקציות. להגדרות פונקציה יש כוכב בפינה. שמה של הפונקציה כתוב בשורה העליונה.
      3:
        image: notes/stage13_3.jpg
        text: 'הבלוקים ששמים בתוך ההגדרה אומרים לנו מה הבלוק עושה. בפונקציה הזאת, ההגדרה היא "מלא 5" והפונקציה מורכבת מבלוק "חזור שוב" ובלוק "מלא".'
      4:
        image: notes/stage13_4.jpg
        text: 'ההגדרה יושבת בסביבת העבודה, אבל החקלאי שלנו לא יריץ את הפונקציה עד שאנחנו נוציא את הבלוק של הפונקציה "מלא 5" מתוך קטגורית הפונקציות.'
      5:
        image: notes/stage13_5.jpg
        text: פונקציות הן כיף!
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: |-
          Hi, I'm Makinde! Let's learn about the "while block."
      2:
        image: notes/stage9_6.jpg
        text: 'בלוק ה״כל עוד" יבצע את מה שהכנסתם לתוכו כל עוד ההצהרה הרשומה בראשו הינה אמת.'
      3:
        image: notes/stage9_7.jpg
        text: לדוגמה, אם האיכר עומד על ערימה, הוא ימשיך להסיר דלי אחר דלי כל עוד עדיין נמצאת ערימה תחתיו.
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: הי, אני טרינה ואני עובדת עבור פיקסאר. עבדתי במספר סרטים וביניהם שרק.
      2:
        image: notes/stage11_2.jpg
        text: 'זוהי לולאת ה-"מונה" החדשה שלנו. היא תבצע פעולות שוב ושוב, כך שבאפשרותך לשנות אותן מעט בכל פעם.'
      3:
        image: notes/stage11_3.jpg
        text: 'בדוגמה זו, לולאת ה-"מונה" שלנו אומרת ״מנה מ-50 עד 90 בצעדים של 10", ובתוכה ימצא בלוק "צייר ריבוע". גרור את בלוק ה-״מונה" מאיזור ה-"משתנים" אל מקום ה- "אורך".'
      4:
        image: notes/stage11_4.jpg
        text: זה אומר שהאמן שלנו הולך לצייר ריבוע שכל צד באורך 50 פיקסלים, ואז הוא יוסיף 10 לזה ויצייר ריבוע שכל צד באורך 60 פיקסלים. אחר-כך הוא ימשיך להוסיף 10 ולצייר ריבועים עד שהוא יגיע ל90. אז יהיו לנו ריבועים של 50, 60, 70, 80, ו90.
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: ". היי, אני ג'אנט, אני מהנדסת ב-זינגה."
      2:
        image: notes/stage15_2.jpg
        text: מה אם אנחנו רוצים לצייר כמה משולשים עם אורכים בגדלים שונים?
      3:
        image: notes/stage15_3.jpg
        text: היינו יכולים לכתוב את כל הקוד בעצמנו או שנוכל להשתמש בפונקציה עם פרמטרים.
      4:
        image: notes/stage15_4.jpg
        text: 'כדי לעשות זאת לחץ על הכפתור הכחול של הגדרת הפונקציה "צייר משולש". אז גרור "שם קלט" לתוך בלוק ה"קלט".'
      5:
        image: notes/stage15_5.jpg
        text: 'אז אם תכתוב "אורך" במקום שכתוב "x" ותלחץ על Enter, תיצור קלט אורך לפונקציה שלך.'
      6:
        image: notes/stage15_6.jpg
        text: 'אז תלחץ על הכוכב. עכשיו, אתה רוצה ללחוץ על קטגוריית המשתנים ולגרור את הבלוק "אורך" לתוך הבלוק "לזוז קדימה" של הפונקציה שלך. כמו כן, תגרור משם את הבלוק מספר הישן.'
      7:
        image: notes/stage15_7.jpg
        text: 'כדי להשתמש בפונקציה שלך עם פרמטרים, לחץ על קטגוריית הפונקציות וגרור החוצה את הפונקציה "צייר משולש עם אורך".'
      8:
        image: notes/stage15_8.jpg
        text: עכשיו אתה יכול להשתמש בבלוק מתמטיקה כדי להכניס מספרים שונים כדי לצייר משולשים בגדלים שונים.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: מזל טוב! עם הפאזל האחרון שפתרת, כתבת קוד שיכול לומר לכל רובוט (בין אם זה זומבי, ציפור, מארס-רובר או אפילו מכונית שנוהגת מעצמה) איך למצוא את הדרך מבוך או מנהרה באורך כלשהו, .
      2:
        image: notes/hoc6_2.jpg
        text: 'המושגים הבסיסיים בהם השתמשת הם בליבה של כל תוכנית או אפליקציה שאי פעם תנסה. למדנו על לולאות ״חזור״, הצהרות ״חזור-עד״,  הצהרות ״אם״ והצהרות ״אם-אחרת״.'
      3:
        image: notes/hoc6_3.jpg
        text: 'אם אהבת את השעה הראשונה של קוד שלך, בקר ב- code.org כדי להמשיך בלימוד מדעי המחשב! לאחר השלמת הקורס בן 20 השעות שלנו, תשלוט ביסודות התכנות, ותוכל ללמוד כיצד לכתוב אפליקציות לטלפון, הוראות הפעלה לרובוט, משחקים ומה שתרצה.'
      4:
        image: notes/hoc6_4.jpg
        text: 'הטכנולוגיה משנה את כל מה שאנו עושים ולא משנה אם אתה צעיר או זקן: תכנות זה כיף, זה יצירתי וכל אחד יכול ללמוד!'
    20_wrapup:
      1:
        image: notes/bird.png
        text: הצגת הערות תגיע בקרוב!
