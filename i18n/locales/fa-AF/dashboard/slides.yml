fa-AF:
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: به اولین ساعت کد خود خوش آمدید! اجازه بدهید فورا با اولین تمرین برنامه نویسی آغاز کنیم.
      2:
        image: notes/hoc1_2.jpg
        text: ما از Blockly استفاده می کنیم، یک زبان برنامه نویسی visual که در آن با کشیدن و رها کردن قطعه های کد، برنامه نویسی می کنید.
      3:
        image: notes/hoc1_3.jpg
        text: بیشتر کدها آماده هستند، اما Blockly یک زبان visual است. هر قطعه کد مظابق با یک خط کد دنیای واقعی است.
      4:
        image: notes/hoc1_4.jpg
        text: شما مفاهیم پایه علوم رایانه ای را فرا خواهید گرفت، مفاهیمی که در هر جایی از تولید برنامه های کاربردی تا کنترل یک مریخ نورد استفاده شده اند.
      5:
        image: notes/hoc1_5.jpg
        text: یک برنامه، مجموعه ای از دستورالعمل ها برای اجرا در رایانه شما می باشد.
      6:
        image: notes/hoc1_6.jpg
        text: هدف اولین برنامه شما پرتاب یک گرفتن یک پرنده خشمگین برای زدن یک خوک سبز است.
      7:
        image: notes/hoc1_7.jpg
        text: جایی که برنامه شما اجرا می شود سمت چپ پازل، پیچ و خم است. دستورالعمل پازل در زیر پیچ و خم پازل است.
      8:
        image: notes/hoc1_8.jpg
        text: دستورات پرنده عصبانی در وسط جعبه ابزار است. از این جعبه ابزار برای ساخت کد خود استفاده کنید.
      9:
        image: notes/hoc1_9.jpg
        text: سمت راست فضای کاری شما جایی که در آن می توانید بلوک ها را از جعبه ابزار بکشید و برنامه خود را بسازید. برای حذف یک بلوک، آن را به سطل زباله که در گوشه قرار دارد بیندازید.
      10:
        image: notes/hoc1_10.jpg
        text: 'هر بلوک یک دستوری دارد. اگر شما یک بلوک "move forward" را به فضای کاری خود بکشید و "run" را فشار دهید، پرنده یک فاصله در پیچ و خم حرکت می کند.'
      11:
        image: notes/hoc1_11.jpg
        text: برای انجام بیش از یک عمل، شما می توانید هر چند بلوک را به فضای کاری خود بکشید و آنها را به هم وصل کنید. پرنده دستورات را از بالا به پایین انجام خواهد داد.
      12:
        image: notes/hoc1_12.jpg
        text: 'اگر شما برنامه را اجرا کردید و می خواهید آن را تعمیر کنید و دوباره اجرا کنید، دکمه "Reset" را فشار دهید.'
      13:
        image: notes/hoc1_13.jpg
        text: بیایید برویم آن خوکها را بگیریم!
    artist_intro:
      1:
        image: notes/stage5_1.jpg
        text: سلام، من JR هستم! هر یک از تیم‌های ماشین‌سواری برای بنده شدن نیاز به یک دانشمند کامپیوتر دارند. آنها داده‌های ماشین‌ها رو بررسی می‌کنند و کاری می‌کنند تا سریع‌تر حرکت کنند.
      2:
        image: notes/stage5_2.jpg
        text: در این پازل‌ها، شما یک هنرمند نقاش هستید که هرجا که آنها می‌روند یک خط پشت آنها می‌کشد.
      3:
        image: notes/stage5_3.jpg
        text: این بلاک می‌گوید که ۱۰۰ پیکسل به جلو حرکت کنید. پیکسل‌ها، نقطه‌های کوچک روی صفحه نمایش شما هستند.
      4:
        image: notes/stage5_4.jpg
        text: 'این بلاک می‌گوید: «۹۰ درجه به راست بچرخید». این مقدار هنرمند نقاش شما را به همان اندازه تغییر بلاک‌ها در پازل ماز تغییر می‌دهد.'
      5:
        image: notes/stage5_5.jpg
        text: بر روی فلش در هر یک از این بلوک‌ها کلیک کن تا میزان حرکت یا چرخش هنرمند را تغییر بدهی. با این بلوک‌های جدید بیشتر بازی کن تا با اونها آشنا بشی.
    farmer_intro:
      1:
        image: notes/stage9_1.jpg
        text: سلام، من پائولا هستم! در این معماها، تو یک کشاورز هستی که باید زمینش را کاملا صاف کند تا محصول بکارد.
      2:
        image: notes/stage9_2.jpg
        text: باید به او کمک کنی تا همه توده‌های خاک را بردارد و همه چاله‌ها را پر کند.
      3:
        image: notes/stage9_3.jpg
        text: بلوک‌های جدید 1 بیل از یک توده خاک برمی‌دارد و 1 چاله را با یک بیل از خاک پر می‌کند.
      4:
        image: notes/stage9_4.jpg
        text: اندازه توده‌ها و چاله‌ها متفاوت است، بنابراین باید به کشاورز بگویی که چندبار از بیلچه استفاده کند.
    flappy_intro:
      1:
        image: notes/flappy01.jpg
        text: سلام، من کتی هستم! یکی از جالب‌ترین چیزها در مورد علوم کامپیوتر این است که یک برنامه کامپیوتری می‌تواند تعاملی باشد.
      2:
        image: notes/flappy02.jpg
        text: هروقت کسی روی یک کامپیوتر یا گوشی، کلیک یا لمس یا تایپ کند، یک رویداد به وجود می‌آورد، و مقداری کد وجود دارد که تعیین می‌کند در هنگام یک رویداد چه کاری انجام شود.
      3:
        image: notes/flappy03.jpg
        text: 'برای مثال، می‌توانی یک "کنترل‌کننده رویداد" داشته باشی که می‌گوید "وقتی ماوس کلیک شد، صدایی را پخش کن" '
      4:
        image: notes/flappy04.jpg
        text: تا حالا چیزی درباره بازی FlappyBird شنیدی؟ با استفاده از کنترل‌کننده‌های رویداد، می‌خواهیم یاد بگیریم که نسخه سفارشی خودمون از FlappyBird را برنامه‌نویسی کنیم!
      5:
        image: notes/flappy05.jpg
        text: کدی که خواهی نوشت، شامل کشیدن و انداختن بلوک‌هایی است که نماینده دستوراتی برای کامپیوتر است. در پشت صحنه، هر یک از این بلوک‌ها با کد واقعی نشان داده می‌شوند.
      6:
        image: notes/flappy06.jpg
        text: 'اگر نگاهی به محیط کار بیندازی، چند بلوک سبز رنگ وجود دارند که پر شده‌اند - این‌ها "کنترل‌کننده‌های رویداد" هستند '
      7:
        image: notes/flappy07.jpg
        text: 'اگر می‌خواهی وقتی که ماوس را "کلیک" می‌کنی، پرنده "پرش" کند، می‌توانی این کار را با چسباندن بلوک "پرش" به کنترل‌کننده رویداد مناسب انجام بدهی، و حالا در بازی‌ات هر وقت ماوس را کلیک کنی، پرنده پرش خواهد کرد.'
      8:
        image: notes/flappy08.jpg
        text: در هر معما از این فعالیت، ما انواع جدیدی از رویدادها را بصورت بلوک‌های سبز در محیط کاری معرفی خواهیم کرد، و می‌توانی تعیین کنی که بلوک‌های مناسب برای افزودن در پاسخ به هر رویداد، کدام است.
      9:
        image: notes/flappy09.jpg
        text: 'هنگامی‌که یک فلش رو به پایین مثل این می‌بینی، یعنی می‌توانی تنظیمات را تغییر دهی - مثلا چه صدایی پخش شود وقتی که پرنده به زمین برخورد می‌کند.'
      10:
        image: notes/flappy10.jpg
        text: در معمای پایانی، می‌توانی بازی خودت را بسازی و آن را با دوستانت به اشتراک بگذاری. خوش باش و لذت ببر!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: سلام, من مارک هستم! بیایید در باره حلقه ها یاد بگیریم. با استفاده از حلقه ها شما می توانید به کامپیوتر بگویید که بارها دستورالعمل را هزاران یا حتی بیلیون بار تکرار کند.
      2:
        image: notes/hoc2_2.jpg
        text: در این پازل، ما می خواهیم که پرنده را ۵ فاصله به جلو حرکت بدهیم که به خوک برسد.
      3:
        image: notes/hoc2_3.jpg
        text: 'ما می توانیم از بلوک جدید "repeat" استفاده کنیم که به ما کمک کند.'
      4:
        image: notes/hoc2_4.jpg
        text: 'به جای بیرون کشیدن ۵ بلوک "move forward"...'
      5:
        image: notes/hoc2_5.jpg
        text: 'ما می توانیم بلوک "move forward" را در داخل بلوک "repeat" قرار دهیم و یک عدد را در آن بلوک بنویسیم که به آن بگه چند بار آن را تکرار کند.'
      6:
        image: notes/hoc2_6.jpg
        text: 'و این مهم است: شما می توانید بیش از یک دستور داخل بلوک "repeat" قرار دهید.'
      7:
        image: notes/hoc2_7.jpg
        text: 'لذت ببرید با استفاده از بلوک "repeat"!'
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: 'سلام من کریس هستم. قبل از پیوستن به میامی هیت، من برای تحصیل علوم کامپیوتر به دانشگاه جورجیا تک رفتم. بیایید بلوک جدید "repeat until" را امتحان کنیم.'
      2:
        image: notes/hoc3_2.jpg
        text: چگونه میتوانیم بدانیم که چقدر پرنده باید حرکت کند که به خوک برسد؟
      3:
        image: notes/hoc3_3.jpg
        text: 'اگر ما بلوک "move forward" را در داخل بلوک "repeat unit" قرار دهیم, پرنده به جلو حرکت خواهد کرد تا اینکه به خوک برسد (یا اینکه با دیواد برخورد کند).'
      4:
        image: notes/hoc3_4.jpg
        text: 'و این مهم است: درست مثل قبل، ما می توانیم چند تا بلوک را داخل بلوک "repeat until" قرار دهیم، و آنها تکرار خواهند شد.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: 'سلام, من بیل هستم! اجازه دهید یک مفهوم اساسی جدید را یاد بگیریم: بیانیه "if". این نشان میدهد که چگونه کامپیوترها تصمیم گیری می کنند.'
      2:
        image: notes/hoc4_2.jpg
        text: 'شما هر روز بیانیه "if" را استفاده می کنید. قبل از اینکه شما هر روز صبح از خانه خارج شوید، شما می گویند اگر بیرون باران بیاید، آن وقت من نیاز دارم که ژاکت بپوشم.'
      3:
        image: notes/hoc4_3.jpg
        text: ما می توانیم به آدم خورها بگوییم که بررسی کنند اگر مسیری در چپ وجود دارد، و اگر او بتواند مسیری در سمت چپ پیدا کند، ما به او اجازه می دهیم که به آن سمت بچرخد.
      4:
        image: notes/hoc4_4.jpg
        text: 'برای نوشتن این کد، بیایید  بلوک "if" را بیرون بکشیم و بلوک "turn left" را داخل آن قرار دهیم.'
      5:
        image: notes/hoc4_5.jpg
        text: 'حالا، اگر ما بلوک "move forward" را بالای آن و بلوک "repeat" را اطراف همه چیز بگذاریم، هر زمان که آدم خور حرکت می کند، او بررسی می کند که اگر مسیری به چپ وجود داشته باشد، او می چرخد. استفاده از دستور "repeat" حیاتی است، به دلیل اینکه هر چرخش را در هر مرحله بررسی می کند.'
      6:
        image: notes/hoc4_6.jpg
        text: 'بیانیه "if" در علم کامپیوتر واقعا مهم است. یکی از اولین برنامه هایی که من نوشته بودم بازی تیک-تک-تو بود، که در آن بیانیه "if" وجود داشت که می گفت، اگر فرد دیگری داره برنده می شود، جا را برایش ببند، که آنها برنده شوند.'
      7:
        image: notes/hoc4_7.jpg
        text: 'لذت ببرید با استفاده از بلوک "if"!'
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: 'سلام, اسم من سلونی است. من از علم کامپیوتر برای کمک به حل مشکلات در بهداشت و پزشکی استفاده میکنم. بیاید "if else" بلوک را یاد بگیریم. به نظر می رسد مانند بلوک "if" هست، اما بخش اضافی درباره "else" در پایان دارد.'
      2:
        image: notes/hoc5_2.jpg
        text: 'اگریک بلوک "move forward" در جایی که می گوید "do" قرار دهم ویک بلوک "turn left" در جایی که می گوید "else", این یعنی زامبی بین 2 گزینه میتواند انتخاب کند. اگر مانعی درمسیر وجود دارد زامبی به جلو میرود و در غیر این صورت (مانعی در مسیر وجود ندارد) به چپ میچرخد.'
      3:
        image: notes/hoc5_3.jpg
        text: 'درست مانند بلوک "if" می توانیم بلوک "if else" را داخل بلوکهای "repeat" قرار دادهیم تا زامبی بتواند به حرکت خود ادامه دهد و بلوک "if else" چک کند که ایا جایی برای چرخش وجود دارد.'
      4:
        image: notes/hoc5_4.jpg
        text: حالا، آن آدم خورها را به جایی که آنها تعلق دارند بگذار!
    function:
      1:
        image: notes/stage13_1.jpg
        text: سلام، من برینا هستم، یک مهندس در اینستاگرام. یک تابع عبارت است از خطوط مشخصی از کد که می‌خواهی بارها و بارها استفاده کنی، بنابراین بجای اینکه هربار آن کد را بنویسی، می‌توانی فقط از یک بلوک استفاده کنی.
      2:
        image: notes/stage13_2.jpg
        text: حالا می‌خواهیم یاد بگیریم که چطور توابع را تعریف کنیم. توابع تعریف شده دارای یک ستاره در گوشه هستند. اسم تابع در بالاترین خط نوشته شده است.
      3:
        image: notes/stage13_3.jpg
        text: 'بلوک‌هایی که داخل تعریف قرار می‌گیرند به ما می‌گویند که چه کاری انجام می‌دهد. پس این تعریف تابع "5 تا پرکن" نام دارد و از یک بلوک "تکرار" و یک بلوک "پر کردن" تشکیل شده است.'
      4:
        image: notes/stage13_4.jpg
        text: 'تعریف تابع در محیط کاری ما قرار می‌گیرد، اما کشاورز ما تابع را اجرا نخواهد کرد تا ما بلوک تابع "5 تا پر کن" را از دسته توابع بیرون بکشیم.'
      5:
        image: notes/stage13_5.jpg
        text: 'بیایید "fun" را در "FUNction" برگردانیم! '
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: 'سلام من Makinde هستم! اجازه دهید "white block" را یاد بگیریم.'
      2:
        image: notes/stage9_6.jpg
        text: '"بلوک مادامیکه" هر چیزی را که داخلش قرار دهید انجام می‌دهد "تا زمانیکه" عبارت بالایی "درست" باشد.'
      3:
        image: notes/stage9_7.jpg
        text: 'برای مثال، اگر کشاورز روی یک توده ایستاده باشد، به برداشتن 1 بیل از خاک ادامه می‌دهد "تا زمانیکه" هنوز یک توده زیر پایش وجود داشته باشد.'
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: سلام، من ترینا هستم، و برای شرکت پیکسار کار می‌کنم. من روی چند فیلم از جمله شرک کار کرده‌ام.
      2:
        image: notes/stage11_2.jpg
        text: 'این حلقه "شمارنده" جدید ما است که عملیاتی را بارها و بارها انجام خواهد داد و می‌توانی عملیات را هر بار اندکی تغییر دهی.'
      3:
        image: notes/stage11_3.jpg
        text: 'در این مثال، حلقه "شمارنده" ما می‌گوید "از 50 تا 90 بصورت ده تا ده تا بشمار" و داخل آن، بلوک "یک مربع بکش" خودمان را داریم. بلوک "شمارنده" را از بخش "متغیرها" به داخل قسمت "طول" بکش.'
      4:
        image: notes/stage11_4.jpg
        text: یعنی هنرمند ما می‌خواهد یک مربع رسم کند که هر طرف آن 50 پیکسل طول دارد، سپس 10 تا به آن اضافه می‌کند و یک مربع با وجوه 60 پیکسل می‌کشد. سپس به اضافه کردن 10 پیکسل و کشیدن مربع‌ها ادامه می‌دهد تا به 90 برسد. بنابراین ما مربع‌هایی با اندازه‌های 50، 60، 70، 80 و 90 خواهیم داشت.
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: سلام، من ژانت هستم، یک مهندس در شرکت زینگا.
      2:
        image: notes/stage15_2.jpg
        text: اگر بخواهیم یک دسته مثلث رسم کنیم که طول آن‌ها دارای اندازه‌های مختلف باشد، چطور؟
      3:
        image: notes/stage15_3.jpg
        text: می‌توانیم همه آن کد را به صورت دستی بنویسیم یا اینکه از یک تابع با پارامترها استفاده کنیم.
      4:
        image: notes/stage15_4.jpg
        text: 'برای این کار، روی ستاره آبی در تعریف تابع "رسم یک مثلث" کلیک کن. سپس "وارد کردن نام" را به داخل بلوک "ورودی" بکش.'
      5:
        image: notes/stage15_5.jpg
        text: 'حالا اگر "طول" را در نقطه "x" بنویسی و "اینتر" را بزنی، یک ورودی طول برای تابع‌ات ایجاد خواهی کرد.'
      6:
        image: notes/stage15_6.jpg
        text: 'سپس روی ستاره کلیک کن. حالا، روی دسته متغیرها کلیک کن و بلوک "طول" را به داخل بلوک "حرکت به جلو" در تعریف تابع خودت بکش. و بلوک شماره قدیمی را از آنجا خارج کن.'
      7:
        image: notes/stage15_7.jpg
        text: 'برای استفاده از تابع‌ات همراه پارامترها، روی دسته توابع کلیک کن و تابع "رسم یک مثلث با طول" را بیرون بکش.'
      8:
        image: notes/stage15_8.jpg
        text: حالا می‌توانی از بلوک ریاضی استفاده کنی تا اعداد مختلفی را وارد کرده و مثلث‌هایی با اندازه‌های مختلف رسم کنی.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: 'تبریک میگم! با حل آخرین پازل, شما کدی نوشتید که می تواند به هر رباتی بگوید که چگونه راهش را در یک  پیچ و خم غیر انشعابی یا یک تونل با هر طولی  پیدا کند, میتواند یک زامبی,  یک پرنده,  یک مریخ نورد, یا حتی یک ماشین بدون راننده باشد.'
      2:
        image: notes/hoc6_2.jpg
        text: 'مفاهیم اولیه ای که استفاده کردید در قلب هر برنامه و یا نرم افزاری که در اینده خواهید نوشت خواهد بود.  ما در مورد "if", "repeat until" , "repeat" و "if else" یاد گرفتیم.'
      3:
        image: notes/hoc6_3.jpg
        text: اگر از اولین یک ساعت کد خوشتان امد, code.org را بازدید کنید تا به تحصیلات خود درعلوم کامپیوتر ادامه دهید! پس از تکمیل دوره 20 ساعته ما, برمبانی برنامه نویسی مسلط خواهید شد, و می توانید شروع کنید به یادگیری نوشتن نرم افزار های تلفن, دستورالعمل های ربات, بازیها، و هر چیزی دیگری که بخواهید.
      4:
        image: notes/hoc6_4.jpg
        text: هر چیزی را که ما انجام می دهیم تکنولوژی تغییر میدهد و مهم نیست که شما جوان باشید یا پیر:‌ برنامه نویسی لذت بخش است، خلاق است، و هر کسی می تواند یاد بگیرد!
    20_wrapup:
      1:
        image: notes/bird.png
        text: به زودی نوتها نشان داده می شود!
