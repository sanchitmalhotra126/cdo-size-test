bg:
  slides:
    maze_intro:
      1:
        image: notes/hoc1_1.jpg
        text: Добре дошли в първия си час по кодиране! Нека да се потопим направо в първото ви предизвикателство.
      2:
        image: notes/hoc1_2.jpg
        text: 'Ние ще  използваме Blockly. Това е визуален език за програмиране, където трябва само да плъзнете и пуснете блоковете за да напишете код.'
      3:
        image: notes/hoc1_3.jpg
        text: 'Кодът се пише, но Blockly е визуален език. Всеки блок, обаче, отговаря на един ред от "истински" код.'
      4:
        image: notes/hoc1_4.jpg
        text: Ще научите основите на компютърните науки, концепции, които се използват навсякъде дори за създаването на приложения за контролиране на марсоходът на Марс.
      5:
        image: notes/hoc1_5.jpg
        text: 'Програмата е набор от инструкции за вашия компютър, които  да следва.'
      6:
        image: notes/hoc1_6.jpg
        text: Целта на вашата първа програма е да посочите на ядосаната птица пътят, по който да достигне и удари зеленото прасе.
      7:
        image: notes/hoc1_7.jpg
        text: От лявата страна е лабиринтът, където се изпълнява вашата програма. Инструкциите за всеки пъзел са под лабиринта.
      8:
        image: notes/hoc1_8.jpg
        text: 'В средата на кутията с инструменти има команди за ядосаната птица. Използвайте ги,  за да изградите вашия код.'
      9:
        image: notes/hoc1_9.jpg
        text: Вдясно е вашата работна област, където ще можете да плъзгате блокове от кутията с инструменти. За да изтриете блок просто го плъзнете в кошчето.
      10:
        image: notes/hoc1_10.jpg
        text: 'Всеки блок е една инструкция. Ако плъзнете "продължи напред" блок във вашата работна област и натиснете "Старт", птицата ще се премести едно квадратче  напред в лабиринта.'
      11:
        image: notes/hoc1_11.jpg
        text: To do more than one action, you can drag many blocks to your workspace and attach them together. The bird will do the commands from top to bottom.
      12:
        image: notes/hoc1_12.jpg
        text: 'Ако стартирате програмата и искате да поправите кода си за да опитате отново, натиснете бутона "Начално състояние".'
      13:
        image: notes/hoc1_13.jpg
        text: Да вървим да хванем тези прасета!
    artist_intro:
      1:
        image: notes/stage5_1.jpg
        text: 'Здравейте аз съм младши! На всеки състезателен екип са му  необходими компютърни учени, за да спечели. Те анализират данни от колата за да може тя да се подобри.'
      2:
        image: notes/stage5_2.jpg
        text: В тези пъзели вие ще бъдете художник, който чертае линия зад себе си, където и да отиде.
      3:
        image: notes/stage5_3.jpg
        text: 'Този блок се казва "премества напред със 100 пиксела." Пикселите са много малки точки на вашия екран.'
      4:
        image: notes/stage5_4.jpg
        text: 'Този блок се казва, "завърта надясно на 90 градуса." Той ще завърти вашия художник във определената посока както "обърни" блоковете при ядосаните птици.'
      5:
        image: notes/stage5_5.jpg
        text: Кликнете върху стрелката в някой от тези блокове, за да промените броя на движенията на художника напред или при въртене. Поиграйте си с блоковете, за да се запознаете с техните възможности.
    farmer_intro:
      1:
        image: notes/stage9_1.jpg
        text: Здравейте аз съм Паола! В тези пъзели Вие сте фермер, който трябва да заравни нивата си за да започне засаждане на семена.
      2:
        image: notes/stage9_2.jpg
        text: Трябва да премахнете всички купчинки и запълните всички дупки.
      3:
        image: notes/stage9_3.jpg
        text: Новите блокове премахват една лопата мръсотия от купчината и запълват с една лопата дупката.
      4:
        image: notes/stage9_4.jpg
        text: Купчинките и дупките са с различни размери, така че вие трябва да кажете на фермера колко лопати да използва.
    flappy_intro:
      1:
        image: бележки/flappy01.jpg
        text: Здравейте аз съм Кейти! Едно от най-вълнуващите неща за компютърните науки е, че една компютърна програма може да бъде интерактивна.
      2:
        image: бележки/flappy02.jpg
        text: 'Ако някой кликне или докосне компютър или телефон, той генерира събитие, и има  код, който решава какво да се направи, когато възникне събитие.'
      3:
        image: бележки/flappy03.jpg
        text: 'Например, може да имаме МАНИПУЛАТОР на събитие, който казва "когато мишката е натисната ще се възпроизведе звук" '
      4:
        image: бележки/flappy04.jpg
        text: Чували ли сте за играта FlappyBird? С помощта на манипулатори на събития, ние ще ви научим да програмирате своя собствена потребителска версия на FlappyBird!
      5:
        image: бележки/flappy05.jpg
        text: Кодът, който вие ще напишете се състои от блокове, които представляват команди за компютъра. Зад всеки от тези блокове стои реален код.
      6:
        image: бележки/flappy06.jpg
        text: 'Ако погледнете в работната област, ще видите зелени блокове, които сме попълнили за вас - това са "манипулатори" '
      7:
        image: бележки/flappy07.jpg
        text: 'Ако искате птицата да пляска с крила при щракане с мишката, трябва да поставите блокът "пляскане с крила" при манипулатора на събитие, и сега в играта си всеки път, когато щракнете с мишката, птица ще пляска с криле.'
      8:
        image: бележки/flappy08.jpg
        text: При всеки пъзел от тази дейност, ние ще въвеждаме нови типове събития под формата на зелени блокове в работната област, а вие ще решавате как да ги ползвате.
      9:
        image: бележки/flappy09.jpg
        text: 'Когато видиш стрелка за падащо меню като тази, това означава, че можеш да промениш настройките - примерно какъв звук да се възпроизведе когато flappy удари земята.'
      10:
        image: бележки/flappy10.jpg
        text: Във финалния пъзел ще успееш да създадеш своя собствена игра и да я споделиш със своите приятели. Забавлявай се!
    loop_times:
      1:
        image: notes/hoc2_1.jpg
        text: Здравейте аз съм Марк! Нека да обясня какво представляват командите за повторения. Тези команди казват на компютъра да повтаря отново и отново набор от действия, хиляди или дори милиони пъти.
      2:
        image: notes/hoc2_2.jpg
        text: В този пъзел ние трябва да накараме птицата да се придвижи напред с 5 квадратчета, за да стигне до прасето.
      3:
        image: notes/hoc2_3.jpg
        text: Можем да използваме новите блокове за повторение за да си помогнем.
      4:
        image: notes/hoc2_4.jpg
        text: 'Вместо да плъзгаме 5 "върви напред" блокове...'
      5:
        image: notes/hoc2_5.jpg
        text: 'Ние ще поставим "върви напред" блока вътре в блока  за повторение и ще напишем число, за да кажем колко пъти да се повтори действието.'
      6:
        image: notes/hoc2_6.jpg
        text: 'това е важно: можете да поставите повече от една команда в блока за повторене.'
      7:
        image: notes/hoc2_7.jpg
        text: Насладете се на използването на вашия нов блок за повторение!
    loop_until:
      1:
        image: notes/hoc3_1.jpg
        text: 'Здравейте аз съм Крис. Преди да постъпя в Маями Хийт, бях в Джорджия Tech за да уча компютърни науки. Нека опитаме нашия нов " повтаряй докато" блок.'
      2:
        image: notes/hoc3_2.jpg
        text: Какво става, ако ние не знаем колко далеч птицата трябва да се премести за да стигне до прасето?
      3:
        image: notes/hoc3_3.jpg
        text: 'Ако сложим "предвижи се напред" блок вътре в блока, "повтаряй докато", птицата ще продължи напред, докато достигне прасето (или ще се блъсне в стената).'
      4:
        image: notes/hoc3_4.jpg
        text: 'И това е важно: както преди, можем да сложим няколко блока вътре в блока, "повтори докато", и всички те ще бъдат повтаряни.'
    if:
      1:
        image: notes/hoc4_1.jpg
        text: 'Здравейте аз съм Бил! Нека да научим нова основна концепция: "Ако". С нея ние учим компютрите да вземат решения.'
      2:
        image: notes/hoc4_2.jpg
        text: 'Вие използвате "ако" концепцията всеки ден. Преди да отидете навън всяка сутрин, вие си казвате, ако навън вали, трябва да си взема яке.'
      3:
        image: notes/hoc4_3.jpg
        text: Ние можем да кажем на зомбито да провери дали има път наляво, и ако то открие път, да се придвижи в тази посока.
      4:
        image: notes/hoc4_4.jpg
        text: 'За да напишем код за това, нека да поставим "Ако" блок и в него да вмъкнем "Завий наляво".'
      5:
        image: notes/hoc4_5.jpg
        text: 'Сега ако сложим "върви напред" блок над него и блок за повторение около всичко, всеки път, когато зомбито се движи, то ще проверява дали има път наляво. Командата за повторение е от решаващо значение, за да проверите за завой на всяка стъпка.'
      6:
        image: notes/hoc4_6.jpg
        text: '"Ако" твърденията са много важни за компютърните науки. Една от първите програми, която съм написал е игра на кръстчета и нули, и съдържаше "ако" твърдение: ако другият човек е на път да победи, компютърът трябва да блокира мястото, което му позволило да спечели.'
      7:
        image: notes/hoc4_7.jpg
        text: 'Забавлявайте се с помощта на "Ако" блока!'
    if_else:
      1:
        image: notes/hoc5_1.jpg
        text: |-
          Hi, my name is Saloni. I use computer science to help solve problems in health and medicine. Let's learn about the "if else" block. It looks like the "if" block, but it has an extra part at the end that says "else".
      2:
        image: notes/hoc5_2.jpg
        text: |-
          If I put a "move forward" block in the spot where it says "do" and a "turn left" block where it says "else" that means that the zombie will choose between 2 options. IF there is a path ahead, the zombie will move forward, and OTHERWISE (there isn't a path ahead), the zombie will turn left.
      3:
        image: notes/hoc5_3.jpg
        text: |-
          Just like the "if" block, we can put "if else" blocks inside a "repeat" blocks so that the zombie keeps moving and the "if else" block will keep checking if there's somewhere to turn.
      4:
        image: notes/hoc5_4.jpg
        text: Now, get those zombies where they belong!
    if_else_scrat:
      1:
        image: notes/saloni_ifelse_scrat1.jpg
        text: "An if-else statement is a decision between two things. Let's see how we can use an if-else statement with our buddy Scrat the squirrel."
      2:
        image: notes/saloni_ifelse_scrat2.jpg
        text: |-
          This block looks the same as the "if" block, but there's an extra part at the bottom that says "else". If I put a "move forward" block where it says "do" and a "turn left" block where it says "else", that means Scrat the squirrel will move forward if there's a path ahead. If there's not a path ahead, Scrat will turn left.
      3:
        image: notes/saloni_ifelse_scrat3.jpg
        text: |-
          It's making a decision and doing one of the two actions based on that decision. And just like "if" blocks, you can put "if-else" blocks inside "repeat" blocks.
      4:
        image: notes/saloni_ifelse_scrat4.jpg
        text: "Now let's help Scrat the squirrel get that acorn!"
    function:
      1:
        image: notes/stage13_1.jpg
        text: Здравейте аз съм Брина, инженер от Instagram. Функция е няколко реда с код, които искаме да използваме отново и отново, така че вместо да повтаряме изписването на кода, ние използваме само един блок.
      2:
        image: notes/stage13_2.jpg
        text: Ще научите как да дефинирате функции. Дефинициите имат звезда в ъгъла на блока си. Името на функцията е написано на най-горния ред.
      3:
        image: notes/stage13_3.jpg
        text: 'Блоковете, които влизат вътре в дефиницията ни казват какво прави тя. Дефиницията, която ще използваме се нарича "запълни 5" и тя се състои от блок за повторение и блок за запълване.'
      4:
        image: notes/stage13_4.jpg
        text: 'Дефиницията се намира на работната област, но нашият фермер няма да изпълни функцията, докато ние не поставим блок за функция "запълва 5" от категорията функции.'
      5:
        image: notes/stage13_5.jpg
        text: 'Нека върнем "fun" обратно във "FUNкцията!" '
    loop_while:
      1:
        image: notes/stage9_5.jpg
        text: 'Здравейте аз съм Макинде! Нека да научим за "докато" блока.'
      2:
        image: notes/stage9_6.jpg
        text: '"Докато блокът" ще повтаря действие, докато се отчете, че действието е извършено.'
      3:
        image: notes/stage9_7.jpg
        text: Например ако фермерът е стъпил върху купчина, той ще продължи да я премахва с по 1 лопата, докато все още има купчина под него.
    loop_for:
      1:
        image: notes/stage11_1.jpg
        text: Здравейте аз съм Трина, и работя за Pixar. Работила съм в няколко филми, включително и в Шрек.
      2:
        image: notes/stage11_2.jpg
        text: 'Това е нашият нов "брояч" за цикли. Той ще извършва действия отново и отново, а вие можете да направите така, че действията да се променят леко всеки път.'
      3:
        image: notes/stage11_3.jpg
        text: 'В този пример, нашият "брояч" на цикли  казва "ще броя с брояч от 50 до 90  през 10" и вътре в него, ние имаме нашият "начертай квадрат" блок. Плъзнете блока "брояч" от раздела "Променливи" в мястото за "дължина".'
      4:
        image: notes/stage11_4.jpg
        text: Това означава, че художникът ще начертае квадрат, който има 50 пиксела дължина на страните, тогава той ще добави 10, и ще начертае квадрат с дължина на страните 60 пиксела. Тогава ще продължи докато начертае квадрат със страни 90. Така ще имаме квадрати със страни 50, 60, 70, 80 и 90 пиксела.
    parameters:
      1:
        image: notes/stage15_1.jpg
        text: Здравейте аз съм Джанет и съм инженер в Zynga.
      2:
        image: notes/stage15_2.jpg
        text: 'Как ще начертаете куп триъгълници  със различни размери на страните им?'
      3:
        image: notes/stage15_3.jpg
        text: Можем да напишем целия този код на ръка или можем да използваме функция с параметри.
      4:
        image: notes/stage15_4.jpg
        text: 'За да добавите параметър на функцията, щракнете върху синята звезда. След това плъзнете "въведете име" във "вмъкни" блока.'
      5:
        image: notes/stage15_5.jpg
        text: 'Тогава, ако  напишете "дължина" на мястото на "х" и натиснете "Enter", вие ще създадете нов параметър "дължина" за вашата функция.'
      6:
        image: notes/stage15_6.jpg
        text: 'След това кликнете върху звездата. Сега кликнете върху категорията "променливи" и плъзнете блок "дължина" в "премества напред" блок във вашата дефиниция на функция. Плъзнете стария блок за номер от външната страна.'
      7:
        image: notes/stage15_7.jpg
        text: 'За да използвате вашата функция с параметри, щракнете върху категорията функции и изберете "Начертай триъгълник с дължина" функция.'
      8:
        image: notes/stage15_8.jpg
        text: Сега можете да използвате математически блок за да въведете различни числа и да начертаете триъгълници с различни размери.
    hoc_wrapup:
      1:
        image: notes/hoc6_1.jpg
        text: Поздравления! С последната загадка, която разгадахте, вие просто написахте код, който може да каже на всеки робот как да си придвижи, без да се губи в лабиринта или тунела. Това можете да повторите и със зомбито, птицата, марсохода или дори самоуправляващ се автомобил.
      2:
        image: notes/hoc6_2.jpg
        text: 'Основните понятия, които използвахте са в основата на всяка програма или приложение, които сте ползвали. Изучихме циклите на "повтори няколко пъти" и "повторение, докато" и  командите "ако" и "ако / иначе".'
      3:
        image: notes/hoc6_3.jpg
        text: 'Ако ви харесва  първия час на кодиране, посетете code.org за да продължите образованието си в компютърните науки! След като завършите нашият 20 часов курс, вие ще сте усвоили основите на програмирането и може да се научите как да създавате програми за телефони, инструкции за роботи, игри, и др.'
      4:
        image: notes/hoc6_4.jpg
        text: 'Технологията променя всичко, което правим и няма значение, ако сте млад или стар: програмирането е забавно, това е творчество  и всеки може да се научи!'
    20_wrapup:
      1:
        image: notes/bird.png
        text: Очаквайте скоро показването на бележки!
    frozen_intro:
      1:
        image: notes/frozen1_1.jpg
        text: "Hi, my name is Lyndsey. I model, act, and write my own apps. Let's use code to join Anna and Elsa as they explore the magic and beauty of ice."
      2:
        image: notes/frozen1_2.jpg
        text: "You'll create snowflakes and patterns as you ice skate and make a winter wonderland that you can then share with your friends."
      3:
        image: notes/frozen1_3.jpg
        text: "In the next hour, you're going to learn the basics of how to code. Traditional programming is usually in text, but we'll use Blockly, which uses visual blocks that you can drag and drop to write programs. This is how even university students learn the basics. Under the hood, you're still creating code."
      4:
        image: notes/frozen1_4.jpg
        text: "A program is a set of instructions that tells a computer what to do. Let's build a code, or a program, that will help Elsa create a simple line. We will use this later to create more complex patterns."
      5:
        image: notes/frozen1_5.jpg
        text: "Your screen is split into three main parts. On the left, is the ice surface where you'll run your program. The instructions for each level are written right below the surface."
      6:
        image: notes/frozen1_6.jpg
        text: This middle area is the toolbox, and each of these blocks is an action that Elsa and Anna can do.
      7:
        image: notes/frozen1_7.jpg
        text: |-
          The white space on the right is called the workspace, and this is where we'll build our program. To move around the ice surface, you'll use the "Move Forward" block.
      8:
        image: notes/frozen1_8.jpg
        text: 'Here, the "Move Forward" block says, "move forward by 100 pixels." When we press "Run", what happens? Elsa moves forward a certain amount on the screen, 100 pixels in fact! Pixels are basically very tiny squares on your computer screen.'
      9:
        image: notes/frozen1_9.jpg
        text: 'The other block we have in this puzzle says "turn right by 90 degrees." And when we use this "Turn Right" block, that makes Elsa turn a certain amount. You can play around with how far you want Elsa to turn. The angle is measured from the path ahead of Elsa. So, this is a 90 degree turn. And this is a 120 degree turn.'
      10:
        image: notes/frozen1_10.jpg
        text: Remember, you can change the number of pixels and degrees by clicking the arrows next to them.
    frozen_loops:
      1:
        image: notes/frozen2_1.jpg
        text: "Hi, I’m Paola! Computers are really good at repeating actions. You can count to 10, 20, or 100. But a computer can count to a billion or a trillion. It won't get bored and it will only take a few seconds. Whether it's counting, or drawing, or anything--computers can repeat things hundreds or even billions of times."
      2:
        image: notes/frozen2_2.jpg
        text: 'In programming, we call this a loop. A loop is how you repeat your code over and over again. For the next puzzle, your goal is to help Anna create a square with the "Repeat" block.'
      3:
        image: notes/frozen2_3.jpg
        text: 'Any blocks of code you put inside the "Repeat" block will be repeated in sequence, as many times as you want.'
      4:
        image: notes/frozen2_4.jpg
        text: 'To draw a square, you can use the "Move Forward" and "Turn Right" block 4 times. But the easier way is to tell the computer to "Move Forward" and "Turn Right by 90 degrees" once, and then tell it to repeat this pair of actions 4 times. To do that, you need to put the "Move Forward" and "Turn Right" block inside a "Repeat" block.'
      5:
        image: notes/frozen2_5.jpg
        text: |-
          Remember, you can change the number in the "Repeat" block to anything, and it will repeat what's inside the block that many times.
    frozen_functions:
      1:
        image: notes/frozen3_1.jpg
        text: Hi, I’m Chris Bosh. I’m a professional basketball player, and I coded in college.
      2:
        image: notes/frozen3_2.jpg
        text: One of the most important concepts in computer science is how to define new commands. Most computer languages have only about 100 words or commands. And really, the art and magic is in defining your own new words out of these building blocks.
      3:
        image: notes/frozen3_3.jpg
        text: "Once you've taught a computer how to do an action once using this sequence of commands, you can make up your own name for that action so it's easy to repeat it later. When you define your own command and give it a name, that's called a function."
      4:
        image: notes/frozen3_4.jpg
        text: "Hi, I’m Jess. When programming with blocks, you would use functions if there are a set of actions you would like to use lots of times. For example, you've written code to create a square."
      5:
        image: notes/frozen3_5.jpg
        text: 'You can define this as a function called "create a square." '
      6:
        image: notes/frozen3_6.jpg
        text: Now you have a new block that you can use multiple times to create multiple squares.
      7:
        image: notes/frozen3_7.jpg
        text: A lot of simple shapes can be used to create more complex patterns. In the next puzzle, the code you recently wrote to make a circle is available to you as a new function that can make circles of different sizes. Can you use it to help Elsa create intricate and beautiful patterns in the snow?
    C3_playlab_create_game:
      1:
        image: notes/playlab_1.png
        text: "So far you've been making an animation or a story that does the exact same thing every time you run it. Now you can make an interactive game that you can actually play."
      2:
        image: notes/playlab_2.png
        text: |-
          There's the "when arrow" block and the "move actor" block. You can put these blocks together to move the actors around with the arrow keys.
      3:
        image: notes/playlab_3.png
        text: And there are some blocks that do stuff when actors collide or are clicked. Check them out and have fun!
