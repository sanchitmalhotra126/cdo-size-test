"lv":
  data:
    script:
      name:
        20-hour:
          desc: "8. klašu ievads datorzinātņu kursā"
          Unplug1: "Līmenis 1"
          Maze: "Līmenis 2"
          Unplug2: "Līmenis 3"
          Unplug3: "Līmenis 4"
          Artist: "Līmenis 5"
          Unplug4: "Līmenis 6"
          Artist2: "Līmenis 7"
          Unplug5: "Līmenis 8"
          Farmer: "Līmenis 9"
          Unplug6: "Līmenis 10"
          Artist3: "Līmenis 11"
          Unplug7: "Līmenis 12"
          Farmer2: "Līmenis 13"
          Unplug8: "Līmenis 14"
          Artist4: "Līmenis 15"
          Unplug9: "Līmenis 16"
          Farmer3: "Līmenis 17"
          Unplug10: "Līmenis 18"
          Artist5: "Līmenis 19"
          Unplug11: "Līmenis 20"
        Hour of Code:
          desc: "Programmēšanas stunda"
          Maze: "Līmenis 1"
        Edit Code:
          desc: "Labot kodu (beta)"
          MazeEC: "Līmenis 1"
        2014 Levels:
          desc: "Atlekt (beta)"
          Bounce: "Līmenis 1"
        Builder Levels:
          desc: "Lietotāju izveidotas puzles (beta)"
          Custom: "Līmenis 1"
        Flappy Levels:
          desc: "Flappy putns"
          Flappy: "Līmenis 1"
        Jigsaw Levels:
          desc: "Atjautības puzle (beta)"
          Jigsaw: "Līmenis 1"
        Step Levels:
          desc: "Labirints (beta)"
          MazeStep: "Posma solis"
        edit-code:
          desc: "Labot kodu (beta)"
          MazeEC: "Līmenis 1"
          Webapp: "Līmenis 2"
          ArtistEC: "Līmenis 3"
        events:
          desc: "Atlekt (beta)"
          Bounce: "Līmenis 1"
          Studio: "Līmenis 2"
        builder:
          desc: "Lietotāju izveidotas puzles (beta)"
          Custom: "Līmenis 1"
        flappy:
          desc: "Flappy putns"
          Flappy: "Līmenis 1"
        jigsaw:
          desc: "Atjautības puzle (beta)"
          Jigsaw: "Līmenis 1"
        step:
          desc: "Labirints (beta)"
          MazeStep: "Posma solis"
        wordsearch:
          desc: "Burtošanas spēle (beta)"
          WordSearch: "Līmenis 1"
    game:
      name:
        Unplug1: "Ievads datorzinātnēs"
        Maze: "Labirints"
        Multi: "Atbilžu varianti"
        Unplug2: "Algoritmiska domāšana"
        Unplug3: "Rūtiņpapīra programmēšana"
        Artist: "Mākslinieks"
        Unplug4: "Algoritmi"
        Artist2: "Mākslinieks 2"
        Unplug5: "Funkcijas"
        Farmer: "Fermeris"
        Unplug6: "Kondicionālis"
        Artist3: "Mākslinieks 3"
        Unplug7: "Dziesmas rakstīšana"
        Farmer2: "Fermeris 2"
        Unplug8: "Abstrakcija"
        Artist4: "Mākslinieks 4"
        Unplug9: "Releju programmēšana"
        Farmer3: "Fermeris 3"
        Unplug10: "Internets"
        Artist5: "Mākslinieks 5"
        Unplug11: "Ietīt"
        MazeEC: "Labirints"
        Bounce: "Atlekt"
        Flappy: "Flappy putns"
        Jigsaw: "Puzle"
        MazeStep: "Labirinta soļa režīms"
        Wordsearch: "Vārdu meklēšana"
        Webapp: "Web lietotne"
        ArtistEC: "Mākslinieks"
        TextMatch: "Teksta atbilstība"
    trophy:
      name:
        Bronze: "Bronzas"
        Silver: "Sudraba"
        Gold: "Zelta"
    concept:
      description:
        sequence: "Secība"
        if: "Ja bloks"
        if_else: "Ja-tad bloks"
        loop_times: "Atkārtot reizes bloks"
        loop_until: "Atkārtot kamēr bloks"
        loop_while: "Kamēr bloks"
        loop_for: "Skaitītāja bloks"
        function: "Funkcijas"
        parameters: "Funkcijas ar parametriem"
    level:
      instructions:
        maze_2_2: 'Vai vari man palīdzēt notvert nerātno cūku? Saliec vairākus "kustēties uz priekšu" blokus kopā un spied "Skriet" lai palīdzēt man tur nonākt. '
        maze_2_1: "Šī cūka ir man traucē. Palīdzi man to atrast!"
        maze_2_2_5: "Izseko ceļu un aizved mani līdz muļķīgajai cūkai. Izvairies no Dinamīta, savādāk spalvas lidos!"
        maze_2_3: "Aizved mani līdz zaļajam ļaunumam! (Izvairies no Dinamīta)"
        maze_2_4: "Saglabā mieru un palīdzi man atrast ļauno cūku. Savādāk es varu sadusmoties!"
        maze_2_5: "Eksistē veids kā es varu nonākt līdz cūkai, izmantojot tikai 2 blokus. Vai tu vari to izdomāt?"
        maze_2_6: "Mēģini nogādāt mani līdz traucētājam, izmantojot tikai trīs blokus."
        maze_2_7: 'Palīdzi man izdzīt ļauno cūciņu, izmantojot pēc iespējas mazāku bloku daudzumu. Mēģini izmantot vairāk par vienu "Atkārtot reizes" bloku.'
        maze_2_8: 'Kad bloks ir pelēks, tas nozīmē, ka tu nevari to izdzēst. Atrisini puzli, izmantojot "atkārtot" bloku, kas atkārtojas 3 reizes. Mēģini izvietot šos 3 blokus iekšā pelēkajiem "atkārtot" blokiem: pārvietoties, pārvietoties, pagriesties.'
        maze_2_9: 'Tagad pamēģini jauno "atkārtot kamēr" bloku - tas atkārtosies tikmēr, kamēr es sasniegšu kaitinošo cūku.'
        maze_2_10: 'Pēdēja prakses reize - vai vari atrisināt, izmantojot tikai 4 blokus?'
        maze_2_11: "Dārgais cilvēks. Es zombijs. Es izsalcis. Vajag... tikg... līdz saulespuķei... Vari mani tu nogādāt, izmantojot tikai 5 blokus?"
        maze_2_12: "Šeit ir ļoti līdzīgi, bet nedaudz savādāk Vai vari atrisināt, izmantojot tikai 5 blokus?"
        maze_2_13: 'Izmanto jauno "Ja" bloku, lai ļautu man izlemt kad pagriezties. Padoms: tev jāizmanto tikai vēl viens bloks, bet iemācies kā to uzstādīt pašam nākamajā reizē.'
        maze_2_14: 'Šī ir gluži kā ieprēkšējā mīkla, taču tev ir jāatceras kā tu izmantoji "Ja" bloku un "atkārtot" bloku kopā.'
        maze_2_15: 'Es gribēt saulespuķi! Izmanto "Ja" bloku, lai nogādāt mani tur ar pēc iespējas mazāku bloku skaitu.'
        maze_2_16: "Labi, izdarīsim to vēlreiz. Šis nav pārāk atšķirībi, bet uzmanies no Čomperiem!"
        maze_2_17: '"Ja-tad" bloks pārbauda nosacījumu un tad izpilda vienu vai otru darbību. Lai nogādātu mani līdz saulespuķei, mēģini izmantot šo jauno bloku.'
        maze_2_18: 'One more practice of the "if-else" block, can you get it right on your first try?'
        maze_2_19: "Can you add just 3 blocks to help me solve a more complex maze? If you do it right, I can walk any curvy path no matter the length."
        turtle_1_1: "Hi, I'm an artist. You can write code to make me draw almost anything. Use a few blocks to make me draw over the grey lines in the picture."
        turtle_1_2: 'Now, draw a square. NOTE: use your favorite color by picking it in the new "set color" block.'
        turtle_1_3: "Make a square using only 3 blocks."
        turtle_1_4: |-
          Draw a triangle whose sides are all in different colors, using the "random color" option that picks a different color each time. Hint: you'll have to figure out how far to turn by clicking on the number in the turn block.
        turtle_1_5: "Now, for practice, draw a triangle and then a square to draw an envelope."
        turtle_1_6: 'Can you figure out how draw this triangle and square? Hint: Do the triangle first, then figure out how much to turn before drawing the square.'
        turtle_1_7: "Ok, let's make it a bit harder - see if you can draw these green glasses. The squares are 100 pixels on each side, and they're 50 pixels apart. Don't forget to draw in green!"
        turtle_1_8: 'Ok, try to figure out what happens if you run this code (or press "Run" to try it). Then, repeat it enough times to complete the drawing. The colors will be different every time.'
        turtle_1_9: "Can you figure out what number to replace the question marks with to draw a circle?"
        turtle_1_10: 'You made it! Now, draw anything you want. Some fun ideas: a stick figure, snowflake, or spiral. Also try the new "set width" block. Have fun!'
        turtle_4_1: 'Can you draw a triangle (with edges of 100 pixels) with only 3 blocks? Hint: use a "repeat" block.'
        turtle_4_2: 'Add a "turn right by 90 degrees" block somewhere in the middle of the program already out on the workspace to draw these triangles.'
        turtle_4_3: 'Šis ir kods, ko tu uzrakstīji, lai uzzīmētu vienu trijstūril. Vai vari pievienot "atkārtot" un "pagriezt" blokus lai izveidotu skaistu puķi?'
        turtle_4_4: 'Šis ir kods no iepriekšējās mīklas, bet pagriežot tikai 36 grādus pēc katra trijstūra uzzīmēšanas. Cik reizes ir jāatkārto šī darbība? (Padoms: pēc 360 grādu griešanas, zīmējums izveidos pilnu apli)'
        turtle_4_5: 'Šis ir kods no iepriekšējās mīklas, atkārtojot pagriezienus 36 reizes. Cik grādu lenķim vajadzētu būt katrā pagriezienā? (Padoms: pēc 360 grādu pagriešanas, zīmējums izveidos pilnu apli)'
        turtle_4_6: "Vai tu vari uzzīmēt kvadrātu ar malu garumu 20 pikseļi, izmantojot tikai 3 blokus?"
        turtle_4_7: 'Šis ir kods, lai uzzīmētu kvadrātu no iepriekšējās mīklas. Vai tu vari atkārtot to, lai uzzīmētu 10 blakus esošus kvadrātus kā pakāpienus? Padoms: Tev vajag izmantot tikai papildus 2 blokus.'
        turtle_4_8: "Šis ir risinājums iepriekšējai mīklai. Vai vari pievienot klāt vēl tikai 2 blokus, lai pabeigtu zīmējumu?"
        turtle_4_9: "Šis ir risinājums iepriekšējai mīklai. Cik grādu leņķa pagriezienu jāizmanto, lai pabeigtu zīmējumu? (Iespējams vajadzēs minēt dažas reizes)"
        turtle_4_10: "Šis ir risinājums iepriekšējai mīklai. Cik daudz reizes nepieciešams atkārtot šo darbību, lai pabeigtu zīmējumu?"
        turtle_4_11: 'Mēģini izmainīt skaitļus "pagrieziens" un "atkārtot" blokos, lai veidot citus zīmējumus. Vai arī izmēģini mainīt citas koda daļas, lai zīmēt ko vien vēlies.'
        maze_karel_1_1: 'Sveiks, esmu fermeris. Man vajadzīga tava palīdzība, lai nolīdzinātu lauku manā fermā un tas būtu gatavs stādīšanai. Pārvieto mani līdz dubļu kaudzei un izmanto "izdzēst" bloku, lai to izņemt.'
        maze_karel_1_2: 'Tālāk, pārvieto mani pie cauruma un piepildi to ar divām lāpstām dubļu, izmantojot "aizpildīt" bloku.'
        maze_karel_1_3: "Pārvieto mani pie dubļu kaudzes un pasaki man cik daudz lāpstas vajag izņemt izmantojot pēc iespējas mazāk bloku."
        maze_karel_1_4: 'Vai vari palīdzēt izņemt visas četras kaudzes dubļu? Padoms: izmanto "atkārtot" bloku ja vari.'
        maze_karel_1_5: 'Palīdzi man aizpildīt visas bedres ar 5 lāpstām zemes. Padoms: tu vari ielikt "atkārtot" bloku iekšā "kamēr" blokā.'
        maze_karel_1_6: 'Izņem visas zemes kaudzes, izmantojot pēc iespējas mazāk bloku. Jaunās iespējas nolaižamajā izvēlnē "kamēr" blokā pateiks man priekšā vai es stāvu uz kaudzes vai bedres.'
        maze_karel_1_7: "Vau, es atradu riktīgi dziļu bedri! Es nezinu cik lāpstas zemes tai nepieciešams. Vai vari uzrakstīt programmu, kas aizpilda to, kamēr zeme ir līdzena?"
        maze_karel_1_8: "Palīdzi man aizpildīt bedri lauka galā, izmantojot pēc iespējas mazāk blokus."
        maze_karel_1_9: 'Liec man izņemt visas šīs zemes kaudzes. Mēģini izmantot pēc iespējams mazāk blokus. Padoms: mēģini izmantot "kamēr" bloku.'
        maze_karel_1_10: 'Es strādāju vēlu, tāpēc te ir tumšs un es nespēju pateikt, cik lielas ir kaudzes. Tagad man vairs nav visas iespējas, kādas bija iepriekš, "kamēr" blokam. Pārvieto mani pa lauku un, ja tur ir kaudze, noņem to.'
        maze_karel_1_11: 'Vēljoprojām ir tumšs. Pārvieto mani pa lauku. Ja sastopies ar kaudzi, noņem to un ja tā ir bedre - piepildi to. Padoms: izmanto nolaižamo izvēlnes opciju "Ja" blokā.'
        turtle_2_1: 'Sveiks. Es zombij artists. Es mīlēt zīmēšanu! Paīdzi man uzzīmēt kvadrātu īpašā krāsā. Piezīme: Tev ir visi tie paši bloki, bet tagad tie ir sagrupēti kategorijās.'
        turtle_2_2: 'Esi sveicināts funkciju lietošanā, kas tev ļaus definēt jaunus blokus! Izmēģini jaunu "zīmēt kvadrātu" bloku, kas ir atrodams "Funkcijas" kategorijā, lai uzzīmētu mazu 50x50 zaļu kvadrātu.'
        turtle_2_3: 'Use the "repeat" block (in the "Loops" category) to draw 3 squares of size 100, each 120 degrees apart. And do it in 3 different, random colors.'
        turtle_2_4: "Now we're going to get fancy. Change the code to draw 36 squares, 100 pixels wide, and each 10 degrees apart. Hint: you may want to use the slider to make me go faster."
        turtle_2_5: |-
          Draw squares with sides of 50, 60, 70, 80, and 90 pixels.  You'll need to use the "draw a square" function five times.
        turtle_2_6: |-
          Ok, this program will use a counter, to draw the same squares as last time. You want the square to be the same size as the counter, so use the "counter" block. Hint: It's in the Variables category.
        turtle_2_7: |-
          Here's a program to draw a spiral, but the blocks are disabled so they won't run. Make a new program using a "count with" block (in the Loops category) and "counter" block (in the Variables category) to draw the same spiral.
        turtle_2_7_5: |-
          There's a new "draw a snowman" function (in the Functions category). Draw two snowmen, of height 250 and 100.
        turtle_2_8: |-
          This one's a bit tricky. Use the "draw a snowman" function and the new "jump forward" block (in the Actions category). Draw 3 snowmen in different colors, 100 pixels apart.
        turtle_2_9: 'Use a "count with" loop to draw a family of snowmen with heights of 110, 100, 90, 80, and 70. The snowmen should all be 60 pixels apart.'
        turtle_2_10: "Here's some code to try experimenting with different spirals.  What happens if you change the turn amount? Or set a random color in the loop?  Draw anything you like."
        maze_karel_2_1: 'Try using the blocks to help me remove all the piles and fill in all the holes on the ground. Try to use loops instead of using too many blocks. Hint: you can put a loop inside another loop.'
        maze_karel_2_2: |-
          We've defined our own block called "fill 5", which is now in the Functions category. Use it to help me fill in this hole.
        maze_karel_2_3: |-
          Use the new "fill 5" function block to make me fill in all the holes. You'll have to drag out the "fill 5" block out from the Functions category.
        maze_karel_2_4: "Define a new function that removes 7 shovelfuls. Then use it to write a program that helps me remove all the piles."
        maze_karel_2_5: "Create a new function that removes 6 shovelfuls from a pile, and use it to help me level out all the piles."
        maze_karel_2_6: 'Use two new functions, "fill 8" and "remove 8", to help me level out the pile and fill in the hole.'
        maze_karel_2_7: "There's a cow in my field! Write a new function that helps me avoid the cow and remove the pile. Put all your blocks inside the new function."
        maze_karel_2_8: 'Use this new function, "avoid the cow and remove 1", to help me remove all the piles.'
        maze_karel_2_9: "Ok, here's a function that removes 4 different piles of dirt in a vertical column. Try putting this function inside a loop, so that you remove all the piles of dirt using only a few new blocks."
        maze_karel_2_10: "Move me across the field, and use these two functions to help me remove all the piles and fill all the holes."
        turtle_3_1: |-
          This puzzle shows you how the "draw a square" and "draw a circle" functions are defined.  Defining a function doesn't run its blocks.  You have to pull out the "draw a square" block to actually draw a square.
        turtle_3_2: 'Using the "draw a square" function as an example, create a "draw a triangle" function and use it.'
        turtle_3_3: 'Draw triangular fences around the cats and a square fence around the cow.  Tip: test the program as you go along.'
        turtle_3_4: 'See if you can figure out how to use "draw a square" and "draw a triangle" (and some other blocks) to draw a house around the lion.'
        turtle_3_5: 'Now create a new "draw a house" function and use it to house two cats. Hint: create a new function using the "do something" block, and type your own text to name the block.'
        turtle_3_6: 'Using "draw a square" as an example, add an input named "length" to "draw a triangle". Then, draw triangles in different sizes. (Hint: click the star to add an input to a function)'
        turtle_3_7: 'Add an input named "length" to "draw a house" and build a big house for the elephant (with edges 150 pixels long)'
        turtle_3_8: 'Here are all of the blocks from the previous puzzle.  Modify "draw a house" so I end up at the bottom right corner after drawing a new house. Use this modified function to draw three houses.'
        turtle_3_9: 'Can you re-create the "draw a house" function without help? Try it, and then draw a row of houses.'
        turtle_3_10: "You've learned a lot! Now use it to draw whatever you want. Try to draw a star, or a spiral, or a fancy snowflake."
        maze_karel_debug_seq_1: "Welcome to debugging! My code doesn't work right. Can you spot the problem and fix it so that I can get my field flat and ready for planting?"
        maze_karel_debug_seq_2: "What's wrong with this program? How should you fix it so I can remove that pile?"
        maze_karel_debug_repeat: "De-bug this program for me so my field will be nice and flat."
        maze_karel_debug_while: "How should you change this program to help me fill the hole?"
        maze_karel_debug_if: "Help! Fix the program so my field will be completely flat."
        maze_karel_debug_if_else: "De-bug this program so I can fill in the holes and remove all the piles."
        maze_karel_debug_function_1: "What should you change about this program to help me remove all the piles?"
        maze_karel_debug_function_2: "Can you de-bug this program for me so I can make my field flat?"
        maze_karel_debug_function_3: "Edit this program so I'll remove all the piles on my field. "
        turtle_5_1: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        turtle_5_2: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        turtle_5_3: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        turtle_5_4: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        turtle_5_5: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        turtle_5_6: "Try running this program, and make changes to see what happens. Can you figure out how it works? (Or delete it and replace it with something totally different)"
        maze_3_1: "I need to get to that pig! Type in a couple of calls to move(); so I can get my eggs back."
        maze_3_2: "Write me a program, so I can make it all the way to the pig."
        maze_3_3: "How should I get to the pig? Make sure I don't run into the box of TNT!"
        maze_3_4: "Argh! Write me a program that gets me around the TNT and to the pig."
        bounce_1: 'Attach a block to the "when left arrow" block and press "Run". Move the paddle using the left arrow to reach the finish target.'
        bounce_2: 'Attach a block to the "when right arrow" and "when left arrow" blocks. Move the paddle to reach both finish targets.'
        bounce_3: 'Now try something similar with the "when up arrow" block. Move the paddle to the finish target at the top.'
        bounce_4: "This time you need to add four blocks. Move the paddle to all four finish targets to complete this puzzle."
        bounce_5: |-
          We're going to send a ball flying down towards the paddle. Attach a block to the "when ball hits paddle" block to ensure the ball reaches the finish target.
        bounce_6: 'Now the finish target is on the top. You need to attach blocks to both of the "when ball hits" blocks to solve this puzzle.'
        bounce_7: 'Attach blocks to each of the "when" blocks. Bounce the ball until it hits the finish target.'
        bounce_10: 'There is a now a goal at the top. Attach the "score point" and "score opponent point" blocks to the "when ball in goal" and "when ball misses paddle" blocks to make a game. See how many points you can score before your opponent scores twice.'
        bounce_11: 'You can now attach blocks to the "when run" block. You have to attach the new "launch new ball" block in more than one place. Also, try changing the scene or the speed of the paddle and the ball and see how many points you can score before your opponent scores twice.'
        bounce_12: "Create your own Bounce game. You can change all the visuals and the rules. When you're done, click Finish to let friends try your game on their phones."
        Custom_builder: 'Drag blocks from the toolbox to the workspace to draw the level you wish to create. Press "Run" when you are ready.'
        flappy_1: 'Attach a block to the "when click" block, then press "Run". Click or tap the screen to move Flappy to the target.'
        flappy_2: |-
          Now we've added some ground.  Attach a block to the "when hit the ground" block.  Your code needs to 'END GAME' when Flappy crashes.
        flappy_3: 'The "when run" block allows you to run code when your game starts.  Try setting the level speed and flapping to the target.'
        flappy_4: |-
          Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the "when hit an obstacle" block. Your code needs to 'END GAME' when Flappy crashes into the first set of pipes.
        flappy_5: |-
          Let's add a scoreboard, and count points when Flappy makes it past obstacles. Add to the "when pass an obstacle" block, and then score a point by flying Flappy through the first set of pipes.
        flappy_6: "See if you can still score a point after making Flappy flap either a smaller or larger amount."
        flappy_7: 'Next, try changing the scene by attaching another block to the "when run" block.'
        flappy_8: "You can set visuals anytime, not just when the game starts. Try setting a RANDOM scene when other events happen, for example, when passing an obstacle."
        flappy_9: "To mix things up, when hitting an obstacle or the ground, instead of ending the game try setting the score back to 0."
        flappy_11: "Create your own Flappy game. You can change all the visuals and all the rules, even the gravity. When you're done, click Finish to let friends try your game on their phones."
        flappy_k1_1: "Play Flappy"
        flappy_k1_2: 'Attach a block to the "when click" block, then press "Run". Click or tap the screen to move Flappy to the target.'
        flappy_k1_3: |-
          Now we've added some ground.  Attach a block to the "when hit the ground" block.  Your code needs to 'END GAME' when Flappy crashes.
        flappy_k1_4: 'The "when run" block allows you to run code when your game starts.  Try setting the level speed and flapping to the target.'
        flappy_k1_5: |-
          Flappy will fly through obstacles unless you write code to make him crash. Attach a block to the "when hit an obstacle" block. Your code needs to 'END GAME' when Flappy crashes into the first set of pipes.
        flappy_k1_6: |-
          Let's add a scoreboard, and count points when Flappy makes it past obstacles. Add to the "when pass an obstacle" block, and then score a point by flying Flappy through the first set of pipes.
        flappy_k1_7: "See if you can score multiple points for making it past an obstacle"
        flappy_k1_8: 'Next, try changing the scene by attaching another block to the "when run" block.'
        flappy_k1_9: 'Try changing the player by attaching a "set player" block to the "when run" block.'
        jigsaw_1: "Click the block"
        jigsaw_2: "Drag the block to the target"
        jigsaw_3: "Arrange the blocks to form the image"
        jigsaw_4: "Arrange the blocks to form the image"
        jigsaw_5: "Arrange the blocks to form the image"
        jigsaw_6: "Arrange the blocks to form the image"
        jigsaw_7: "Arrange the blocks to form the image"
        jigsaw_8: "Arrange the blocks to form the image"
        jigsaw_9: "Arrange the blocks to form the image"
        jigsaw_10: "Arrange the blocks to form the image"
        jigsaw_11: "Arrange the blocks to form the image"
        jigsaw_12: "Arrange the blocks to form the image"
        jigsaw_13: "Fix the puzzle!"
        mazestep_1: "Maze step description here"
        mazestep_2: "Maze step description here"
        mazestep_3: "Maze step description here"
        mazestep_4: "Maze step description here"
        mazestep_5: "Maze step description here"
        studio_c2_1: 'Can you make this dog say "hello world"?'
        studio_c2_2: "Can you make the dog say something and then have the cat say something afterwards?"
        studio_c2_3: "Can you write a program to make this dog move to the cat?"
        studio_c2_4: 'Can you write a program that makes the dog move to the cat, and have the cat say "hello" when the dog reaches him?'
        studio_c2_5: 'Can you write a program to make the octopus say "hello" when it is clicked?'
        studio_c2_6: "Can you write a program to make this penguin move around using the up / down / left /right keys to hit all of the targets?"
        studio_c2_7: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?'
        studio_c2_8: 'Can you have the penguin say "Ouch!" and play a "hit" sound if he runs into the dinosaur, and then move him with the arrows to make that happen?'
        studio_c2_9: "Can you add a block to score a point when the penguin runs into the octopus, and then move him with the arrows until you score?"
        studio_c2_10: "Can you add blocks to change the background and the speed of the penguin, and then move him with the arrows until you score?"
        studio_c2_11: "Create your own story. When you're done, click Finish to let friends try your story on their phones."
        studio_c3_story_1: 'Can you make this dog say "hello world"?'
        studio_c3_story_2: "Can you make the dog say something and then have the cat say something afterwards?"
        studio_c3_story_3: "Can you write a program to make this dog move to the cat?"
        studio_c3_story_4: 'Can you write a program that makes the dog move to the cat, and have the cat say "hello" when the dog reaches him?'
        studio_c3_story_5: "Can you add a block to make the octopus happy?"
        studio_c3_story_6: "Create your own story. When you're done, click Finish to let friends try your story on their phones."
        studio_c3_game_1: 'Can you write a program to make the octopus say "hello" when it is clicked?'
        studio_c3_game_2: "Can you write a program to make this penguin move around using the up / down / left /right keys to hit all of the targets?"
        studio_c3_game_3: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?'
        studio_c3_game_4: 'Can you have the penguin say "Ouch!" and play a "hit" sound if he runs into the dinosaur, and then move him with the arrows to make that happen?'
        studio_c3_game_5: "Can you add a block to score a point when the penguin runs into the octopus, and then move him with the arrows until you score?"
        studio_c3_game_6: "Can you add blocks to change the background and the speed of the penguin, and then move him with the arrows until you score?"
        studio_c3_game_7: "Create your own game. When you're done, click Finish to let friends try your story on their phones."
        studio_playlab_1: 'Can you make this dog say "hello world"?'
        studio_playlab_2: "Can you make the dog say something and then have the cat say something afterwards?"
        studio_playlab_3: "Can you write a program to make this dog move to the cat?"
        studio_playlab_4: 'Can you write a program that makes the dog move to the cat, and have the cat say "hello" when the dog reaches him?'
        studio_playlab_5: 'Can you write a program to make the octopus say "hello" when it is clicked?'
        studio_playlab_6: "Can you write a program to make this penguin move around using the up / down / left /right keys to hit all of the targets?"
        studio_playlab_7: 'The "repeat forever" block allows you to run code continuously. Can you attach blocks to move this dinosaur up and down repeatedly?'
        studio_playlab_8: "Can you add a block to score a point when the penguin runs into the octopus, and then move him with the arrows until you score?"
        studio_playlab_9: "Can you add blocks to change the background and the speed of the penguin, and then move him with the arrows until you score?"
        studio_playlab_10: "Create your own game. When you're done, click Finish to let friends try your story on their phones."
        studio_full_sandbox: "Create your own game. When you're done, click Finish to let friends try your story on their phones."
        studio_k1_1: 'Can you make this dog say "hello world"?'
        studio_k1_2: "Can you make the dog say something and then have the cat say something afterwards?"
        studio_k1_3: "Can you write a program to make this dog move to the cat?"
        studio_k1_4: 'Make the dog move to the cat and the cat say "hello" when he gets there.'
        studio_k1_5: "Can you add a block to make the octopus happy?"
        studio_k1_6: "Create your own story! Move around the cat and dog, and make them say things."
        maze_wordsearch_k_1: "Move me to spell the word EAST"
        maze_wordsearch_k_2: "Move me to spell the word SOUTH"
        maze_wordsearch_k_3: "Move me to spell the word WEST"
        maze_wordsearch_k_4: "Move me to spell the word NORTH"
        maze_wordsearch_k_6: "Move me East and then South to spell the word JUMP"
        maze_wordsearch_k_9: "Move me one way, then another to spell the word CODE"
        maze_wordsearch_k_13: "Move me one way, then another to spell the word DEBUG"
        maze_wordsearch_k_15: "Move me one way, then another to spell the word ABOVE"
        maze_wordsearch_k_16: "Move me one way, then another to spell the word BELOW"
        maze_wordsearch_k_20: "This is a test! Move me one way, then another to spell the word STORY"
        webapp_ec_simple: "Create your web app by using createHtmlBlock."
        turtle_ec_1_2: 'Now, draw a square. NOTE: use your favorite color by picking it in the new "penColor" block.'
        turtle_ec_1_10: 'You made it! Now, draw anything you want. Some fun ideas: a stick figure, snowflake, or spiral. Also try the new "penWidth" block. Have fun!'
    video:
      name:
        maze_intro: "Maze Intro"
        artist_intro: "Artist Intro"
        farmer_intro: "Farmer Intro"
        flappy_intro: "Flappy Intro"
        loop_times: "Repeat Times Block"
        loop_until: "Repeat Until Block"
        if: "If Block"
        if_else: "If/else Block"
        function: "Funkcijas"
        loop_while: "While Block"
        loop_for: "Counter Block"
        parameters: "Functions with Parameters"
        hoc_wrapup: "Hour of Code Wrapup"
        Unplug1: "What is CS?"
        Unplug2: "Algoritmiska domāšana"
        Unplug3: "Rūtiņpapīra programmēšana"
        Unplug4: "Algoritmi"
        Unplug5: "Funkcijas"
        Unplug6: "Kondicionālis"
        Unplug7: "Songwriting"
        Unplug8: "Abstrakcija"
        Unplug9: "Relay programming"
        Unplug10: "Internet"
        Unplug11: "Ietīt"
        C1_happy_maps_unplugged: "Happy Maps"
        C1_moveitmoveit_unplugged: "Move It, Move It"
        C1_bigevent_unplugged: "The Big Event"
        C1_getting_loopy: "Getting Loopy"
        C1_pair_programming: "Pair Programming"
        C1_maze_intro_sequencing: "Maze Sequencing Intro"
        C1_maze_debugging: "Maze Debugging"
        C1_bee_level_intro: 'Bee Level - Intro'
        C1_artist_intro: "Artist Intro"
        C1_spelling_bee_intro: "Spelling Bee Intro"
        C1_zuck_repeat_loop: "Maze Loops"
        C1_bee_loops: "Bee Loops"
        C1_maze_loops: "Maze Loops"
        C1_playlab_storytelling: 'Play Lab - Create a Story'
        C1_planting_seed: "Planting a Seed"
        C1_building_foundation: "Building a Foundation"
        C2_maze_intro: "Maze Intro"
        C2_artist_intro: "Artist Intro"
        C2_zuck_repeat_loop: "Maze Loops"
        C2_artist_loops: "Artist Loops"
        C2_artist_debugging: "Artist Debugging"
        C2_bee_loops: "Bee Loops"
        C2_bee_debugging: "Bee Debugging"
        C2_bee_conditionals: "Bee Conditionals"
        C2_playlab_createstory: 'Play Lab - Create a Story'
        C2_graph_paper: "Rūtiņpapīra programmēšana"
        C2_conditionals_with_cards: "Kondicionālis"
        C2_binary_bracelets: "Binary Bracelets"
        C2_relay_programming: "Releju programmēšana"
        C2_paper_airplanes: "Paper Airplanes"
        C3_maze_level_4: "Maze Loops"
        C3_artist_intro: "Artist Intro"
        C3_artist_functions: "Artist Functions"
        C3_bee_functions: "Bee Functions"
        C3_bee_conditionals: "Bee Conditionals"
        C3_maze_conditionals: "Maze Conditionals"
        C3_artist_nested_loops: "Nested Loops"
        C3_farmer_while: "While Loops"
        C3_bee_nested_loops: "Nested Loops"
        C3_bee_debugging: "Bee Debugging"
        C3_bounce: "Atlekt"
        C3_playlab_create_game: 'Play Lab - Create a Game'
        C3_computational_thinking: "Algoritmiska domāšana"
        C3_dice_race: "Dice Race"
        C3_internet: "Internet"
        C3_crowdsourcing: "Crowdsourcing"
        C3_functional_suncatchers: "Functional Suncatchers"
        C3_songwriting_with_parameters: "Songwriting With Parameters"
    callout:
      text:
        drag_blocks: 'Drag a "move" block and snap it below the other block'
        run: 'Hit "Run" to try your program'
        watch_again: "Click here to watch the video again"
        gray_block_explanation: "Blocks that are grey can't be deleted. Can you solve the puzzle anyway?"
        show_code_explanation: "Click here to see the code for the program you're making"
        instructions_repeat_explanation: "The instructions for each puzzle are repeated here"
        category_explanation: "You have all the same blocks but they've now been arranged in categories"
        set_sprite_image: 'Attach a "set actor to image" block to the "when story starts" block to enable an actor for this story'
        studio_say_text: "Type what you want your actor to say within these quotes"
        jigsaw_click: "Click this block!"
        move_elsa_forward: 'Drag a "Move Forward" block and snap it below the "When Run" block to make Elsa move forward'
        turn_elsa: 'Use the "Turn" block to make Elsa turn. The number in the drop-down determines how much Elsa turns'
        replace_questions: 'Use the drop-down to replace "???" with a number'
        replace_questions_degree: 'Use the drop-down to replace "???" with the correct degree to turn'
        repeat_blocks: 'Use the "Repeat" block and wrap it around the blocks in the workspace'
        snowflake_dropdown: "Use this drop-down to create different snowflakes!"
