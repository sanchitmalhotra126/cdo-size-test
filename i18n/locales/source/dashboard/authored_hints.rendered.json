{
  "en": {
    "data": {
      "authored_hints": {
        "2-3 Artist 1 new_authored_hint": {
          "2-3_Artist_1_new_a": "<p>If you use the block to have me <code>move forward by 100 pixels</code>, I will draw a line automatically.</p>",
          "2-3_Artist_1_new_b": "<p>Having trouble turning the corner? Use the <code>turn right 90 degrees</code> block.</p>"
        },
        "2-3 Artist 11_authored_hint": {
          "2-3_Artist_11_a": "<p>Having trouble with the angles? You need to go 360 degrees in 8 turns.  What is 360/8? </p>"
        },
        "2-3 Artist 12_authored_hint": {
          "2-3_Artist_12_a": "<p>There are 360 degrees in a circle, so if the artist turns 1 degree each time through the loop, he'll need to go through 360 times.</p>"
        },
        "2-3 Artist 2 new_authored_hint": {
          "2-3_Artist_2_new_a": "<p>The artist doesn't seem to be pointing in the correct direction. Can you make them turn first before drawing the line?</p>"
        },
        "2-3 Artist 3new_authored_hint": {
          "2-3_Artist_3new_a": "<p>What is 100-70?  Based on the story problem, that's how tall the hat needs to be!</p>",
          "2-3_Artist_3new_b": "<p>The artist doesn't seem to be pointing in the correct direction. Can you make them turn first before drawing the line?</p>"
        },
        "2-3 Artist 4_authored_hint": {
          "2-3_Artist_4_a": "<p>To finish the house, all we need to do is draw a square!</p>"
        },
        "2-3 Artist 6_authored_hint": {
          "2-3_Artist_6_a": "<p>To make those little angles, you have to turn <em>farther</em> each time than you did with the square.   </p>",
          "2-3_Artist_6_b": "<p>Since I'm already facing to the right, it's easiest to start by moving forward, then make left turns to create the triangle.</p>",
          "2-3_Artist_6_c": "<p>Each side of the triangle is the same length as each side of the square...100 pixels!</p>"
        },
        "2-3 Artist 7_authored_hint": {
          "2-3_Artist_7_a": "<p>The easiest way to solve this puzzle is to draw the first square and end with the artist pointing down before starting your second square.</p>"
        },
        "2-3 Artist 8_authored_hint": {
          "2-3_Artist_8_a": "<p>If you cut 200 in half, how many pixels wide does each square need to be?</p>"
        },
        "2-3 Artist 9 NEW_authored_hint": {
          "2-3_Artist_9_a": "<p>This diamond is really just a square on its side</p>"
        },
        "2-3 Artist 9 REPLACEMENT_authored_hint": {
          "step_size": "<p>Each step is 100 pixels wide and 100 pixels high.</p>"
        },
        "2-3 Artist 9_authored_hint": {
          "2-3_Artist_9_a": "<p>This diamond is really just a square turned 45 degrees.</p>",
          "2-3_Artist_9_b": "<p>Don't forget to turn the artist left by 45 degrees before you start drawing your square!</p>\n<p><img src=\"https://images.code.org/47cc2474e533667101a2d73b98da204e-image-1467744539967.gif\"></p>"
        },
        "2-3 Artist Debugging 10_authored_hint": {
          "2-3_Artist_Debugging_10_a": "<p>Remember, you want the control panel 10 pixels <em>wider</em>...so be sure to <strong>add</strong> 10 to whatever number you change.</p>",
          "2-3_Artist_Debugging_10_b": "<p><strong>Trial and error is perfectly fine here!</strong>  </p>\n<p>Start by changing one number at a time.   </p>\n<p>Which numbers do what?  </p>\n<p>If you get too lost, just click \"Start over\" and your code will be reset.</p>"
        },
        "2-3 Artist Debugging 2_authored_hint": {
          "2-3_Artist_Debugging_2_a": "<p>Hint: Each whisker is 75 pixels long.</p>"
        },
        "2-3 Artist Debugging 3_authored_hint": {
          "2-3_Artist_Debugging_3_a": "<p>One of the turns is 15 degrees too small.</p>",
          "2-3_Artist_Debugging_3_b": "<p>If the program runs too fast to see what's happening, try slowing it down with the slider.</p>"
        },
        "2-3 Artist Debugging 7_authored_hint": {
          "2-3_Artist_Debugging_7_a": "<p>What happens if you have the artist move or jump backward after he draws the first line?</p>"
        },
        "2-3 Artist Debugging 8_authored_hint": {
          "2-3_Artist_Debugging_8_a": "<p>How many times did my shape repeat?</p>\n<p>How many times <em>should</em> the shape repeat?</p>\n<p>Where can you change that in the program?</p>"
        },
        "2-3 Artist Debugging 9_authored_hint": {
          "2-3_Artist_Debugging_9_a": "<p>The artist needs to turn 60 degrees farther left before starting to draw!</p>",
          "2-3_Artist_Debugging_9_b": "<p>You don't need to add another block to get the full turn, just add 60 degrees to the <code>turn left</code> block that's already there!</p>"
        },
        "2-3 Artist Functions 1 a_authored_hint": {
          "2-3_Artist_Functions_1_a": "<p>The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.</p>",
          "2-3_Artist_Functions_1_b": "<p>It is okay to draw overlapping lines to make your glasses.</p>"
        },
        "2-3 Artist Functions 1_authored_hint": {
          "2-3_Artist_Functions_1_a": "<p>The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.</p>",
          "2-3_Artist_Functions_1_b": "<p>It is okay to draw overlapping lines to make your glasses.</p>"
        },
        "2-3 Artist Functions 11 a_authored_hint": {
          "2-3_Artist_Functions_11_a": "<p>You will need to change not only the number and length of sides within the function, but also the angle the artist turns between each side.</p>"
        },
        "2-3 Artist Functions 11_authored_hint": {
          "2-3_Artist_Functions_11_a": "<p>You will need to change not only the number and length of sides within the function, but also the angle the artist turns between each side.</p>"
        },
        "2-3 Artist Functions 12 a_authored_hint": {
          "2-3_Artist_Functions_12_a": "<p>Try running the code first to see what you need to add.</p>"
        },
        "2-3 Artist Functions 12_authored_hint": {
          "2-3_Artist_Functions_12_a": "<p>Try running the code first to see what you need to add.</p>"
        },
        "2-3 Artist Functions 2 a_authored_hint": {
          "2-3_Artist_Functions_2_a": "<p>Your program should:</p>\n<ul>\n<li>Use function</li>\n<li>Move forward 100 + 75 pixels</li>\n<li>Use function</li>\n</ul>"
        },
        "2-3 Artist Functions 2_authored_hint": {
          "2-3_Artist_Functions_2_a": "<p>Your program should:</p>\n<ul>\n<li>Use function</li>\n<li>Move forward 100 + 75 pixels</li>\n<li>Use function</li>\n</ul>"
        },
        "2-3 Artist Functions 3 a_authored_hint": {
          "2-3_Artist_Functions_3_a": "<p><strong>115 + 45 = 160</strong></p>"
        },
        "2-3 Artist Functions 3_authored_hint": {
          "2-3_Artist_Functions_3_a": "<p><strong>115 + 45 = 160</strong></p>"
        },
        "2-3 Artist Functions 4 a_authored_hint": {
          "2-3_Artist_Functions_4_a": "<p>The artist needs to turn 120 degrees between each square to complete this design.</p>"
        },
        "2-3 Artist Functions 4_authored_hint": {
          "2-3_Artist_Functions_4_a": "<p>The artist needs to turn 120 degrees between each square to complete this design.</p>"
        },
        "2-3 Artist Loops New 11_authored_hint": {
          "2-3_Artist_Loops_New_11_a": "<p>Remember that the code from the last puzzle was:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">8</title>\n        <statement name=\"DO\">\n          <block type=\"draw_colour\" inline=\"true\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_random\"/>\n            </value>\n            <next>\n              <block type=\"draw_turn_by_constant_dropdown\">\n                <title name=\"DIR\">turnRight</title>\n                <title name=\"VALUE\" config=\"45,60,90,120,180\">45</title>\n                <next>\n                  <block type=\"draw_move_by_constant\">\n                    <title name=\"DIR\">moveForward</title>\n                    <title name=\"VALUE\">50</title>\n                    <next>\n                      <block type=\"draw_turn_by_constant_dropdown\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <title name=\"VALUE\" config=\"45,60,90,120,180\">90</title>\n                        <next>\n                          <block type=\"draw_move_by_constant\">\n                            <title name=\"DIR\">moveForward</title>\n                            <title name=\"VALUE\">50</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>",
          "2-3_Artist_Loops_New_11_b": "<p>Your new turn should go at the <strong>end</strong> of the code inside the loop.</p>"
        },
        "2-3 Artist Loops New 12_authored_hint": {
          "2-3_Artist Loops_New_12_a": "<p>Before starting the diamond, the artist needs to turn left by 60 degrees to get on the right path.</p>",
          "2-3_Artist Loops_New_12_b": "<p>After the artist goes forward 100 pixels, he will need to turn right 120 degrees to make the sharp corner.</p>",
          "2-3_Artist Loops_New_12_c": "<p>The artist will need to turn right only 60 degrees to create a wide corner.</p>"
        },
        "2-3 Artist Loops New 13_authored_hint": {
          "2-3_Artist_Loops_New_13_a": "<p>At the end of each diamond, the artist is already facing the right direction to start the next one.  </p>\n<p>Because of this, we don't need to add an extra <code>turn left by</code> block before we start again.</p>",
          "2-3_Artist_Loops_New_13_b": "<p>To make each diamond, the artist needs to:   </p>\n<ul>\n<li>move</li>\n<li>turn right 120 degrees</li>\n<li>move</li>\n<li>turn right 60 degrees  </li>\n</ul>\n<p>Then do it all again!</p>"
        },
        "2-3 Artist Loops New 9_authored_hint": {
          "2-3_Artist_Loops_New_9_a": "<p>The artist needs to turn 45 degrees to the right before he starts drawing.</p>",
          "2-3_Artist_Loops_New_9_b": "<p>This V is really just half of a square.  What would the code be to draw half of a square?</p>"
        },
        "2-3 Artist Nested Loops 1_authored_hint": {
          "2-3_Artist_Nested_Loops_1_a": "<p>Remember to put all of the grey blocks inside of your loop.</p>"
        },
        "2-3 Artist Nested Loops 3_authored_hint": {
          "2-3_Artist_Nested_Loops_3_a": "<p>Need help with the angles?<br><strong>360/12 = 30</strong></p>",
          "2-3_Artist_Nested_Loops_3_b": "<p>Remember to put all of the grey code and your turn block inside of a loop.</p>"
        },
        "2-3 Artist Nested Loops 4_authored_hint": {
          "2-3_Artist_Nested_Loops_3_a": "<p>Need help with the angles?<br><strong>360/12 = 30</strong></p>"
        },
        "2-3 Artist Nested Loops 5_authored_hint": {
          "2-3_Artist_Nested_Loops_5_a": "<p>Try using the <code>jump forward</code> block to get from the top of one square to the place where you will start the next. </p>\n<p>If your squares are 20 pixels tall and they are 20 pixels apart, how far do you need to jump?</p>"
        },
        "2-3 Artist Nested Loops 7_authored_hint": {
          "2-3_Artist_Nested_Loops_7_a": "<p>How far should you turn in each loop?  </p>\n<p>What is 360/10?</p>"
        },
        "2-3 Artist Nested Loops 9_authored_hint": {
          "2-3_Artist_Nested_Loops_9_a": "<p>Need help finding the correct angle?</p>\n<p><strong>360 / 12 = 30</strong></p>"
        },
        "2-3 Bee Conditionals 14_authored_hint": {
          "2-3_Bee_Conditionals_14_a": "<p>Having a hard time figuring out how to get the blocks down?  Try treating the red flower exactly the same as a purple flower!</p>",
          "2-3_Bee_Conditionals_14_b": "<p>If the red flower were purple, could you figure out how to use an extra <code>repeat</code> loop to cut down on code?</p>",
          "2-3_Bee_Conditionals_14_c": "<p>Try breaking this up into two separate chunks:  </p>\n<p><img src=\"https://images.code.org/895a52f3febff9edb83979f7861cf67a-image-1469640892331.png\"></p>\n<p>1) Gather nectar 3 times</p>\n<ul>\n<li>Move forward 5 times</li>\n<li>Check to see if nectar, if so: get it</li>\n<li>Turn left</li>\n</ul>\n<p>2) Make honey </p>\n<ul>\n<li>Move forward one time</li>\n<li>Make two honey</li>\n</ul>"
        },
        "2-3 Bee Conditionals 15_authored_hint": {
          "2-3_Bee_Conditionals_15_a": "<p>Remember: Purple flowers only have either 0 or 1 nectar and they can change each time you run the program.</p>"
        },
        "2-3 Bee Conditionals 3_authored_hint": {
          "2-3_Bee_Conditionals_3_a": "<p>The code will be shortest if you use a loop each time you move forward, another loop to gather nectar, and another one to make honey.</p>"
        },
        "2-3 Bee Conditionals 6_authored_hint": {
          "2-3_Bee_Conditionals_6_a": "<p>Remember: Purple flowers change between 0 and 1 nectar when you run your program!</p>"
        },
        "2-3 Bee Debugging 1_authored_hint": {
          "2-3_Bee_Debugging_1_a": "<p>Once you find and fix the incorrect block, do you see any patterns that could be made more simple using a <code>repeat</code> loop?</p>"
        },
        "2-3 Bee Debugging 2_authored_hint": {
          "2-3_Bee_Debugging_2_a": "<p>Once you find and fix the incorrect block, do you see any patterns that could be made more simple using a <code>repeat</code> loop?</p>"
        },
        "2-3 Bee Debugging 4_authored_hint": {
          "2-3_Bee_Debugging_4_a": "<p>Is there any place where the bee does something that doesn't make sense? What happens when you change that block?</p>"
        },
        "2-3 Bee Functions 4_authored_hint": {
          "2-3_Bee_Functions_4_a": "<p>You don't have to use a loop with a function. Try moving, using the function, then moving and using the function again.</p>"
        },
        "2-3 Bee Functions 6_authored_hint": {
          "2-3_Bee_Functions_6_a": "<p>You don't have to use a loop with a function. Try moving, using the function, then moving and using the function again.</p>"
        },
        "2-3 Bee Functions 8_authored_hint": {
          "2-3_Bee_Functions_8_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>\n<p><img src=\"https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif\"></p>"
        },
        "2-3 Bee Functions 9_authored_hint": {
          "2-3_Bee_Functions_8_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "2-3_Bee_Functions_8_b": "<p>Remember to build your code inside of the green function block.</p>\n<p><img src=\"https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif\"></p>"
        },
        "2-3 Bee Loops 2_authored_hint": {
          "2-3_Bee_Loops_2_a": "<p>You should end up with four blocks inside your loop.</p>"
        },
        "2-3 Bee Loops 3_authored_hint": {
          "2-3_Bee_Loops_3_a": "<p>You should have 6 blocks inside your loop.</p>"
        },
        "2-3 Bee Loops 3B_authored_hint": {
          "2-3_Bee_Loops_3B_a": "<p>You will need two different <code>repeat</code> loops, one after the other.</p>"
        },
        "2-3 Bee Loops 4_authored_hint": {
          "2-3_Bee_Loops_4_a": "<p>You should end up with five blocks inside your loop.</p>"
        },
        "2-3 Bee Loops 4A_authored_hint": {
          "2-3_Bee_Loops_4A_a": "<p>The first action will be a turn, rather than a move.</p>",
          "2-3_Bee_Loops_4A_b": "<p>The last piece of the program can be finished by writing code at the end of your program outside of your loop.</p>",
          "2-3_Bee_Loops_4A_c": "<p>If you can't spot the loops yet, try coding it out the long way first, then see what you can combine into a <code>repeat</code> loop at the end.</p>"
        },
        "2-3 Bee Loops 5_authored_hint": {
          "2-3_Bee_Loops_5_a": "<p>If you can't spot the blocks to put inside <code>repeat</code> right away, start by coding out each move and look for a pattern.</p>"
        },
        "2-3 Bee Loops 6_authored_hint": {
          "2-3_Bee_Loops_6_a": "<p>If you can't tell what should go into the <code>repeat</code> loop, try dragging blocks out one by one and see if you can find a pattern.</p>",
          "2-3_Bee_Loops_6_b": "<p>There should be 6 blocks inside your <code>repeat</code> loop when you're done.</p>"
        },
        "2-3 Bee Loops 7_authored_hint": {
          "2-3_Bee_Loops_7_a": "<p>The first action will be a turn, rather than a move.</p>",
          "2-3_Bee_Loops_7_b": "<p>If you can't quite picture the loop from the beginning, try coding it out the long way, then look for a pattern.  </p>"
        },
        "2-3 Maze 1_authored_hint": {
          "2-3_Maze_1_a": "<p>To use a <code>move forward</code> block, drag it from the toolbar area out into the workspace and connect it to the <code>when run</code> block.</p>"
        },
        "2-3 Maze 16_authored_hint": {
          "2-3_Maze_16_a": "<p>If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.</p>",
          "2-3_Maze_16_b": "<p>To put lots of blocks inside a <code>repeat</code> loop, just drag a loop out into the workspace, then drag all of the blocks from the starting program inside of it.  </p>\n<p>Connect it all back to the <code>when run</code> block and you're good to go!</p>"
        },
        "2-3 Maze 6_authored_hint": {
          "2-3_Maze_6_a": "<p>There are two ways to solve this puzzle!</p>"
        },
        "2-3 Maze Loops 17_authored_hint": {
          "2-3_Maze_Loops_17_a": "<p>If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.</p>",
          "2-3_Maze_Loops_17_b": "<p>Did the starting code get deleted?  Click <code>start over</code> to get it back!</p>"
        },
        "2-3 Maze Loops 18_authored_hint": {
          "2-3_Maze_Loops_18_a": "<p>If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.</p>"
        },
        "2-3 Maze Loops 19_authored_hint": {
          "2-3_Maze_Loops_19_a": "<p>If you are stuck, try writing out the code without loops first and looking for patterns.</p>",
          "2-3_Maze_Loops_19_b": "<p>Putting one repeat loop inside of another can help decrease the number of blocks used.</p>"
        },
        "2-3 Maze Loops 20_authored_hint": {
          "2-3_Maze_Loops_20_a": "<p>Look for a stair-step pattern in this maze to find where a loop can be used.</p>"
        },
        "2-3 Maze Loops 21_authored_hint": {
          "2-3_Maze_Loops_21_a": "<p>If you are having trouble finding the stair-step pattern, try covering the blocked paths with your finger.</p>"
        },
        "4-5 Artist 1_authored_hint": {
          "4-5_Artist_1_a": "<p><img src=\"https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif\"></p>"
        },
        "4-5 Artist 11_authored_hint": {
          "4-5_Artist_11_a": "<p>Within your loop, make sure the artist jumps backwards and upwards after drawing each line.</p>"
        },
        "4-5 Artist 3_authored_hint": {
          "4-5_Artist_3_a": "<p>If the flower bed is 600 pixels around and two of the sides are 200 pixels long, here is how to figure out what the short sides add up to:</p>\n<p><strong>600 - 200 - 200 = 200</strong></p>\n<p>That means both short sides add up to 200 pixels.</p>\n<p><strong>What is 200 / 2?</strong></p>",
          "4-5_Artist_3_b": "<p>If you can't see where the <code>repeat</code> loop goes right away, try coding out the whole solution and look for a pattern.</p>"
        },
        "4-5 Artist 4_authored_hint": {
          "4-5_Artist_4_a": "<p>There are 360 degrees in a circle! </p>\n<p>That's how many times you need to repeat this code (turning 1 degree at a time) before the circle is done!</p>"
        },
        "4-5 Artist 5_authored_hint": {
          "4-5_Artist_5_a": "<p>Trial and error is a great method, but you can also solve the problem by dividing the 90 degree angle into thirds.</p>\n<p><strong>90 / 3 = <strong>_</strong></strong></p>"
        },
        "4-5 Artist 7_authored_hint": {
          "4-5_Artist_7_a": "<p>Which angle is the smallest?  At which angle is the artist standing? </p>"
        },
        "4-5 Artist 8_authored_hint": {
          "4-5_Artist_8_a": "<p>The long sides are 240 pixels each.  That means that the 2 short sides must total:</p>\n<p><strong>800 - 240 - 240 = 320</strong></p>\n<p>What is <strong>320/2</strong> ? </p>",
          "4-5_Artist_8_b": "<p>This image can be done 2 ways!  </p>\n<ul>\n<li><p>Draw two rectangles that are <strong>120</strong> long and <strong>160</strong> tall, with an overlapping side</p>\n</li>\n<li><p>Draw one rectangle that is <strong>240</strong> long and <strong>160</strong> tall, then add a line in the middle.</p>\n</li>\n</ul>"
        },
        "4-5 Artist 9_authored_hint": {
          "4-5_Artist_9_a": "<p>When a triangle is an equilateral, all sides and all angles are the same.  </p>",
          "4-5_Artist_9_b": "<p>You will need to draw three triangles of the same size. Don't forget to jump to your new position after each one.</p>"
        },
        "4-5 Artist Assessment 1_authored_hint": {
          "4-5_Artist_Assessment_1_a": "<p>You only need to draw the outside triangle to complete this puzzle.</p>"
        },
        "4-5 Artist Patterns 11_authored_hint": {
          "4-5_Artist_Patterns_11_a": "<p>If there are 360 degrees in a circle and each loop turns 3 degrees, how many times would you need to loop draw half of a full circle?</p>"
        },
        "4-5 Artist Patterns 2_authored_hint": {
          "4-5_Artist_Patterns_2_a": "<p>Notice that since the squares are 20 pixels long, you'll need to jump 20 pixels before you start your next square.</p>"
        },
        "4-5 Artist Patterns 3_authored_hint": {
          "4-5_Artist_Patterns_3_a": "<p>Be careful to pull out the full block of \"code from the toolbar each time you try a new one.</p>",
          "4-5_Artist_Patterns_3_b": "<p>If your code becomes too confusing, you can always click \"Start Over\" and try again!</p>"
        },
        "4-5 Artist Patterns 5_authored_hint": {
          "4-5_Artist_Patterns_5_a": "<p>Now, when the artist finished each diamond, he's facing the opposite direction from where he needs to be to start the next one.  </p>\n<p>How many degrees does he need to be turned to set himself straight?</p>"
        },
        "4-5 Bee Conditionals 4_authored_hint": {
          "remember_quantum": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>"
        },
        "4-5 Bee Conditionals 5_authored_hint": {
          "remember_quantum": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>"
        },
        "4-5 Bee Conditionals 6_authored_hint": {
          "4-5 Bee Conditionals 6_a": "<p>You can solve this puzzle using only the blocks on the workspace.  What order should they go in?</p>",
          "4-5 Bee Conditionals 6_b": "<p>Make sure that you are checking to see if the flower has more than <strong>0</strong> nectar at least <strong>3</strong> times to solve this puzzle.</p>"
        },
        "4-5 Bee Debugging 1_authored_hint": {
          "4-5_Bee_Debugging_1_a": "<p>If you are having trouble figuring out what's not right, try running it to see where things go wrong.</p>"
        },
        "4-5 Bee Nested Loops Rows_authored_hint": {
          "4-5_Bee_Nested_Loops_Rows_a": "<p>Try treating this puzzle like a long rectangle where the bee needs to move forward, then turn left several times to complete the path.</p>"
        },
        "4-5 Maze 10_authored_hint": {
          "4-5_Maze_10_a": "<p>If you can't see how to use loops to solve the puzzle right away, try solving it the long way first, then looking for a pattern.</p>\n<p>What should you put a <code>repeat</code> around to make the code shorter?</p>"
        },
        "4-5 Maze 4_authored_hint": {
          "4-5_Maze_4_a": "<p>If you are having a hard time figuring out where to put the repeat, try coding everything out and looking for a pattern.</p>"
        },
        "4-5 Maze 5_authored_hint": {
          "4-5_Maze_5_a": "<p>Try using a <code>repeat</code> loop anytime you need to <code>move forward</code> more than two steps.</p>",
          "4-5_Maze_5_b": "<p>You can use more than one <code>repeat</code> loop in a puzzle.</p>"
        },
        "4-5 Maze 6_authored_hint": {
          "4-5_Maze_6_a": "<p>Try tracing out a path with your finger.<br>Is it the shortest path you can find?</p>"
        },
        "4-5 Maze 7_authored_hint": {
          "4-5_Maze_7_a": "<p><strong>Want to get your code as small as it can be?</strong> </p>\n<p>Look for patterns in your blocks. Do you see something that repeats?  Try putting a loop around it instead!</p>"
        },
        "4-5 Nested Loops 12_authored_hint": {
          "4-5_Nested_Loops_12_a": "<p><strong>360 / 36 = ?</strong></p>"
        },
        "4-5 Nested Loops 2_authored_hint": {},
        "4-5 Nested Loops 6_authored_hint": {
          "4-5_Nested_Loops_6_a": "<p>Don't forget to make a turn after your inner loop.</p>\n<p>You'll be looping 6 triangles over 360 degrees.</p>\n<p><strong>360 / 6 = ?</strong></p>"
        },
        "4-5 Nested Loops 7_authored_hint": {
          "4-5_Nested_Loops_7_a": "<p>This design will loop 10 times over 360 degrees.</p>\n<p><strong>360 / 10 = ?</strong></p>"
        },
        "4-5 Nested Loops 8_authored_hint": {
          "4-5_Nested_Loops_8_a": "<p>You will be looping this shape 6 times over 360 degrees.</p>\n<p><strong>360 / 6 = ?</strong></p>"
        },
        "4-5 While Loops 8_authored_hint": {
          "4-5_While_Loops_8_a": "<p>Each item will need its own <code>while</code> loop.</p>"
        },
        "AB_debug_Laurel1_authored_hint": {},
        "AppLab Intro 3 - Change Screen Color_authored_hint": {},
        "AppLab Intro 4 - Change Screen Color_authored_hint": {},
        "AppLab Intro 5 - Change Screen Color_authored_hint": {},
        "AppLab Intro 6 - Change Screen Color_authored_hint": {},
        "AppLab Intro 7 - Change Screen Color_authored_hint": {},
        "Artist Inspiration_authored_hint": {
          "brush_width": "<p>We set the brush width to 1, then the color to blue before we did anything else.</p>",
          "double_loop": "<p>Try putting a <code>for loop</code> inside of a <code>repeat</code> loop.</p>",
          "specifics": "<p>The <code>for loop</code> runs from three to seventeen for each of the six \"petals\" before moving on to create the next, drawing shapes with only an odd number of sides.</p>\n<p>The <code>set alpha</code> block uses division to fade the color as the counter gets higher.</p>",
          "after": "<p>When you're done with each \"petal\", be sure to <code>move forward</code> 20 pixels before you make a 60 degree rotation.</p>",
          "solution": "<p><strong>Solution</strong></p>\n<p><img src=\"https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png\" alt=\"Image of Solution Blocks\"></p>"
        },
        "Bergeron Robot Maze1_authored_hint": {
          "2-3_Maze_1_a": "<p>To use a <code>move forward</code> block, drag it from the toolbar area out into the workspace and connect it to the <code>when run</code> block.</p>"
        },
        "Course 4 Artist 11_authored_hint": {
          "Course_4_Artist_11_a": "<p>The half-hexagon has a <strong>length of 30</strong> and turns right by <strong>60 degrees</strong>.  </p>",
          "Course_4_Artist_11_b": "<p>The 2/3 triangle has a <strong>length of 80</strong> and turns right by <strong>120 degrees</strong>. </p>"
        },
        "Course 4 Artist 12_authored_hint": {
          "Course_4_Artist_12_a": "<p>Each repeated shape is the combination of <strong>half of a hexagon</strong>, followed by <strong>2/3 of a triangle</strong>. </p>",
          "Course_4_Artist_12_b": "<p>The unit shape is almost the same as in the last puzzle, except the half-hexagon is a bit bigger. </p>",
          "Course_4_Artist_12_c": "<p>1) The first three lines are 60 pixels long and you need to turn 60 degrees.<br> 2) The next two lines are 80 pixels long and you need to turn 120 degrees </p>",
          "Course_4_Artist_12_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n        <value name=\"COLOUR\">\n          <block type=\"colour_picker\">\n            <title name=\"COLOUR\">#843179</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"controls_repeat\">\n                <title name=\"TIMES\">3</title>\n                <statement name=\"DO\">\n                  <block type=\"draw_move_by_constant\">\n                    <title name=\"DIR\">moveForward</title>\n                    <title name=\"VALUE\">60</title>\n                    <next>\n                      <block type=\"draw_turn_by_constant\">\n                        <title name=\"DIR\">turnRight</title>\n                        <title name=\"VALUE\">60</title>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"controls_repeat\">\n                    <title name=\"TIMES\">2</title>\n                    <statement name=\"DO\">\n                      <block type=\"draw_move_by_constant\">\n                        <title name=\"DIR\">moveForward</title>\n                        <title name=\"VALUE\">80</title>\n                        <next>\n                          <block type=\"draw_turn_by_constant\">\n                            <title name=\"DIR\">turnRight</title>\n                            <title name=\"VALUE\">120</title>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 Artist 6_authored_hint": {
          "Course_4_Artist_6_a": "<p>There are 3 triangles within the 360 degree rotation...how many times does 3 go into 360?</p>"
        },
        "Course 4 Artist 7_authored_hint": {},
        "Course 4 Artist 8a_authored_hint": {
          "Course_4_Artist_8a": "<p>Need help figuring out how far to turn?</p>\n<p>There are 3 triangles within the 360 degree rotation.</p>\n<p>How many times does 3 go into 360?</p>"
        },
        "Course 4 Artist 9_authored_hint": {
          "Course_4_Artist_9_a": "<p>Need to know how much to turn? </p>\n<p>What is 360 divided by 10?</p>"
        },
        "Course 4 Artist Binary Free Play 2b_authored_hint": {
          "Course_4_Artist_Binary_Free_Play_2b_a": "<p>This code uses two <code>for loops</code>. One counts up from 1 to 8, the other counts down from 8 to 1.</p>",
          "Course_4_Artist_Binary_Free_Play_2b_b": "<p>Each <code>for loop</code> has three repeats.  The first draws the leftmost set of 1s, the second draws the 0s in the middle and the third draws the 1s on the right.</p>",
          "Course_4_Artist_Binary_Free_Play_2b_c": "<p>In each repeat you need <code>counter</code> for 1s and <code>16-(2 x counter)</code> for 0s.</p>",
          "Course_4_Artist_Binary_Free_Play_2b_d": "<p><strong>Solution:</strong></p>\n<xml><block type=\"when_run\" deletable=\"false\" movable=\"false\"><next><block type=\"controls_for_counter\" inline=\"true\"><mutation counter=\"counter\"></mutation><value name=\"FROM\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value><value name=\"TO\"><block type=\"math_number\"><title name=\"NUM\">8</title></block></value><value name=\"BY\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value><statement name=\"DO\"><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">1</title></block></value></block></statement><next><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">MINUS</title><value name=\"A\"><block type=\"math_number\"><title name=\"NUM\">16</title></block></value><value name=\"B\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">MULTIPLY</title><value name=\"A\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></value></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">0</title></block></value></block></statement><next><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">1</title></block></value></block></statement></block></next></block></next></block></statement><next><block type=\"controls_for_counter\" inline=\"true\"><mutation counter=\"counter\"></mutation><value name=\"FROM\"><block type=\"math_number\"><title name=\"NUM\">8</title></block></value><value name=\"TO\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value><value name=\"BY\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value><statement name=\"DO\"><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">1</title></block></value></block></statement><next><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">MINUS</title><value name=\"A\"><block type=\"math_number\"><title name=\"NUM\">16</title></block></value><value name=\"B\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">MULTIPLY</title><value name=\"A\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></value></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">0</title></block></value></block></statement><next><block type=\"controls_repeat_ext\" inline=\"true\"><value name=\"TIMES\"><block type=\"variables_get\"><title name=\"VAR\">counter</title></block></value><statement name=\"DO\"><block type=\"procedures_callnoreturn\" inline=\"true\"><mutation name=\"draw\"><arg name=\"binary\"></arg></mutation><value name=\"ARG0\"><block type=\"text\"><title name=\"TEXT\">1</title></block></value></block></statement></block></next></block></next></block></statement></block></next></block></next></block></xml>"
        },
        "Course 4 Artist For Loops 11_authored_hint": {
          "Course_4_Artist_For_Loops_11_a": "<p>The turn angle will change with each shape!  </p>\n<p>Use the math block to enter 360 divided by the number of sides the shape has to get the angle right. </p>"
        },
        "Course 4 Artist For Loops 11a_authored_hint": {
          "Course_4_Artist_For_Loops_11a_a": "<p>360 divided by the number of sides a shape has is the number of degrees you'll need to turn. </p>",
          "Course_4_Artist_For_Loops_11a_b": "<p>Each time, you will need to move forward by 10 times the length of the current number of sides. </p>"
        },
        "Course 4 Artist For Loops 3_authored_hint": {
          "Course_4_Artist_For_Loops_3_a": "<p>To have the <code>for</code> loop drive your movement, make sure that you're using <code>counter</code> as your distance.</p>"
        },
        "Course 4 Artist For Loops 4_authored_hint": {
          "Course_4_Artist_For_Loops_4_a": "<p><strong>What is the smallest number you will need?<br>What is the largest number?<br>How big is the increase each time?</strong></p>\n<p>Those are the questions you need to ask to fill in the blanks of the <code>for</code> loop.</p>"
        },
        "Course 4 Artist For Loops Challenge_authored_hint": {
          "Course_4_Artist_For_Loops_Challenge_a": "<p>The largest shape has 19 sides. The smallest has just two.</p>",
          "Course_4_Artist_For_Loops_Challenge_b": "<p>The <code>for</code> loop counts up by two each time through.</p>"
        },
        "Course 4 Artist For Loops Challenge_a_authored_hint": {
          "Course_4_Artist_For_Loops_Challenge_a": "<p>The largest polygon has 19 sides.</p>",
          "Course_4_Artist_For_Loops_Challenge_b": "<p>Each polygon is incomplete, with one side fewer than it should have.</p>"
        },
        "Course 4 Artist For Loops inspire_authored_hint": {
          "Course_4_Artist_For_Loops_inspire_a": "<p>The foundation of this code is the same as the solution to the previous challenge puzzle...with a couple of changes.</p>",
          "Course_4_Artist_For_Loops_inspire_b": "<p>Try a <code>for</code> loop that goes from 3 to 10 with an increment of 1.</p>",
          "Course_4_Artist_For_Loops_inspire_c": "<p>There are two iterations of the same repeat loop inside the <code>for</code> loop, but the second repeat turns the opposite direction.</p>",
          "Course_4_Artist_For_Loops_inspire_d": "<p><strong>Solution:</strong>  </p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\" inline=\"true\" movable=\"false\">\n      <mutation counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_arithmetic\" inline=\"true\">\n                <title name=\"OP\">MINUS</title>\n                <value name=\"A\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <value name=\"B\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">40</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">360</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">1</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">moveForward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">40</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">360</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 Artist Functions Inspiration_authored_hint": {
          "Course_4_Artist_Functions_Inspiration_a": "<p>Start with the code from the last puzzle and add an extra <code>turn right</code> of three degrees inside the repeat loop.</p>",
          "Course_4_Artist_Functions_Inspiration_b": "<p>Try turning by more than 90 degrees outside of the <code>repeat loop</code>, but still inside the <code>for loop</code>.</p>",
          "Course_4_Artist_Functions_Inspiration_c": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\" inline=\"true\">\n      <mutation counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">14</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_random\"/>\n            </value>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"procedures_callnoreturn\">\n                  <mutation name=\"draw a square 20\"></mutation>\n                    <next>\n                      <block type=\"jump_by_constant\">\n                        <title name=\"DIR\">jumpForward</title>\n                        <title name=\"VALUE\">20</title>\n                        <next>\n                          <block type=\"draw_turn_by_constant\">\n                            <title name=\"DIR\">turnRight</title>\n                            <title name=\"VALUE\">3</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"draw_turn_by_constant\">\n                    <title name=\"DIR\">turnLeft</title>\n                    <title name=\"VALUE\">100</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  </xml>"
        },
        "Course 4 Artist Functions challenge_authored_hint": {
          "Course_4_Artist_Functions_challenge_a": "<p>Part of understanding how to use functions is figuring out which ones you need, and which ones you don't.</p>",
          "Course_4_Artist_Functions_challenge_b": "<p>Use a <code>for loop</code>, then use its counter variable inside of a nested <code>repeat</code> loop.</p>",
          "Course_4_Artist_Functions_challenge_c": "<p>Each iteration, you should draw a square then jump forward.</p>",
          "Course_4_Artist_Functions_challenge_d": "<p>You will need to turn left by 90 degrees outside of your <code>repeat</code>, but still inside the <code>for loop</code>.</p>"
        },
        "Course 4 Artist Inspire_authored_hint": {
          "Course_4_Artist_Inspire_a": "<p>After you complete one square, try jumping forward half of it's length before turning and making another.</p>",
          "Course_4_Artist_Inspire_b": "<p>Each square and jump is repeated four times (using a left turn inbetween) to make a full pinwheel-like unit.</p>",
          "Course_4_Artist_Inspire_c": "<p>Each pinwheel is also repeated four times, with a right turn of <strong>360/sides</strong>.</p>",
          "Course_4_Artist_Inspire_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n        <value name=\"COLOUR\">\n          <block type=\"colour_picker\">\n            <title name=\"COLOUR\">#843179</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">sides</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">4</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">length</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">DIVIDE</title>\n                    <value name=\"A\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">200</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">sides</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">sides</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">sides</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                            <value name=\"TIMES\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">sides</title>\n                              </block>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"draw_move\" inline=\"true\">\n                                <title name=\"DIR\">moveForward</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">length</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_turn\" inline=\"true\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">360</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">sides</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </statement>\n                            <next>\n                              <block type=\"jump\" inline=\"true\">\n                                <title name=\"DIR\">jumpForward</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                    <title name=\"OP\">DIVIDE</title>\n                                    <value name=\"A\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">length</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"B\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">2</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_turn\" inline=\"true\">\n                                    <title name=\"DIR\">turnLeft</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">360</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">sides</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"jump\" inline=\"true\">\n                            <title name=\"DIR\">jumpForward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                    <title name=\"OP\">DIVIDE</title>\n                                    <value name=\"A\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">360</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"B\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">sides</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 Artist Vars 13_authored_hint": {
          "Course_4_Artist_Vars_13_a": "<p>You need two repeat loops (one inside the other) both repeating <code>sides</code> times.</p>",
          "Course_4_Artist_Vars_13_b": "<p>The inner repeat loop draws an octagon (turning to the left).   </p>\n<p>Afterwards, you need to move forward and turn right only in the outer loop.</p>",
          "Course_4_Artist_Vars_13_c": "<p>To adjust the shape to stay the same size when the number of sides change, use the math block to divide the length in pixels by the number of sides.</p>"
        },
        "Course 4 Artist Vars 6_authored_hint": {
          "Course_4_Artist_Vars_6_a": "<p>To draw a regular polygon, turn <strong>360/sides</strong> each time.</p>"
        },
        "Course 4 Artist Vars 8_authored_hint": {
          "Course_4_Artist_Vars_8_a": "<p>If you divide your starting length by the number of sides, the length of each side will get shorter as the number of sides gets higher.</p>"
        },
        "Course 4 Bee Params 7_authored_hint": {
          "notice_pattern": "<p>Do you see a pattern in how the number of nectar changes? </p>",
          "count_with_for": "<p>Notice that the nectar goes up in steps. What kind of block can you use to do the same thing many times while counting up?</p>"
        },
        "Course 4 Bee Params 8_authored_hint": {
          "Course_4_Bee_Params_8_a": "<p>It's okay to ask for a honey number and a nectar number each time.  If there's none of something, the number can be 0.</p>"
        },
        "Course 4 Play Lab Params 2_authored_hint": {
          "Course_4_Play_Lab_Params_2_a": "<p>You will need to click \"edit\" on the jump function and update it so that it uses the <code>height</code> parameter.</p>"
        },
        "Course 4 Play Lab Vars 2_authored_hint": {
          "Course_4_Play_Lab_Vars_2_a": "<p>Make sure to set the number for <code>dog_speed</code> to something larger than <code>cat_speed</code>.</p>"
        },
        "Course 4 Play Labs For Loops 2_authored_hint": {
          "Course_4_Play_Labs_For_Loops_2_a": "<p>What would you add to your <code>for</code> loop every time to skip the even numbers?</p>"
        },
        "Course 4 Playlab For Loop Freeplay_authored_hint": {},
        "Course 4 Playlab For Loops 4b_authored_hint": {
          "Course_4_Playlab_For_Loops_4b_a": "<p>The flags are about 330 pixels away from the characters.</p>",
          "Course_4_Playlab_For_Loops_4b_b": "<p>How can you make each character reach 330 pixels in the same number of moves with different starting and stopping numbers?</p>",
          "Course_4_Playlab_For_Loops_4b_c": "<p>Remember, it doesn't matter how much a character passes the flag by on its last step, as long as it takes each character the same number of steps to get to the flag.</p>"
        },
        "Course 4 Playlab For Loops 5b_authored_hint": {
          "Course_4_Playlab_For_Loops_5b_a": "<p>The characters are about 175 pixels away from the center.</p>",
          "Course_4_Playlab_For_Loops_5b_b": "<p>Remember, a character's next step will be longer than their last, since the counter keeps getting larger.</p>"
        },
        "Course 4 Playlab For Loops 6b_authored_hint": {},
        "Course 4 SCF 1_authored_hint": {
          "Course_4_SCF_1_a": "<p>Each hexagon has 40 pixel sides.</p>",
          "Course_4_SCF_1_b": "<p>There is a 120 pixel jump between each hexagon in each horizontal line.</p>",
          "Course_4_SCF_1_c": "<p>Before you draw the second row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  </p>\n<p>Once you're in the correct vertical location, you have to turn your artist back again and jump backward 320 pixels.</p>",
          "Course_4_SCF_1_d": "<p>Before you draw the third row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  </p>\n<p>Once you're in the correct vertical location, you have to turn your artist back again and jump backward 440 pixels (120 pixels farther than your <code>shift down/forward</code> function. </p>",
          "Course_4_SCF_1_e": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"draw a line of hexagons\"></mutation>\n            <next>\n              <block type=\"procedures_callnoreturn\">\n              <mutation name=\"shift down/forward\"></mutation>\n                <next>\n                  <block type=\"procedures_callnoreturn\">\n                  <mutation name=\"draw a line of hexagons\"></mutation>\n                    <next>\n                      <block type=\"procedures_callnoreturn\">\n                      <mutation name=\"shift down/backward\"></mutation>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\">\n  <mutation></mutation>\n    <title name=\"NAME\">draw a hexagon</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">6</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"draw_move\" inline=\"true\">\n            <title name=\"DIR\">moveForward</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">40</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnRight</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">60</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\">\n  <mutation></mutation>\n    <title name=\"NAME\">shift down/backward</title>\n    <statement name=\"STACK\">\n      <block type=\"draw_turn\" inline=\"true\">\n        <title name=\"DIR\">turnRight</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">60</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"jump\" inline=\"true\">\n            <title name=\"DIR\">jumpForward</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">40</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnLeft</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">60</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"jump\" inline=\"true\">\n                    <title name=\"DIR\">jumpBackward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">440</title>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\">\n  <mutation></mutation>\n    <title name=\"NAME\">draw a line of hexagons</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"draw a hexagon\"></mutation>\n            <next>\n              <block type=\"jump\" inline=\"true\">\n                <title name=\"DIR\">jumpForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">120</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\">\n  <mutation></mutation>\n    <title name=\"NAME\">shift down/forward</title>\n    <statement name=\"STACK\">\n      <block type=\"draw_turn\" inline=\"true\">\n        <title name=\"DIR\">turnRight</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">60</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"jump\" inline=\"true\">\n            <title name=\"DIR\">jumpForward</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">40</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnLeft</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">60</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"jump\" inline=\"true\">\n                    <title name=\"DIR\">jumpBackward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">320</title>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "Course 4 SCF 1a_authored_hint": {
          "Course_4_SCF_1a_a": "<p>Remember your functions from stage 16.</p>",
          "Course_4_SCF_1a_b": "<p>Look at this path as your main route:  </p>\n<p><img src=\"https://images.code.org/1c3feab70af706409b3a05af4dc83c2e-image-1469726967858.png\"></p>",
          "Course_4_SCF_1a_c": "<p>You should consider using a <code>for loop</code>. Not for the steps, but for the function parameter.</p>",
          "Course_4_SCF_1a_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\" uservisible=\"false\" y=\"14\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\" uservisible=\"false\">\n        <title name=\"VAR\">left</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\" uservisible=\"false\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\" uservisible=\"false\">\n            <title name=\"VAR\">right</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\" uservisible=\"false\">\n                <title name=\"NUM\">0</title>\n              </block>\n            </value>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">21</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"maze_if\">\n                <title name=\"DIR\">isPathLeft</title>\n                <statement name=\"DO\">\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"get nectar\">\n                    <arg name=\"dir\"></arg>\n                    <arg name=\"counter\"></arg>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">left</title>\n                      </block>\n                    </value>\n                    <value name=\"ARG1\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                    <next>\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"maze_if\">\n                                <title name=\"DIR\">isPathRight</title>\n                                <statement name=\"DO\">\n                                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                    <mutation name=\"get nectar\">\n                                    <arg name=\"dir\"></arg>\n                                    <arg name=\"counter\"></arg>\n                                    </mutation>\n                                    <value name=\"ARG0\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">right</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"ARG1\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">counter</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n    <arg name=\"dir\"></arg>\n    <arg name=\"counter\"></arg>\n    </mutation>\n    <title name=\"NAME\">get nectar</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_if\" inline=\"false\">\n      <mutation else=\"1\"></mutation>\n        <value name=\"IF0\">\n          <block type=\"logic_compare\" inline=\"true\" movable=\"false\">\n            <title name=\"OP\">EQ</title>\n            <value name=\"A\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">dir</title>\n              </block>\n            </value>\n            <value name=\"B\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">left</title>\n              </block>\n            </value>\n          </block>\n        </value>\n        <statement name=\"DO0\">\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnLeft</title>\n          </block>\n        </statement>\n        <statement name=\"ELSE\">\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n          </block>\n        </statement>\n        <next>\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">3</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                <block type=\"maze_nectar\"></block>\n                </statement>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">3</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveBackward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"controls_if\" inline=\"false\">\n                      <mutation else=\"1\"></mutation>\n                        <value name=\"IF0\">\n                          <block type=\"logic_compare\" inline=\"true\" movable=\"false\">\n                            <title name=\"OP\">EQ</title>\n                            <value name=\"A\">\n                              <block type=\"parameters_get\">\n                                <title name=\"VAR\">dir</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">left</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                        <statement name=\"DO0\">\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnRight</title>\n                          </block>\n                        </statement>\n                        <statement name=\"ELSE\">\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                          </block>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "Course 4 SCF 1b_authored_hint": {
          "Course_4_SCF_1b_a": "<p>Notice that the shape of all honey points is similar.  </p>\n<p>Good place for a function!</p>",
          "Course_4_SCF_1b_b": "<p>Look at this idea for how the bee might travel:  </p>\n<p><img src=\"https://images.code.org/996ab4a2de6048cbb99b84c56cc4ad61-image-1469726859769.png\"></p>",
          "Course_4_SCF_1b_c": "<p>You should consider using a <code>for loop</code> for the distance the bee travels.</p>",
          "Course_4_SCF_1b_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"make honey up and over\"></mutation>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                        <next>\n                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                            <value name=\"TIMES\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"maze_move\">\n                                <title name=\"DIR\">moveForward</title>\n                              </block>\n                            </statement>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n  <mutation></mutation>\n    <title name=\"NAME\">make honey up and over</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_move\">\n        <title name=\"DIR\">moveForward</title>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n            <next>\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"maze_honey\">\n                    <next>\n                      <block type=\"maze_honey\">\n                        <next>\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveBackward</title>\n                            <next>\n                              <block type=\"maze_turn\">\n                                <title name=\"DIR\">turnLeft</title>\n                                <next>\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveBackward</title>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "Course 4 SCF 2_authored_hint": {
          "Course_4_SCF_2_a": "<p>Each octagon has 40 pixel sides.</p>",
          "Course_4_SCF_2_b": "<p>There is a 136 pixel jump between each octagon in each horizontal line.</p>",
          "Course_4_SCF_2_c": "<p>Before you draw the second row of octagons, you need to turn right by 45 degrees and jump forward 96 pixels.  </p>\n<p>Once you're in the correct vertical location, you have to turn your artist back again and jump backward 408 pixels. </p>",
          "Course_4_SCF_2_d": "<p>Notice that because there are fewer octagons in the even rows, you don't have to jump back any further to get to the starting place for the odd rows.  </p>\n<p>This means you can use the same function for all rows.</p>",
          "Course_4_SCF_2_e": "<p><strong>Solution:</strong></p>\n<xml>\n<block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\" inline=\"false\">\n            <mutation name=\"draw octagons\">\n            <arg name=\"numOctagons\"></arg>\n            </mutation>\n            <value name=\"ARG0\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"procedures_callnoreturn\">\n              <mutation name=\"shift down\"></mutation>\n                <next>\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"draw octagons\">\n                    <arg name=\"numOctagons\"></arg>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">3</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"procedures_callnoreturn\">\n                      <mutation name=\"shift down\"></mutation>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"procedures_callnoreturn\" inline=\"false\">\n            <mutation name=\"draw octagons\">\n            <arg name=\"numOctagons\"></arg>\n            </mutation>\n            <value name=\"ARG0\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation>\n    <arg name=\"numOctagons\"></arg>\n    </mutation>\n    <title name=\"NAME\">draw octagons</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"parameters_get\">\n            <title name=\"VAR\">numOctagons</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"draw an octagon\"></mutation>\n            <next>\n              <block type=\"jump\" inline=\"true\">\n                <title name=\"DIR\">jumpForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">136</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n  <mutation></mutation>\n    <title name=\"NAME\">draw an octagon</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">8</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"draw_move\" inline=\"true\">\n            <title name=\"DIR\">moveForward</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">40</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnRight</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">45</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n  <mutation></mutation>\n    <title name=\"NAME\">shift down</title>\n    <statement name=\"STACK\">\n      <block type=\"draw_turn\" inline=\"true\">\n        <title name=\"DIR\">turnRight</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">45</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"jump\" inline=\"true\">\n            <title name=\"DIR\">jumpForward</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">96</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnLeft</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">45</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"jump\" inline=\"true\">\n                    <title name=\"DIR\">jumpBackward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">408</title>\n                      </block>\n                    </value>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "Course 4 SCF 3_authored_hint": {
          "Course_4_SCF_3_a": "<p><img src=\"https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif\"></p>",
          "Course_4_SCF_3_b": "<p>This is a series of octagons with sides that are <code>counter</code> pixels long. </p>",
          "Course_4_SCF_3_c": "<p>Each octagon is called from inside a <code>for</code> loop that goes from 200 down to 2 by 2. </p>",
          "Course_4_SCF_3_d": "<p>Don't forget to turn by 22.5 degrees at the end of each iteration. </p>",
          "Course_4_SCF_3_e": "<p>Both the color of each octagon and the width of the pen are controlled by the <code>counter</code> variable.</p>",
          "Course_4_SCF_3_f": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation>\n    <arg name=\"length\"></arg>\n    </mutation>\n    <title name=\"NAME\">draw an octagon</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">8</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"draw_move\" inline=\"true\">\n            <title name=\"DIR\">moveForward</title>\n            <value name=\"VALUE\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnRight</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">45</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for_counter\" inline=\"true\">\n      <mutation counter=\"counter\"></mutation>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">200</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_rgb\" inline=\"false\">\n                <value name=\"RED\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">MINUS</title>\n                    <value name=\"A\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">255</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <value name=\"GREEN\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <value name=\"BLUE\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">MULTIPLY</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n              </block>\n            </value>\n            <next>\n              <block type=\"draw_width\" inline=\"false\">\n                <value name=\"WIDTH\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">DIVIDE</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">4</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"draw an octagon\">\n                    <arg name=\"length\"></arg>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">22.5</title>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 1_authored_hint": {
          "Course_4_SCFL_1_a": "<p>Take a look at this option for movement:  </p>\n<p><img src=\"https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png\"></p>",
          "Course_4_SCFL_1_b": "<p>Try using two <code>for</code> loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.</p>",
          "Course_4_SCFL_1_c": "<p>Notice that one <code>for</code> loop needs several regular loops inside that repeat <code>counter</code> times to make the increasing stair pattern. </p>\n<p>The other <code>for</code> loop only needs one regular loop to make <code>counter</code> amount of honey.</p>",
          "Course_4_SCFL_1_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">counter</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_nectar\"/>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnLeft</title>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"maze_moveForward\"/>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnRight</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"controls_for\" inline=\"true\">\n                    <title name=\"VAR\">counter</title>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\">\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"maze_moveForward\">\n                                <next>\n                                  <block type=\"maze_turn\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <next>\n                                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                                        <value name=\"TIMES\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">counter</title>\n                                          </block>\n                                        </value>\n                                        <statement name=\"DO\">\n                                          <block type=\"maze_honey\"/>\n                                        </statement>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 1a_authored_hint": {
          "Course_4_SCFL_1a_a": "<p>You may have to travel farther overall to use the smallest number of blocks.</p>",
          "Course_4_SCFL_1a_b": "<p>Take a look at this option for movement:  </p>\n<p><img src=\"https://images.code.org/253d710ff7d1b494fe8fd20cfc92baaf-image-1469726263579.png\"></p>",
          "Course_4_SCFL_1a_c": "<p>A <code>for loop</code> will help you execute the same pattern, but with a changing number of steps.  Notice that the number of steps needed decreases from 7 to 5 by 1.</p>",
          "Course_4_SCFL_1a_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">7</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">5</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\"/>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <next>\n                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                            <value name=\"TIMES\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">2</title>\n                              </block>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"maze_moveForward\"/>\n                            </statement>\n                            <next>\n                              <block type=\"maze_turn\">\n                                <title name=\"DIR\">turnLeft</title>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 1b_authored_hint": {
          "Course_4_SCFL_1b_a": "<p>Try using a <code>for loop</code>.</p>",
          "Course_4_SCFL_1b_b": "<p>Take a look at this option for movement:  </p>\n<p><img src=\"https://images.code.org/1957633c453f4025a3fd6ce0e201398b-image-1469642319721.png\"></p>",
          "Course_4_SCFL_1b_c": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">counter</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\"/>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 2_authored_hint": {
          "Course_4_SCFL_2_a": "<p>Take a look at this option for movement:  </p>\n<p><img src=\"https://images.code.org/a69c63a039031254097f19231dd7bf95-image-1469726483169.png\"></p>",
          "Course_4_SCFL_2_b": "<p>Notice that there are three points during each iteration of this <code>for</code> loop where you stop to interact with objects.</p>",
          "Course_4_SCFL_2_c": "<p>During each iteration of the <code>for</code> loop, the number for each object relates to the <code>counter</code> variable in some way.</p>",
          "Course_4_SCFL_2_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_moveForward\">\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_nectar\"/>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                    <next>\n                      <block type=\"maze_moveForward\">\n                        <next>\n                          <block type=\"maze_moveForward\">\n                            <next>\n                              <block type=\"controls_repeat_ext\" inline=\"true\">\n                                <value name=\"TIMES\">\n                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                    <title name=\"OP\">MULTIPLY</title>\n                                    <value name=\"A\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">counter</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"B\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">3</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_honey\"/>\n                                </statement>\n                                <next>\n                                  <block type=\"maze_turn\">\n                                    <title name=\"DIR\">turnLeft</title>\n                                    <next>\n                                      <block type=\"maze_moveForward\">\n                                        <next>\n                                          <block type=\"maze_moveForward\">\n                                            <next>\n                                              <block type=\"maze_turn\">\n                                                <title name=\"DIR\">turnRight</title>\n                                                <next>\n                                                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                                                    <value name=\"TIMES\">\n                                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                                        <title name=\"OP\">POWER</title>\n                                                        <value name=\"A\">\n                                                          <block type=\"math_number\">\n                                                            <title name=\"NUM\">2</title>\n                                                          </block>\n                                                        </value>\n                                                        <value name=\"B\">\n                                                          <block type=\"variables_get\">\n                                                            <title name=\"VAR\">counter</title>\n                                                          </block>\n                                                        </value>\n                                                      </block>\n                                                    </value>\n                                                    <statement name=\"DO\">\n                                                      <block type=\"maze_nectar\"/>\n                                                    </statement>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 3_authored_hint": {
          "Course_4_SCFL_3_a": "<p>The <code>pen width</code> is 1. The first square has 50 pixel sides, and each square is 50 pixels wider than the last.</p>",
          "Course_4_SCFL_3_b": "<p>The opacity on the brush is always <code>counter</code>/2.</p>",
          "Course_4_SCFL_3_c": "<p>After you make each square, don't forget to jump backward, turn, jump again, then turn back!</p>",
          "Course_4_SCFL_3_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_picker\">\n                <title name=\"COLOUR\">#0000cd</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_for_counter\" inline=\"true\">\n              <mutation counter=\"counter\"></mutation>\n                <value name=\"FROM\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <value name=\"TO\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">350</title>\n                  </block>\n                </value>\n                <value name=\"BY\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">2</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">4</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"draw_move\" inline=\"true\">\n                            <title name=\"DIR\">moveForward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"jump\" inline=\"true\">\n                            <title name=\"DIR\">jumpBackward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">25</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"jump\" inline=\"true\">\n                                    <title name=\"DIR\">jumpBackward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">25</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 4_authored_hint": {
          "Course_4_SCFL_4_a": "<p>The color change happens using the <code>set color with red, green, blue</code> block.  Red is always the value of <code>counter</code>, green is always <code>255 - counter</code>, and blue remains constant at 255 exactly.</p>",
          "Course_4_SCFL_4_b": "<p>Each shape is a square with sides that are <code>counter</code> pixels long, starting with 5px, and increasing by 5px all the way up to 200px.</p>",
          "Course_4_SCFL_4_c": "<p>The artist turns 15 degrees between each square.</p>",
          "Course_4_SCFL_4_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">200</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                <value name=\"COLOUR\">\n                  <block type=\"colour_rgb\" inline=\"false\">\n                    <value name=\"RED\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"GREEN\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">255</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <value name=\"BLUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">255</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">4</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_turn_by_constant\">\n                            <title name=\"DIR\">turnRight</title>\n                            <title name=\"VALUE\">90</title>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnLeft</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">15</title>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 6_authored_hint": {
          "Course_4_SCFL_6_a": "<p>The color change happens using the <code>set color with red, green, blue</code> block.  Red is set constant at 255, green is always the value of <code>counter</code>, and blue is always <code>255 - counter</code>.</p>",
          "Course_4_SCFL_6_b": "<p>The code for this is much more simple than you might think.  Just set the color inside the <code>for loop</code>, move forward, then turn.</p>",
          "Course_4_SCFL_6_c": "<p>The <code>for loop</code> goes from 5 to 250 by 2. </p>",
          "Course_4_SCFL_6_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">250</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                <value name=\"COLOUR\">\n                  <block type=\"colour_rgb\" inline=\"false\">\n                    <value name=\"RED\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">255</title>\n                      </block>\n                    </value>\n                    <value name=\"GREEN\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"BLUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">255</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">moveForward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnRight</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">80</title>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCFL 7_authored_hint": {
          "Course_4_SCFL_7_a": "<p>The color change happens using the <code>set color with red, green, blue</code> block.  Red is set to <code>counter</code>. Green is  <code>255 - counter</code>, and blue is set constant at 255.</p>",
          "Course_4_SCFL_7_b": "<p>This drawing is made using two similar <code>for loops</code>.  One goes from 5 to 200 by 2, the other goes from 200 to 5 by 2. </p>",
          "Course_4_SCFL_7_c": "<p>Inside each <code>for loop</code> you move forward 5 pixels before you turn by <code>360 / counter</code>. Don't forget to set your brush to width <code>counter</code> before you do!</p>",
          "Course_4_SCFL_7_d": "<p>You'll need to turn left by 225 degrees between the two <code>for loops</code>.</p>",
          "Course_4_SCFL_7_e": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n        <value name=\"VALUE\">\n          <block type=\"math_number_dropdown\">\n            <title name=\"NUM\" config=\"100,90,80,70,60,50,40,30,20,10,0\">20</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">200</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_width\" inline=\"false\">\n                <value name=\"WIDTH\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                    <value name=\"COLOUR\">\n                      <block type=\"colour_rgb\" inline=\"false\">\n                        <value name=\"RED\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <value name=\"GREEN\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">MINUS</title>\n                            <value name=\"A\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">255</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                        <value name=\"BLUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">255</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">5</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_turn\" inline=\"true\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_arithmetic\" inline=\"true\">\n                                <title name=\"OP\">DIVIDE</title>\n                                <value name=\"A\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">360</title>\n                                  </block>\n                                </value>\n                                <value name=\"B\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">counter</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"draw_turn\" inline=\"true\">\n                <title name=\"DIR\">turnLeft</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">225</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"controls_for_counter\" inline=\"true\">\n                  <mutation counter=\"counter\"></mutation>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">200</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">5</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"draw_width\" inline=\"false\">\n                        <value name=\"WIDTH\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                            <value name=\"COLOUR\">\n                              <block type=\"colour_rgb\" inline=\"false\">\n                                <value name=\"RED\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">counter</title>\n                                  </block>\n                                </value>\n                                <value name=\"GREEN\">\n                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                    <title name=\"OP\">MINUS</title>\n                                    <value name=\"A\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">255</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"B\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">counter</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                                <value name=\"BLUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">255</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_move\" inline=\"true\">\n                                <title name=\"DIR\">moveForward</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">5</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_turn\" inline=\"true\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">360</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">counter</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 1_authored_hint": {
          "Course_4_SCV_1_a": "<p>Variables are helpful because you can add to them each time through a loop. </p>",
          "Course_4_SCV_1_b": "<p>This puzzle has one loop that creates the polygon, one loop that repeats the polygon <code>sides</code> times, then another loop that does it all again after adding 5 to <code>sides</code>.</p>",
          "Course_4_SCV_1_c": "<p>Using a variable for <code>sides</code> and one for <code>length</code> makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.</p>",
          "Course_4_SCV_1_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">length</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">500</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">sides</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">0</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                        <value name=\"COLOUR\">\n                          <block type=\"colour_random\"/>\n                        </value>\n                        <next>\n                          <block type=\"variables_set\" inline=\"false\">\n                            <title name=\"VAR\">sides</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_arithmetic\" inline=\"true\">\n                                <title name=\"OP\">ADD</title>\n                                <value name=\"A\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">sides</title>\n                                  </block>\n                                </value>\n                                <value name=\"B\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">5</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"controls_repeat_ext\" inline=\"true\">\n                                <value name=\"TIMES\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">sides</title>\n                                  </block>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                                    <value name=\"TIMES\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">sides</title>\n                                      </block>\n                                    </value>\n                                    <statement name=\"DO\">\n                                      <block type=\"draw_move\" inline=\"true\">\n                                        <title name=\"DIR\">moveForward</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_arithmetic\" inline=\"true\">\n                                            <title name=\"OP\">DIVIDE</title>\n                                            <value name=\"A\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">length</title>\n                                              </block>\n                                            </value>\n                                            <value name=\"B\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">sides</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"draw_turn\" inline=\"true\">\n                                            <title name=\"DIR\">turnLeft</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"math_arithmetic\" inline=\"true\">\n                                                <title name=\"OP\">DIVIDE</title>\n                                                <value name=\"A\">\n                                                  <block type=\"math_number\">\n                                                    <title name=\"NUM\">360</title>\n                                                  </block>\n                                                </value>\n                                                <value name=\"B\">\n                                                  <block type=\"variables_get\">\n                                                    <title name=\"VAR\">sides</title>\n                                                  </block>\n                                                </value>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </statement>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnRight</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_arithmetic\" inline=\"true\">\n                                            <title name=\"OP\">DIVIDE</title>\n                                            <value name=\"A\">\n                                              <block type=\"math_number\">\n                                                <title name=\"NUM\">360</title>\n                                              </block>\n                                            </value>\n                                            <value name=\"B\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">sides</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 2_authored_hint": {
          "Course_4_SCV_2_a": "<p>The completed image is made up of 10 of these \"flowers\":<br><img src=\"https://images.code.org/bac2a606dfa59c00409294499540267d-image-1469641972385.png\"></p>\n<p>...which are made up of 10 of these decagons:<br><img src=\"https://images.code.org/1e15f278c9c1606f90a2490ec3a94eb4-image-1469642051512.png\"></p>",
          "Course_4_SCV_2_b": "<p>This design uses nested loops (three deep). All loops run <code>sides</code> times. </p>",
          "Course_4_SCV_2_c": "<p>The artist turns to the left when creating each decagon, but turns to the right in both of the other loops.</p>",
          "Course_4_SCV_2_d": "<p>To prevent all of your 10 petal \"flowers\" from getting drawn in the same place, make sure to jump forward by <code>length</code>/<code>sides</code> before you turn 360/<code>sides</code> degrees as part of your outermost loop.</p>",
          "Course_4_SCV_2_e": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">length</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">400</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">sides</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">10</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">sides</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                        <value name=\"COLOUR\">\n                          <block type=\"colour_picker\">\n                            <title name=\"COLOUR\">#ff0000</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                            <value name=\"TIMES\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">sides</title>\n                              </block>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"controls_repeat_ext\" inline=\"true\">\n                                <value name=\"TIMES\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">sides</title>\n                                  </block>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"draw_move\" inline=\"true\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">length</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">sides</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_arithmetic\" inline=\"true\">\n                                            <title name=\"OP\">DIVIDE</title>\n                                            <value name=\"A\">\n                                              <block type=\"math_number\">\n                                                <title name=\"NUM\">360</title>\n                                              </block>\n                                            </value>\n                                            <value name=\"B\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">sides</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </statement>\n                                <next>\n                                  <block type=\"draw_turn\" inline=\"true\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">360</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">sides</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </statement>\n                            <next>\n                              <block type=\"jump\" inline=\"true\">\n                                <title name=\"DIR\">jumpForward</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                    <title name=\"OP\">DIVIDE</title>\n                                    <value name=\"A\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">length</title>\n                                      </block>\n                                    </value>\n                                    <value name=\"B\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">sides</title>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_turn\" inline=\"true\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                        <title name=\"OP\">DIVIDE</title>\n                                        <value name=\"A\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">360</title>\n                                          </block>\n                                        </value>\n                                        <value name=\"B\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">sides</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </value>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 3_authored_hint": {
          "Course_4_SCV_3_a": "<p>Use your math block to add and subtract points to the <code>points</code> variable when sprites collide. </p>",
          "Course_4_SCV_3_b": "<p>You can change the parameter for how far you move your sprite each time one of the arrow keys is pressed.</p>",
          "Course_4_SCV_3_c": "<p><strong>Solution:</strong></p>\n<xml><block type=\"when_run\"><next><block type=\"variables_set\" inline=\"false\"><title name=\"VAR\">points</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></next></block><block type=\"studio_whenArrow\"><title name=\"VALUE\">up</title><next><block type=\"studio_moveDistanceParams\" inline=\"true\"><title name=\"SPRITE\">0</title><title name=\"DIR\">1</title><value name=\"DISTANCE\"><block type=\"math_number\"><title name=\"NUM\">25</title></block></value></block></next></block><block type=\"studio_whenArrow\"><title name=\"VALUE\">down</title><next><block type=\"studio_moveDistanceParams\" inline=\"true\"><title name=\"SPRITE\">0</title><title name=\"DIR\">4</title><value name=\"DISTANCE\"><block type=\"math_number\"><title name=\"NUM\">25</title></block></value></block></next></block><block type=\"studio_whenArrow\"><title name=\"VALUE\">left</title><next><block type=\"studio_moveDistanceParams\" inline=\"true\"><title name=\"SPRITE\">0</title><title name=\"DIR\">8</title><value name=\"DISTANCE\"><block type=\"math_number\"><title name=\"NUM\">25</title></block></value></block></next></block><block type=\"studio_whenArrow\"><title name=\"VALUE\">right</title><next><block type=\"studio_moveDistanceParams\" inline=\"true\"><title name=\"SPRITE\">0</title><title name=\"DIR\">2</title><value name=\"DISTANCE\"><block type=\"math_number\"><title name=\"NUM\">25</title></block></value></block></next></block><block type=\"studio_whenSpriteCollided\"><title name=\"SPRITE1\">0</title><title name=\"SPRITE2\">1</title><next><block type=\"variables_set\" inline=\"false\"><title name=\"VAR\">points</title><value name=\"VALUE\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">ADD</title><value name=\"A\"><block type=\"variables_get\"><title name=\"VAR\">points</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></value></block></next></block><block type=\"studio_whenSpriteCollided\"><title name=\"SPRITE1\">0</title><title name=\"SPRITE2\">2</title><next><block type=\"variables_set\" inline=\"false\"><title name=\"VAR\">points</title><value name=\"VALUE\"><block type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">ADD</title><value name=\"A\"><block type=\"variables_get\"><title name=\"VAR\">points</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">3</title></block></value></block></value></block></next></block>\n<block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">1</title>\n    <title name=\"SPRITE2\">2</title>\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">points</title>\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">MINUS</title>\n            <value name=\"A\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">points</title>\n              </block>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 4_authored_hint": {
          "Course_4_SCV_4_a": "<p>Three variables will help you out here.  One for units of nectar, one for units of honey, and one for how far the bee should move each iteration.</p>",
          "Course_4_SCV_4_b": "<p>It will be very helpful to use three loops inside of your main loop.  One for moving forward, one for collecting nectar and one for making honey. </p>",
          "Course_4_SCV_4_c": "<p>Take a look at this option for movement:  </p>\n<p><img src=\"https://images.code.org/78f8fb83da67c5b80126555a362b8b20-image-1469641782259.png\"></p>",
          "Course_4_SCV_4_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">honey</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">nectar</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">6</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">5</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">nectar</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">1</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\"/>\n                    </statement>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">nectar</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"maze_nectar\"/>\n                        </statement>\n                        <next>\n                          <block type=\"maze_moveForward\">\n                            <next>\n                              <block type=\"controls_repeat_ext\" inline=\"true\">\n                                <value name=\"TIMES\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">honey</title>\n                                  </block>\n                                </value>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_honey\"/>\n                                </statement>\n                                <next>\n                                  <block type=\"maze_moveForward\">\n                                    <next>\n                                      <block type=\"maze_turn\">\n                                        <title name=\"DIR\">turnRight</title>\n                                        <next>\n                                          <block type=\"variables_set\" inline=\"false\">\n                                            <title name=\"VAR\">honey</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"math_arithmetic\" inline=\"true\">\n                                                <title name=\"OP\">ADD</title>\n                                                <value name=\"A\">\n                                                  <block type=\"variables_get\">\n                                                    <title name=\"VAR\">honey</title>\n                                                  </block>\n                                                </value>\n                                                <value name=\"B\">\n                                                  <block type=\"math_number\">\n                                                    <title name=\"NUM\">1</title>\n                                                  </block>\n                                                </value>\n                                              </block>\n                                            </value>\n                                            <next>\n                                              <block type=\"variables_set\" inline=\"false\">\n                                                <title name=\"VAR\">nectar</title>\n                                                <value name=\"VALUE\">\n                                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                                    <title name=\"OP\">MINUS</title>\n                                                    <value name=\"A\">\n                                                      <block type=\"variables_get\">\n                                                        <title name=\"VAR\">nectar</title>\n                                                      </block>\n                                                    </value>\n                                                    <value name=\"B\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">1</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </value>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 5_authored_hint": {
          "Course_4_SCV_5_a": "<p>Take a look at this option for movement:</p>\n<p><img src=\"https://images.code.org/7f6f09c55cf9552a91fc1d33f44a7315-image-1469641639330.png\"></p>",
          "Course_4_SCV_5_b": "<p>Each time through the loop, the flowers have two less nectar and the bee needs to make one more honey.</p>",
          "Course_4_SCV_5_c": "<p>Notice that at the beginning of the outside loop, the bee moves as many times as there is nectar in the next flower.</p>",
          "Course_4_SCV_5_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">honey</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">nectar</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">3</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">nectar</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                        <next>\n                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                            <value name=\"TIMES\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">nectar</title>\n                              </block>\n                            </value>\n                            <statement name=\"DO\">\n                              <block type=\"maze_nectar\"/>\n                            </statement>\n                            <next>\n                              <block type=\"maze_move\">\n                                <title name=\"DIR\">moveForward</title>\n                                <next>\n                                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                                    <value name=\"TIMES\">\n                                      <block type=\"variables_get\">\n                                        <title name=\"VAR\">honey</title>\n                                      </block>\n                                    </value>\n                                    <statement name=\"DO\">\n                                      <block type=\"maze_honey\"/>\n                                    </statement>\n                                    <next>\n                                      <block type=\"variables_set\" inline=\"false\">\n                                        <title name=\"VAR\">honey</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">ADD</title>\n            <value name=\"A\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">honey</title>\n              </block>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"variables_set\" inline=\"false\">\n                                            <title name=\"VAR\">nectar</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">MINUS</title>\n            <value name=\"A\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">nectar</title>\n              </block>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "Course 4 SCV 6_authored_hint": {
          "Course_4_SCV_6_a": "<p>Take a look at what a single completed shape looks like</p>\n<p><img src=\"https://images.code.org/9e30d3a87186cefe730984feee195806-image-1469642178866.png\"></p>",
          "Course_4_SCV_6_b": "<p>You will benefit from creating 8 variables: red1, green1, blue1, red2, green2, blue2, length, and sides.</p>",
          "Course_4_SCV_6_c": "<p>Each of the shape's 5 sides is broken up into pieces of <code>length</code>/<code>sides</code> where the zig is teal (rgb = 0,175,200) and the zag is purple (rgb = 100, 50, 150).</p>",
          "Course_4_SCV_6_d": "<p>To zig, turn left by <code>360</code>/<code>sides</code>.  To zag, turn right by <code>360</code>/<code>sides</code>. </p>",
          "Course_4_SCV_6_e": "<p>The rest of the program is very standard for making a full 360 degree rotation from a shape, except that we are overlapping the shapes by half, so we have to turn right by <code>180</code>/<code>sides</code>, which means that we need twice as many of them as usual (<code>sides</code>*<code>2</code> repetitions). </p>",
          "Course_4_SCV_6_f": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">red1</title>\n            <value name=\"VALUE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">0</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">green1</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">175</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"variables_set\" inline=\"false\">\n                    <title name=\"VAR\">blue1</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">200</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">red2</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">100</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"variables_set\" inline=\"false\">\n                            <title name=\"VAR\">green2</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">50</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"variables_set\" inline=\"false\">\n                                <title name=\"VAR\">blue2</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">150</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"variables_set\" inline=\"false\">\n                                    <title name=\"VAR\">length</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">70</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"variables_set\" inline=\"false\">\n                                        <title name=\"VAR\">sides</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">5</title>\n                                          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"controls_repeat_ext\" inline=\"true\">\n                                            <value name=\"TIMES\">\n                                              <block type=\"math_arithmetic\" inline=\"true\">\n                                                <title name=\"OP\">MULTIPLY</title>\n                                                <value name=\"A\">\n                                                  <block type=\"math_number\">\n                                                    <title name=\"NUM\">2</title>\n                                                  </block>\n                                                </value>\n                                                <value name=\"B\">\n                                                  <block type=\"variables_get\">\n                                                    <title name=\"VAR\">sides</title>\n                                                  </block>\n                                                </value>\n                                              </block>\n                                            </value>\n                                            <statement name=\"DO\">\n                                              <block type=\"controls_repeat_ext\" inline=\"true\">\n                                                <value name=\"TIMES\">\n                                                  <block type=\"variables_get\">\n                                                    <title name=\"VAR\">sides</title>\n                                                  </block>\n                                                </value>\n                                                <statement name=\"DO\">\n                                                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                                                    <value name=\"TIMES\">\n                                                      <block type=\"variables_get\">\n                                                        <title name=\"VAR\">sides</title>\n                                                      </block>\n                                                    </value>\n                                                    <statement name=\"DO\">\n                                                      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                                                        <value name=\"COLOUR\">\n                                                          <block type=\"colour_rgb\" inline=\"false\">\n                                                            <value name=\"RED\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">red1</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"GREEN\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">green1</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"BLUE\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">blue1</title>\n                                                            </block>\n                                                            </value>\n                                                          </block>\n                                                        </value>\n                                                        <next>\n                                                          <block type=\"draw_move\" inline=\"true\">\n                                                            <title name=\"DIR\">moveForward</title>\n                                                            <value name=\"VALUE\">\n                                                            <block type=\"math_arithmetic\" inline=\"true\">\n                                                            <title name=\"OP\">DIVIDE</title>\n                                                            <value name=\"A\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">length</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"B\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </value>\n                                                            <next>\n                                                            <block type=\"draw_turn\" inline=\"true\">\n                                                            <title name=\"DIR\">turnLeft</title>\n                                                            <value name=\"VALUE\">\n                                                            <block type=\"math_arithmetic\" inline=\"true\">\n                                                            <title name=\"OP\">DIVIDE</title>\n                                                            <value name=\"A\">\n                                                            <block type=\"math_number\">\n                                                            <title name=\"NUM\">360</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"B\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </value>\n                                                            <next>\n                                                            <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                                                            <value name=\"COLOUR\">\n                                                            <block type=\"colour_rgb\" inline=\"false\">\n                                                            <value name=\"RED\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">red2</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"GREEN\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">green2</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"BLUE\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">blue2</title>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </value>\n                                                            <next>\n                                                            <block type=\"draw_move\" inline=\"true\">\n                                                            <title name=\"DIR\">moveForward</title>\n                                                            <value name=\"VALUE\">\n                                                            <block type=\"math_arithmetic\" inline=\"true\">\n                                                            <title name=\"OP\">DIVIDE</title>\n                                                            <value name=\"A\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">length</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"B\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </value>\n                                                            <next>\n                                                            <block type=\"draw_turn\" inline=\"true\">\n                                                            <title name=\"DIR\">turnRight</title>\n                                                            <value name=\"VALUE\">\n                                                            <block type=\"math_arithmetic\" inline=\"true\">\n                                                            <title name=\"OP\">DIVIDE</title>\n                                                            <value name=\"A\">\n                                                            <block type=\"math_number\">\n                                                            <title name=\"NUM\">360</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"B\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </value>\n                                                            </block>\n                                                            </next>\n                                                            </block>\n                                                            </next>\n                                                            </block>\n                                                            </next>\n                                                            </block>\n                                                            </next>\n                                                          </block>\n                                                        </next>\n                                                      </block>\n                                                    </statement>\n                                                    <next>\n                                                      <block type=\"draw_turn\" inline=\"true\">\n                                                        <title name=\"DIR\">turnRight</title>\n                                                        <value name=\"VALUE\">\n                                                          <block type=\"math_arithmetic\" inline=\"true\">\n                                                            <title name=\"OP\">DIVIDE</title>\n                                                            <value name=\"A\">\n                                                            <block type=\"math_number\">\n                                                            <title name=\"NUM\">360</title>\n                                                            </block>\n                                                            </value>\n                                                            <value name=\"B\">\n                                                            <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                            </block>\n                                                            </value>\n                                                          </block>\n                                                        </value>\n                                                      </block>\n                                                    </next>\n                                                  </block>\n                                                </statement>\n                                                <next>\n                                                  <block type=\"draw_turn\" inline=\"true\">\n                                                    <title name=\"DIR\">turnRight</title>\n                                                    <value name=\"VALUE\">\n                                                      <block type=\"math_arithmetic\" inline=\"true\">\n                                                        <title name=\"OP\">DIVIDE</title>\n                                                        <value name=\"A\">\n                                                          <block type=\"math_number\">\n                                                            <title name=\"NUM\">180</title>\n                                                          </block>\n                                                        </value>\n                                                        <value name=\"B\">\n                                                          <block type=\"variables_get\">\n                                                            <title name=\"VAR\">sides</title>\n                                                          </block>\n                                                        </value>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </statement>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "CourseF_PlayLab_vars2_authored_hint": {
          "Course_4_Play_Lab_Vars_2_a": "<p>Make sure to set the number for <code>dog_speed</code> to something larger than <code>cat_speed</code>.</p>"
        },
        "D_Frozen_nested3_authored_hint": {
          "courseD_artist_project3_a": "<p>Use the drop down menu on the <code>turn</code> blocks to choose the angle you need!</p>",
          "courseD_artist_project3_b": "<p>Try nested loops!</p>\n<p>Use the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  </p>\n<ul>\n<li>Try 72 degrees if you are repeating the outer loop 5 times</li>\n<li>Try 60 degrees if you are repeating the outer loop 6 times</li>\n</ul>"
        },
        "D_Frozen_nested4_authored_hint": {
          "courseD_artist_project4_a": "<p>Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:</p>\n<p><img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" /></p>\n<p>Here's a set of hexagons with squares:</p>\n<p><img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" /></p>",
          "courseD_artist_project4_b": "<p>To try this, draw your first snowflake, turn, then draw a second snowflake.</p>"
        },
        "D_Frozen_nested5_authored_hint": {
          "courseD_artist_project4_a": "<p>Lines of 2 hexagons and 4 triangles:</p>\n<p><img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" /></p>"
        },
        "D_Frozen_nested6_authored_hint": {
          "courseD_artist_project1a_a": "<p>This stair step uses a 76 degree turn and repeats 4 times.</p>\n<p><img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" /></p>",
          "courseD_artist_project1a_b": "<p>These patterns are a lot like the stair steps from other puzzles, but using a different angle.</p>"
        },
        "D_Frozen_nested7_authored_hint": {
          "courseD_artist_project2a_a": "<p>This drawing was made by nesting a loop of 4 stairs and a <code>turn right 180 degrees</code> block inside of a <code>repeat 2 times</code> block.</p>\n<p><img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" /></p>"
        },
        "D_Frozen_nested8_authored_hint": {
          "courseD_artist_project3a_a": "<p>You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?</p>"
        },
        "D_Frozen_nested9_authored_hint": {
          "courseD_artist_project4a_a": "<p>Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)</p>\n<p><img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" /></p>"
        },
        "Farmer for Authored Hint testing_authored_hint": {
          "first_hint": "<p>This is the first hint.</p>\n<p>It has <em>some</em> <strong>basic</strong> <code>markup</code></p>",
          "second_hint": "<p>This is the second hint. It has a hint video.</p>",
          "last_hint": "<p>This is the third and final hint. It doesn't have anything special.</p>"
        },
        "Farmer for TTS testing_authored_hint": {
          "first_hint": "<p>This is the first hint.</p>\n<p>It has <em>some</em> <strong>basic</strong> <code>markup</code></p>",
          "second_hint": "<p>This is the second hint. It has an image.</p>\n<p><img src=\"https://images.code.org/cab43107265a683a6216e18faab2353f-image-1452027548372.png\"></p>",
          "last_hint": "<p>This is the third and final hint. It doesn't have anything special.</p>"
        },
        "Function intro Ryan_authored_hint": {
          "Function_intro_Ryan_b": "<p>If you call the functions correctly, this is the path you will travel...</p>",
          "Function_intro_Ryan_a": "<p>You can call a function many times inside of your program!  Try calling it twice to solve this puzzle.</p>"
        },
        "Harvesting_authored_hint": {
          "pointer_harvester_test": "<p>What kind of block can I use to check something and make a decision?</p>"
        },
        "Inspirational Artwork_authored_hint": {
          "brush_width": "<p>We set the brush width to 1, then the color to blue before we did anything else.</p>",
          "double_loop": "<p>Try putting a <code>for loop</code> inside of a <code>repeat</code> loop.</p>",
          "specifics": "<p>The <code>for loop</code> runs from three to seventeen for each of the six \"petals\" before moving on to create the next, drawing shapes with only an odd number of sides.</p>\n<p>The <code>set alpha</code> block uses division to fade the color as the counter gets higher.</p>",
          "after": "<p>When you're done with each \"petal\", be sure to <code>move forward</code> 20 pixels before you make a 60 degree rotation.</p>",
          "solution": "<p><strong>Solution</strong></p>\n<p><img src=\"https://images.code.org/d85a18bd31a09f87b41a818fc8d6c1cc-image-1469641375258.png\" alt=\"Image of Solution Blocks\"></p>"
        },
        "InspirationalArtwork_authored_hint": {},
        "InspirationalArtwork_2018_authored_hint": {},
        "K2.0 sequence 1_authored_hint": {
          "K2.0_sequence_1_a": "<p>This program is missing one block. Can you figure out which one?</p>"
        },
        "K2.0 sequence 10_authored_hint": {
          "K2.0_sequence_10_a": "<p>If you're having trouble, try writing down the steps on a piece of paper first.</p>",
          "K2.0_sequence_10_b": "<p>You will need three different kinds of arrows to solve this puzzle.</p>"
        },
        "K2.0 sequence 12_authored_hint": {
          "K2.0_sequence_12_a": "<p>If the pig isn't moving far enough, try adding another block.</p>"
        },
        "K2.0 sequence 2_authored_hint": {
          "K2.0_sequence_2_a": "<p>One of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?</p>"
        },
        "K2.0 sequence 3_authored_hint": {
          "K2.0_sequence_3_a": "<p>If you are having trouble, try to figure out what the correct path is and then remove the block that doesn't fit.</p>"
        },
        "K2.0 sequence 4_authored_hint": {
          "K2.0_sequence_4_a": "<p>Use 2 different arrow blocks to solve this puzzle!</p>"
        },
        "K2.0 sequence 5_authored_hint": {
          "K2.0_sequence_5": "<p>Your final code should have three movement blocks.</p>"
        },
        "K2.0 sequence 6_authored_hint": {
          "K2.0_sequence_6_a": "<p>There is 1 block that you need to add to move the bird to the pig.</p>",
          "K2.0_sequence_6_b": "<p>If you can't figure out what to do, try drawing the puzzle on paper and use your finger to figure out which way to move.</p>"
        },
        "K2.0 sequence 7_authored_hint": {
          "K2.0_sequence_7_a": "<p>If you're stuck, try drawing the image on paper to see how the bird should move.</p>"
        },
        "K2.0 sequence 8_authored_hint": {
          "K2.0_sequence_8_a": "<p>Stuck? Try tracing the bird's path with your finger.</p>"
        },
        "K2.0 sequence 9_authored_hint": {
          "K2.0_sequence_9_a": "<p>If you're having trouble, try writing down the steps on a piece of paper first.</p>",
          "K2.0_sequence_9_b": "<p>You will need to go three different directions to solve this puzzle.</p>"
        },
        "K2.0 sequence FP_authored_hint": {
          "K2.0_sequence_FP_a": "<p>If the path you need is unclear, use your finger to trace your way from the bird to the pig.</p>"
        },
        "K2.0 sequence pre_authored_hint": {
          "K2.0_sequence_pre_a": "<p>If you are having trouble getting the bird to move, make sure blocks are connected under <code>when run</code>.</p>"
        },
        "MC Agent Freeplay_authored_hint": {
          "MC_HOC_2017_13_Cole_a": "<p>Try having the Agent build some minecart tracks so you can explore the world!</p>"
        },
        "MC_HOC_2017_01_Cole_authored_hint": {
          "MC_HOC_2017_01_Cole_a": "<p>Use your arrow keys to direct the player into the house. End up on the orange square to win.</p>"
        },
        "MC_HOC_2017_01_RETRY_authored_hint": {
          "MC_HOC_2017_01_RETRY_a": "<p>Drag one <code>move forward</code> block from the toolbox to the workspace, and snap it into place beneath the <code>when run</code> block.</p>",
          "MC_HOC_2017_01_RETRY_b": "<p>Don't forget to click \"Run\" to run the code for the Agent.</p>",
          "MC_HOC_2017_01_RETRY_c": "<p>Once the Agent has run all of its code, you can move the player with the arrow keys!</p>"
        },
        "MC_HOC_2017_02_Cole_authored_hint": {
          "MC_HOC_2017_02_Cole_a": "<p>Move the Agent forward two spaces to stand on the pressure plate.  That will open the door for your player.</p>",
          "MC_HOC_2017_02_Cole_b": "<p>Press \"Run\"!</p>\n<p>You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.</p>",
          "MC_HOC_2017_02_Cole_c": "<p>Once the Agent has opened the door, use the arrow keys to move the player to the map!</p>",
          "MC_HOC_2017_02_Cole_d": "<p>Make sure the Agent is following the path outlined on the map!</p>"
        },
        "MC_HOC_2017_02_Will_authored_hint": {
          "MC_HOC_2017_02_Cole_a": "<p>Move the Agent forward two spaces to stand on the pressure plate.  That will open the door for your player.</p>",
          "MC_HOC_2017_02_Cole_b": "<p>Press \"Run Agent\"!</p>\n<p>You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.</p>",
          "MC_HOC_2017_02_Cole_c": "<p>Once the Agent has opened the door, use the arrow keys to move the player to the orange square.</p>"
        },
        "MC_HOC_2017_03_Cole_authored_hint": {
          "MC_HOC_2017_03_Cole_a": "<p>Once you get the Agent to the pressure plate, you can use your arrow keys to walk the player to the compass!</p>",
          "MC_HOC_2017_03_Cole_b": "<p>Does the code feel a little long?  Try using a <code>repeat</code> loop and see if you can figure out how to make it shorter!</p>"
        },
        "MC_HOC_2017_04POINT5_Cole_authored_hint": {
          "MC_HOC_2017_04POINT5_Cole_a": "<p>Crossing these two pressure plates will open the path for the player.</p>\n<p><img src=\"https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png\"></p>"
        },
        "MC_HOC_2017_04POINT5_RYAN_authored_hint": {
          "MC_HOC_2017_04POINT5_RYAN_b": "<p>Use the <code>turn right</code> block to change the agent's direction </p>",
          "MC_HOC_2017_04POINT5_RYAN_a": "<p>The Agent only needs to get to the first pressure plate to let Alex or Steve through to the axe.</p>"
        },
        "MC_HOC_2017_04_Cole_authored_hint": {
          "MC_HOC_2017_04_Cole_a": "<p>The Agent needs to <code>move forward</code> 7 times.  How can you use a <code>repeat</code> loop to make that happen?</p>",
          "MC_HOC_2017_04_Cole_c": "<p>Press \"Run\"!</p>\n<p>You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.</p>",
          "MC_HOC_2017_04_Cole_b": "<p>Once the Agent gets to the pressure plate, the Agent will open the door for the player.</p>"
        },
        "MC_HOC_2017_05_Cole_authored_hint": {
          "MC_HOC_2017_05_Cole_a": "<p>Did you know that you can put more than one piece of code inside of a loop?  Try moving forward <strong>and</strong> placing a plank inside of a <code>repeat</code> to complete this puzzle.</p>",
          "MC_HOC_2017_05_Cole_b": "<p>Get the Agent across the river, building a bridge as you go.</p>"
        },
        "MC_HOC_2017_05_Josh_authored_hint": {
          "MC_HOC_2017_05_Cole_a": "<p>Did you know that you can put more than one piece of code inside of a loop?  Try placing a plank <strong>and</strong> moving forward inside of a <code>repeat</code> to complete this puzzle.</p>"
        },
        "MC_HOC_2017_06_Cole_authored_hint": {
          "MC_HOC_2017_06_Cole_a": "<p>How many times does this loop run?  How many times <em>should</em> it run?</p>",
          "MC_HOC_2017_06_Cole_b": "<p>Help the Agent build a bridge all the way across the water! </p>"
        },
        "MC_HOC_2017_06_Josh_authored_hint": {
          "MC_HOC_2017_06_Cole_a": "<p>Try putting more than one instruction inside of a <code>repeat</code> loop!</p>"
        },
        "MC_HOC_2017_07_Cole_authored_hint": {
          "MC_HOC_2017_07_Cole_c": "<p>All you need to have the Agent do is clear the path to the Minecart.</p>",
          "MC_HOC_2017_07_Cole_a": "<p>To solve this puzzle, figure out what the <code>clear path</code> function does and call it as many times as you need using the small green <code>clear path</code> block from the toolbox.</p>",
          "MC_HOC_2017_07_Cole_b": "<p>Try mixing the function blocks with other blocks from the toolbox to help you solve this puzzle.</p>"
        },
        "MC_HOC_2017_08_RY_authored_hint": {
          "MC_HOC_2017_08_RY_a": "<p>Press \"Run Agent\"!</p>\n<p>You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.</p>",
          "MC_HOC_2017_08_RY_b": "<p>There are LOTS of ways to solve this puzzle.  Try a few!</p>"
        },
        "MC_HOC_2017_08_Will_authored_hint": {
          "MC_HOC_2017_08_RY_a": "<p>Press \"Run Agent\"!</p>\n<p>You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.</p>",
          "MC_HOC_2017_08_RY_b": "<p>There are LOTS of ways to solve this puzzle.  Try a few!</p>"
        },
        "MC_HOC_2017_10_Cole_authored_hint": {
          "MC_HOC_2017_10_Cole_a": "<p>Use functions to make solving this puzzle easier!</p>"
        },
        "MC_HOC_2017_10_RETRY_authored_hint": {
          "MC_HOC_2017_10_Cole_b": "<p>Don't know where to go?  See if you can find the dotted line!</p>",
          "MC_HOC_2017_10_Cole_a": "<p>Use functions to make solving this puzzle easier!</p>"
        },
        "MC_HOC_2017_13_Cole_authored_hint": {
          "MC_HOC_2017_13_Cole_a": "<p>Try having the Agent build some bridges so that Alex or Steve can walk around beyond the edges of the map.</p>"
        },
        "MC_HOC_2017_4.5v2_authored_hint": {
          "MC_HOC_2017_04POINT5_Cole_a": "<p>Crossing these two pressure plates will open the path for the player.</p>\n<p><img src=\"https://images.code.org/9760c20b83d191570858617f8522ddad-image-1507751553614.50.25.png\"></p>"
        },
        "MC_HOC_2017_Ali_authored_hint": {
          "MC_HOC_2017_08_RY_a": "<p>Press \"Run\"!</p>\n<p>You can run your code even if it's not right.  Run and reset your code over and over again until you figure out what's going wrong.</p>",
          "MC_HOC_2017_08_RY_b": "<p>There are LOTS of ways to solve this puzzle.  Try a few!</p>",
          "MC_HOC_2017_08_RY_c": "<p>Try following the dotted line for a simple path through the lava.</p>"
        },
        "MC_HOC_2017_FP10x10_authored_hint": {},
        "MC_HOC_2017_FP10x10_RE_authored_hint": {},
        "MC_HOC_2017_FP20x20_authored_hint": {
          "MC_HOC_2017_13_Cole_a": "<p>Try having the Agent build some minecart tracks so you can explore the world!</p>"
        },
        "MikeStar_authored_hint": {
          "hint1": "<p>Don't give up!</p>"
        },
        "MikeStarHard_authored_hint": {
          "hint1": "<p>Don't give up!</p>"
        },
        "MikeStarNested_authored_hint": {
          "hint1": "<p>Don't give up!</p>"
        },
        "NEW Course 4 Artist Functions 13_authored_hint": {
          "NEW_Course_4_Artist_Functions_13_a": "<p>Try editing the <code>draw a line of squares</code> function so that you don't have to call it twice.</p>",
          "NEW_Course_4_Artist_Functions_13_c": "<p>What code would you need if you were going to try to make a star using regular lines instead of boxes?</p>"
        },
        "NEW Course 4 Artist Functions 4_authored_hint": {
          "NEW_Course_4_Artist_Functions_4_a": "<p>You will have to use a <code>turn right by 120 degrees</code> block after each square.</p>"
        },
        "NEW Course 4 Artist Functions 9_authored_hint": {
          "NEW_Course_4_Artist_Functions_9_a": "<p>Try running the code before you add any blocks.   What makes the drawing look a little off?</p>",
          "NEW_Course_4_Artist_Functions_9_b": "<p>If you can't quite put your finger on what's going wrong, try slowing down the artist's by moving the slider to the left.</p>"
        },
        "NEW Course 4 Artist Params 11_authored_hint": {
          "NEW_Course_4_Artist_Params_11_a": "<p>There is more than one number that needs to be replaced by a variable inside the function.</p>"
        },
        "NEW Course 4 Artist Params 13_authored_hint": {
          "NEW_Course_4_Artist_Params_13_a": "<p>You will need to divide the <em>perimeter</em> by the number of sides in order to keep the shapes the same size overall. </p>"
        },
        "NEW Course 4 Artist Params 14_authored_hint": {
          "NEW_Course_4_Artist_Params_14_a": "<p>It's okay to run the program a few times to figure out how the function works with different parameters.</p>"
        },
        "NEW Course 4 Artist Params inspire_authored_hint": {
          "brush_width": "<p>We set the brush width to 1, then the color to blue before we did anything else.</p>",
          "double_loop": "<p>Try putting a <code>for loop</code> inside of a <code>repeat</code> loop.</p>",
          "specifics": "<p>The <code>for loop</code> runs from three to seventeen for each of the six \"petals\" before moving on to create the next, drawing shapes with only an odd number of sides.</p>\n<p>The <code>set alpha</code> block uses division to fade the color as the counter gets higher.</p>",
          "after": "<p>When you're done with each \"petal\", be sure to <code>move forward</code> 20 pixels before you make a 60 degree rotation.</p>",
          "solution": "<p><strong>Solution</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_picker\">\n                <title name=\"COLOUR\">#0000cd</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">6</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"controls_for_counter\" inline=\"true\">\n                  <mutation counter=\"counter\"></mutation>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">3</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">17</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">DIVIDE</title>\n                            <value name=\"A\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">500</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"procedures_callnoreturn\" inline=\"false\">\n                            <mutation name=\"draw a polygon\">\n                            <arg name=\"length\"></arg>\n                            <arg name=\"sides\"></arg>\n                            </mutation>\n                            <value name=\"ARG0\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">30</title>\n                              </block>\n                            </value>\n                            <value name=\"ARG1\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">20</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_turn\" inline=\"true\">\n                            <title name=\"DIR\">turnRight</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">60</title>\n                              </block>\n                            </value>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n  </xml>"
        },
        "NEW Course 4 Bee For Loops 10a_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_10a_a": "<p>Can you find a pattern between the number of steps you need to take and the number of nectars to gather?</p>",
          "NEW_Course_4_Bee_For_Loops_10a_b": "<p>You'll need to have 2 repeats, one will use a math block.</p>"
        },
        "NEW Course 4 Bee For Loops 7_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_7_a": "<p>Try doing some math with the counter variable.</p>\n<p>What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?</p>"
        },
        "NEW Course 4 Bee For Loops 8_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_8_a": "<p>If your loop is counting up, the increment is added to your counter variable each time through. </p>\n<p>What do you need to add to each number to get the number after it?</p>"
        },
        "New Minecraft Hero Project_authored_hint": {
          "MC_HOC_2017_13_Cole_a": "<p>Try having the Agent build some bridges so that Alex or Steve can walk around beyond the edges of the map.</p>"
        },
        "Overworld Avoid Monsters_authored_hint": {
          "mc_8_a": "<p>There are a few paths you can take. Which is the shortest?</p>",
          "mc_8_b": "<p>Use <code>repeat</code> loops to simplify your code.</p>",
          "mc_8_c": "<p>Your goal is to get into the doorway of the house at the top of the screen.</p>"
        },
        "Overworld Avoid Monsters_2018_authored_hint": {
          "mc_8_a": "<p>There are a few paths you can take. Which is the shortest?</p>",
          "mc_8_b": "<p>Use <code>repeat</code> loops to simplify your code.</p>",
          "mc_8_c": "<p>Your goal is to get into the doorway of the house at the top of the screen.</p>"
        },
        "Overworld Chop Tree_authored_hint": {
          "mc_2_a": "<p>You need to <code>move forward</code> twice to stand in front of the tree.</p>",
          "mc_2_b": "<p>The <code>destroy block</code> command cuts down the tree in front of you.</p>"
        },
        "Overworld Chop Tree_2018_authored_hint": {
          "mc_2_a": "<p>You need to <code>move forward</code> twice to stand in front of the tree.</p>",
          "mc_2_b": "<p>The <code>destroy block</code> command cuts down the tree in front of you.</p>"
        },
        "Overworld Chop Trees_authored_hint": {
          "mc_4_a": "<p>You can chop down trees in any order. What path takes the smallest number of blocks?</p>",
          "mc_4_b": "<p>The <code>destroy block</code> command cuts down the tree in front of you.</p>"
        },
        "Overworld Chop Trees_2018_authored_hint": {
          "mc_4_a": "<p>You can chop down trees in any order. What path takes the smallest number of blocks?</p>",
          "mc_4_b": "<p>The <code>destroy block</code> command cuts down the tree in front of you.</p>"
        },
        "Overworld House Frame Chosen_authored_hint": {
          "mc_6_a": "<p>Click the arrow on the <code>place</code> block to choose what you want to place.</p>",
          "mc_6_b": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>",
          "mc_6_c": "<p>You can put more than one block inside of a <code>repeat</code> loop.</p>"
        },
        "Overworld House Frame Chosen_2018_authored_hint": {
          "mc_6_a": "<p>Click the arrow on the <code>place</code> block to choose what you want to place.</p>",
          "mc_6_b": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>",
          "mc_6_c": "<p>You can put more than one block inside of a <code>repeat</code> loop.</p>"
        },
        "Overworld Move to Sheep_authored_hint": {
          "mc_1_a": "<p>The <code>move forward</code> block is at the top of the toolbox.</p>",
          "mc_1_b": "<p>Make sure both <code>move forward</code> blocks are snapped to the <code>when run</code> block.</p>"
        },
        "Overworld Move to Sheep_2018_authored_hint": {
          "mc_1_a": "<p>The <code>move forward</code> block is at the top of the toolbox.</p>",
          "mc_1_b": "<p>Make sure both <code>move forward</code> blocks are snapped to the <code>when run</code> block.</p>"
        },
        "Overworld Place Wall_authored_hint": {
          "mc_5_a": "<p>Use the <code>place</code> block first, and then the <code>move</code> block.</p>",
          "mc_5_b": "<p>Make sure both blocks are inside of the <code>repeat</code> loop to run the code more than once.</p>",
          "mc_5_c": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>"
        },
        "Overworld Place Wall_2018_authored_hint": {
          "mc_5_a": "<p>Use the <code>place</code> block first, and then the <code>move</code> block.</p>",
          "mc_5_b": "<p>Make sure both blocks are inside of the <code>repeat</code> loop to run the code more than once.</p>",
          "mc_5_c": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>"
        },
        "Overworld Plant Crops_authored_hint": {
          "mc_7_a": "<p>Use the <code>plant crop</code> block to plant a crop in the space where you are standing.</p>",
          "mc_7_b": "<p>Both stripes of dark brown land by the water need to be filled with crops.</p>",
          "mc_7_c": "<p>You can put more than one block inside of a <code>repeat</code> loop.</p>"
        },
        "Overworld Plant Crops_2018_authored_hint": {
          "mc_7_a": "<p>Use the <code>plant crop</code> block to plant a crop in the space where you are standing.</p>",
          "mc_7_b": "<p>Both stripes of dark brown land by the water need to be filled with crops.</p>",
          "mc_7_c": "<p>You can put more than one block inside of a <code>repeat</code> loop.</p>"
        },
        "Overworld Powered Minecart_authored_hint": {
          "mc_13_a": "<p>Use <code>place rail</code> to lay rail on the square you are standing in.</p>",
          "mc_13_b": "<p>Use <code>repeat</code> loops to make your code shorter.</p>"
        },
        "Overworld Powered Minecart_2018_authored_hint": {
          "mc_13_a": "<p>Use <code>place rail</code> to lay rail on the square you are standing in.</p>",
          "mc_13_b": "<p>Use <code>repeat</code> loops to make your code shorter.</p>"
        },
        "Overworld Shear Sheep_authored_hint": {
          "mc_3_a": "<p>The <code>shear</code> block gets the sheep in front of you. Are you facing the sheep?</p>",
          "mc_3_b": "<p>If you need to change the way you are facing, use a <code>turn</code> block.</p>",
          "mc_3_c": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>"
        },
        "Overworld Shear Sheep_2018_authored_hint": {
          "mc_3_a": "<p>The <code>shear</code> block gets the sheep in front of you. Are you facing the sheep?</p>",
          "mc_3_b": "<p>If you need to change the way you are facing, use a <code>turn</code> block.</p>",
          "mc_3_c": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>"
        },
        "Pattern Bee 1_authored_hint": {
          "conditional_pointer": "<p>Start by thinking about this part: what's different each step of the way? What kind of block can you use to make a <em>decision</em> about whether you're at a flower or honeycomb?</p>\n<p><img src=\"https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png\"></p>",
          "turn_at_honeycomb_pointer": "<p>Other than making honey, do you see anything different that you have to do at each honeycomb?</p>"
        },
        "Planning Farmer_authored_hint": {
          "conditional_pointer": "<p>Start by thinking about this part: what's different each step of the way? What kind of block can you use to make a <em>decision</em> about whether you're at a flower or honeycomb?</p>\n<p><img src=\"https://images.code.org/a4883ea91c2f879ca1bb281d7944ed87-image-1471477752512.48.07 PM.png\"></p>",
          "turn_at_honeycomb_pointer": "<p>Other than making honey, do you see anything different that you have to do at each honeycomb?</p>"
        },
        "Quantum Bee - Ryan_authored_hint": {
          "test_hint": "<p>This is a test hint.</p>"
        },
        "Test embedded K1 Blockly in instructions_authored_hint": {},
        "Underground Avoiding Lava_authored_hint": {
          "mc_11_a": "<p>All of the code is in place to check for lava and deal with it. All you need to do is add a block to move.</p>",
          "mc_11_b": "<p>Should your <code>move forward</code> command go inside of the <code>if</code> statement or after?</p>"
        },
        "Underground Avoiding Lava_2018_authored_hint": {
          "mc_11_a": "<p>All of the code is in place to check for lava and deal with it. All you need to do is add a block to move.</p>",
          "mc_11_b": "<p>Should your <code>move forward</code> command go inside of the <code>if</code> statement or after?</p>"
        },
        "Underground If Statements_authored_hint": {
          "mc_12_a": "<p>The spaces with red speckles are where you will find Redstone.</p>",
          "mc_12_b": "<p>Can you use a <code>repeat</code> loop to make your code shorter?</p>",
          "mc_12_c": "<p>Use an <code>if</code> statement to check spaces for lava, then place cobblestones. </p>"
        },
        "Underground If Statements_2018_authored_hint": {
          "mc_12_a": "<p>The spaces with red speckles are where you will find Redstone.</p>",
          "mc_12_b": "<p>Can you use a <code>repeat</code> loop to make your code shorter?</p>",
          "mc_12_c": "<p>Use an <code>if</code> statement to check spaces for lava, then place cobblestones. </p>"
        },
        "Underground Iron_authored_hint": {
          "mc_10_a": "<p>The iron blocks are the speckled spaces behind the torch! How are you going to get over there?</p>",
          "mc_10_b": "<p>When you are standing at the edge of the lava, use <code>place cobblestone ahead</code> to make a safe path. Then, you can walk over it!</p>",
          "mc_10_c": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>"
        },
        "Underground Iron_2018_authored_hint": {
          "mc_10_a": "<p>The iron blocks are the speckled spaces behind the torch! How are you going to get over there?</p>",
          "mc_10_b": "<p>When you are standing at the edge of the lava, use <code>place cobblestone ahead</code> to make a safe path. Then, you can walk over it!</p>",
          "mc_10_c": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>"
        },
        "Underground Mining Coal_authored_hint": {
          "mc_9_a": "<p>Are you facing the right way? The <code>destroy block</code> mines the block in front of you.</p>",
          "mc_9_b": "<p>The black specks in the wall are coal! Use <code>destroy block</code> on these to mine the coal.</p>",
          "mc_9_c": "<p>Use <code>place torch</code> to put a torch in the space where you are standing.</p>"
        },
        "Underground Mining Coal_2018_authored_hint": {
          "mc_9_a": "<p>Are you facing the right way? The <code>destroy block</code> mines the block in front of you.</p>",
          "mc_9_b": "<p>The black specks in the wall are coal! Use <code>destroy block</code> on these to mine the coal.</p>",
          "mc_9_c": "<p>Use <code>place torch</code> to put a torch in the space where you are standing.</p>"
        },
        "Valentine_artist2_01_authored_hint": {
          "Valentine_artist2_01_a": "<p>Each side of the grass is 30 pixels long. Try using a stair step pattern.</p>",
          "Valentine_artist2_01_b": "<p>Do you see any patterns repeating? You should be using two <code>move forward</code> blocks and two different <code>turn</code> blocks inside a loop. </p>",
          "Valentine_artist2_01_c": "<p>Try this loop</p>\n<xml><block type=\"controls_repeat\">\n            <title name=\"TIMES\">8</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant\">\n                <title name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\">30</title>\n                <next>\n                  <block type=\"draw_turn_by_constant\">\n                    <title name=\"DIR\">turnRight</title>\n                    <title name=\"VALUE\">90</title>\n                    <next>\n                      <block type=\"draw_move_by_constant\">\n                        <title name=\"DIR\">moveForward</title>\n                        <title name=\"VALUE\">30</title>\n                        <next>\n                          <block type=\"draw_turn_by_constant\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <title name=\"VALUE\">90</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block></xml>"
        },
        "Valentine_artist_01_authored_hint": {
          "Valentine_artist_01_a": "<p>Which direction does the artist need to face to move? Which direction does the artist need to face to place a new llama sticker?</p>",
          "Valentine_artist_01_b": "<p>The artist needs to place 10 llama stickers and turn 90 degrees at each turn.</p>"
        },
        "Valentine_playlab_01_authored_hint": {
          "Valentine_playlab_01_a": "<p>Snap the <code>actor 1 throw red hearts down</code> block into the <code>when actor 1 clicked</code> event.</p>\n<p>Don't forget to change <code>left</code> to <code>down</code>!</p>",
          "Valentine_playlab_01_b": "<p>Use the <code>move actor 1 left</code> block by clicking it into place beneath the <code>when left arrow clicked</code> event.</p>"
        },
        "aE1_authored_hint": {},
        "aE2_authored_hint": {
          "aE2_a": "<p>Notice that since the napkins are 20 pixels long, you'll need to jump 20 pixels before you start your next loop.</p>"
        },
        "aE3_authored_hint": {
          "aE3_a": "<p>After you run your <strong>nested loop</strong> from the last stage, you need to jump back to the start of the line.</p>",
          "aE3_b": "<p>Don't forget to move the artist down before you start a new row of shapes! </p>\n<p>To move the artist down and get him facing the right way again, make sure to:</p>\n<ul>\n<li>Turn 90 degrees (to face down)</li>\n<li>Jump 20 pixels (to get to new row)</li>\n<li>Turn back 90 degrees (to face right again)</li>\n</ul>",
          "aE3_c": "<p>When you're all done, your <strong>nested loops</strong> should be three repeats deep.</p>",
          "aE3_d": "<p>If your code becomes too confusing, you can always click \"Start Over\" and try again!</p>"
        },
        "aE3alternate_authored_hint": {
          "aE3alternate_a": "<p>After you run your <strong>nested loop</strong> from the last stage, you need to jump back to the start of the line.</p>",
          "aE3alternate_b": "<p>Don't forget to move the artist down before you start a new row of shapes! </p>\n<p>To move the artist down and get him facing the right way again, make sure to:</p>\n<ul>\n<li>Turn 90 degrees (to face down)</li>\n<li>Jump 20 pixels (to get to new row)</li>\n<li>Turn back 90 degrees (to face right again)</li>\n</ul>",
          "aE3alternate_c": "<p>When you're all done, your <strong>nested loops</strong> should be three repeats deep.</p>",
          "aE3alternate_d": "<p>If your code becomes too confusing, you can always click \"Start Over\" and try again!</p>"
        },
        "aE3alternateB_authored_hint": {
          "aE4alternateB_a": "<p>After you run your <strong>nested loop</strong> from the last stage, you need to jump back to the start of the line.</p>",
          "aE4alternateB_b": "<p>Don't forget to move the artist down before you start a new row of shapes! </p>\n<p>To move the artist down and get him facing the right way again, make sure to:</p>\n<ul>\n<li>Turn 90 degrees (to face down)</li>\n<li>Jump 20 pixels (to get to new row)</li>\n<li>Turn back 90 degrees (to face right again)</li>\n</ul>",
          "aE4alternateB_c": "<p>When you're all done, your <strong>nested loops</strong> should be three repeats deep.</p>",
          "aE4alternateB_d": "<p>If your code becomes too confusing, you can always click \"Start Over\" and try again!</p>"
        },
        "aE4_authored_hint": {
          "aE4_a": "<p>After you run your <strong>nested loop</strong> from the last stage, you need to jump back to the start of the line.</p>",
          "aE4_b": "<p>Don't forget to move the artist down before you start a new row of shapes! </p>\n<p>To move the artist down and get him facing the right way again, make sure to:</p>\n<ul>\n<li>Turn 90 degrees (to face down)</li>\n<li>Jump 20 pixels (to get to new row)</li>\n<li>Turn back 90 degrees (to face right again)</li>\n</ul>",
          "aE4_c": "<p>When you're all done, your <strong>nested loops</strong> should be three repeats deep.</p>",
          "aE4_d": "<p>If your code becomes too confusing, you can always click \"Start Over\" and try again!</p>"
        },
        "aE5_authored_hint": {},
        "aE6_authored_hint": {
          "aE6_a": "<p>If there are 180 degrees in a semicircle and each loop the artist makes turns 3 degrees, how many times would you need to loop to draw half of a full circle?</p>\n<p><strong>180 ÷ 3 = ?</strong></p>"
        },
        "aE7_authored_hint": {
          "aE7_a": "<p>Draw the bottom half of a circle and then the top half of a circle to make one segment.</p>",
          "aE7_b": "<p>You will need 4 segments to complete this puzzle.</p>"
        },
        "aE8_authored_hint": {
          "aE8_a": "<p>To make a square from your line, you will need to: </p>\n<ul>\n<li>draw the line </li>\n<li>use the curvy corner</li>\n</ul>\n<p>Repeat these steps 4 times.</p>"
        },
        "allHallows2017_authored_hint": {
          "allHallows2017_a": "<p>Careful!  GT might follow behind you on his bike and erase your line!</p>",
          "allHallows2017_g": "<p>Sarah says: \"Are you cold? Come sit in the corner... It's 90 degrees!\"</p>",
          "allHallows2017_c": "<p>Jordyn says: \"You crayon't stop now! Keep going!\"</p>",
          "allHallows2017_d": "<p>Josh says: \"You will need to draw on your coding skills to complete this puzzle!\"</p>",
          "allHallows2017_e": "<p>Dani says: \"I'm not good at puns. Try using a repeat block!\"</p>",
          "allHallows2017_b": "<p>Baker says: \"The Chicago crayon only works on the <em>green line</em>.\"</p>",
          "allHallows2017_f": "<p>Amy says: \"You can do it! Just think outside the box\"</p>"
        },
        "artistDebugVideo1_authored_hint": {
          "courseA_artist_loops7_a": "<p>Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.</p>"
        },
        "artistFunctionsVideo1_authored_hint": {},
        "artistLoopsK2_authored_hint": {
          "artistLoopsK2_a": "<p>If you want the loop to repeat more than 4 times, you can change the number at the top of the block.</p>"
        },
        "artistLoopsK2gradek_artist_loops3_authored_hint": {
          "artistLoopsK2_a": "<p>If you want the loop to repeat more than 4 times, you can change the number at the top of the block.</p>"
        },
        "artistLoopsK3_authored_hint": {
          "artistLoopsK3_a": "<p>Try using what you've learned about repeat blocks to complete this puzzle!</p>"
        },
        "artistLoopsK4_authored_hint": {
          "artistLoopsK4_a": "<p>Stuck? Try running the code to see which block is incorrect.</p>"
        },
        "artistLoopsK5_authored_hint": {
          "artistLoopsK5_a": "<p>All 4 of the starting blocks should go inside of your repeat block to solve this puzzle.</p>"
        },
        "artistLoopsK6_authored_hint": {
          "artistLoopsK6_a": "<p>Try running the code to see where there is a bug.</p>"
        },
        "artistLoopsK7_authored_hint": {
          "artistLoopsK7_a": "<p>All of the blocks you need for this puzzle are already in your workspace!</p>"
        },
        "artistLoopsK8_authored_hint": {
          "artistLoopsK8_a": "<p>Try running the code to see where there is a bug.</p>"
        },
        "artistLoopsK9_authored_hint": {
          "artistLoopsK9_a": "<p>This challenge uses FOUR loops, one right after another!</p>"
        },
        "artistLoopsKA_authored_hint": {
          "artistLoopsKA_a": "<p>Use the jump block to move forward without drawing a line.</p>"
        },
        "artistLoopsKB_authored_hint": {
          "artistLoopsKB_a": "<p>There should be 3 blocks inside of your loop to solve this puzzle.</p>"
        },
        "artistLoopsKFP_authored_hint": {},
        "comment_intro_maze_2018_authored_hint": {
          "courseC_maze_programming4_a": "<p>Comments are also helpful when other people try to read your code.</p>",
          "courseC_maze_programming4_b": "<p>Add a comment when you change directions- what would have happened if you turned the other way?</p>"
        },
        "conditionals_forvideo_harvester_authored_hint": {},
        "course1_artist_loops_challenge1_authored_hint": {
          "courseA_artist_loops_challenge1_a": "<p>You can use loops like this to create the walls and the roof. Try repeating different blocks.</p>\n<p><img src=\"https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png\"></p>\n<p>Design your own or click the <img src=\"https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png\"> for some ideas!</p>",
          "courseA_artist_loops_challenge1_b": "<p><img src=\"https://images.code.org/34f3bae38f77f07eaf455188c0b008e5-image-1491864823946.png\"></p>",
          "courseA_artist_loops_challenge1_c": "<p><img src=\"https://images.code.org/24b208839971803f3f6cd6ae41da56df-image-1491864839734.png\"></p>",
          "courseA_artist_loops_challenge1_d": "<p><img src=\"https://images.code.org/d3ccefffa0cc77bdd4a597cdb49fc85e-image-1491864847347.png\"></p>"
        },
        "course1_artist_loops_challenge2_authored_hint": {
          "harvey_tictactoe": "<p>You can use <code>jump</code> blocks to move to other spaces.</p>"
        },
        "course1_artist_loops_challenge3_authored_hint": {
          "courseA_artist_loops_challenge2_a": "<p>Blocks like this: <xml>  <block type=\"simple_move_up_left\"/></xml> will let your artist move at a slant!</p>",
          "courseA_artist_loops_challenge2_b": "<p>When you finish one bird house, <code>jump</code> to the next!</p>",
          "courseA_artist_loops_challenge2_c": "<p>You will need a LOT of blocks inside the loop for this challenge.</p>"
        },
        "course1_artist_loops_challenge4_authored_hint": {
          "courseB_artist_loops_challenge1_a": "<p>Blocks like this: <xml>  <block type=\"simple_move_up_right\"/></xml> will let your artist move at a slant!</p>",
          "courseB_artist_loops_challenge1_b": "<p>When you finish one of the dice, <code>jump</code> to the next!</p>",
          "courseB_artist_loops_challenge1_c": "<p>You will need to <code>move</code> or <code>jump</code> over some of the same lines twice. </p>"
        },
        "course1_collector_loops_challenge1_authored_hint": {
          "courseA_collector_loops_challenge1_a": "<p>Try changing the numbers in each loop if something goes wrong.</p>",
          "courseA_collector_loops_challenge1_b": "<p>You don't need to use a loop if you are only doing something one time.</p>",
          "courseA_collector_loops_challenge1_c": "<p>There are 6 gems on the right side of the cave, but you only need to move and collect 5 times. Do you know why?</p>"
        },
        "course1_collector_loops_challenge2_authored_hint": {
          "courseA_collector_loops_challenge2_b": "<p>You only need to use one <img src=\"https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png\"> block to solve this.</p>",
          "courseA_collector_loops_challenge2_a": "<p>You can move back over the path a second time before moving south.</p>\n<p><img src=\"https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png\"></p>"
        },
        "course1_collector_loops_challenge3_authored_hint": {
          "courseB_collector_loops_challenge1_b": "<p>Start by looping the commands <code>move south</code> and <code>get treasure</code>.</p>\n<xml>\n  <block type=\"maze_moveSouth\"/><next>\n  <block type=\"collector_collect\"/></next>\n  </xml>",
          "courseB_collector_loops_challenge1_a": "<p>The north pattern is a little different than the south pattern.</p>\n<xml>\n  <block type=\"collector_collect\"/><next>\n  <block type=\"maze_moveNorth\"/></next>next&gt;\n  </xml>",
          "courseB_collector_loops_challenge1_c": "<p>Move East twice between each path.</p>\n<p><xml>\n  <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next&gt;\n  </xml>\nYou can do this with only 14 blocks. Click for one more hint to see a solution. </p>",
          "courseB_collector_loops_challenge1_d": "<p>Try this!</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified\">\n        <title name=\"TIMES\">5</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveSouth\">\n            <next>\n              <block type=\"collector_collect\"/>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveEast\">\n                <next>\n                  <block type=\"controls_repeat_simplified\">\n                    <title name=\"TIMES\">5</title>\n                    <statement name=\"DO\">\n                      <block type=\"collector_collect\">\n                        <next>\n                          <block type=\"maze_moveNorth\"/>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_moveEast\">\n                        <next>\n                          <block type=\"maze_moveEast\">\n                            <next>\n                              <block type=\"controls_repeat_simplified\">\n                                <title name=\"TIMES\">5</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_moveSouth\">\n                                    <next>\n                                      <block type=\"collector_collect\"/>\n                                    </next>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "course1_collector_loops_challenge4_authored_hint": {
          "courseB_collector_loops_challenge2_a": "<p>If something goes wrong, don't be afraid to start over. Don't give up!</p>",
          "courseB_collector_loops_challenge2_b": "<p>If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!</p>\n<xml><block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block></xml>",
          "courseB_collector_loops_challenge2_c": "<p>Try using a <code>repeat</code> block to collect the final pile of treasure!</p>",
          "courseB_collector_loops_challenge2_d": "<p>Try this solution:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">4</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"controls_repeat_simplified_dropdown\">\n            <title name=\"TIMES\" config=\"3-10\">6</title>\n            <statement name=\"DO\">\n              <block type=\"collector_collect\"/>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "course1_maze_debugging_challenge1_authored_hint": {
          "courseA_maze_seq_challenge1_a": "<p>Some paths will lead to TNT, if you move too far.</p>"
        },
        "course1_maze_debugging_challenge2_authored_hint": {
          "courseB_maze_seq_challenge2_a": "<p>You do not need to add or remove blocks to solve this puzzle.</p>",
          "courseB_maze_seq_challenge2_b": "<p>Rearrange the blocks and take the middle path.</p>"
        },
        "course1_maze_seq_challenge1_authored_hint": {
          "courseA_maze_seq_challenge2_a": "<p>Try counting the spaces with your finger. Remember not to count the space where you start!</p>"
        },
        "course1_maze_seq_challenge2_authored_hint": {
          "courseB_maze_seq_challenge1_a": "<p>The shortest path might not work this time.</p>",
          "courseB_maze_seq_challenge1_b": "<p>Try moving west to start.</p>"
        },
        "course1_playlab_events_challenge1_authored_hint": {
          "courseA_playlab_events_challenge1_a": "<p>Make Waddles the Penguin show when you click Robin!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_b": "<p>Make Boo the Ghost show when you click Waddles!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_c": "<p>Make Jayden the Fuzzy Monster show when you click Boo!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_d": "<p>Make Spiff the Robot show when you click the monster!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_e": "<p>Finally, make Wendel the Wizard show when you click on Spiff!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
        },
        "course1_playlab_events_challenge2_authored_hint": {
          "courseA_playlab_events_challenge2_a": "<p>You can make a bird sing.</p>\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge2_b": "<p>You can make a robot beep.</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n\n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>",
          "courseA_playlab_events_challenge2_c": "<p>You can make an angry monster growl.</p>\n<xml>  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSpriteEmotion\">\n        <title name=\"SPRITE\">5</title>\n        <title name=\"VALUE\">2</title>\n        <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">5</title>\n            <title name=\"TEXT\">Roar!</title>\n            <next>\n              <block type=\"studio_setSpriteEmotion\">\n                <title name=\"SPRITE\">5</title>\n                <title name=\"VALUE\">0</title>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>"
        },
        "course2_artist_nestedLoops_challenge1_authored_hint": {
          "courseD_artist_nestedLoops_challenge1_a": "<p>Start by making a nested loop to create four octagons. Turn 45 degrees to make the octagon. Jump, then turn 90 degrees after each one.</p>",
          "courseD_artist_nestedLoops_challenge1_b": "<p>Add code to draw a triangle inside of your nested loop. Use 120 degree turns for your triangle.</p>",
          "courseD_artist_nestedLoops_challenge1_c": "<p>Use a nested loop:</p>\n<ul>\n<li>Repeat 8 times<ul>\n<li>draw an octagon</li>\n<li>draw a triangle</li>\n<li>jump forward 50 pixels</li>\n<li>turn right by 90 degrees</li>\n</ul>\n</li>\n</ul>"
        },
        "course2_artist_nestedLoops_challenge2_authored_hint": {
          "courseD_artist_nestedLoops_challenge2_a": "<p>To draw a regular octagon, the artist needs to turn 45 degrees 8 times.</p>",
          "courseD_artist_nestedLoops_challenge2_b": "<p>To draw a square, the artist needs to turn 90 degrees 4 times.</p>"
        },
        "course2_artist_prog_challenge1_authored_hint": {
          "courseC_artist_prog_challenge1_a": "<p>The rectangle is 200 pixels wide and 100 pixels tall. </p>"
        },
        "course2_artist_prog_challenge2_authored_hint": {
          "courseC_artist_prog_challenge2_a": "<p>You can put commands inside <code>repeat</code> block to loop them over and over. Try it!</p>\n<xml>\n\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n                <title name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n                </next>\n              </block>\n              </statement></block></xml>"
        },
        "course2_bee_conditionals_challenge1_authored_hint": {
          "courseD_bee_conditionals_challenge1_a": "<p>Can you find a path that reaches every flower and honeycomb without hitting any trees? The best path is a spiral.</p>\n<p><strong>You can solve this without ever turning left.</strong></p>",
          "courseD_bee_conditionals_challenge1_b": "<p>In this puzzle, each space could have a flower, a honey comb, or nothing.  That means you can repeat your <code>if/else</code> conditional at each square.</p>"
        },
        "course2_bee_conditionals_challenge2_authored_hint": {
          "courseD_bee_conditionals_challenge1_b": "<p>Just like the <code>if at flower</code> blocks, the code inside a <code>while nectar &gt; 0</code> will only run if the bee is at a flower. The main differences is that the code inside will run repetitively until there is no nectar left.  Try this pattern:</p>\n<xml>  <block type=\"bee_whileNectarAmount\">\n    <title name=\"ARG1\">nectarRemaining</title>\n    <title name=\"OP\">&gt;</title>\n    <title name=\"ARG2\">0</title>                    <statement name=\"DO\">\n                      <block type=\"maze_nectar\"/>\n                    </statement>\n  </block></xml>"
        },
        "course2_collector_loops_challenge2_authored_hint": {
          "courseC_maze_loops_challenge2_a": "<p>The original code would work great - if there was only one piece of treasure in each pile!</p>",
          "courseC_maze_loops_challenge2_b": "<p>Use loops so you don't run out of <code>collect</code> blocks!</p>"
        },
        "course2_collector_prog_challenge1_authored_hint": {
          "courseC_collector_prog_challenge1_a": "<p>You can use the <code>collect</code> command more often to collect the extra treasure.</p>"
        },
        "course2_collector_prog_challenge2_authored_hint": {
          "courseC_collector_prog_challenge1_a": "<p>You can use the <code>collect</code> command more often to collect the extra treasure.</p>"
        },
        "course2_harvester_loops_challenge1_authored_hint": {
          "courseC_harvester_loops_challenge1_a": "<p>Don't even think about try about trying this without loops!</p>",
          "courseC_harvester_loops_challenge1_b": "<p>You can repeat <code>move forward</code> and <code>pick corn</code> as many times as you need to, then <code>turn right</code> at each corner.</p>",
          "courseC_harvester_loops_challenge1_c": "<p>The best way to collect the first four corn uses a <code>repeat</code> block inside of another <code>repeat</code> block. You can use this pattern for the rest of the puzzle too!</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">2</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">2</title>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"harvester_corn\"/>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n        </block></next></block></xml>"
        },
        "course2_harvester_loops_challenge2_authored_hint": {
          "courseC_harvester_loops_challenge2_a": "<p>One way to solve this looks like a zig-zag. Another way looks like a spiral! There are lots of different solutions to a puzzle like this. Be persistent!</p>",
          "courseC_harvester_loops_challenge2_b": "<p>You can repeat <code>move forward</code> and <code>pick lettuce</code> as many times as you need to, then turn at each corner.</p>",
          "courseC_harvester_loops_challenge2_c": "<p>This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!</p>\n<p><img src=\"https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png\"></p>",
          "courseC_harvester_loops_challenge2_d": "<p>This spiral pattern can be coded with just 18 blocks!</p>\n<p><img src=\"https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png\"></p>"
        },
        "course2_maze_loops_challenge1_authored_hint": {
          "courseC_maze_loops_challenge1_a": "<p>Think about this path as being three different pieces. Each one has a pattern you can repeat.</p>",
          "courseC_maze_loops_challenge1_b": "<p>In between each <code>repeat</code> block, you will need to <code>turn left</code> or <code>turn right</code> to get ready Scrat for the next pattern.</p>",
          "courseC_maze_loops_challenge1_c": "<p>If you make it this far, you just need to <code>turn left</code> then <code>move forward</code> a few times. Don't give up!</p>\n<p><img src=\"https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png\"></p>"
        },
        "course2_maze_programming_challenge1_authored_hint": {},
        "course2_maze_programming_challenge2_authored_hint": {
          "courseC_maze_programming_challenge2_a": "<p><em>If you send me backwards, be extra careful that I turn the correct way!</em></p>",
          "courseC_maze_programming_challenge2_b": "<p>The shortest solution use only 5 blocks, but it uses the <code>repeat</code> block!</p>"
        },
        "course2_maze_seq_challenge1_authored_hint": {
          "courseA_maze_seq_challenge2_a": "<p>Try counting the spaces with your finger. Remember not to count the space where you start!</p>"
        },
        "course2_maze_seq_challenge2_authored_hint": {
          "courseB_maze_seq_challenge1_a": "<p>The shortest path might not work this time.</p>",
          "courseB_maze_seq_challenge1_b": "<p>Try moving west to start.</p>"
        },
        "course3_artist_concept_challenge1_authored_hint": {
          "courseE_artist_concept_challenge1_a": "<p>The half-hexagon has a <strong>length of 30</strong> and turns right by <strong>60 degrees</strong>.  </p>",
          "courseE_artist_concept_challenge1_b": "<p>The 2/3 triangle has a <strong>length of 80</strong> and turns right by <strong>120 degrees</strong>. </p>"
        },
        "course3_artist_functions_challenge1_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<p>If you call the function one more time, you can create the same design in the final corner. You can also <code>jump to</code> other positions or change the whole thing around however you want!</p>"
        },
        "course3_artist_functions_challenge2_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n\n<p>This <code>jump to</code> block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is <em>before</em> the command is run!</p>\n<p><img src=\"https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png\"></p>"
        },
        "course3_bee_debugging_challenge1_authored_hint": {
          "courseD_bee_debugging_challenge1_a": "<p>Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?</p>",
          "courseD_bee_debugging_challenge1_b": "<p>On the way back, have the bee follow the same pattern. How much honey does the bee need to make each time it moves over a honey comb?</p>",
          "courseD_bee_debugging_challenge1_c": "<p>After the bee makes it to the bottom row, have it repeat these commands:</p>\n<ul>\n<li>Repeat 2 times:<ul>\n<li>Move forward</li>\n<li>Make 3 honey</li>\n</ul>\n</li>\n<li>Move backward</li>\n</ul>"
        },
        "course3_bee_functions_challenge1_authored_hint": {
          "courseE_bee_functions_challenge1_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseE_bee_functions_challenge1_b": "<p>Remember to build your code inside of the green function block.</p>"
        },
        "course3_bee_functions_challenge2_authored_hint": {
          "courseE_bee_functions_challenge1_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseE_bee_functions_challenge1_b": "<p>Remember to build your code inside of the green function block.</p>"
        },
        "course3_bee_functions_challenge3_authored_hint": {
          "courseF_bee_functions_challenge1_a": "<p>You can use the functions in the tool box to help you. You can call a function inside of another function's definition!</p>"
        },
        "course3_bee_functions_challenge4_authored_hint": {
          "courseF_bee_functions_challenge2_a": "<p>If there is a path to the right, you should do the following:</p>\n<ul>\n<li>Get any nectar or make any honey.</li>\n<li>Turn right towards the side path.</li>\n<li>Move to the end of the side path.</li>\n<li>Turn right.</li>\n</ul>\n<p>If you repeat the above actions twice, you will be ready to move back down the main path.</p>\n<p><strong>Only click for another hint if you want to see the full solution!</strong></p>",
          "courseF_bee_functions_challenge2_b": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_untilBlocked\">\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"maze_if\">\n                    <title name=\"DIR\">isPathRight</title>\n                    <statement name=\"DO\">\n                      <block type=\"procedures_callnoreturn\" id=\"function\">\n                        <mutation name=\"move and check\"/>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation/>\n    <title name=\"NAME\">check nectar or honey</title>\n    <statement name=\"STACK\">\n      <block type=\"bee_ifElseFlower\">\n        <title name=\"LOC\">atFlower</title>\n        <statement name=\"DO\">\n          <block type=\"bee_whileNectarAmount\">\n            <title name=\"ARG1\">nectarRemaining</title>\n            <title name=\"OP\">&gt;</title>\n            <title name=\"ARG2\">0</title>\n            <statement name=\"DO\">\n              <block type=\"maze_nectar\"/>\n            </statement>\n          </block>\n        </statement>\n        <statement name=\"ELSE\">\n          <block type=\"bee_whileNectarAmount\">\n            <title name=\"ARG1\">honeyAvailable</title>\n            <title name=\"OP\">&gt;</title>\n            <title name=\"ARG2\">0</title>\n            <statement name=\"DO\">\n              <block type=\"maze_honey\"/>\n            </statement>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" deletable=\"false\" movable=\"false\" editable=\"false\">\n    <mutation/>\n    <title name=\"NAME\">move and check</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n            <mutation name=\"check nectar or honey\"/>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"maze_untilBlocked\">\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "course3_collector_debugging_challenge2_authored_hint": {
          "courseD_collector_debugging_challenge2_a": "<p>Start by focusing on collect TWO gems from each of the first two piles.</p>\n<p><img src=\"https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png\">\nUse these blocks.</p>\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n\n                  </block>\n\n\n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>",
          "courseD_collector_debugging_challenge2_b": "<p>Next, collect the remaining gems in this row.</p>\n<p><img src=\"https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png\">\nAdd these blocks to your program.</p>\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n\n        </statement>\n      </block>\n</xml>",
          "courseD_collector_debugging_challenge2_c": "<p>Finally, collect the remaining treasure. Add these blocks to your program.</p>\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n\n        </statement>\n      </block>\n\n</xml>",
          "courseD_collector_debugging_challenge2_d": "<p>Here is the complete solution for this puzzle.</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"controls_repeat\">\n                <title name=\"TIMES\">2</title>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveForward</title>\n                    <next>\n                      <block type=\"controls_repeat\">\n                        <title name=\"TIMES\">2</title>\n                        <statement name=\"DO\">\n                          <block type=\"collector_collect\"/>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "course3_farmer_condLoops_challenge1_authored_hint": {
          "courseD_farmer_condLoops_challenge1_a": "<p>The <code>STEP</code> button could be very helpful in this challenge.</p>",
          "courseD_farmer_condLoops_challenge1_b": "<p>Normally you would just <code>pick pumpkin</code> if you are at a pumpkin. What else do you need to do if you're at a pumpkin?</p>"
        },
        "course3_farmer_condLoops_challenge2_authored_hint": {
          "courseD_farmer_condLoops_challenge2_a": "<p>The amount of each vegetable in each space varies. Use <code>while</code> loops for these.</p>"
        },
        "course3_farmer_until_challenge2_authored_hint": {},
        "course3_maze_debugging_challenge1_authored_hint": {
          "courseC_maze_debugging_challenge1_a": "<p>Left or right? It's up to you!</p>",
          "courseC_maze_debugging_challenge1_b": "<p>Scrat's path is the shape of a rectangle! He needs to turn the same way each time!</p>",
          "courseC_maze_debugging_challenge1_c": "<p>If you are getting stuck, you can always start over, or remove all the code and find your own way!</p>"
        },
        "course3_maze_debugging_challenge2_authored_hint": {
          "courseC_maze_debugging_challenge2_a": "<p>One way to solve this is to add more steps forward in between the turns.</p>",
          "courseC_maze_debugging_challenge2_b": "<p>If you are getting stuck, you can always start over or remove all the code and find your own way!</p>",
          "courseC_maze_debugging_challenge2_c": "<p>There are two different paths you can follow just using <code>move forward</code>, and only four turns. If you find a way to use the <code>repeat</code> block, there may be even more!</p>\n<p><img src=\"https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png\"></p>"
        },
        "course3_maze_until_challenge1_authored_hint": {},
        "course3_playLab_challenge1_authored_hint": {
          "courseE_playLab_challenge1_a": "<p>Here are some things you could do when the player wins the game:</p>\n<ul>\n<li>Make the dinosaur vanish.</li>\n<li>Stop the squirrels.</li>\n<li>Make the squirrels and knight happy.</li>\n<li>Set a new background.</li>\n<li>Make the knight thank the player for helping.</li>\n<li>Make all of the actors vanish and show a \"You Win!\" message.</li>\n</ul>",
          "courseE_playLab_challenge1_b": "<p>Here are some things you could do when the player loses the game:</p>\n<ul>\n<li>Make the knight vanish.</li>\n<li>Make the squirrels sad.</li>\n<li>Make the dinosaur say something.</li>\n<li>Set a new background.</li>\n<li>Make all of the actors vanish and show a \"Game Over\" message.</li>\n</ul>"
        },
        "course3_playlab_challenge2_authored_hint": {
          "courseE_playlab_challenge2_a": "<p>The actor knows what to say based on its mood. Try playing with the things the witch might say.</p>\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">Concentrate and ask again!</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block></xml>",
          "courseE_playlab_challenge2_b": "<p>It will feel like the game starts all over if you call the <code>ask a question</code> function again below the list of conditionals.</p>\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n\n<block type=\"procedures_callnoreturn\">\n<mutation name=\"Ask a question\"></mutation>\n        </block></block></xml>",
          "courseE_playlab_challenge2_c": "<p>You will need to add more conditional statements to give the actors more things to say.</p>\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n              </statement></block></xml>\n\n<p>Don't forget to change which moods the actor will show inside of the <code>repeat forever</code> loop. You can also set the moods randomly!</p>",
          "courseE_playlab_challenge2_d": "<p>Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.</p>\n<p>Don't forget to change the instructions inside the <code>show title screen</code> block so they still make sense!</p>",
          "courseE_playlab_challenge2_e": "<p>When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?</p>\n<p>Have a friend try your app when it is finished!</p>"
        },
        "course4_artist_binary_challenge2_authored_hint": {
          "courseD_artist_binary_challenge2_a": "<p>The best tip I have for you is to press <code>⟲ Start Over</code> if it starts to get really messy.</p>\n<p>There are only few lines wrong in the original program. If one approach fails, back up and try again. There is a solution!</p>"
        },
        "course4_artist_concept_challenge2_authored_hint": {
          "courseE_artist_concept_challenge2_a": "<p>Once you define a function, you can call it over and over again - whenever and wherever you want!</p>",
          "courseE_artist_concept_challenge2_b": "<p>You can jump to different positions on the canvas using this command:</p>\n<xml>  <block type=\"jump_to\">\n    <title name=\"VALUE\">???</title>\n  </block></xml>"
        },
        "course4_artist_functions_challenge2_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n\n<p>This <code>jump to</code> block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is <em>before</em> the command is run!</p>\n<p><img src=\"https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png\"></p>"
        },
        "course4_artist_fwp_challenge1_authored_hint": {},
        "course4_artist_variables_challenge1_authored_hint": {
          "courseF_artist_variables_challenge1_a": "<p>Each vertical line has a length of <code>10</code>. Each horizontal line should have a length of <code>length</code>.</p>",
          "courseF_artist_variables_challenge1_b": "<p>You will want to increase the value of <code>length</code> by 10 <strong>twice</strong> inside the loop.</p>",
          "courseF_artist_variables_challenge1_c": "<p>To complete the pattern you will need to turn left twice, turn right twice, and move forward a total of four times.</p>",
          "courseF_artist_variables_challenge1_d": "<p>This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.</p>\n<p><img src=\"https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png\"></p>\n<p>If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.</p>",
          "courseF_artist_variables_challenge1_e": "<p>Here is the solution.</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">length</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">18</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">10</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">90</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">length</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"variables_set\" inline=\"false\">\n                            <title name=\"VAR\">length</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_arithmetic\" inline=\"true\">\n                                <title name=\"OP\">ADD</title>\n                                <value name=\"A\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">length</title>\n                                  </block>\n                                </value>\n                                <value name=\"B\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">10</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnLeft</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_move\" inline=\"true\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">10</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"draw_move\" inline=\"true\">\n                                            <title name=\"DIR\">moveForward</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">length</title>\n                                              </block>\n                                            </value>\n                                            <next>\n                                              <block type=\"variables_set\" inline=\"false\">\n                                                <title name=\"VAR\">length</title>\n                                                <value name=\"VALUE\">\n                                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                                    <title name=\"OP\">ADD</title>\n                                                    <value name=\"A\">\n                                                      <block type=\"variables_get\">\n                                                        <title name=\"VAR\">length</title>\n                                                      </block>\n                                                    </value>\n                                                    <value name=\"B\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">10</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </value>\n                                                <next>\n                                                  <block type=\"draw_turn\" inline=\"true\">\n                                                    <title name=\"DIR\">turnRight</title>\n                                                    <value name=\"VALUE\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">90</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "course4_artist_variables_challenge2_authored_hint": {
          "courseF_artist_variables_challenge2_a": "<p>Variables are helpful because you can add to them each time through a loop. </p>",
          "courseF_artist_variables_challenge2_b": "<p>This puzzle has one loop that creates the polygon, one loop that repeats the polygon <code>sides</code> times, then another loop that does it all again after adding 5 to <code>sides</code>.</p>",
          "courseF_artist_variables_challenge2_c": "<p>Using a variable for <code>sides</code> and one for <code>length</code> makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.</p>",
          "courseF_artist_variables_challenge2_d": "<p><strong>Solution:</strong></p>\n<p><img src=\"https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png\" alt=\"Solution\"></p>"
        },
        "course4_bee_for_challenge1_authored_hint": {},
        "course4_bee_fwp_challenge1_authored_hint": {
          "courseF_bee_fwp_challenge1_a": "<p>The main program should look something like this:</p>\n<xml>\n<block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"procedures_callnoreturn\" inline=\"false\">\n        <mutation name=\"pick row\">\n          <arg name=\"length\"/>\n        </mutation>\n        <value name=\"ARG0\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"pick row\">\n                      <arg name=\"length\"/>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">5</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                        <next>\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                            <next>\n                              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                <mutation name=\"pick row\">\n                                  <arg name=\"length\"/>\n                                </mutation>\n                                <value name=\"ARG0\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">6</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <next>\n                                      <block type=\"maze_move\">\n                                        <title name=\"DIR\">moveForward</title>\n                                        <next>\n                                          <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                            <mutation name=\"pick row\">\n                                              <arg name=\"length\"/>\n                                            </mutation>\n                                            <value name=\"ARG0\">\n                                              <block type=\"math_number\">\n                                                <title name=\"NUM\">4</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>",
          "courseF_bee_fwp_challenge1_b": "<p>Look at how much corn is available to harvest in each space. Do you see the counter pattern? The <code>length</code> parameter should be used to set the maximum value in the <code>for loop</code>.</p>\n<p>Don't forget to have the farmer move back to the main path after harvesting!</p>",
          "courseF_bee_fwp_challenge1_c": "<p>Place a <code>for loop</code> inside a function and set it to count from <code>1</code> to <code>length</code> by <code>1</code>.\nInside this loop, you should move forward and pick all of the corn.</p>\n<xml>\n<block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n            </statement>\n</block></xml>",
          "courseF_bee_fwp_challenge1_d": "<p>Inside the <code>for loop</code> you will want to <code>move forward</code> then <code>get nectar</code> <strong>counter times</strong>.\nAfter the <code>for loop</code> you can just <code>move backward</code> <strong>length times</strong>.</p>\n<p>You may need to read this hint several times to understand it. The part in <strong>bold</strong> is a hint about how to use the two <code>repeat</code> loops you will need.</p>",
          "courseF_bee_fwp_challenge1_e": "<p><strong>Here is the solution:</strong></p>\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_corn\"/>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n    </block></xml>"
        },
        "course4_bee_fwp_challenge2_authored_hint": {
          "courseF_bee_fwp_challenge2_a": "<p>Start by making sure you understand how this function is <em>supposed</em> to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?</p>\n<p>Add conditional statements to the function to check for corn, pumpkins, and lettuce.</p>",
          "courseF_bee_fwp_challenge2_b": "<p>Are you running out of <code>move forward</code> blocks?\nTry using a <em>second</em> <code>for loop</code> in your main program. </p>\n<p><strong>Note:</strong> Be careful not to confuse <code>counter</code> with <code>counter2</code> in your code.</p>",
          "courseF_bee_fwp_challenge2_c": "<p><strong>Here is what your function should look like:</strong></p>\n<xml><block type=\"procedures_defnoreturn\" deletable=\"false\" movable=\"false\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_ifHasCrop\">\n                        <title name=\"LOC\">Corn</title>\n                        <statement name=\"DO\">\n                          <block type=\"harvester_corn\"/>\n                        </statement>\n                        <next>\n                          <block type=\"harvester_ifHasCrop\">\n                            <title name=\"LOC\">Pumpkin</title>\n                            <statement name=\"DO\">\n                              <block type=\"harvester_pumpkin\"/>\n                            </statement>\n                            <next>\n                              <block type=\"harvester_ifHasCrop\">\n                                <title name=\"LOC\">Lettuce</title>\n                                <statement name=\"DO\">\n                                  <block type=\"harvester_lettuce\"/>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>",
          "courseF_bee_fwp_challenge2_d": "<p><strong>Here is what your main program should look like:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter2</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">6</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                <mutation name=\"pick row\">\n                  <arg name=\"length\"/>\n                </mutation>\n                <value name=\"ARG0\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter2</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n    </block></xml>"
        },
        "course4_collector_nested_loops_challenge2_authored_hint": {
          "courseD_bee_nested_loops_challenge2_a": "<p>Don't forget that you can <code>repeat</code> a single command or a longer pattern. You can even <code>repeat</code> a <code>repeat</code> block!</p>",
          "courseD_bee_nested_loops_challenge2_b": "<p>To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the <em>entire</em> cave!</p>",
          "courseD_bee_nested_loops_challenge2_c": "<p>The shortest program that reaches all the treasure uses only one <code>collect</code> block and two turns.</p>",
          "courseD_bee_nested_loops_challenge2_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">3</title>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnLeft</title>\n            <next>\n              <block type=\"controls_repeat_dropdown\">\n                <title name=\"TIMES\" config=\"3-10\">3</title>\n                <statement name=\"DO\">\n                  <block type=\"collector_collect\">\n                    <next>\n                      <block type=\"controls_repeat_dropdown\">\n                        <title name=\"TIMES\" config=\"3-10\">3</title>\n                        <statement name=\"DO\">\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"controls_repeat_dropdown\">\n                                <title name=\"TIMES\" config=\"3-10\">3</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "course4_harvester_nested_loops_challenge1_authored_hint": {
          "courseD_harvester_nested_loops_challenge1_a": "<p>You have probably already used a loop to create a zig-zag pattern. If you remember that algorithm, you can make a few additions to it here.</p>"
        },
        "course4_playlab_variables_challenge1_authored_hint": {
          "courseF_playlab_variables_challenge1_a": "<p>You will need additional blocks from the tool box to get the actors to talk.</p>\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n      <value name=\"SPRITE\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n                      <value name=\"TEXT\">\n                  <block type=\"text\">\n                    <title name=\"TEXT\">Knock knock.</title>\n                  </block>\n                </value>\n      <value name=\"TIME\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n      </block></xml>"
        },
        "course4_playlab_variables_challenge3_authored_hint": {
          "courseF_playlab_variables_challenge3_a": "<p>The actor knows what to say because it checks the current value of the <code>fortune</code> variable.</p>\n<xml><block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">fortune</title>\n            <value name=\"VALUE\">\n              <block type=\"text\" movable=\"false\">\n                <title name=\"TEXT\">Concentrate and ask again!</title>\n              </block>\n            </value>\n          </block></xml>",
          "courseF_playlab_variables_challenge3_b": "<p>It will feel like the game starts all over if you call the <code>ask a question</code> function again after the actor says the fortune.</p>\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n                <value name=\"SPRITE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n                <value name=\"TEXT\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">fortune</title>\n                  </block>\n                </value>\n                <value name=\"TIME\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">2</title>\n                  </block>\n                </value>\n              <next>\n<block type=\"procedures_callnoreturn\">\n        <mutation name=\"Ask a question\"/>\n        </block></next></block></xml>",
          "courseF_playlab_variables_challenge3_c": "<p>You will need to add more conditional statements to give the actors more things to say.</p>\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n\n<p>Don't forget to change which moods the actor will show inside of the <code>repeat forever</code> loop. You can also set the moods randomly!</p>",
          "courseF_playlab_variables_challenge3_d": "<p>Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.</p>\n<p>Don't forget to change the instructions inside the <code>Ask a question</code> function so they still make sense!</p>",
          "courseF_playlab_variables_challenge3_e": "<p>When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?</p>\n<p>Have a friend try your app when it is finished!</p>"
        },
        "courseA_artist_loops10_authored_hint": {},
        "courseA_artist_loops10_2018_authored_hint": {},
        "courseA_artist_loops11_authored_hint": {},
        "courseA_artist_loops11_2018_authored_hint": {},
        "courseA_artist_loops11_predict2_authored_hint": {},
        "courseA_artist_loops12_authored_hint": {},
        "courseA_artist_loops12_2018_authored_hint": {},
        "courseA_artist_loops2_authored_hint": {
          "courseA_artist_loops2_a": "<p>Can't figure out how to draw a line?  Start attaching blocks to the <xml><block type=\"when_run\"/></xml> block to see what happens.</p>",
          "courseA_artist_loops2_b": "<p>Use this block <xml><block type=\"simple_move_right\"/></xml> to solve this puzzle.</p>"
        },
        "courseA_artist_loops2_2018_authored_hint": {
          "courseA_artist_loops2_a": "<p>Can't figure out how to draw a line?  Start attaching blocks to the <xml><block type=\"when_run\"/></xml> block to see what happens.</p>",
          "courseA_artist_loops2_b": "<p>Use this block <xml><block type=\"simple_move_right\"/></xml> to solve this puzzle.</p>"
        },
        "courseA_artist_loops3_authored_hint": {
          "courseA_artist_loops3_a": "<p>Trace slowly through the program with your finger to see where it goes wrong.</p>",
          "courseA_artist_loops3_b": "<p>You will want to use a block like this to solve this puzzle.</p>\n<p><img src=\"https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png\"></p>"
        },
        "courseA_artist_loops3_2018_authored_hint": {
          "courseA_artist_loops3_a": "<p>Trace slowly through the program with your finger to see where it goes wrong.</p>",
          "courseA_artist_loops3_b": "<p>You will want to use a block like this to solve this puzzle.</p>\n<p><img src=\"https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png\"></p>"
        },
        "courseA_artist_loops4_authored_hint": {
          "courseA_artist_loops4_a": "<p>If you want the loop to repeat more than 4 times, you can change the number at the top of the block.</p>",
          "courseA_artist_loops4_b": "<p>Since you can only use one <xml><block type=\"simple_move_right\"/></xml>\nblock, try putting it inside of the <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"2-6\">5</title></block></xml> loop.</p>"
        },
        "courseA_artist_loops4_2018_authored_hint": {
          "courseA_artist_loops4_a": "<p>If you want the loop to repeat more than 4 times, you can change the number at the top of the block.</p>",
          "courseA_artist_loops4_b": "<p>Since you can only use one <xml><block type=\"simple_move_right\"/></xml>\nblock, try putting it inside of the <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"2-6\">5</title></block></xml> loop.</p>"
        },
        "courseA_artist_loops5_authored_hint": {
          "courseA_artist_loops5_a": "<p>Try using what you've learned about <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> blocks to complete this puzzle!</p>",
          "courseA_artist_loops5_b": "<p>If you want the loop to repeat more than 4 times, you can change the number at the top of the block.</p>",
          "courseA_artist_loops5_c": "<p>Since you can only use one <xml><block type=\"simple_move_right\"/></xml> block, try putting it inside of the </p>\n<p><xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>\nloop.</p>"
        },
        "courseA_artist_loops5_2018_authored_hint": {
          "courseA_artist_loops5_a": "<p>Try using what you've learned about <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> blocks to complete this puzzle!</p>",
          "courseA_artist_loops5_b": "<p>If you want the loop to repeat more than 4 times, you can change the number at the top of the block.</p>",
          "courseA_artist_loops5_c": "<p>Since you can only use one <xml><block type=\"simple_move_right\"/></xml> block, try putting it inside of the </p>\n<p><xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>\nloop.</p>"
        },
        "courseA_artist_loops6_authored_hint": {
          "courseA_artist_loops6_a": "<p>Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.</p>",
          "courseA_artist_loops6_b": "<p>You will need 2 blocks in 2 directions to solve this puzzle.</p>"
        },
        "courseA_artist_loops6_2018_authored_hint": {
          "courseA_artist_loops6_a": "<p>Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.</p>",
          "courseA_artist_loops6_b": "<p>You will need 2 blocks in 2 directions to solve this puzzle.</p>"
        },
        "courseA_artist_loops7_authored_hint": {
          "courseA_artist_loops7_a": "<p>Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.</p>",
          "courseA_artist_loops7_b": "<p>Write the code for one wave first, then repeat that to draw the other two.</p>",
          "courseA_artist_loops7_c": "<p>Remember you can put more than one block in a <xml><block type=\"controls_repeat\"></p>\n<p><title name=\"TIMES\">???</title>\n</block></xml> loop.</p>"
        },
        "courseA_artist_loops7_2018_authored_hint": {
          "courseA_artist_loops7_a": "<p>Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.</p>",
          "courseA_artist_loops7_b": "<p>Write the code for one wave first, then repeat that to draw the other two.</p>",
          "courseA_artist_loops7_c": "<p>Remember you can put more than one block in a <xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"3-10\">???</title>\n  </block></xml> loop.</p>"
        },
        "courseA_artist_loops7_forVideo_authored_hint": {
          "courseA_artist_loops7_a": "<p>Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.</p>",
          "courseA_artist_loops7_b": "<p>Write the code for one wave first, then repeat that to draw the other two.</p>",
          "courseA_artist_loops7_c": "<p>Remember you can put more than one block in a <xml><block type=\"controls_repeat\"></p>\n<p><title name=\"TIMES\">???</title>\n</block></xml> loop.</p>"
        },
        "courseA_artist_loops8_authored_hint": {
          "courseA_artist_loops8_a": "<p>Try running the code to see what has been written for you.</p>",
          "courseA_artist_loops8_b": "<p>How would you loop the code that has been given to you?</p>",
          "courseA_artist_loops8_c": "<p>What does the code do?<br>What is it supposed to do?<br>What does that tell you?</p>"
        },
        "courseA_artist_loops8_2018_authored_hint": {
          "courseA_artist_loops8_a": "<p>Try running the code to see what has been written for you.</p>",
          "courseA_artist_loops8_b": "<p>How would you loop the code that has been given to you?</p>",
          "courseA_artist_loops8_c": "<p>What does the code do?<br>What is it supposed to do?<br>What does that tell you?</p>"
        },
        "courseA_artist_loops9_authored_hint": {
          "courseA_artist_loops9_a": "<p>Add another block to the code you are given to draw the rest of the stairs.</p>",
          "courseA_artist_loops9_b": "<p>The block you add should go inside of the </p>\n<p><xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml> loop.</p>",
          "courseA_artist_loops9_c": "<p>If you can't figure out where to put the loop, try writing your code step-by-step and look for patterns.</p>"
        },
        "courseA_artist_loops9_2018_authored_hint": {
          "courseA_artist_loops9_a": "<p>Add another block to the code you are given to draw the rest of the stairs.</p>",
          "courseA_artist_loops9_b": "<p>The block you add should go inside of the </p>\n<p><xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block>\n</xml> loop.</p>",
          "courseA_artist_loops9_c": "<p>If you can't figure out where to put the loop, try writing your code step-by-step and look for patterns.</p>"
        },
        "courseA_artist_loops_challenge1_authored_hint": {},
        "courseA_artist_loops_challenge1_2018_authored_hint": {},
        "courseA_artist_loops_challenge2_authored_hint": {
          "courseA_artist_loops_challenge2_a": "<p>Blocks like this <xml>  <block type=\"simple_move_up_left\"/></xml> will let your artist move at a slant!</p>",
          "courseA_artist_loops_challenge2_b": "<p>When you finish one bird house, <code>jump</code> to the next!</p>",
          "courseA_artist_loops_challenge2_c": "<p>You will need a LOT of blocks inside the loop for this challenge.</p>"
        },
        "courseA_artist_loops_challenge2a_authored_hint": {
          "courseA_artist_loops_challenge2_a": "<p>Blocks like this <xml>  <block type=\"simple_move_up_left\"/></xml> will let your artist move at a slant!</p>",
          "courseA_artist_loops_challenge2_b": "<p>When you finish one tent, <code>jump</code> up twice to get to the next!</p>",
          "courseA_artist_loops_challenge2_c": "<p>All of your blocks will need to be inside of a loop to finish this puzzle.</p>"
        },
        "courseA_artist_loops_challenge2a_2018_authored_hint": {
          "courseA_artist_loops_challenge2_a": "<p>Blocks like this <xml>  <block type=\"simple_move_up_left\"/></xml> will let your artist move at a slant!</p>",
          "courseA_artist_loops_challenge2_b": "<p>When you finish one tent, <code>jump</code> up twice to get to the next!</p>",
          "courseA_artist_loops_challenge2_c": "<p>All of your blocks will need to be inside of a loop to finish this puzzle.</p>"
        },
        "courseA_artist_loops_challenge3_authored_hint": {
          "harvey_tictactoe": "<p>You can use <code>jump</code> blocks to move to other spaces.</p>"
        },
        "courseA_bee_seq1_authored_hint": {
          "courseA_bee_seq1_a": "<p>Use this block to get nectar once the bee finds a flower.</p>\n<xml>\n  <block type=\"maze_nectar\"/>\n</xml>"
        },
        "courseA_bee_seq10_authored_hint": {},
        "courseA_bee_seq11_authored_hint": {},
        "courseA_bee_seq12_authored_hint": {
          "courseA_bee_seq1_a": "<p>Use this block to get nectar once the bee finds a flower.</p>\n<xml>\n  <block type=\"maze_nectar\"/>\n</xml>"
        },
        "courseA_bee_seq13_authored_hint": {},
        "courseA_bee_seq14_authored_hint": {},
        "courseA_bee_seq2_authored_hint": {},
        "courseA_bee_seq3_authored_hint": {},
        "courseA_bee_seq4_authored_hint": {},
        "courseA_bee_seq5_authored_hint": {},
        "courseA_bee_seq6_authored_hint": {},
        "courseA_bee_seq7_authored_hint": {},
        "courseA_bee_seq8_authored_hint": {},
        "courseA_bee_seq9_authored_hint": {},
        "courseA_collector_loops1_authored_hint": {
          "courseA_collector_loops1_a": "<p>After you have moved to a square with treasure, use this block to pick it up.</p>\n<xml>  <block type=\"collector_collect\"/></xml>",
          "courseA_collector_loops1_b": "<p>A simple solution would be to move East 2 times, then get the treasure.</p>"
        },
        "courseA_collector_loops10_authored_hint": {},
        "courseA_collector_loops10_2018_authored_hint": {},
        "courseA_collector_loops11_authored_hint": {},
        "courseA_collector_loops11_2018_authored_hint": {},
        "courseA_collector_loops11_predict2_authored_hint": {},
        "courseA_collector_loops1_2018_authored_hint": {
          "courseA_collector_loops1_a": "<p>After you have moved to a square with treasure, use this block to pick it up.</p>\n<xml>  <block type=\"collector_collect\"/></xml>",
          "courseA_collector_loops1_b": "<p>A simple solution would be to move East 2 times, then get the treasure.</p>"
        },
        "courseA_collector_loops2_authored_hint": {
          "courseA_collector_loops2_a": "<p>You'll have to move before you can collect any treasure.</p>",
          "courseA_collector_loops2_b": "<p>After you have moved to a square with treasure, use this block to pick it up.</p>\n<xml>  <block type=\"collector_collect\"/></xml>"
        },
        "courseA_collector_loops2_2018_authored_hint": {
          "courseA_collector_loops2_a": "<p>You'll have to move before you can collect any treasure.</p>",
          "courseA_collector_loops2_b": "<p>After you have moved to a square with treasure, use this block to pick it up.</p>\n<xml>  <block type=\"collector_collect\"/></xml>"
        },
        "courseA_collector_loops3_authored_hint": {
          "courseA_collector_loops3_a": "<p>Try using a </p>\n<p><xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop!</p>",
          "courseA_collector_loops3_b": "<p>Remember, you can put more than 1 block inside a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop.</p>"
        },
        "courseA_collector_loops3_2018_authored_hint": {
          "courseA_collector_loops3_a": "<p>Try using a </p>\n<p><xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop!</p>",
          "courseA_collector_loops3_b": "<p>Remember, you can put more than 1 block inside a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop.</p>"
        },
        "courseA_collector_loops3_predict1_authored_hint": {},
        "courseA_collector_loops4_authored_hint": {
          "courseA_collector_loops4_a": "<p>To change how far Laurel goes, change the number of times that the loop runs.</p>",
          "courseA_collector_loops4_b": "<p>Don't forget that Laurel needs to walk down and collect the treasure after she finishes the <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop!</p>"
        },
        "courseA_collector_loops4_2018_authored_hint": {
          "courseA_collector_loops4_a": "<p>To change how far Laurel goes, change the number of times that the loop runs.</p>",
          "courseA_collector_loops4_b": "<p>Don't forget that Laurel needs to walk down and collect the treasure after she finishes the <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop!</p>"
        },
        "courseA_collector_loops5_authored_hint": {
          "courseA_collector_loops5_a": "<p>If you can't figure out the answer right away, try using a piece of paper to figure out what arrows you will need and look for a pattern.</p>",
          "courseA_collector_loops5_b": "<p>Try splitting the problem into 2 parts, moving sideways and then down.</p>",
          "courseA_collector_loops5_c": "<p>You'll want to start with a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop that moves Laurel west and collects treasure.</p>"
        },
        "courseA_collector_loops5_2018_authored_hint": {
          "courseA_collector_loops5_a": "<p>If you can't figure out the answer right away, try using a piece of paper to figure out what arrows you will need and look for a pattern.</p>",
          "courseA_collector_loops5_b": "<p>Try splitting the problem into 2 parts, moving sideways and then down.</p>",
          "courseA_collector_loops5_c": "<p>You'll want to start with a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loop that moves Laurel west and collects treasure.</p>"
        },
        "courseA_collector_loops6_authored_hint": {
          "courseA_collector_loops6_a": "<p>Can't figure out what's wrong? Try running the code a couple of times to see what happens.</p>",
          "courseA_collector_loops6_b": "<p>The shortest solution has 2 <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loops, one after the other.</p>"
        },
        "courseA_collector_loops6_2018_authored_hint": {
          "courseA_collector_loops6_a": "<p>Can't figure out what's wrong? Try running the code a couple of times to see what happens.</p>",
          "courseA_collector_loops6_b": "<p>The shortest solution has 2 <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loops, one after the other.</p>"
        },
        "courseA_collector_loops7_authored_hint": {
          "courseA_collector_loops7_a": "<p>If you can't figure out what comes next, try running the code to see where Laurel ends up.</p>"
        },
        "courseA_collector_loops7_2018_authored_hint": {
          "courseA_collector_loops7_a": "<p>If you can't figure out what comes next, try running the code to see where Laurel ends up.</p>"
        },
        "courseA_collector_loops8_authored_hint": {
          "courseA_collector_loops8_a": "<p>If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper and looking for a pattern.</p>",
          "courseA_collector_loops8_b": "<p>Try breaking this puzzle into 3 separate problems, and writing loops for each.</p>",
          "courseA_collector_loops8_c": "<p>Remember you can write one piece of the code at a time, then press \"Run\" to figure out where you need to go from there.</p>"
        },
        "courseA_collector_loops8_2018_authored_hint": {
          "courseA_collector_loops8_a": "<p>If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper and looking for a pattern.</p>",
          "courseA_collector_loops8_b": "<p>Try breaking this puzzle into 3 separate problems, and writing loops for each.</p>",
          "courseA_collector_loops8_c": "<p>Remember you can write one piece of the code at a time, then press \"Run\" to figure out where you need to go from there.</p>"
        },
        "courseA_collector_loops9_authored_hint": {
          "courseA_collector_loops9_a": "<p>If you can't spot the best places to use loops, try coding it out step-by-step and look for a pattern. </p>",
          "courseA_collector_loops9_b": "<p>Try putting 2 of your <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loops inside of another loop to make your code shorter!</p>"
        },
        "courseA_collector_loops9_2018_authored_hint": {
          "courseA_collector_loops9_a": "<p>If you can't spot the best places to use loops, try coding it out step-by-step and look for a pattern. </p>",
          "courseA_collector_loops9_b": "<p>Try putting 2 of your <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> loops inside of another loop to make your code shorter!</p>"
        },
        "courseA_collector_loops_challenge1_authored_hint": {
          "courseA_collector_loops_challenge1_a": "<p>Try changing the numbers in each loop if something seems wrong.</p>",
          "courseA_collector_loops_challenge1_b": "<p>You don't need to use a loop if you are only doing something one time.</p>",
          "courseA_collector_loops_challenge1_c": "<p>There are 6 gems on the right side of the cave when you start, but you only need to get treasure 5 times moving South. Do you know why?</p>",
          "courseA_collector_loops_challenge1_d": "<p>The starting program doesn't collect the last 2 gems. Try adding this code at the very end:</p>\n<xml><block type=\"maze_moveEast\">\n                        <next>\n                          <block type=\"collector_collect_simplified\">\n                            <next>\n                              <block type=\"maze_moveSouth\">\n                                <next>\n                                  <block type=\"collector_collect\"/>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block></xml>"
        },
        "courseA_collector_loops_challenge1_2018_authored_hint": {
          "courseA_collector_loops_challenge1_a": "<p>Try changing the numbers in each loop if something seems wrong.</p>",
          "courseA_collector_loops_challenge1_b": "<p>You don't need to use a loop if you are only doing something one time.</p>",
          "courseA_collector_loops_challenge1_c": "<p>There are 6 gems on the right side of the cave when you start, but you only need to get treasure 5 times moving South. Do you know why?</p>",
          "courseA_collector_loops_challenge1_d": "<p>The starting program doesn't collect the last 2 gems. Try adding this code at the very end:</p>\n<xml><block type=\"maze_moveEast\">\n                        <next>\n                          <block type=\"collector_collect_simplified\">\n                            <next>\n                              <block type=\"maze_moveSouth\">\n                                <next>\n                                  <block type=\"collector_collect\"/>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block></xml>"
        },
        "courseA_collector_loops_challenge2_authored_hint": {
          "courseA_collector_loops_challenge2_b": "<p>You only need to use 1 block to solve this.</p>",
          "courseA_collector_loops_challenge2_a": "<p>You can move back over the path a second time before moving south.</p>"
        },
        "courseA_collector_loops_challenge2kp_authored_hint": {
          "courseA_collector_loops_challenge2kp_b": "<p>Try this path to get you to a solution.</p>",
          "courseA_collector_loops_challenge2kp_a": "<p>Can you use loops to solve this puzzle?</p>"
        },
        "courseA_collector_loops_challenge2kp_2018_authored_hint": {
          "courseA_collector_loops_challenge2kp_b": "<p>Try this path to get you to a solution.</p>",
          "courseA_collector_loops_challenge2kp_a": "<p>Can you use loops to solve this puzzle?</p>"
        },
        "courseA_collector_preLoops1_authored_hint": {},
        "courseA_collector_preLoops2_authored_hint": {},
        "courseA_collector_preLoops3_authored_hint": {},
        "courseA_collector_preLoops4_authored_hint": {
          "courseA_collector_preLoops4_a": "<p>To grab the treasure, snap two <img src=\"https://images.code.org/2df8a25d7e96207f57d1a6b504950b70-image-1508906116743.34.37.png\"> blocks and one <img src=\"https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png\"> block to the bottom of the program and click \"Run\"!</p>"
        },
        "courseA_collector_preLoops5_authored_hint": {
          "courseA_collector_preLoops5_a": "<p>You'll need to go two different directions to get even one gem!</p>"
        },
        "courseA_collector_preLoops6_authored_hint": {
          "courseA_collector_preLoops6_a": "<p>You will need to use two <img src=\"https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png\"> blocks to solve this puzzle.</p>"
        },
        "courseA_collector_preLoops7_authored_hint": {
          "courseA_collector_loops2_b": "<p>After you have moved to a square with treasure, use this block to pick it up.</p>\n<xml>  <block type=\"collector_collect\"/></xml>"
        },
        "courseA_forVideoTest_artist_authored_hint": {},
        "courseA_harvester_forVideo_authored_hint": {
          "courseA_harvester_loops3_a": "<p>Use a <code>repeat</code> block like this to help you!</p>\n<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">3</title>\n  </block></xml>"
        },
        "courseA_harvester_loops1_authored_hint": {
          "courseA_harvester_loops1_a": "<p>Once you move to some corn, use this block to pick it!</p>\n<xml><block type=\"harvester_corn\"/></xml>"
        },
        "courseA_harvester_loops10_authored_hint": {},
        "courseA_harvester_loops11_authored_hint": {},
        "courseA_harvester_loops2_authored_hint": {
          "courseA_harvester_loops2_a": "<p>Your code will have <strong>four</strong> <code>move west</code></p>\n<p><xml><block type=\"maze_moveWest\"/></xml>\nblocks and <strong>four</strong> <xml>\n<code>pick corn</code>\n  <block type=\"harvester_corn\"/>\n</xml> blocks. </p>"
        },
        "courseA_harvester_loops3_authored_hint": {
          "courseA_harvester_loops3_a": "<p>Use a <code>repeat</code> block like this to help you!</p>\n<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">4</title>\n  </block></xml>",
          "courseA_harvester_loops3_b": "<p>To repeat code, drag out a <code>repeat</code> (<xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">4</title>\n  </block></xml> )loop, then put the block you want inside of it. </p>"
        },
        "courseA_harvester_loops4_authored_hint": {
          "courseA_harvester_loops4_a": "<p>Don't be afraid to press <code>Run</code> to see what happens!</p>",
          "courseA_harvester_loops4_b": "<p>How many pieces of corn are there? How many times does your code repeat?</p>"
        },
        "courseA_harvester_loops5_authored_hint": {
          "courseA_harvester_loops5_a": "<p>If you get stuck, try solving the puzzle in 2 parts, one part before the corner and one part after the corner.</p>",
          "courseA_harvester_loops5_b": "<p>Your final code will have <strong>one</strong> <code>repeat</code>  <xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">6</title>\n    </block></xml> loop, <strong>one</strong> <code>move South</code>   <xml><block type=\"maze_moveSouth\" limit=\"1\"/></xml> block, and <strong>one</strong> <code>move East</code>   <xml><block type=\"maze_moveEast\" limit=\"1\"/> </xml>block.</p>",
          "courseA_harvester_loops5_c": "<p>Use this path to pick all the corn!</p>"
        },
        "courseA_harvester_loops5a_authored_hint": {
          "courseA_harvester_loops5a_a": "<p>You will need one <code>repeat</code> <xml> <block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">6</title>\n  </block></xml> loop after another.</p>",
          "courseA_harvester_loops5a_b": "<p>One loop will repeat <code>move South</code><xml><block type=\"maze_moveSouth\" limit=\"1\"/></xml>, and the other will repeat <code>move East</code> <xml><block type=\"maze_moveEast\" limit=\"1\"/></xml></p>",
          "courseA_harvester_loops5a_c": "<p>Use this path to move one way, and then the other.</p>"
        },
        "courseA_harvester_loops5b_authored_hint": {
          "courseA_harvester_loops5b_a": "<p>Press <code>Run</code> and see what happens!</p>",
          "courseA_harvester_loops5b_b": "<p>Are your loops repeating the right number of times?</p>",
          "courseA_harvester_loops5b_c": "<p>Move one way, then the other with this path.</p>"
        },
        "courseA_harvester_loops6_authored_hint": {
          "courseA_harvester_loops6_a": "<p>If you get stuck, try writing the steps on paper and looking for repeating patterns.</p>",
          "courseA_harvester_loops6_b": "<p>This is the path you should take to pick all the corn.</p>"
        },
        "courseA_harvester_loops7_authored_hint": {
          "courseA_harvester_loops7_a": "<p>You will need two <code>repeat</code> <xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">5</title>\n  </block></xml>loops after each other!</p>",
          "courseA_harvester_loops7_b": "<p>Use two loops to follow this path.</p>"
        },
        "courseA_harvester_loops8_authored_hint": {},
        "courseA_harvester_loops9_authored_hint": {
          "courseA_harvester_loops9_a": "<p>Break this puzzle up into three different parts. One part to the first corner, one part to the second corner, and one part to the end.</p>",
          "courseA_harvester_loops9_b": "<p>Don't be afraid to run your code after every part to see what happens!</p>",
          "courseA_harvester_loops9_c": "<p>Follow this path to pick all the corn.</p>"
        },
        "courseA_harvester_seq1_authored_hint": {
          "courseA_harvester_seq1_a": "<p>Use this block to pick the corn when the harvester finds it!</p>\n<xml>\n  <block type=\"harvester_corn\"/>\n</xml>",
          "courseA_harvester_seq1_b": "<p>The harvester will need to move East three times to get to the corn. Use this block:</p>\n<xml>\n  <block type=\"maze_moveEast\"/>\n</xml>"
        },
        "courseA_harvester_seq10_authored_hint": {
          "courseA_harvester_seq10_a": "<p>Are you stuck? Try writing down the steps on a piece of paper first.</p>",
          "courseA_harvester_seq10_b": "<p>You need to <code>Move East</code>, then <code>Move North</code>. Do this two times. Don't forget to get all the corn too!</p>",
          "courseA_harvester_seq10_c": "<p>Try using this path to pick all the corn.</p>"
        },
        "courseA_harvester_seq11_authored_hint": {},
        "courseA_harvester_seq12_authored_hint": {},
        "courseA_harvester_seq13_authored_hint": {
          "courseA_bee_seq1_a": "<p>Use this block to pick corn once the harvester gets to it.</p>\n<xml>\n  <block type=\"harvester_corn\"/>\n</xml>"
        },
        "courseA_harvester_seq2_authored_hint": {
          "courseA_harvester_seq2_a": "<p>Don't forget to use <xml><block type=\"harvester_corn\"/></xml> to pick the corn!</p>",
          "courseA_harvester_seq2_b": "<p>Try writing down the steps on paper to find a solution!</p>"
        },
        "courseA_harvester_seq3_authored_hint": {
          "courseA_harvester_seq3_a": "<p>Did you remember to use this block?</p>\n<xml><block type=\"harvester_corn\"/></xml>",
          "courseA_harvester_seq3_b": "<p>Say the steps out loud and see if it helps you figure out the answer.</p>"
        },
        "courseA_harvester_seq4_authored_hint": {
          "courseA_harvester_seq4_a": "<p>How many spaces are between the Harvester and the corn? How many blocks are already in your workspace?</p>",
          "courseA_harvester_seq4_b": "<p>You will need five <code>Move East</code> blocks and one <code>Pick Corn</code> block:</p>\n<xml><block type=\"harvester_corn\"/></xml>"
        },
        "courseA_harvester_seq5_authored_hint": {
          "courseA_harvester_seq5_a": "<p>Which block moves the harvester the wrong way?</p>",
          "courseA_harvester_seq5_b": "<p>You need to remove one block.</p>",
          "courseA_harvester_seq5_c": "<p>Throw this block in the trash!</p>\n<xml><block type=\"maze_moveNorth\"/></xml>"
        },
        "courseA_harvester_seq6_authored_hint": {
          "courseA_harvester_seq6_a": "<p>If you're stuck, try saying the steps out loud. It could help you figure out the right path.</p>"
        },
        "courseA_harvester_seq7_authored_hint": {
          "courseA_harvester_seq7_a": "<p>Try solving the puzzle in 2 parts, one part before the corner and one part after the corner.</p>",
          "courseA_harvester_seq7_b": "<p>Having trouble? This is the path the harvester should take.</p>"
        },
        "courseA_harvester_seq8_authored_hint": {},
        "courseA_harvester_seq9_authored_hint": {
          "courseA_harvester_seq9_a": "<p>Run the code a few times to see what happens. Where does the harvester stop?</p>",
          "courseA_harvester_seq9_b": "<p>Don't forget to pick all the corn! You will need <strong>3</strong> pick corn blocks.</p>",
          "courseA_harvester_seq9_c": "<p>You should take this path to pick all the corn.</p>"
        },
        "courseA_maze_ramp2_2018_authored_hint": {
          "1": "<p>Your code should look like this:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseA_maze_ramp2a_2018_authored_hint": {
          "1": "<p>Snap both <code>East</code> blocks to the bottom of the <code>when run</code> block.</p>"
        },
        "courseA_maze_ramp3_2018_authored_hint": {
          "courseC_maze_programming3_a": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  </p>\n<p>Click on the block you want to delete, and drag it back to the toolbox.</p>\n<p>Finally, put your other blocks back in place where they belong.</p>"
        },
        "courseA_maze_ramp3a_2018_authored_hint": {
          "1": "<p>Your code should look like this:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveNorth\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseA_maze_ramp3b_2018_authored_hint": {
          "1": "<p>Your code should look like this:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveSouth\">\n        <next>\n          <block type=\"maze_moveWest\">\n            <next>\n              <block type=\"maze_moveWest\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseA_maze_ramp4_2018_authored_hint": {
          "courseC_maze_programming4_a": "<p>You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.</p>",
          "courseC_maze_programming4_b": "<p>To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.</p>"
        },
        "courseA_maze_ramp4a_2018_authored_hint": {
          "1": "<p>Your code should look like this:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveSouth\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseA_maze_ramp5_2018_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>Remember that turns are from the bird's perspective.</p>",
          "courseC_maze_programming5_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseA_maze_ramp5a_2018_authored_hint": {
          "1": "<p>Your code should look like this:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveWest\">\n        <next>\n          <block type=\"maze_moveWest\">\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseA_maze_seq1_authored_hint": {
          "courseA_maze_seq1_a": "<p>If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>\n  <block type=\"when_run\"/>\n</xml></p>",
          "courseA_maze_seq1_b": "<p>The bird will need to move West 3 times to get to the pig. Use this block:</p>\n<xml><block type=\"maze_moveWest\"/></xml>"
        },
        "courseA_maze_seq10_authored_hint": {
          "courseA_maze_seq10_a": "<p>If you're having trouble, try writing down the steps on a piece of paper first.</p>",
          "courseA_maze_seq10_b": "<p>You will need to go 3 directions to solve this puzzle.</p>"
        },
        "courseA_maze_seq10_2018_authored_hint": {
          "courseA_maze_seq10_a": "<p>If you're having trouble, try writing down the steps on a piece of paper first.</p>",
          "courseA_maze_seq10_b": "<p>You will need to go 3 different directions to solve this puzzle.</p>"
        },
        "courseA_maze_seq11_authored_hint": {},
        "courseA_maze_seq11_2018_authored_hint": {},
        "courseA_maze_seq12_authored_hint": {},
        "courseA_maze_seq12_2018_authored_hint": {},
        "courseA_maze_seq12_predict2_authored_hint": {},
        "courseA_maze_seq13_authored_hint": {
          "courseA_maze_seq13_a": "<p>If the path you need is unclear, use your finger to trace your way from the bird to the pig.</p>",
          "courseA_maze_seq13_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen.</p>",
          "courseA_maze_seq13_c": "<p>These <xml><block type=\"maze_moveNorth\"/></xml></p>\n<p><xml><block type=\"maze_moveEast\"/></xml> blocks will help you move closer to the pig.</p>"
        },
        "courseA_maze_seq13_2018_authored_hint": {
          "courseA_maze_seq13_a": "<p>If the path you need is unclear, use your finger to trace your way from the bird to the pig.</p>",
          "courseA_maze_seq13_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen.</p>",
          "courseA_maze_seq13_c": "<p>These <xml><block type=\"maze_moveNorth\"/></xml></p>\n<p><xml><block type=\"maze_moveEast\"/></xml> blocks will help you move closer to the pig.</p>"
        },
        "courseA_maze_seq1_2018_authored_hint": {
          "courseA_maze_seq1_a": "<p>If you are having trouble getting the bird to move, make sure blocks are snapped in place under <xml>\n  <block type=\"when_run\"/>\n</xml></p>",
          "courseA_maze_seq1_b": "<p>The bird will need to move West 3 times to get to the pig. Use this block:</p>\n<xml><block type=\"maze_moveWest\"/></xml>"
        },
        "courseA_maze_seq2_authored_hint": {
          "courseA_maze_seq2_a": "<p>This program is missing 1 block. Can you figure out which one?</p>",
          "courseA_maze_seq2_b": "<p>Try running the code first to see where the bird ends up. Where do you need to go from there?</p>"
        },
        "courseA_maze_seq2_2018_authored_hint": {
          "courseA_maze_seq2_a": "<p>This program is missing 1 block. Can you figure out which one?</p>",
          "courseA_maze_seq2_b": "<p>Try running the code first to see where the bird ends up. Where do you need to go from there?</p>"
        },
        "courseA_maze_seq2_predict1_authored_hint": {},
        "courseA_maze_seq3_authored_hint": {
          "courseA_maze_seq3_a": "<p>1 of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?</p>",
          "courseA_maze_seq3_b": "<p>Try using the step button to find where the program goes wrong. Is it the 1st step? The 2nd?</p>",
          "courseA_maze_seq3_c": "<p>This <xml><block type=\"maze_moveNorth\"/></xml> block doesn't seem to be moving the bird in the right direction. Can you replace it with a different block?</p>"
        },
        "courseA_maze_seq3_2018_authored_hint": {
          "courseA_maze_seq3_a": "<p>1 of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?</p>",
          "courseA_maze_seq3_b": "<p>Try using the step button to find where the program goes wrong. Is it the 1st step? The 2nd?</p>",
          "courseA_maze_seq3_c": "<p>This <xml><block type=\"maze_moveNorth\"/></xml> block doesn't seem to be moving the bird in the right direction. Can you replace it with a different block?</p>"
        },
        "courseA_maze_seq4_authored_hint": {
          "courseA_maze_seq4_a": "<p>If you are having trouble, try to figure out what the correct path is and then remove the block that doesn't fit.</p>",
          "courseA_maze_seq4_b": "<p>Try running the code as it is. Does something go wrong? Which block can you remove? How can you fix it?</p>"
        },
        "courseA_maze_seq4_2018_authored_hint": {
          "courseA_maze_seq4_a": "<p>If you are having trouble, try to figure out what the correct path is and then remove the block that doesn't fit.</p>",
          "courseA_maze_seq4_b": "<p>Try running the code as it is. Does something go wrong? Which block can you remove? How can you fix it?</p>"
        },
        "courseA_maze_seq4a_authored_hint": {
          "courseA_maze_seq4_a": "<p>If you are having trouble, try using your finger to figure out the correct path by pointing it out on the map. What moves did your finger make?</p>"
        },
        "courseA_maze_seq5_authored_hint": {
          "courseA_maze_seq5_a": "<p>Try writing down the steps on paper to find a solution!</p>",
          "courseA_maze_seq5_b": "<p>You will need 2 blocks, pointing in 2 directions.</p>"
        },
        "courseA_maze_seq5_2018_authored_hint": {
          "1": "<p>Try writing down the steps on paper to find a solution!</p>",
          "2": "<p>You will need to use this block:</p>\n<xml><block type=\"maze_moveSouth\"/></xml>"
        },
        "courseA_maze_seq5a_2018_authored_hint": {
          "1": "<p>Say the steps out loud and see if it helps you figure out the answer.</p>"
        },
        "courseA_maze_seq6_authored_hint": {
          "courseA_maze_seq6_a": "<p>Your final code should have 3 movement blocks.</p>",
          "courseA_maze_seq6_b": "<p>If you get stuck, try solving the puzzle in 2 parts, one part before the corner and one part after the corner.</p>"
        },
        "courseA_maze_seq6_2018_authored_hint": {
          "courseA_maze_seq6_a": "<p>Your final code should have 3 movement blocks.</p>",
          "courseA_maze_seq6_b": "<p>If you get stuck, try solving the puzzle in 2 parts, one part before the corner and one part after the corner.</p>"
        },
        "courseA_maze_seq7_authored_hint": {
          "courseA_maze_seq7_a": "<p>There is 1 block that you need to add to move the bird to the pig.</p>",
          "courseA_maze_seq7_b": "<p>If you can't figure out what to do, try drawing the puzzle on paper and use your finger to figure out which way to move.</p>"
        },
        "courseA_maze_seq7_2018_authored_hint": {
          "courseA_maze_seq7_a": "<p>There is 1 block that you need to add to move the bird to the pig.</p>",
          "courseA_maze_seq7_b": "<p>If you can't figure out what to do, try drawing the puzzle on paper and use your finger to figure out which way to move.</p>"
        },
        "courseA_maze_seq8_authored_hint": {
          "courseA_maze_seq8_a": "<p>If you're stuck, try drawing the image on paper to see how the bird should move.</p>"
        },
        "courseA_maze_seq8_2018_authored_hint": {
          "courseA_maze_seq8_a": "<p>If you're stuck, try drawing the image on paper to see how the bird should move.</p>"
        },
        "courseA_maze_seq9_authored_hint": {
          "courseA_maze_seq9_a": "<p>Stuck? Try tracing the bird's path with your finger.</p>",
          "courseA_maze_seq9_b": "<p>If you're not sure what to do, try pressing \"Start over\" and running the code to see what goes wrong.</p>",
          "courseA_maze_seq9_c": "<p>You will need to move in 3 directions to solve this puzzle.</p>"
        },
        "courseA_maze_seq9_2018_authored_hint": {
          "courseA_maze_seq9_a": "<p>Stuck? Try tracing the bird's path with your finger.</p>",
          "courseA_maze_seq9_b": "<p>If you're not sure what to do, try pressing \"Start over\" and running the code to see what goes wrong.</p>",
          "courseA_maze_seq9_c": "<p>You will need to move in 3 directions to solve this puzzle.</p>"
        },
        "courseA_maze_seq_challenge1_authored_hint": {
          "courseA_maze_seq_challenge1_a": "<p>There are two solutions to this puzzle.</p>"
        },
        "courseA_maze_seq_challenge1_2018_authored_hint": {
          "courseA_maze_seq_challenge1_a": "<p>There are two solutions to this puzzle.</p>"
        },
        "courseA_maze_seq_challenge2_authored_hint": {
          "courseA_maze_seq_challenge2_a": "<p>Try counting the spaces with your finger. Remember not to count the space where you start!</p>"
        },
        "courseA_maze_seq_challenge2_2018_authored_hint": {
          "courseA_maze_seq_challenge2_a": "<p>Try counting the spaces with your finger. Remember not to count the space where you start!</p>"
        },
        "courseA_playLab_events2_authored_hint": {
          "courseA_playLab_events2_a": "<p>Look for a block that makes the dog say something.</p>",
          "courseA_playLab_events2_b": "<p>This is the code you need to complete this puzzle:</p>\n<xml>\n<block type=\"when_run\" movable=\"false\" deletable=\"false\">\n<next>\n<block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</next>\n</block>\n</xml>"
        },
        "courseA_playLab_events2_2018_authored_hint": {
          "courseA_playLab_events2_a": "<p>Look for a block that that makes the dog say something.</p>",
          "courseA_playLab_events2_b": "<p>This is the code you need to complete this puzzle:</p>\n<xml>\n<block type=\"when_run\" movable=\"false\" deletable=\"false\">\n<next>\n<block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</next>\n</block>\n</xml>"
        },
        "courseA_playLab_events3_authored_hint": {
          "courseA_playLab_events3_a": "<p>Drag this block  <xml><block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block></xml> out and snap it to the bottom of <xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n  </block></xml></p>",
          "courseA_playLab_events3_b": "<p>Remember to use the left arrow key to move Jorge to the flag once you have written your program. When the flag turns green, you've finished!</p>"
        },
        "courseA_playLab_events3_2018_authored_hint": {
          "courseA_playLab_events3_a": "<p>Drag this block  <xml><block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block></xml> out and snap it to the bottom of <xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n  </block></xml></p>",
          "courseA_playLab_events3_b": "<p>Remember to use the left arrow key to move Jorge to the flag once you have written your program. When the flag turns green, you've finished!</p>"
        },
        "courseA_playLab_events4_authored_hint": {
          "courseA_playLab_events4_a": "<p>Here is the event block that you will need to get Jorge to move right:</p>\n<xml><block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block></xml>",
          "courseA_playLab_events4_b": "<p>This is the code you will need to complete this puzzle:</p>\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n    <next>\n  <block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block></next></block></xml>"
        },
        "courseA_playLab_events4_2018_authored_hint": {
          "courseA_playLab_events4_a": "<p>Here is the event block that you will need to get Jorge to move right:</p>\n<xml><block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block></xml>",
          "courseA_playLab_events4_b": "<p>This is the code you will need to complete this puzzle:</p>\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n    <next>\n  <block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block></next></block></xml>"
        },
        "courseA_playLab_events5_authored_hint": {
          "courseA_playLab_events5_a": "<p>Here are the event blocks that you will need to use to move Jorge up and down:</p>\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n  </block></xml>\nand \n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>",
          "courseA_playLab_events5_b": "<p>Did you know that you can change the key for  the event arrow by clicking on the picture in the block and choosing a new key?</p>\n<p><img src=\"https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif\"></p>"
        },
        "courseA_playLab_events5_2018_authored_hint": {
          "courseA_playLab_events5_a": "<p>Here are the event blocks that you will need to use to move Jorge up and down:</p>\n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n  </block></xml>\nand \n<xml><block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n  </block></xml>",
          "courseA_playLab_events5_b": "<p>Did you know that you can change the key for  the event arrow by clicking on the picture in the block and choosing a new key?</p>\n<p><img src=\"https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif\"></p>"
        },
        "courseA_playLab_events6_authored_hint": {
          "courseA_playLab_events6_a": "<p>Here is the event block that you would use to have Jorge do something when clicked:</p>\n<xml><block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block></xml>",
          "courseA_playLab_events6_b": "<p>Here is the block you would use to change the background:</p>\n<xml><block type=\"studio_setBackground\">\n    <title name=\"VALUE\">random</title>\n  </block></xml>",
          "courseA_playLab_events6_c": "<p>Here is the block you would use to play a random sound:</p>\n<xml><block type=\"studio_playSound\">\n    <title name=\"SOUND\">random</title>\n  </block></xml>"
        },
        "courseA_playLab_events6_2018_authored_hint": {
          "courseA_playLab_events6_a": "<p>Here is the event block that you would use to have Jorge do something when clicked:</p>\n<xml><block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block></xml>",
          "courseA_playLab_events6_b": "<p>Here is the block you would use to change the background:</p>\n<xml><block type=\"studio_setBackground\">\n    <title name=\"VALUE\">random</title>\n  </block></xml>",
          "courseA_playLab_events6_c": "<p>Here is the block you would use to play a random sound:</p>\n<xml><block type=\"studio_playSound\">\n    <title name=\"SOUND\">random</title>\n  </block></xml>"
        },
        "courseA_playLab_events7_authored_hint": {
          "courseA_playLab_events7_a": "<p>Use this block to control what happens when the actors collide.</p>\n<xml><block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">1</title>\n    <title name=\"SPRITE2\">0</title>\n  </block></xml>"
        },
        "courseA_playLab_events7_2018_authored_hint": {
          "courseA_playLab_events7_a": "<p>Use this block to control what happens when the actors collide.</p>\n<xml><block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">1</title>\n    <title name=\"SPRITE2\">0</title>\n  </block></xml>"
        },
        "courseA_playlab_challengeTemplate_authored_hint": {},
        "courseA_playlab_events_challenge1_authored_hint": {
          "courseA_playlab_events_challenge1_a": "<p>Make Waddles the Penguin show when you click Robin!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_b": "<p>Make Boo the Ghost show when you click Waddles!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_c": "<p>Make Jayden the Fuzzy Monster show when you click Boo!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_d": "<p>Make Spiff the Robot show when you click the monster!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_e": "<p>Finally, make Wendel the Wizard show when you click Spiff!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_playlab_events_challenge1_2018_authored_hint": {
          "courseA_playlab_events_challenge1_a": "<p>Make Waddles the Penguin show when you click Robin!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_b": "<p>Make Boo the Ghost show when you click Waddles!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_c": "<p>Make Jayden the Fuzzy Monster show when you click Boo!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_d": "<p>Make Spiff the Robot show when you click the monster!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_e": "<p>Finally, make Wendel the Wizard show when you click Spiff!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_playlab_events_challenge1a_authored_hint": {
          "courseA_playlab_events_challenge1_a": "<p>You can make a bird sing.</p>\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_b": "<p>You can make a robot beep.</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n\n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>",
          "courseA_playlab_events_challenge1_c": "<p>You can make an angry monster growl.</p>\n<xml>  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSpriteEmotion\">\n        <title name=\"SPRITE\">5</title>\n        <title name=\"VALUE\">2</title>\n        <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">5</title>\n            <title name=\"TEXT\">Roar!</title>\n            <next>\n              <block type=\"studio_setSpriteEmotion\">\n                <title name=\"SPRITE\">5</title>\n                <title name=\"VALUE\">0</title>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_playlab_events_challenge2_authored_hint": {
          "courseA_playlab_events_challenge2_a": "<p>You can make a bird sing.</p>\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge2_b": "<p>You can make a robot beep.</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n\n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>",
          "courseA_playlab_events_challenge2_c": "<p>You can make an angry monster growl.</p>\n<xml>  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSpriteEmotion\">\n        <title name=\"SPRITE\">5</title>\n        <title name=\"VALUE\">2</title>\n        <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">5</title>\n            <title name=\"TEXT\">Roar!</title>\n            <next>\n              <block type=\"studio_setSpriteEmotion\">\n                <title name=\"SPRITE\">5</title>\n                <title name=\"VALUE\">0</title>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_playlab_events_challenge2_2018_authored_hint": {
          "courseA_playlab_events_challenge2_a": "<p>You can make a bird sing.</p>\n<xml> \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n          </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge2_b": "<p>You can make a robot beep.</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n\n          <block type=\"studio_playSound\">\n            <title name=\"SOUND\">winpoint</title>\n          </block>\n        </next>\n\n  </block></xml>",
          "courseA_playlab_events_challenge2_c": "<p>You can make an angry monster growl.</p>\n<xml>  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSpriteEmotion\">\n        <title name=\"SPRITE\">5</title>\n        <title name=\"VALUE\">2</title>\n        <next>\n          <block type=\"studio_saySprite\">\n            <title name=\"SPRITE\">5</title>\n            <title name=\"TEXT\">Roar!</title>\n            <next>\n              <block type=\"studio_setSpriteEmotion\">\n                <title name=\"SPRITE\">5</title>\n                <title name=\"VALUE\">0</title>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_playlab_events_challengeClone_authored_hint": {
          "courseA_playlab_events_challenge1_a": "<p>Make Waddles the Penguin show when you click Robin!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_b": "<p>Make Boo the Ghost show when you click Waddles!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_c": "<p>Make Jayden the Fuzzy Monster show when you click Boo!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_d": "<p>Make Spiff the Robot show when you click the monster!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n  </block></xml>",
          "courseA_playlab_events_challenge1_e": "<p>Finally, make Wendel the Wizard show when you click on Spiff!</p>\n<xml> \n\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n    <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n  </block></xml>"
        },
        "courseA_toMakeLoopsVideo_Collector_authored_hint": {},
        "courseB_Scrat_ramp1_2018_authored_hint": {
          "1": "<p>If Scrat isn't doing what you want, make sure both of the blocks have been fully clicked together, then click \"Run\" again.</p>",
          "2": "<p>Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!</p>"
        },
        "courseB_Scrat_ramp2_2018_authored_hint": {
          "1": "<p>Your code should look like this:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_Scrat_ramp3a_2018_authored_hint": {
          "1": "<p>Your code should look like this:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveNorth\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_Scrat_ramp3b_2018_authored_hint": {
          "1": "<p>Your code should look like this:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveSouth\">\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveEast\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_Scrat_ramp4a_2018_authored_hint": {
          "1": "<p>Your code should look like this:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveEast\">\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveSouth\"/>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_Scrat_ramp5a_2018_authored_hint": {
          "1": "<p>Your code should look like this:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"maze_moveWest\">\n        <next>\n          <block type=\"maze_moveWest\">\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_artist_loops10_authored_hint": {},
        "courseB_artist_loops10_2018_authored_hint": {},
        "courseB_artist_loops2_authored_hint": {
          "courseB_artist_loops2_a": "<p>If you want the loop to repeat more than 4 times, you can change the number at the top of the block.</p>",
          "courseB_artist_loops2_b": "<p>Try running the code first to see where the artist ends up.</p>"
        },
        "courseB_artist_loops2_2018_authored_hint": {
          "courseB_artist_loops2_a": "<p>If you want the loop to repeat more than 4 times, you can change the number at the top of the block.</p>",
          "courseB_artist_loops2_b": "<p>Try running the code first to see where the artist ends up.</p>"
        },
        "courseB_artist_loops3_authored_hint": {
          "courseB_artist_loops3_a": "<p>Remember to use a <code>repeat</code> loop for better code!</p>",
          "courseB_artist_loops3_b": "<p>The artist will want to move South to draw this line.</p>"
        },
        "courseB_artist_loops3_2018_authored_hint": {
          "courseB_artist_loops3_a": "<p>Remember to use a <code>repeat</code> <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">???</title>\n  </block></xml> loop for better code!</p>",
          "courseB_artist_loops3_b": "<p>The artist will want to move South to draw this line.</p>"
        },
        "courseB_artist_loops4_authored_hint": {
          "courseB_artist_loops4_a": "<p>The jump block lets you move forward without drawing a line.</p>",
          "courseB_artist_loops4_b": "<p>You will need to add a block inside of the repeat loop to solve this puzzle.</p>",
          "courseB_artist_loops4_c": "<p>Don't forget to change the number of times the loop repeats.</p>"
        },
        "courseB_artist_loops4_2018_authored_hint": {
          "courseB_artist_loops4_a": "<p>The jump block lets you move forward without drawing a line.</p>",
          "courseB_artist_loops4_b": "<p>You will need to add a block inside of the repeat loop to solve this puzzle.</p>",
          "courseB_artist_loops4_c": "<p>Don't forget to change the number of times the loop repeats.</p>"
        },
        "courseB_artist_loops5_authored_hint": {
          "courseB_artist_loops5_a": "<p>Drag out a <code>repeat</code> loop, then put the other blocks inside of it. How many times do you need to repeat?</p>"
        },
        "courseB_artist_loops5_2018_authored_hint": {
          "courseB_artist_loops5_a": "<p>Drag out a <code>repeat</code> <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">???</title>\n  </block></xml> loop, then put the other blocks inside of it. How many times do you need to repeat?</p>"
        },
        "courseB_artist_loops6_authored_hint": {
          "courseB_artist_loops6_b": "<p>Try writing the moves down on a piece of paper and look for a pattern.</p>"
        },
        "courseB_artist_loops6_2018_authored_hint": {
          "courseB_artist_loops6_b": "<p>Try writing the moves down on a piece of paper and look for a pattern.</p>"
        },
        "courseB_artist_loops7_authored_hint": {
          "courseB_artist_loops7_a": "<p>This challenge uses <strong>4</strong> loops, one right after another!</p>",
          "courseB_artist_loops7_b": "<p>Notice that every loop makes a stair pattern that goes a different direction.</p>\n<p><img src=\"https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif\"></p>",
          "courseB_artist_loops7_c": "<p>The loops should do this:</p>\n<ul>\n<li><p>Loop 1</p>\n<ul>\n<li>Right</li>\n<li>Down</li>\n</ul>\n</li>\n<li><p>Loop 2</p>\n<ul>\n<li>Right</li>\n<li>Up</li>\n</ul>\n</li>\n<li><p>Loop 3</p>\n<ul>\n<li>Left</li>\n<li>Up</li>\n</ul>\n</li>\n<li><p>Loop 4</p>\n<ul>\n<li>Left</li>\n<li>Down</li>\n</ul>\n</li>\n</ul>"
        },
        "courseB_artist_loops7_2018_authored_hint": {
          "courseB_artist_loops7_a": "<p>This challenge uses <strong>4</strong> loops, one right after another!</p>",
          "courseB_artist_loops7_b": "<p>Notice that every loop makes a stair pattern that goes a different direction.</p>\n<p><img src=\"https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif\"></p>",
          "courseB_artist_loops7_c": "<p>The loops should do this:</p>\n<ul>\n<li><p>Loop 1</p>\n<ul>\n<li>Right</li>\n<li>Down</li>\n</ul>\n</li>\n<li><p>Loop 2</p>\n<ul>\n<li>Right</li>\n<li>Up</li>\n</ul>\n</li>\n<li><p>Loop 3</p>\n<ul>\n<li>Left</li>\n<li>Up</li>\n</ul>\n</li>\n<li><p>Loop 4</p>\n<ul>\n<li>Left</li>\n<li>Down</li>\n</ul>\n</li>\n</ul>"
        },
        "courseB_artist_loops8_authored_hint": {
          "courseB_artist_loops8_a": "<p>How many times should you repeat the pattern to make the ladder?</p>",
          "courseB_artist_loops8_b": "<p>Try running the code you're given to see what it does.</p>"
        },
        "courseB_artist_loops8_2018_authored_hint": {
          "courseB_artist_loops8_a": "<p>How many times should you repeat the pattern to make the ladder?</p>",
          "courseB_artist_loops8_b": "<p>Try running the code you're given to see what it does.</p>"
        },
        "courseB_artist_loops8_predict1_authored_hint": {},
        "courseB_artist_loops9_authored_hint": {
          "courseB_artist_loops9_a": "<p>Remember that jump blocks can be used to move without drawing a line.</p>",
          "courseB_artist_loops9_b": "<p>You will want to use the W block to solve this puzzle.</p>",
          "courseB_artist_loops9_c": "<p>Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.</p>"
        },
        "courseB_artist_loops9_2018_authored_hint": {
          "courseB_artist_loops9_a": "<p>Remember that jump blocks can be used to move without drawing a line.</p>",
          "courseB_artist_loops9_b": "<p>You will want to use the W block to solve this puzzle.</p>",
          "courseB_artist_loops9_c": "<p>Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.</p>"
        },
        "courseB_artist_loops_challenge1_authored_hint": {
          "courseB_artist_loops_challenge1_a": "<p>Blocks like this: <xml>  <block type=\"simple_move_up_right\"/></xml> will let your artist move at a slant!</p>",
          "courseB_artist_loops_challenge1_b": "<p>When you finish one of the dice, <code>jump</code> to the next!</p>",
          "courseB_artist_loops_challenge1_c": "<p>You will need to <code>move</code> or <code>jump</code> over some of the same lines twice. </p>"
        },
        "courseB_artist_loops_challenge1_2018_authored_hint": {
          "courseB_artist_loops_challenge1_a": "<p>Blocks like this: <xml>  <block type=\"simple_move_up_right\"/></xml> will let your artist move at a slant!</p>",
          "courseB_artist_loops_challenge1_b": "<p>When you finish one of the dice, <code>jump</code> to the next!</p>",
          "courseB_artist_loops_challenge1_c": "<p>You will need to <code>move</code> or <code>jump</code> over some of the same lines twice. </p>"
        },
        "courseB_artist_loops_challenge2_authored_hint": {
          "courseB_artist_loops_challenge2_a": "<p>The code to draw an X is already given to you. All you need to do is repeat the X and <code>jump</code> to the next spot.</p>",
          "courseB_artist_loops_challenge2_b": "<p>You can use <code>jump</code> blocks to move to other spaces without drawing.</p>"
        },
        "courseB_artist_loops_challenge2_2018_authored_hint": {
          "courseB_artist_loops_challenge2_a": "<p>The code to draw an X is already given to you. All you need to do is repeat the X and <code>jump</code> to the next spot.</p>",
          "courseB_artist_loops_challenge2_b": "<p>You can use <code>jump</code> blocks to move to other spaces without drawing.</p>"
        },
        "courseB_collector_loops1_authored_hint": {
          "courseB_collector_loops1_a": "<p>The <xml><block type=\"collector_collect_simplified\"/></xml> block can be used to pick up treasure when you are standing on top of it.</p>"
        },
        "courseB_collector_loops10_authored_hint": {
          "courseB_collector_loops10_a": "<p>If you can't figure out where to put the <code>repeat</code> loops, write out the code step-by-step and look for a pattern.</p>",
          "courseB_collector_loops10_b": "<p>Try writing the moves down on a piece of paper and looking for a pattern.</p>"
        },
        "courseB_collector_loops10_2018_authored_hint": {
          "courseB_collector_loops10_a": "<p>If you can't figure out where to put the <code>repeat</code> loops, write out the code step-by-step and look for a pattern.</p>",
          "courseB_collector_loops10_b": "<p>Try writing the moves down on a piece of paper and looking for a pattern.</p>"
        },
        "courseB_collector_loops1_2018_authored_hint": {
          "courseB_collector_loops1_a": "<p>The <xml><block type=\"collector_collect_simplified\"/></xml> block can be used to pick up treasure when you are standing on top of it.</p>"
        },
        "courseB_collector_loops2_authored_hint": {
          "courseB_collector_loops2_a": "<p>You'll have to move before you can collect any treasure.</p>",
          "courseB_collector_loops2_b": "<p>When you have reached a spot with treasure, use the <xml><block type=\"collector_collect\"/></xml> block to pick it up.</p>"
        },
        "courseB_collector_loops2_2018_authored_hint": {
          "courseB_collector_loops2_a": "<p>You'll have to move before you can collect any treasure.</p>",
          "courseB_collector_loops2_b": "<p>When you have reached a spot with treasure, use the <xml><block type=\"collector_collect\"/></xml> block to pick it up.</p>"
        },
        "courseB_collector_loops3_authored_hint": {
          "courseB_collector_prog3_a": "<p>Try using a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block></xml> block to collect your treasure.</p>",
          "courseB_collector_prog3_b": "<p>Remember you can put more than one block inside a repeat loop.</p>"
        },
        "courseB_collector_loops3_2018_authored_hint": {
          "courseB_collector_prog3_a": "<p>Try using a <xml><block type=\"controls_repeat_simplified_dropdown\"><title name=\"TIMES\" config=\"3-10\">5</title></block></xml> block to collect your treasure.</p>",
          "courseB_collector_prog3_b": "<p>Remember you can put more than one block inside a repeat loop.</p>"
        },
        "courseB_collector_loops3_predict1_authored_hint": {
          "courseB_collector_prog3_a": "<p>Try using a <code>repeat</code> block to collect your gold.</p>"
        },
        "courseB_collector_loops4_authored_hint": {
          "courseB_collector_loops4_a": "<p>Try using the step button to figure out where things go wrong.</p>",
          "courseB_collector_loops4_b": "<p>To change how far Laurel goes, change the number of times that the loop runs.</p>",
          "courseB_collector_loops4_c": "<p>Laurel needs to walk down and collect the treasure after she finishes the <code>repeat</code> loop!</p>"
        },
        "courseB_collector_loops4_2018_authored_hint": {
          "courseB_collector_loops4_a": "<p>Try using the step button to figure out where things go wrong.</p>",
          "courseB_collector_loops4_b": "<p>To change how far Laurel goes, change the number of times that the loop runs.</p>",
          "courseB_collector_loops4_c": "<p>Laurel needs to walk down and collect the treasure after she finishes the <code>repeat</code> <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">???</title>\n  </block></xml>loop!</p>"
        },
        "courseB_collector_loops5_authored_hint": {
          "courseB_collector_loops5_a": "<p>Use more than one loop to get the job done.</p>",
          "courseB_collector_loops5_b": "<p>Try running the code a couple of times to see what happens.</p>"
        },
        "courseB_collector_loops5_2018_authored_hint": {
          "courseB_collector_loops5_a": "<p>Use more than one loop to get the job done.</p>",
          "courseB_collector_loops5_b": "<p>Try running the code a couple of times to see what happens.</p>"
        },
        "courseB_collector_loops6_authored_hint": {
          "courseB_collector_loops6_a": "<p>Can't figure out where things start going wrong? Use the \"Step\" button to run through your program one block at a time.</p>",
          "courseB_collector_loops6_b": "<p>You can change the number of times the repeat loop runs by clicking on the \"3\" and choosing a different number.</p>",
          "courseB_collector_loops6_c": "<p>You will want to use 3 <code>repeat</code> loops to solve this puzzle.</p>",
          "courseB_collector_loops6_d": "<p>If you're confused, try breaking this puzzle into 3 pieces.</p>"
        },
        "courseB_collector_loops6_2018_authored_hint": {
          "courseB_collector_loops6_a": "<p>Can't figure out where things start going wrong? Use the \"Step\" button to run through your program one block at a time.</p>",
          "courseB_collector_loops6_b": "<p>You can change the number of times the repeat loop runs by clicking on the \"3\" and choosing a different number.</p>",
          "courseB_collector_loops6_c": "<p>You will want to use 3 <code>repeat</code> <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">???</title>\n  </block></xml> loops to solve this puzzle.</p>",
          "courseB_collector_loops6_d": "<p>If you're confused, try breaking this puzzle into 3 pieces.</p>"
        },
        "courseB_collector_loops7_authored_hint": {
          "courseB_collector_loops7_a": "<p>If you are having a hard time with the puzzle, try drawing it on paper to help you figure it out.</p>",
          "courseB_collector_loops7_b": "<p>You will need 3 repeat loops to solve this puzzle, and don't forget the extra treasure at the end!</p>"
        },
        "courseB_collector_loops7_2018_authored_hint": {
          "courseB_collector_loops7_a": "<p>If you are having a hard time with the puzzle, try drawing it on paper to help you figure it out.</p>",
          "courseB_collector_loops7_b": "<p>You will need 3 repeat loops to solve this puzzle, and don't forget the extra treasure at the end!</p>"
        },
        "courseB_collector_loops8_authored_hint": {
          "courseB_collector_loops8_challenge_a": "<p>If you can't figure out where to put the repeat loops, write out the code step-by-step and look for a pattern.</p>"
        },
        "courseB_collector_loops8_2018_authored_hint": {
          "courseB_collector_loops8_challenge_a": "<p>If you can't figure out where to put the repeat loops, write out the code step-by-step and look for a pattern.</p>"
        },
        "courseB_collector_loops9_authored_hint": {
          "courseB_collector_loops9_a": "<p>Does this seem too hard?  Break it up into 3 little problems to make it feel easier.</p>",
          "courseB_collector_loops9_b": "<p>You will need 3 repeat loops, one after the other, for this solution.</p>"
        },
        "courseB_collector_loops9_2018_authored_hint": {
          "courseB_collector_loops9_a": "<p>Does this seem too hard?  Break it up into 3 little problems to make it feel easier.</p>",
          "courseB_collector_loops9_b": "<p>You will need 3 repeat loops, one after the other, for this solution.</p>"
        },
        "courseB_collector_loops_challenge1_authored_hint": {
          "courseB_collector_loops_challenge1_b": "<p>Start by looping the following commands:</p>\n<xml>\n  <block type=\"maze_moveSouth\">\n    <next>\n    <block type=\"collector_collect\"></block>\n    </next>\n    </block>\n</xml>",
          "courseB_collector_loops_challenge1_c": "<p>Move East twice between each path.</p>\n<p><xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n  </xml>\nYou can do this with only 14 blocks. Click for one more hint to see a solution. </p>",
          "courseB_collector_loops_challenge1_d": "<p>Try this!</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified\">\n        <title name=\"TIMES\">5</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveSouth\">\n            <next>\n              <block type=\"collector_collect\"/>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveEast\">\n                <next>\n                  <block type=\"controls_repeat_simplified\">\n                    <title name=\"TIMES\">5</title>\n                    <statement name=\"DO\">\n                      <block type=\"collector_collect\">\n                        <next>\n                          <block type=\"maze_moveNorth\"/>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_moveEast\">\n                        <next>\n                          <block type=\"maze_moveEast\">\n                            <next>\n                              <block type=\"controls_repeat_simplified\">\n                                <title name=\"TIMES\">5</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_moveSouth\">\n                                    <next>\n                                      <block type=\"collector_collect\"/>\n                                    </next>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_collector_loops_challenge1_2018_authored_hint": {
          "courseB_collector_loops_challenge1_b": "<p>Start by looping the following commands:</p>\n<xml>\n  <block type=\"maze_moveSouth\">\n    <next>\n    <block type=\"collector_collect\"></block>\n    </next>\n    </block>\n</xml>",
          "courseB_collector_loops_challenge1_c": "<p>Move East twice between each path.</p>\n<p><xml>\n  <block type=\"maze_moveEast\"><next>\n  <block type=\"maze_moveEast\"></block></next></block>\n  </xml>\nYou can do this with only 14 blocks. Click for one more hint to see a solution. </p>",
          "courseB_collector_loops_challenge1_d": "<p>Try this!</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified\">\n        <title name=\"TIMES\">5</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveSouth\">\n            <next>\n              <block type=\"collector_collect\"/>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"maze_moveEast\">\n                <next>\n                  <block type=\"controls_repeat_simplified\">\n                    <title name=\"TIMES\">5</title>\n                    <statement name=\"DO\">\n                      <block type=\"collector_collect\">\n                        <next>\n                          <block type=\"maze_moveNorth\"/>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_moveEast\">\n                        <next>\n                          <block type=\"maze_moveEast\">\n                            <next>\n                              <block type=\"controls_repeat_simplified\">\n                                <title name=\"TIMES\">5</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_moveSouth\">\n                                    <next>\n                                      <block type=\"collector_collect\"/>\n                                    </next>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_collector_loops_challenge2_authored_hint": {
          "courseB_collector_loops_challenge2_a": "<p>If something goes wrong, don't be afraid to start over. Don't give up!</p>",
          "courseB_collector_loops_challenge2_b": "<p>If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!</p>\n<xml><block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block></xml>",
          "courseB_collector_loops_challenge2_c": "<p>Try using a <code>repeat</code> block to collect the final pile of treasure!</p>",
          "courseB_collector_loops_challenge2_d": "<p>Try this solution:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">4</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"controls_repeat_simplified_dropdown\">\n            <title name=\"TIMES\" config=\"3-10\">6</title>\n            <statement name=\"DO\">\n              <block type=\"collector_collect\"/>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_collector_loops_challenge2_2018_authored_hint": {
          "courseB_collector_loops_challenge2_a": "<p>If something goes wrong, don't be afraid to start over. Don't give up!</p>",
          "courseB_collector_loops_challenge2_b": "<p>If you repeat this pattern, Laurel won't hit the wall at the bottom of the cave!</p>\n<xml><block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block></xml>",
          "courseB_collector_loops_challenge2_c": "<p>Try using a <code>repeat</code> block to collect the final pile of treasure!</p>",
          "courseB_collector_loops_challenge2_d": "<p>Try this solution:</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_simplified_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">4</title>\n        <statement name=\"DO\">\n          <block type=\"maze_moveEast\">\n            <next>\n              <block type=\"collector_collect\">\n                <next>\n                  <block type=\"maze_moveWest\">\n                    <next>\n                      <block type=\"maze_moveWest\">\n                        <next>\n                          <block type=\"maze_moveSouth\"/>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"controls_repeat_simplified_dropdown\">\n            <title name=\"TIMES\" config=\"3-10\">6</title>\n            <statement name=\"DO\">\n              <block type=\"collector_collect\"/>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_collector_loops_challenge2a_authored_hint": {
          "courseB_collector_loops_challenge2a_a": "<p>If something goes wrong, try debugging it. Don't give up!</p>",
          "courseB_collector_loops_challenge2a_b": "<p>Look at this option for getting through the maze. Do you see a pattern that you can repeat?</p>",
          "courseB_collector_loops_challenge2a_c": "<p>To collect all of the treasure, you will either need to add two  <xml> <block type=\"collector_collect\"/></xml> blocks inside your loop, or put the block inside of its own <code>repeat</code> block.</p>"
        },
        "courseB_collector_loops_challenge2a_2018_authored_hint": {
          "courseB_collector_loops_challenge2a_a": "<p>If something goes wrong, try debugging it. Don't give up!</p>",
          "courseB_collector_loops_challenge2a_b": "<p>Look at this option for getting through the maze. Do you see a pattern that you can repeat?</p>",
          "courseB_collector_loops_challenge2a_c": "<p>To collect all of the treasure, you will either need to add two  <xml> <block type=\"collector_collect\"/></xml> blocks inside your loop, or put the block inside of its own <code>repeat</code> block.</p>"
        },
        "courseB_collector_loops_challenge`_authored_hint": {
          "courseA_collector_loops_challenge2_b": "<p>You only need to use one <img src=\"https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34 PM.png\"> block to solve this.</p>",
          "courseA_collector_loops_challenge2_a": "<p>You can move back over the path a second time before moving south.</p>\n<p><img src=\"https://images.code.org/88c28c76dbea70e20253083d22b5f5fd-image-1491001404225.01.21 PM.png\"></p>"
        },
        "courseB_collector_prog3_authored_hint": {
          "courseB_collector_prog3_a": "<p>Try using a <code>repeat</code> block to collect your gold.</p>"
        },
        "courseB_iceage_loops1_authored_hint": {
          "courseB_iceage_loops1_a": "<p>Watch out for broken ice! Scrat will fall right through!</p>",
          "courseB_iceage_loops1_b": "<p>You will have to use this block:</p>\n<xml><block type=\"maze_moveEast\"/></xml>"
        },
        "courseB_iceage_loops10_authored_hint": {
          "courseB_iceage_loops10_a": "<p>Watch out for broken ice! Scrat will fall into the water!</p>",
          "courseB_iceage_loops10_b": "<p>Try saying the steps out loud or writing them down on a piece of paper. Do you see any patterns?</p>",
          "courseB_iceage_loops10_c": "<p>This is a long puzzle! Follow this path.</p>"
        },
        "courseB_iceage_loops2_authored_hint": {
          "courseB_iceage_loops2_a": "<p>Break this puzzle into two pieces, one before the corner, and one after the corner.</p>",
          "courseB_iceage_loops2_b": "<p>If you get stuck, try saying the steps out loud.</p>",
          "courseB_iceage_loops2_c": "<p>Follow this path to get Scrat to the acorn.</p>"
        },
        "courseB_iceage_loops3_authored_hint": {
          "courseB_iceage_loops3_a": "<p>Use this new block!\n <xml><block type=\"controls_repeat_simplified_dropdown\">\n    <title name=\"TIMES\" config=\"3-10\">5</title>\n    </block></xml></p>",
          "courseB_iceage_loops3_b": "<p>To repeat code, drag out a <code>repeat</code> <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">???</title>\n  </block></xml>loop, then put the block you want inside of it.</p>"
        },
        "courseB_iceage_loops4_authored_hint": {
          "courseB_iceage_loops4_a": "<p>Try writing down the steps Scrat would take to get to the acorn. Do you see a pattern?</p>",
          "courseB_iceage_loops4_b": "<p>Don't be afraid to run your code and see what happens!</p>",
          "courseB_iceage_loops4_c": "<p>This is the path Scrat should take.</p>"
        },
        "courseB_iceage_loops6_authored_hint": {
          "courseB_iceage_loops6_a": "<p>Your final code will have <strong>three</strong> movement blocks.</p>",
          "courseB_iceage_loops6_b": "<p>You only need to add <strong>one</strong> more loop!</p>",
          "courseB_iceage_loops6_c": "<p>Your final path should look like this.</p>"
        },
        "courseB_iceage_loops7_authored_hint": {
          "courseB_iceage_loops7_a": "<p>If you get stuck, try writing steps down on a piece of paper. Do you see a pattern?</p>",
          "courseB_iceage_loops7_b": "<p>This is the path Scrat should take to get to the acorn.</p>"
        },
        "courseB_iceage_loops8_authored_hint": {
          "courseB_iceage_loops8_a": "<p>Are the movement blocks right? What else can you change?</p>",
          "courseB_iceage_loops8_b": "<p>The first loop should repeat <strong>3</strong> times, the second should repeat <strong>5</strong> times, the third loop should repeat <strong>4</strong> times, and the last loop should repeat <strong>4</strong> times.</p>",
          "courseB_iceage_loops8_c": "<p>Use loops to help Scrat follow this path.</p>"
        },
        "courseB_iceage_loops9_authored_hint": {
          "courseB_iceage_loops9_a": "<p>Having trouble? Try breaking this puzzle into smaller pieces. Don't be afraid to run your puzzle as you code!</p>",
          "courseB_iceage_loops9_b": "<p>Your final code should have <strong>4</strong> loops.</p>",
          "courseB_iceage_loops9_c": "<p>Scrat should follow this path to get the acorn.</p>"
        },
        "courseB_maze_seq1_authored_hint": {
          "courseB_maze_seq1_a": "<p>Connect blocks to the <xml><block type=\"when_run\"/></xml> block to make the bird move!</p>",
          "courseB_maze_seq1_b": "<p>Drag three of these <xml><block type=\"maze_moveSouth\"/></xml> arrows out and connect them to the <xml><block type=\"when_run\"/></xml> block to get your bird to the pig.</p>"
        },
        "courseB_maze_seq10_authored_hint": {
          "courseB_maze_seq10_a": "<p>Try writing down the steps on a piece of paper first.</p>",
          "courseB_maze_seq10_b": "<p>You will need to move in two different directions to reach the pig.</p>"
        },
        "courseB_maze_seq10_2018_authored_hint": {},
        "courseB_maze_seq10_predict1_authored_hint": {},
        "courseB_maze_seq10_predict1_2018_authored_hint": {},
        "courseB_maze_seq11_authored_hint": {
          "courseB_maze_seq11_a": "<p>Try writing down the steps on a piece of paper first.</p>",
          "courseB_maze_seq11_b": "<p>Solve the puzzle in two parts: one before the corner and one after the corner.</p>"
        },
        "courseB_maze_seq11_2018_authored_hint": {},
        "courseB_maze_seq1_2018_authored_hint": {
          "courseB_maze_seq1_a": "<p>Connect blocks to the <xml><block type=\"when_run\"/></xml> block to make Scrat move!</p>",
          "courseB_maze_seq1_b": "<p>Drag three of these <xml><block type=\"maze_moveSouth\"/></xml> arrows out and connect them to the <xml><block type=\"when_run\"/></xml> block to get Scrat to the acorn.</p>"
        },
        "courseB_maze_seq1_predict1_authored_hint": {},
        "courseB_maze_seq1_predict1_2018_authored_hint": {},
        "courseB_maze_seq2_authored_hint": {
          "courseB_maze_seq2_a": "<p>This program is missing one block. Can you figure out which one?</p>",
          "courseB_maze_seq2_b": "<p>Try running the code you are given to see what the bird needs to do next.</p>"
        },
        "courseB_maze_seq2_2018_authored_hint": {
          "courseB_maze_seq2_a": "<p>This program is missing one block. Can you figure out which one?</p>",
          "courseB_maze_seq2_b": "<p>Try running the code you are given to see what Scrat needs to do next.</p>"
        },
        "courseB_maze_seq3_authored_hint": {
          "courseB_maze_seq3_a": "<p>One of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?</p>",
          "courseB_maze_seq3_b": "<p>Try using the step button to find where the program goes wrong. Is it the first step? The second?</p>",
          "courseB_maze_seq3_c": "<p>The <xml><block type=\"maze_moveWest\"/></xml> block doesn't seem to be moving the bird in the right direction.</p>"
        },
        "courseB_maze_seq3_2018_authored_hint": {
          "courseB_maze_seq3_a": "<p>One of the blocks is moving Scrat in the wrong direction. Can you figure out which one and replace it with the correct block?</p>",
          "courseB_maze_seq3_b": "<p>Try using the step button to find where the program goes wrong. Is it the first step? The second?</p>",
          "courseB_maze_seq3_c": "<p>The <xml><block type=\"maze_moveWest\"/></xml> block doesn't seem to be moving the bird in the right direction.</p>"
        },
        "courseB_maze_seq4_authored_hint": {
          "courseB_maze_seq4_a": "<p>Try adding one instruction at a time until you get to the pig.</p>",
          "courseB_maze_seq4_b": "<p>You will want to use the <xml><block type=\"maze_moveEast\"/></xml> block to solve this puzzle.</p>"
        },
        "courseB_maze_seq4_2018_authored_hint": {
          "courseB_maze_seq4_a": "<p>Try adding one instruction at a time until you get to the acorn.</p>",
          "courseB_maze_seq4_b": "<p>You will want to use the <xml><block type=\"maze_moveEast\"/></xml> block to solve this puzzle.</p>"
        },
        "courseB_maze_seq5_authored_hint": {
          "courseB_maze_seq5_a": "<p>If you get stuck, try drawing out the path on paper.</p>",
          "courseB_maze_seq5_b": "<p>There are 2 ways to solve this puzzle!</p>",
          "courseB_maze_seq5_c": "<p>Not sure how to get to the pig?  Try this path.</p>"
        },
        "courseB_maze_seq5_2018_authored_hint": {
          "courseB_maze_seq5_a": "<p>If you get stuck, try drawing out the path on paper.</p>",
          "courseB_maze_seq5_b": "<p>There are 2 ways to solve this puzzle!</p>",
          "courseB_maze_seq5_c": "<p>Not sure how to get to the acorn?  Try this path.</p>"
        },
        "courseB_maze_seq6_authored_hint": {
          "courseB_maze_seq6_a": "<p>Your final code should have three movement blocks.</p>",
          "courseB_maze_seq6_b": "<p>If you get stuck, try solving the puzzle in two parts, one sideways and one up-and-down.</p>",
          "courseB_maze_seq5_c": "<p>There are two ways to solve this puzzle.</p>",
          "courseB_maze_seq5_d": "<p>Not sure how to get to the pig? Try this path!</p>"
        },
        "courseB_maze_seq6_2018_authored_hint": {
          "courseB_maze_seq6_a": "<p>Your final code should have three movement blocks.</p>",
          "courseB_maze_seq6_b": "<p>If you get stuck, try solving the puzzle in two parts, one sideways and one up-and-down.</p>",
          "courseB_maze_seq5_c": "<p>There are two ways to solve this puzzle.</p>",
          "courseB_maze_seq5_d": "<p>Not sure how to get to the acorn? Try this path!</p>"
        },
        "courseB_maze_seq7_authored_hint": {
          "courseB_maze_seq7_a": "<p>Add 1 block to move the bird to the pig.</p>",
          "courseB_maze_seq7_b": "<p>Try running the code that's given to you and see where you end up.</p>",
          "courseB_maze_seq7_c": "<p>Can't get to the pig?  Try this path!</p>"
        },
        "courseB_maze_seq7_2018_authored_hint": {
          "courseB_maze_seq7_a": "<p>Add 1 block to move Scrat to the acorn.</p>",
          "courseB_maze_seq7_b": "<p>Try running the code that's given to you and see where you end up.</p>",
          "courseB_maze_seq7_c": "<p>Can't get to the acorn?  Try this path!</p>"
        },
        "courseB_maze_seq8_authored_hint": {
          "courseB_maze_seq8_a": "<p>Try adding one block at a time until you solve the puzzle.</p>",
          "courseB_maze_seq8_b": "<p>There are two ways to solve this puzzle!</p>",
          "courseB_maze_seq8_c": "<p>Don't know which way to go? Try this path!</p>"
        },
        "courseB_maze_seq8_2018_authored_hint": {
          "courseB_maze_seq8_a": "<p>Try adding one block at a time until you solve the puzzle.</p>",
          "courseB_maze_seq8_b": "<p>There is more than one way to solve this puzzle!</p>",
          "courseB_maze_seq8_c": "<p>Don't know which way to go? Try this path!</p>"
        },
        "courseB_maze_seq9_authored_hint": {
          "courseB_maze_seq9_a": "<p>Try writing down all of the steps on a piece of paper first.</p>",
          "courseB_maze_seq9_b": "<p>Build your program a block at a time and test as you build.</p>",
          "courseB_maze_seq9_c": "<p>There are two ways to solve this puzzle.</p>",
          "courseB_maze_seq9_d": "<p>Stuck?  Try this path!</p>"
        },
        "courseB_maze_seq9_2018_authored_hint": {
          "courseB_maze_seq9_a": "<p>Try writing down all of the steps on a piece of paper first.</p>",
          "courseB_maze_seq9_b": "<p>Build your program a block at a time and test as you build.</p>",
          "courseB_maze_seq9_c": "<p>There are two ways to solve this puzzle.</p>",
          "courseB_maze_seq9_d": "<p>Stuck?  Try this path!</p>"
        },
        "courseB_maze_seq9_challenge1_authored_hint": {},
        "courseB_maze_seqCold_authored_hint": {
          "courseB_maze_seqCold_a": "<p>Stuck? Try tracing the bird's path with your finger.</p>",
          "courseB_maze_seqCold_b": "<p>The extra blocks need to be added before the last <img src=\"https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51 PM.png\"></p>"
        },
        "courseB_maze_seqOld_authored_hint": {
          "courseB_maze_seqOld_a": "<p>If you're having trouble, try writing down the steps on a piece of paper first.</p>"
        },
        "courseB_maze_seq_challenge1_authored_hint": {
          "courseB_maze_seq_challenge1_a": "<p>The shortest path might not work this time.</p>",
          "courseB_maze_seq_challenge1_b": "<p>Try using the <xml><block type=\"maze_moveWest\"/></xml> block to start.</p>"
        },
        "courseB_maze_seq_challenge1_2018_authored_hint": {
          "courseB_maze_seq_challenge1_a": "<p>The shortest path might not work this time.</p>",
          "courseB_maze_seq_challenge1_b": "<p>Try using the <xml><block type=\"maze_moveWest\"/></xml> block to start.</p>"
        },
        "courseB_maze_seq_challenge2_authored_hint": {
          "courseB_maze_seq_challenge2_a": "<p>You do not need to add or remove blocks to solve this puzzle.</p>",
          "courseB_maze_seq_challenge2_b": "<p>Rearrange the blocks and take the staircase pattern path.</p>"
        },
        "courseB_maze_seq_challenge2_2018_authored_hint": {
          "courseB_maze_seq_challenge2_a": "<p>You do not need to add or remove blocks to solve this puzzle.</p>",
          "courseB_maze_seq_challenge2_b": "<p>Rearrange the blocks and take the staircase pattern path.</p>"
        },
        "courseB_playlab_challenge1_Template_authored_hint": {},
        "courseB_playlab_challenge1_Template_2018_authored_hint": {},
        "courseB_playlab_events2_authored_hint": {
          "courseB_playlab_events2_a": "<p>This is the block to have Daisy say something:</p>\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events2_2018_authored_hint": {
          "courseB_playlab_events2_a": "<p>This is the block to have Daisy say something:</p>\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events3_authored_hint": {
          "courseB_playlab_events3_a": "<p>This is the block you should use to add the event:</p>\n<xml>\n<block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">0</title>\n  </block>\n  </xml>",
          "courseB_playlab_events3_b": "<p>This is the block you need to switch Daisy's mood:</p>\n<xml>\n<block type=\"studio_setSpriteEmotion\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">random</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events3_2018_authored_hint": {
          "courseB_playlab_events3_a": "<p>This is the block you should use to add the event:</p>\n<xml>\n<block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">0</title>\n  </block>\n  </xml>",
          "courseB_playlab_events3_b": "<p>This is the block you need to switch Daisy's mood:</p>\n<xml>\n<block type=\"studio_setSpriteEmotion\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">random</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events4_authored_hint": {
          "courseB_playlab_events4_a": "<p>This is the event that controls the left arrow:</p>\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n  </block>\n  </xml>",
          "courseB_playlab_events4_b": "<p>This is the block that makes the knight move left.</p>\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events4_2018_authored_hint": {
          "courseB_playlab_events4_a": "<p>This is the event that controls the left arrow:</p>\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n  </block>\n  </xml>",
          "courseB_playlab_events4_b": "<p>This is the block that makes the knight move left.</p>\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">8</title>\n  </block>\n  </xml>"
        },
        "courseB_playlab_events5_authored_hint": {
          "courseB_playlab_events5_a": "<p>This is the event block that controls the right arrow: </p>\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n  </block>\n  </xml>",
          "courseB_playlab_events5_b": "<p>This is the block that makes the knight run away. </p>\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block>\n</xml>"
        },
        "courseB_playlab_events5_2018_authored_hint": {
          "courseB_playlab_events5_a": "<p>This is the event block that controls the right arrow: </p>\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n  </block>\n  </xml>",
          "courseB_playlab_events5_b": "<p>This is the block that makes the knight run away. </p>\n<xml>\n<block type=\"studio_move\">\n    <title name=\"SPRITE\">1</title>\n    <title name=\"DIR\">2</title>\n  </block>\n</xml>"
        },
        "courseB_playlab_events6_authored_hint": {
          "courseB_playlab_events6_a": "<p>You will need these event blocks:</p>\n<xml>\n  <block type=\"studio_whenArrow\" id=\"callMe\">\n    <title name=\"VALUE\">up</title>\n  </block>\n  <block type=\"studio_whenArrow\" id=\"callMe\">\n    <title name=\"VALUE\">down</title>\n  </block>\n  </xml>",
          "courseB_playlab_events6_b": "<p>Use the drop down arrows on the green <code>when ___ arrow pressed</code> event blocks to choose different directions.</p>\n<p><img src=\"https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif\"></p>",
          "courseB_playlab_events6_c": "<p>Get to all of the flags to pass!</p>"
        },
        "courseB_playlab_events6_2018_authored_hint": {
          "courseB_playlab_events6_a": "<p>You will need these event blocks:</p>\n<xml>\n  <block type=\"studio_whenArrow\" id=\"callMe\">\n    <title name=\"VALUE\">up</title>\n  </block>\n  <block type=\"studio_whenArrow\" id=\"callMe\">\n    <title name=\"VALUE\">down</title>\n  </block>\n  </xml>",
          "courseB_playlab_events6_b": "<p>Use the drop down arrows on the green <code>when ___ arrow pressed</code> event blocks to choose different directions.</p>\n<p><img src=\"https://images.code.org/b4c76f19fc2d2694c1f731e5f6e786b8-image-1501003990996.gif\"></p>",
          "courseB_playlab_events6_c": "<p>Get to all of the flags to pass!</p>"
        },
        "courseB_playlab_events7_authored_hint": {
          "courseB_playlab_events7_a": "<p>This is the event block that you will need:</p>\n<xml>\n<block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">1</title>\n  </block>\n</xml>",
          "courseB_playlab_events7_b": "<p>This is the block you need to play a sound.</p>\n<xml>\n<block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n</xml>",
          "courseB_playlab_events7_c": "<p>This is the block you need to make the knight vanish:</p>\n<xml>\n<block type=\"studio_vanish\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n</xml>"
        },
        "courseB_playlab_events7_2018_authored_hint": {
          "courseB_playlab_events7_a": "<p>This is the event block that you will need:</p>\n<xml>\n<block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">1</title>\n  </block>\n</xml>",
          "courseB_playlab_events7_b": "<p>This is the block you need to play a sound.</p>\n<xml>\n<block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n</xml>",
          "courseB_playlab_events7_c": "<p>This is the block you need to make the knight vanish:</p>\n<xml>\n<block type=\"studio_vanish\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n</xml>"
        },
        "courseB_playlab_eventsTemplate_authored_hint": {},
        "courseB_playlab_eventsTemplate_2018_authored_hint": {},
        "courseB_playlab_eventsToolbox_authored_hint": {
          "courseB_playlab_events7_a": "<p>This is the event block that you will need:</p>\n<p><img src=\"https://images.code.org/2ed42b3a3108c6affdfc866de57f2eec-image-1475624565390.42.18.png\"></p>",
          "courseB_playlab_events7_b": "<p>This is the block you need to play a sound.</p>\n<p><img src=\"https://images.code.org/58e9b9a146a4ca3a8eee25845110b805-image-1475624550269.42.00.png\"></p>",
          "courseB_playlab_events7_c": "<p>This is the block you need to make the knight vanish:</p>\n<p><img src=\"https://images.code.org/f468611cbe51e1cb35531334f625395a-image-1475624478204.41.02.png\"></p>"
        },
        "courseB_playlab_events_challenge1_authored_hint": {
          "courseB_playlab_events_challenge1_a": "<p>Make the other animals move down when you press <code>▼</code>. </p>\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>",
          "courseB_playlab_events_challenge1_b": "<p>Change the speed of the animals by using this block:</p>\n<xml>\n  <block type=\"studio_setSpriteSpeed\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Studio.SpriteSpeed.NORMAL</title>\n  </block></xml>",
          "courseB_playlab_events_challenge1_c": "<p>What will the everyone say when the race is over? Make them talk with this event:</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_saySpriteChoices\">\n        <title name=\"SPRITE\">2</title>\n        <title name=\"VALUE\">Woo hoo!</title>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_playlab_events_challenge1_2018_authored_hint": {
          "courseB_playlab_events_challenge1_a": "<p>Make the other animals move down when you press <code>▼</code>. </p>\n<xml>\n  <block type=\"studio_whenArrow\" movable=\"false\">\n    <title name=\"VALUE\">down</title>\n  </block>\n</xml>",
          "courseB_playlab_events_challenge1_b": "<p>Change the speed of the animals by using this block:</p>\n<xml>\n  <block type=\"studio_setSpriteSpeed\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Studio.SpriteSpeed.NORMAL</title>\n  </block></xml>",
          "courseB_playlab_events_challenge1_c": "<p>What will the everyone say when the race is over? Make them talk with this event:</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_saySpriteChoices\">\n        <title name=\"SPRITE\">2</title>\n        <title name=\"VALUE\">Woo hoo!</title>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseB_playlab_events_challenge2_authored_hint": {
          "courseB_playlab_events_challenge2_a": "<p>Each animal in the game should disappear when clicked. It should also come back after a second or two!</p>",
          "courseB_playlab_events_challenge2_b": "<p>Use other event blocks to make the other animals disappear!</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n  </xml>",
          "courseB_playlab_events_challenge2_c": "<p>Use extra commands to play sounds or score points when you click the animals!</p>\n<xml>\n  <block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n  <block type=\"studio_changeScore\"/></xml>",
          "courseB_playlab_events_challenge2_d": "<p>Mix it up!</p>\n<p>Make some animals give more points than others.\nUse different sounds.\nChange the animals' moods!</p>"
        },
        "courseB_playlab_events_challenge2_2018_authored_hint": {
          "courseB_playlab_events_challenge2_a": "<p>Each animal in the game should disappear when clicked. It should also come back after a second or two!</p>",
          "courseB_playlab_events_challenge2_b": "<p>Use other event blocks to make the other animals disappear!</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n  </xml>",
          "courseB_playlab_events_challenge2_c": "<p>Use extra commands to play sounds or score points when you click the animals!</p>\n<xml>\n  <block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n  <block type=\"studio_changeScore\"/></xml>",
          "courseB_playlab_events_challenge2_d": "<p>Mix it up!</p>\n<p>Make some animals give more points than others.\nUse different sounds.\nChange the animals' moods!</p>"
        },
        "courseB_playlab_events_challenge2_embed_authored_hint": {
          "courseB_playlab_events_challenge2_a": "<p>Each animal in the game should vanish when tapped. It should also come back after a second or two!</p>",
          "courseB_playlab_events_challenge2_b": "<p>Use other event blocks to make the other animals disappear!</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n  </xml>",
          "courseB_playlab_events_challenge2_c": "<p>Use extra commands to play sounds or score points when you click the animals!</p>\n<xml>\n  <block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n  <block type=\"studio_changeScore\"/></xml>",
          "courseB_playlab_events_challenge2_d": "<p>Mix it up!</p>\n<p>Make some animals give more points than others.\nUse different sounds.\nChange the animals' moods!</p>"
        },
        "courseB_playlab_events_challenge2_template_authored_hint": {
          "courseB_playlab_events_challenge2_a": "<p>Each animal in the game should vanish when tapped. It should also come back after a second or two!</p>",
          "courseB_playlab_events_challenge2_b": "<p>Use other event blocks to make the other animals disappear!</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n  </xml>",
          "courseB_playlab_events_challenge2_c": "<p>Use extra commands to play sounds or score points when you click the animals!</p>\n<xml>\n  <block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n  <block type=\"studio_changeScore\"/></xml>",
          "courseB_playlab_events_challenge2_d": "<p>Mix it up!</p>\n<p>Make some animals give more points than others.\nUse different sounds.\nChange the animals' moods!</p>"
        },
        "courseB_playlab_events_challenge2_template_2018_authored_hint": {
          "courseB_playlab_events_challenge2_a": "<p>Each animal in the game should vanish when tapped. It should also come back after a second or two!</p>",
          "courseB_playlab_events_challenge2_b": "<p>Use other event blocks to make the other animals disappear!</p>\n<xml>\n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">1</title>\n  </block>\n  </xml>",
          "courseB_playlab_events_challenge2_c": "<p>Use extra commands to play sounds or score points when you click the animals!</p>\n<xml>\n  <block type=\"studio_playSound\">\n    <title name=\"SOUND\">slap</title>\n  </block>\n  <block type=\"studio_changeScore\"/></xml>",
          "courseB_playlab_events_challenge2_d": "<p>Mix it up!</p>\n<p>Make some animals give more points than others.\nUse different sounds.\nChange the animals' moods!</p>"
        },
        "courseB_scrat_forVideo_authored_hint": {},
        "courseB_starWars_prog1_authored_hint": {
          "courseB_starWars_prog1_a": "<p>Try adding blocks one at a time, then click \"Run\" to see what happens.</p>",
          "courseB_starWars_prog1_b": "<p>You will want to move East to solve this puzzle. How far do you need to move?</p>\n<xml><block type=\"studio_moveEast\"/></xml>"
        },
        "courseB_starWars_prog10_authored_hint": {},
        "courseB_starWars_prog10_2018_authored_hint": {},
        "courseB_starWars_prog11_authored_hint": {},
        "courseB_starWars_prog11_2018_authored_hint": {},
        "courseB_starWars_prog1_2018_authored_hint": {
          "courseB_starWars_prog1_a": "<p>Try adding blocks one at a time, then click \"Run\" to see what happens.</p>",
          "courseB_starWars_prog1_b": "<p>You will want to move East to solve this puzzle. How far do you need to move?</p>\n<xml><block type=\"studio_moveEast\"/></xml>"
        },
        "courseB_starWars_prog2_authored_hint": {
          "courseB_starWars_prog2_a": "<p>Split this problem into two parts. Get one one pile of scrap metal, then figure out how to get to the other one.</p>"
        },
        "courseB_starWars_prog2_2018_authored_hint": {
          "courseB_starWars_prog2_a": "<p>Split this problem into two parts. Get one one pile of scrap metal, then figure out how to get to the other one.</p>"
        },
        "courseB_starWars_prog3_authored_hint": {
          "courseB_starWars_prog3_a": "<p>You will need to move 3 ways to solve this puzzle.</p>",
          "courseB_starWars_prog3_b": "<p>Build one piece of code at a time. Run it to figure out where to go from there.</p>"
        },
        "courseB_starWars_prog3_2018_authored_hint": {
          "courseB_starWars_prog3_a": "<p>You will need to move 3 ways to solve this puzzle.</p>",
          "courseB_starWars_prog3_b": "<p>Build one piece of code at a time. Run it to figure out where to go from there.</p>"
        },
        "courseB_starWars_prog4_authored_hint": {
          "courseB_starWars_prog4_a": "<p>Build one piece of code at a time. Run it to figure out where to go from there.</p>",
          "courseB_starWars_prog4_b": "<p>Try using the <code>repeat</code> block for shorter code.</p>\n<xml>  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog4_2018_authored_hint": {
          "courseB_starWars_prog4_a": "<p>Build one piece of code at a time. Run it to figure out where to go from there.</p>",
          "courseB_starWars_prog4_b": "<p>Try using the <code>repeat</code> block for shorter code.</p>\n<xml>  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog5_authored_hint": {
          "courseB_starWars_prog5_a": "<p>Doesn't this pattern look a little like the last puzzle?</p>",
          "courseB_starWars_prog5_b": "<p>BB-8 will grab the scrap metal as he rolls over it.</p>",
          "courseB_starWars_prog5_c": "<p>Trace this pattern with your finger. Count the pieces of metal as you move.</p>",
          "courseB_starWars_prog5_da": "<p>Look what happens if you use the same solution as the stair-step puzzle:</p>\n<p><img src=\"https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png\"></p>"
        },
        "courseB_starWars_prog5_2018_authored_hint": {
          "courseB_starWars_prog5_a": "<p>Doesn't this pattern look a little like the last puzzle?</p>",
          "courseB_starWars_prog5_b": "<p>BB-8 will grab the scrap metal as he rolls over it.</p>",
          "courseB_starWars_prog5_c": "<p>Trace this pattern with your finger. Count the pieces of metal as you move.</p>",
          "courseB_starWars_prog5_da": "<p>Look what happens if you use the same solution as the stair-step puzzle:</p>\n<p><img src=\"https://images.code.org/866b4121069423bf03d92dcb8f2276af-image-1503709785988.09.24.png\"></p>"
        },
        "courseB_starWars_prog6_authored_hint": {
          "courseB_starWars_prog6_a": "<p>This pattern is just a stair step with two moves per direction!</p>",
          "courseB_starWars_prog6_b": "<p>Try using the <code>repeat</code> block for shorter code.</p>\n<xml>  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog6_2018_authored_hint": {
          "courseB_starWars_prog6_a": "<p>This pattern is just a stair step with two moves per direction!</p>",
          "courseB_starWars_prog6_b": "<p>Try using the <code>repeat</code> block for shorter code.</p>\n<xml>  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog7_authored_hint": {
          "courseB_starWars_prog7_a": "<p>Doesn't this pattern look a little like the last puzzle?</p>",
          "courseB_starWars_prog7_b": "<p>BB-8 will grab the scrap metal as he rolls over it.</p>",
          "courseB_starWars_prog7_c": "<p>Try drawing the large stair step pattern over this puzzle. Does it cover all of the scrap metal?</p>"
        },
        "courseB_starWars_prog7_2018_authored_hint": {
          "courseB_starWars_prog7_a": "<p>Doesn't this pattern look a little like the last puzzle?</p>",
          "courseB_starWars_prog7_b": "<p>BB-8 will grab the scrap metal as he rolls over it.</p>",
          "courseB_starWars_prog7_c": "<p>Try drawing the large stair step pattern over this puzzle. Does it cover all of the scrap metal?</p>"
        },
        "courseB_starWars_prog8_authored_hint": {
          "courseB_starWars_prog8_a": "<p>It is okay to go back over a set of spaces where you have already traveled.</p>",
          "courseB_starWars_prog8_b": "<p>Try using the <code>repeat</code> block to see what happens to the code that you put inside.</p>\n<xml>\n  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog8_2018_authored_hint": {
          "courseB_starWars_prog8_a": "<p>It is okay to go back over a set of spaces where you have already traveled.</p>",
          "courseB_starWars_prog8_b": "<p>Try using the <code>repeat</code> block to see what happens to the code that you put inside.</p>\n<xml>\n  <block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block>\n</xml>"
        },
        "courseB_starWars_prog9_authored_hint": {
          "courseB_starWars_prog9_a": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>",
          "courseB_starWars_prog9_b": "<p>There are many ways to solve this puzzle.</p>",
          "courseB_starWars_prog9_c": "<p>Could a <code>repeat</code> loop help out here?</p>"
        },
        "courseB_starWars_prog9_2018_authored_hint": {
          "courseB_starWars_prog9_a": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>",
          "courseB_starWars_prog9_b": "<p>There are many ways to solve this puzzle.</p>",
          "courseB_starWars_prog9_c": "<p>Could a <code>repeat</code> <xml><block type=\"controls_repeat_simplified\">\n    <title name=\"TIMES\">3</title>\n  </block></xml>loop help out here?</p>"
        },
        "courseC_PlayLab_embed_events9_authored_hint": {},
        "courseC_PlayLab_events1_authored_hint": {
          "courseC_PlayLab_events1_a": "<p>Attach this block to the <code>when run</code> block:</p>\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</xml>"
        },
        "courseC_PlayLab_events1_2018_authored_hint": {
          "courseC_PlayLab_events1_a": "<p>Attach this block to the <code>when run</code> block:</p>\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</xml>"
        },
        "courseC_PlayLab_events2_authored_hint": {
          "courseC_PlayLab_events2_a": "<p>Attach two of these blocks to the <code>when run</code> block:</p>\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</xml>",
          "courseC_PlayLab_events2_b": "<p>Use the dropdown menu on the second <code>actor __ say</code> block to change which actor speaks.</p>"
        },
        "courseC_PlayLab_events2_2018_authored_hint": {
          "courseC_PlayLab_events2_a": "<p>Attach two of these blocks to the <code>when run</code> block:</p>\n<xml>\n  <block type=\"studio_saySpriteChoices\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Hi there.</title>\n  </block>\n</xml>",
          "courseC_PlayLab_events2_b": "<p>Use the dropdown menu on the second <code>actor __ say</code> block to change which actor speaks.</p>"
        },
        "courseC_PlayLab_events3_authored_hint": {
          "courseC_PlayLab_events3_a": "<p>You only need to move Jorge to the right by about 25 pixels to solve this puzzle.</p>",
          "courseC_PlayLab_events3_b": "<p>Is there a block in the toolbox that looks like it would move an actor?</p>",
          "courseC_PlayLab_events3_c": "<p>Attach this block to the <code>when run</code> block:</p>\n<xml>\n<block type=\"studio_moveDistance\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"DIR\">2</title>\n    <title name=\"DISTANCE\">25</title>\n  </block>\n</xml>"
        },
        "courseC_PlayLab_events3_2018_authored_hint": {
          "courseC_PlayLab_events3_a": "<p>You only need to move Jorge to the right by about 25 pixels to solve this puzzle.</p>",
          "courseC_PlayLab_events3_b": "<p>Is there a block in the toolbox that looks like it would move an actor?</p>",
          "courseC_PlayLab_events3_c": "<p>Attach this block to the <code>when run</code> block:</p>\n<xml>\n<block type=\"studio_moveDistance\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"DIR\">2</title>\n    <title name=\"DISTANCE\">25</title>\n  </block>\n</xml>"
        },
        "courseC_PlayLab_events4_authored_hint": {
          "courseC_PlayLab_events4_b": "<p>When the \"Run\" button is clicked, Jorge needs to move right <strong>100</strong> pixels to reach Olive the Cat.</p>",
          "courseC_PlayLab_events4_a": "<p>You will need to attach an <code>actor __ say</code> block to the <code>when actor touches</code> event to solve this puzzle.</p>"
        },
        "courseC_PlayLab_events4_2018_authored_hint": {
          "courseC_PlayLab_events4_b": "<p>When the \"Run\" button is clicked, Jorge needs to move right <strong>100</strong> pixels to reach Olive the Cat.</p>",
          "courseC_PlayLab_events4_a": "<p>You will need to attach an <code>actor __ say</code> block to the <code>when actor touches</code> event to solve this puzzle.</p>"
        },
        "courseC_PlayLab_events5_authored_hint": {
          "courseC_PlayLab_events5_a": "<p>You will need to click the dropdown menu in the <code>actor say</code> block to find the text \"What's new?\"</p>",
          "courseC_PlayLab_events5_b": "<p>Click on Octavia when you run your program to check that it works!</p>"
        },
        "courseC_PlayLab_events5_2018_authored_hint": {
          "courseC_PlayLab_events5_a": "<p>You will need to click the dropdown menu in the <code>actor say</code> block to find the text \"What's new?\"</p>",
          "courseC_PlayLab_events5_b": "<p>Click on Octavia when you run your program to check that it works!</p>"
        },
        "courseC_PlayLab_events6_authored_hint": {
          "courseC_PlayLab_events6_a": "<p>Each green <code>when arrow</code> block should have one action below it.</p>",
          "courseC_PlayLab_events6_b": "<p>Use the drop down menu on the <code>move actor 1</code> block to change which direction Waddles moves.</p>",
          "courseC_PlayLab_events6_c": "<p>When you're done, you should be able to move Waddles around using the arrow keys on your computer!</p>"
        },
        "courseC_PlayLab_events6_2018_authored_hint": {
          "courseC_PlayLab_events6_a": "<p>Each green <code>when arrow</code> block should have one action below it.</p>",
          "courseC_PlayLab_events6_b": "<p>Use the drop down menu on the <code>move actor 1</code> block to change which direction Waddles moves.</p>",
          "courseC_PlayLab_events6_c": "<p>When you're done, you should be able to move Waddles around using the arrow keys on your computer!</p>"
        },
        "courseC_PlayLab_events7_authored_hint": {
          "courseC_PlayLab_events7_a": "<p>Use both the <code>move actor 2 up 400 pixels</code> block and the <code>move actor 2 down 400 pixels</code> block inside the <code>repeat forever</code> loop to solve this puzzle. </p>",
          "courseC_PlayLab_events7_b": "<p>The <code>repeat forever</code> loop does not need to be connected to any other event blocks; it will run on its own.</p>"
        },
        "courseC_PlayLab_events7_2018_authored_hint": {
          "courseC_PlayLab_events7_a": "<p>Use both the <code>move actor 2 up 400 pixels</code> block and the <code>move actor 2 down 400 pixels</code> block inside the <code>repeat forever</code> loop to solve this puzzle. </p>",
          "courseC_PlayLab_events7_b": "<p>The <code>repeat forever</code> loop does not need to be connected to any other event blocks; it will run on its own.</p>"
        },
        "courseC_PlayLab_events8_authored_hint": {
          "courseC_PlayLab_events8_a": "<p>You will need to connect blocks to the <code>when actor touches</code> block to make this happen correctly.</p>",
          "courseC_PlayLab_events8_b": "<p>The <code>actor say</code> and <code>play sound</code> blocks in the toolbox should help you out!</p>"
        },
        "courseC_PlayLab_events8_2018_authored_hint": {
          "courseC_PlayLab_events8_a": "<p>You will need to connect blocks to the <code>when actor touches</code> block to make this happen correctly.</p>",
          "courseC_PlayLab_events8_b": "<p>The <code>actor say</code> and <code>play sound</code> blocks in the toolbox should help you out!</p>"
        },
        "courseC_PlayLab_events9_authored_hint": {
          "courseC_PlayLab_events9_a": "<p>The <code>score point</code> block will help you to solve this puzzle.</p>",
          "courseC_PlayLab_events9_b": "<p>Make sure that your new <code>when actor touches</code> block says actor <strong>1</strong> and actor <strong>3</strong>.</p>",
          "courseC_PlayLab_events9_c": "<p>You can have more than one <code>when actor touches</code> event in your workspace at the same time, so you don't have to delete the first one!</p>"
        },
        "courseC_PlayLab_events9_2018_authored_hint": {
          "courseC_PlayLab_events9_a": "<p>The <code>score point</code> block will help you to solve this puzzle.</p>",
          "courseC_PlayLab_events9_b": "<p>Make sure that your new <code>when actor touches</code> block says actor <strong>1</strong> and actor <strong>3</strong>.</p>",
          "courseC_PlayLab_events9_c": "<p>You can have more than one <code>when actor touches</code> event in your workspace at the same time, so you don't have to delete the first one!</p>"
        },
        "courseC_PlayLab_eventsA_authored_hint": {
          "courseC_PlayLab_eventsA_a": "<p>Use the <code>set background</code> block and the <code>set actor to a ____ speed</code> block to solve this puzzle.</p>",
          "courseC_PlayLab_eventsA_b": "<p>You will need to specifically drag a <code>when run</code> event block into the workspace to solve this puzzle.</p>"
        },
        "courseC_PlayLab_eventsA_2018_authored_hint": {
          "courseC_PlayLab_eventsA_a": "<p>Use the <code>set background</code> block and the <code>set actor to a ____ speed</code> block to solve this puzzle.</p>",
          "courseC_PlayLab_eventsA_b": "<p>You will need to specifically drag a <code>when run</code> event block into the workspace to solve this puzzle.</p>"
        },
        "courseC_PlayLab_eventsFP_authored_hint": {
          "idea1": "<p><em>Need an idea?</em></p>\n<p><strong>Who's there?</strong> Make characters appear with random images, so no one knows who's showing up next.</p>\n<p><img src=\"https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif\"></p>",
          "idea2": "<p><em>Need an idea?</em></p>\n<p><strong>Going on an Adventure</strong> - Change the background, then have the characters talk about where they are now.</p>\n<p><img src=\"https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif\"></p>",
          "idea3": "<p><em>Need an idea?</em></p>\n<p><strong>Pinball</strong> - Make one character move using the arrow keys (use <code>when up arrow</code>, <code>when down arrow</code> blocks), then play random sounds when it collides with other characters on the screen.</p>"
        },
        "courseC_PlayLab_eventsFP_2018_authored_hint": {
          "idea1": "<p><em>Need an idea?</em></p>\n<p><strong>Who's there?</strong> Make characters appear with random images, so no one knows who's showing up next.</p>\n<p><img src=\"https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif\"></p>",
          "idea2": "<p><em>Need an idea?</em></p>\n<p><strong>Going on an Adventure</strong> - Change the background, then have the characters talk about where they are now.</p>\n<p><img src=\"https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif\"></p>",
          "idea3": "<p><em>Need an idea?</em></p>\n<p><strong>Pinball</strong> - Make one character move using the arrow keys (use <code>when up arrow</code>, <code>when down arrow</code> blocks), then play random sounds when it collides with other characters on the screen.</p>"
        },
        "courseC_PlayLab_events_challenge1_authored_hint": {
          "courseC_PlayLab_events_challenge_a": "<p>You can use this block to move actors to different places on the game space.</p>\n<xml> <block type=\"studio_setSpritePosition\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">12</title>\n  </block></xml>",
          "courseC_PlayLab_events_challenge_b": "<p>Try using <code>set actor 1 to the middle left position</code> when it touches either of the other actors. This will reset the game so the player can keep trying!</p>",
          "courseC_PlayLab_events_challenge_c": "<p>You might also want to try changing the speed of the different actors to make the game easier or more challenging!</p>\n<xml>  <block type=\"studio_setSpriteSpeed\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Studio.SpriteSpeed.FAST</title>\n  </block></xml>"
        },
        "courseC_PlayLab_events_challenge1_2018_authored_hint": {
          "courseC_PlayLab_events_challenge_a": "<p>You can use this block to move actors to different places on the game space.</p>\n<xml> <block type=\"studio_setSpritePosition\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">12</title>\n  </block></xml>",
          "courseC_PlayLab_events_challenge_b": "<p>Try using <code>set actor 1 to the middle left position</code> when it touches either of the other actors. This will reset the game so the player can keep trying!</p>",
          "courseC_PlayLab_events_challenge_c": "<p>You might also want to try changing the speed of the different actors to make the game easier or more challenging!</p>\n<xml>  <block type=\"studio_setSpriteSpeed\">\n    <title name=\"SPRITE\">0</title>\n    <title name=\"VALUE\">Studio.SpriteSpeed.FAST</title>\n  </block></xml>"
        },
        "courseC_PlayLab_events_challenge1_xy_blocks_authored_hint": {
          "courseC_PlayLab_events_challenge_a": "<p>The two values on this block allow you to move an actor to any pixel in the game area. You can choose any number from 0-400.</p>",
          "courseC_PlayLab_events_challenge_b": "<p>You can decide which numbers to use, by thinking about how far over from the top left corner you'd like to move. The first number is the number of pixels from the left. The second number is the number of pixels from the top.</p>\n<p><xml><block type=\"studio_setSpriteXY\" inline=\"true\">\n    <value name=\"SPRITE\">\n      <block type=\"math_number\" movable=\"false\">\n        <title name=\"NUM\">1</title>\n      </block>\n    </value>\n    <value name=\"XPOS\">\n      <block type=\"math_number\" movable=\"false\">\n        <title name=\"NUM\">37</title>\n      </block>\n    </value>\n    <value name=\"YPOS\">\n      <block type=\"math_number\" movable=\"false\">\n        <title name=\"NUM\">187</title>\n      </block>\n    </value>\n  </block></xml>\n<img src=\"https://images.code.org/b1559bf476ceb59f880c43271c5e10b2-image-1494111787192.59.49 PM.png\"></p>"
        },
        "courseC_artist_loop1_authored_hint": {
          "courseC_artist_loop1_a": "<p>You don't need to make any changes to the loop, just put one block above it.</p>",
          "courseC_artist_loop1_b": "<p>This is the block you will need to set a pattern:</p>\n<xml>\n<block type=\"draw_line_style_pattern\">\n    <title name=\"VALUE\">DEFAULT</title>\n  </block>\n</xml>\n\n<p>Choose any pattern you like!</p>"
        },
        "courseC_artist_loop1_2018_authored_hint": {
          "courseC_artist_loop1_a": "<p>You don't need to make any changes to the loop, just put one block above it.</p>",
          "courseC_artist_loop1_b": "<p>This is the block you will need to set a pattern:</p>\n<xml>\n<block type=\"draw_line_style_pattern\">\n    <title name=\"VALUE\">DEFAULT</title>\n  </block>\n</xml>\n\n<p>Choose any pattern you like!</p>"
        },
        "courseC_artist_loops1a_authored_hint": {
          "courseC_artist_loops1a_a": "<p>This is the first block you will need:</p>\n<xml>\n<block type=\"jump_to_xy\">\n    <title name=\"XPOS\">200</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n</xml>",
          "courseC_artist_loops1a_b": "<p>Use this block to draw the sticker!</p>\n<xml>\n<block type=\"sticker\">\n    <title name=\"VALUE\">Bird</title>\n  </block>\n</xml>"
        },
        "courseC_artist_loops1a_2018_authored_hint": {
          "courseC_artist_loops1a_a": "<p>This is the first block you will need:</p>\n<xml>\n<block type=\"jump_to_xy\">\n    <title name=\"XPOS\">200</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n</xml>",
          "courseC_artist_loops1a_b": "<p>Use this block to draw the sticker!</p>\n<xml>\n<block type=\"sticker\">\n    <title name=\"VALUE\">Bird</title>\n  </block>\n</xml>"
        },
        "courseC_artist_loops2a_authored_hint": {
          "courseC_artist_loops2a_a": "<p>Inside your loop, you will want to jump to 200 over 200 down, then draw the bird sticker, then turn 30 degrees.</p>",
          "courseC_artist_loops2a_b": "<p>Click on the number at the top of the <code>repeat</code> loop to change how many times it repeats.</p>"
        },
        "courseC_artist_loops2a_2018_authored_hint": {
          "courseC_artist_loops2a_a": "<p>Inside your loop, you will want to jump to 200 over 200 down, then draw the bird sticker, then turn 30 degrees.</p>",
          "courseC_artist_loops2a_b": "<p>Click on the number at the top of the <code>repeat</code> loop to change how many times it repeats.</p>"
        },
        "courseC_artist_loops3a_authored_hint": {
          "courseC_artist_loops3a_a": "<p>You will want to add just one block inside of your loop, after the bird sticker.</p>",
          "courseC_artist_loops3a_b": "<p>Use the drop down menu on the <code>draw sticker</code> block to find the bat sticker.</p>"
        },
        "courseC_artist_loops3a_2018_authored_hint": {
          "courseC_artist_loops3a_a": "<p>You will want to add just one block inside of your loop, after the bird sticker.</p>",
          "courseC_artist_loops3a_b": "<p>Use the drop down menu on the <code>draw sticker</code> block to find the bat sticker.</p>"
        },
        "courseC_artist_loops4a_authored_hint": {
          "courseC_artist_loops4a_a": "<p>Use this block to jump forward:</p>\n<xml>\n<block type=\"jump_by_constant\">\n    <title name=\"DIR\">jumpForward</title>\n    <title name=\"VALUE\">100</title>\n  </block>\n</xml>\n\n<p>Don't forget to change how far!</p>"
        },
        "courseC_artist_loops4a_2018_authored_hint": {
          "courseC_artist_loops4a_a": "<p>Use this block to jump forward:</p>\n<xml>\n<block type=\"jump_by_constant\">\n    <title name=\"DIR\">jumpForward</title>\n    <title name=\"VALUE\">100</title>\n  </block>\n</xml>\n\n<p>Don't forget to change how far!</p>"
        },
        "courseC_artist_loops5_authored_hint": {
          "courseC_artist_loops5_a": "<p>Try using the <code>jump to</code> block to get your artist back toward the center:</p>\n<xml>\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">100</title>\n    <title name=\"YPOS\">100</title>\n  </block>\n</xml>"
        },
        "courseC_artist_loops5a_authored_hint": {
          "courseC_artist_loops5a_a": "<p>Use the drop down menus on the <code>draw sticker</code> blocks to change their images.</p>"
        },
        "courseC_artist_loops5a_2018_authored_hint": {
          "courseC_artist_loops5a_a": "<p>Use the drop down menus on the <code>draw sticker</code> blocks to change their images.</p>"
        },
        "courseC_artist_loops5b_authored_hint": {
          "courseC_artist_loops5b_a": "<p>Use this block to set the pattern of your lines:</p>\n<xml>\n<block type=\"draw_line_style_pattern\">\n    <title name=\"VALUE\">DEFAULT</title>\n  </block>\n</xml>",
          "courseC_artist_loops5b_b": "<p>To make a design like the one above, you will want to move backward the same amount that you move forward.</p>"
        },
        "courseC_artist_loops5b_2018_authored_hint": {
          "courseC_artist_loops5b_a": "<p>Use this block to set the pattern of your lines:</p>\n<xml>\n<block type=\"draw_line_style_pattern\">\n    <title name=\"VALUE\">DEFAULT</title>\n  </block>\n</xml>",
          "courseC_artist_loops5b_b": "<p>To make a design like the one above, you will want to move backward the same amount that you move forward.</p>"
        },
        "courseC_artist_loops6_authored_hint": {
          "courseC_artist_loops6_a": "<p>Try a triangle flower:\n<img src=\"https://images.code.org/4248a974a7631c4240effba06fdee731-image-1495821015097.49.18.png\" width=\"150px\" /></p>\n<p>Or a little green bug:\n<img src=\"https://images.code.org/b9454d6f1159e19c58d9f5b5b37fd156-image-1495821067980.52.43.png\" width=\"150px\" /></p>"
        },
        "courseC_artist_loops6a_authored_hint": {
          "courseC_artist_loops6a_a": "<p>To make a design like the one above, jump forward less than 75 pixels between each sticker.</p>"
        },
        "courseC_artist_loops6a_2018_authored_hint": {
          "courseC_artist_loops6a_a": "<p>To make a design like the one above, jump forward less than 75 pixels between each sticker.</p>"
        },
        "courseC_artist_loops7a_authored_hint": {
          "courseC_artist_loops7a_a": "<p>A circle has 360 degrees. Multiply the degrees in your turn times the number of times you repeat. Does it equal 360?\nCheck the suggested rotations to see that this works!</p>"
        },
        "courseC_artist_loops7a_2018_authored_hint": {
          "courseC_artist_loops7a_a": "<p>A circle has 360 degrees. Multiply the degrees in your turn times the number of times you repeat. Does it equal 360?\nCheck the suggested rotations to see that this works!</p>"
        },
        "courseC_artist_loopsPre1a_authored_hint": {
          "courseC_artist_loopsPre1a_a": "<p>Remember to put the <code>turn</code> block inside of the loop.</p>",
          "courseC_artist_loopsPre1a_b": "<p>Your <code>repeat</code> loop should have 3 blocks inside of it: <code>jump to 200 over 200 down</code>, <code>move forward by 50 pixels</code>, and <code>turn right by 60 degrees</code>.</p>"
        },
        "courseC_artist_loopsPre1a_2018_authored_hint": {
          "courseC_artist_loopsPre1a_a": "<p>Remember to put the <code>turn</code> block inside of the loop.</p>",
          "courseC_artist_loopsPre1a_b": "<p>Your <code>repeat</code> loop should have 3 blocks inside of it: <code>jump to 200 over 200 down</code>, <code>move forward by 50 pixels</code>, and <code>turn right by 60 degrees</code>.</p>"
        },
        "courseC_artist_loopsPrePre1a_authored_hint": {
          "courseC_artist_loopsPrePre1a_a": "<p>The first block you will need is:</p>\n<p><img src=\"https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png\"></p>",
          "courseC_artist_loopsPrePre1a_b": "<p>To move forward 50 pixels, use this block:</p>\n<p><img src=\"https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png\"></p>"
        },
        "courseC_artist_loopsPrePre1a_2018_authored_hint": {
          "courseC_artist_loopsPrePre1a_a": "<p>The first block you will need is:</p>\n<xml>  <block type=\"jump_to_xy\" id=\"callMe\">\n    <title name=\"XPOS\">200</title>\n    <title name=\"YPOS\">200</title>\n  </block></xml>",
          "courseC_artist_loopsPrePre1a_b": "<p>To move forward 50 pixels, use this block:</p>\n<xml><block type=\"draw_move_by_constant\">\n    <title name=\"DIR\">moveForward</title>\n    <title name=\"VALUE\">50</title>\n  </block></xml>"
        },
        "courseC_artist_prog1_authored_hint": {},
        "courseC_artist_prog1_2018_authored_hint": {},
        "courseC_artist_prog2_authored_hint": {
          "courseC_artist_prog2_a": "<p><em>\"If you use the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">100</title></block></xml> block, I will draw a line.\"</em></p>",
          "courseC_artist_prog2_b": "<p>Having trouble turning the corner? Use the <xml><block type=\"draw_turn_by_constant_dropdown\"><title name=\"DIR\">turnRight</title><title name=\"VALUE\" config=\"45,60,90,120,180\">90</title></block></xml> block.</p>"
        },
        "courseC_artist_prog2_2018_authored_hint": {
          "courseC_artist_prog2_a": "<p><em>\"If you use the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">100</title></block></xml> block, I will draw a line.\"</em></p>",
          "courseC_artist_prog2_b": "<p>Having trouble turning the corner? Use the <xml><block type=\"draw_turn_by_constant_dropdown\"><title name=\"DIR\">turnRight</title><title name=\"VALUE\" config=\"45,60,90,120,180\">90</title></block></xml> block.</p>"
        },
        "courseC_artist_prog3_authored_hint": {
          "courseC_artist_prog3_a": "<p>To create this window, just draw a square with 100 pixel sides.</p>\n<ul>\n<li>move forward</li>\n<li>turn</li>\n<li>move forward</li>\n<li>turn</li>\n<li>move forward</li>\n<li>turn</li>\n<li>move forward</li>\n</ul>",
          "courseC_artist_prog3_b": "<p>Want to make shorter code? Try using a loop in this puzzle.</p>"
        },
        "courseC_artist_prog3_2018_authored_hint": {
          "courseC_artist_prog3_a": "<p>To create this window, just draw a square with 100 pixel sides.</p>\n<ul>\n<li>move forward</li>\n<li>turn</li>\n<li>move forward</li>\n<li>turn</li>\n<li>move forward</li>\n<li>turn</li>\n<li>move forward</li>\n</ul>",
          "courseC_artist_prog3_b": "<p>Want to make shorter code? Try using a loop in this puzzle.</p>"
        },
        "courseC_artist_prog4_authored_hint": {
          "courseC_artist_prog4_a": "<p>To finish the rocket, just draw the triangle on top!</p>",
          "courseC_artist_prog4_b": "<p>You can use the drop down menu on the <code>turn</code> blocks to see which angle you need!</p>",
          "courseC_artist_prog4_c": "<p>To draw a triangle, you will want to:</p>\n<ul>\n<li>move forward</li>\n<li>turn left 120 degrees</li>\n<li>move forward</li>\n<li>turn left 120 degrees</li>\n<li>move forward</li>\n</ul>"
        },
        "courseC_artist_prog4_2018_authored_hint": {
          "courseC_artist_prog4_a": "<p>To finish the rocket, just draw the triangle on top!</p>",
          "courseC_artist_prog4_b": "<p>You can use the drop down menu on the <code>turn</code> blocks to see which angle you need!</p>",
          "courseC_artist_prog4_c": "<p>To draw a triangle, you will want to:</p>\n<ul>\n<li>move forward</li>\n<li>turn left 120 degrees</li>\n<li>move forward</li>\n<li>turn left 120 degrees</li>\n<li>move forward</li>\n</ul>"
        },
        "courseC_artist_prog5_authored_hint": {
          "courseC_artist_prog5_a": "<p>Slow the slider down all the way until you can run your code line-by-line to see where things go wrong.</p>",
          "courseC_artist_prog5_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>",
          "courseC_artist_prog5_c": "<p>You can use the drop down menu on the <code>turn</code> blocks to see which angle you need!</p>",
          "courseC_artist_prog5_d": "<p>Each turn should be 90 degrees to the right.</p>"
        },
        "courseC_artist_prog5_2018_authored_hint": {
          "courseC_artist_prog5_a": "<p>Slow the slider down all the way until you can run your code line-by-line to see where things go wrong.</p>",
          "courseC_artist_prog5_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>",
          "courseC_artist_prog5_c": "<p>You can use the drop down menus in the blocks to change what they do!</p>",
          "courseC_artist_prog5_d": "<p>Each turn should be 90 degrees to the right.</p>"
        },
        "courseC_artist_prog6_authored_hint": {
          "courseC_artist_prog6_a": "<p>The artist is already facing the correct way to draw his first line.</p>",
          "courseC_artist_prog6_b": "<p>This diamond is really just a square that's standing on its corner.</p>",
          "courseC_artist_prog6_c": "<p>Since this diamond is also a square, be sure to turn 90 degrees at the corners.</p>"
        },
        "courseC_artist_prog6_2018_authored_hint": {
          "courseC_artist_prog6_a": "<p>The artist is already facing the correct way to draw his first line.</p>",
          "courseC_artist_prog6_b": "<p>This diamond is really just a square that's standing on its corner.</p>",
          "courseC_artist_prog6_c": "<p>Since this diamond is also a square, be sure to turn 90 degrees at the corners.</p>"
        },
        "courseC_artist_prog6_predict1_authored_hint": {},
        "courseC_artist_prog6_predict1_2018_authored_hint": {},
        "courseC_artist_prog7_authored_hint": {
          "courseC_artist_prog7_a": "<p>Every angle is either 45 or 90 degrees.</p>",
          "courseC_artist_prog7_b": "<p>Does it work at the first step?<br>How about the second?<br>Where does it go wrong?</p>",
          "courseC_artist_prog7_c": "<p>You can use the dropdown menu on the turn blocks to see which angle you need!</p>",
          "courseC_artist_prog7_d": "<p>You will want to:</p>\n<ul>\n<li>move forward</li>\n<li>turn right 45 degrees</li>\n<li>move forward</li>\n<li>turn right 90 degrees</li>\n<li>move forward</li>\n<li>turn right 45 degrees</li>\n</ul>\n<p>Repeat this pattern 2 times!</p>",
          "courseC_artist_prog7_e": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseC_artist_prog7_2018_authored_hint": {
          "courseC_artist_prog7_a": "<p>Every angle is either 45 or 90 degrees.</p>",
          "courseC_artist_prog7_b": "<p>Does it work at the first step?<br>How about the second?<br>Where does it go wrong?</p>",
          "courseC_artist_prog7_c": "<p>You can use the dropdown menu on the turn blocks to see which angle you need!</p>",
          "courseC_artist_prog7_d": "<p>You will want to:</p>\n<ul>\n<li>move forward</li>\n<li>turn right 45 degrees</li>\n<li>move forward</li>\n<li>turn right 90 degrees</li>\n<li>move forward</li>\n<li>turn right 45 degrees</li>\n</ul>\n<p>Repeat this pattern 2 times!</p>",
          "courseC_artist_prog7_e": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseC_artist_prog8_authored_hint": {},
        "courseC_artist_prog8_2018_authored_hint": {},
        "courseC_artist_prog_challenge1-doghouse_authored_hint": {
          "courseC_artist_prog7_a": "<p>Use 60 degree angles to make the roof.</p>"
        },
        "courseC_artist_prog_challenge1_authored_hint": {
          "courseC_artist_prog_challenge1_a": "<p>You can draw this as a rectangle with a line in the middle or two different squares!</p>"
        },
        "courseC_artist_prog_challenge1_2018_authored_hint": {
          "courseC_artist_prog_challenge1_a": "<p>You can draw this as a rectangle with a line in the middle or two different squares!</p>"
        },
        "courseC_artist_prog_challenge2_authored_hint": {
          "courseC_artist_prog_challenge2_a": "<p>You can put commands inside <code>repeat</code> block to loop them over and over. Try it!</p>\n<xml>\n\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n            <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n                <title name=\"DIR\">moveForward</title>\n                <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n                  <block type=\"jump_by_constant_dropdown\">\n                    <title name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n                </next>\n              </block>\n              </statement></block></xml>"
        },
        "courseC_artist_prog_challenge2a_authored_hint": {
          "courseC_artist_prog_challenge2_a": "<p>After you draw the first line, turn left before you draw your second line.</p>",
          "courseC_artist_prog_challenge2_b": "<p>After you draw the second line, turn right before you draw your third line.</p>"
        },
        "courseC_artist_prog_challenge2a_2018_authored_hint": {
          "courseC_artist_prog_challenge2_a": "<p>After you draw the first line, turn left before you draw your second line.</p>",
          "courseC_artist_prog_challenge2_b": "<p>After you draw the second line, turn right before you draw your third line.</p>"
        },
        "courseC_collector_loops_challenge2_authored_hint": {
          "courseC_maze_loops_challenge2_b": "<p>Use loops so you don't run out of <code>collect</code> blocks!</p>"
        },
        "courseC_collector_loops_challenge2_2018_authored_hint": {
          "courseC_maze_loops_challenge2_b": "<p>Use loops so you don't run out of <code>collect</code> blocks!</p>"
        },
        "courseC_collector_prog1_authored_hint": {
          "courseC_collector_prog1_a": "<p>When you are standing on a space with treasure, use the <xml><block type=\"collector_collect\"/></xml> block to pick it up.</p>",
          "courseC_collector_prog1_b": "<p>The most simple solution would be to move forward once, then collect treasure.</p>"
        },
        "courseC_collector_prog1_2018_authored_hint": {
          "courseC_collector_prog1_a": "<p>When you are standing on a space with treasure, use the <xml><block type=\"collector_collect\"/></xml> block to pick it up.</p>",
          "courseC_collector_prog1_b": "<p>The most simple solution would be to move forward once, then collect treasure.</p>"
        },
        "courseC_collector_prog2_authored_hint": {
          "courseC_collector_prog2_a": "<p>You can use four <xml><block type=\"maze_move\"><title name=\"DIR\">moveForward</title></block></xml> blocks or use the <xml><block type=\"controls_repeat_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> block to make your program shorter.</p>",
          "courseC_collector_prog2_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseC_collector_prog2_2018_authored_hint": {
          "courseC_collector_prog2_a": "<p>You can use four <xml><block type=\"maze_move\"><title name=\"DIR\">moveForward</title></block></xml> blocks or use the <xml><block type=\"controls_repeat_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml> block to make your program shorter.</p>",
          "courseC_collector_prog2_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseC_collector_prog3_authored_hint": {
          "courseC_collector_prog3_a": "<p>The program will only run the blocks that are connected to the <xml><block type=\"when_run\"/></xml> block.</p>",
          "courseC_collector_prog3_b": "<p>Try using the \"Step\" button to run your code one line at a time.  Do you see where the code goes wrong?</p>",
          "courseC_collector_prog3_c": "<p>If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper.</p>"
        },
        "courseC_collector_prog3_2018_authored_hint": {
          "courseC_collector_prog3_a": "<p>The program will only run the blocks that are connected to the <xml><block type=\"when_run\"/></xml> block.</p>",
          "courseC_collector_prog3_b": "<p>Try using the \"Step\" button to run your code one line at a time.  Do you see where the code goes wrong?</p>",
          "courseC_collector_prog3_c": "<p>If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper.</p>"
        },
        "courseC_collector_prog4_authored_hint": {
          "courseC_collector_prog4_a": "<p>If you get stuck, try writing out the steps on a piece of paper.</p>",
          "courseC_collector_prog4_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>",
          "courseC_collector_prog4_c": "<p>Try this option for a path.</p>"
        },
        "courseC_collector_prog4_2018_authored_hint": {
          "courseC_collector_prog4_a": "<p>If you get stuck, try writing out the steps on a piece of paper.</p>",
          "courseC_collector_prog4_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>",
          "courseC_collector_prog4_c": "<p>Try this option for a path.</p>"
        },
        "courseC_collector_prog5_authored_hint": {
          "courseC_collector_prog5_a": "<p>\"Does it work at the first step?\nDoes it work at the second step? \nWhere do things go wrong?\"</p>",
          "courseC_collector_prog5_b": "<p>If you fixed one bug and the program still doesn't work, use the steps above to find more bugs.</p>",
          "courseC_collector_prog5_c": "<p>If you get stuck, try writing out the steps on a piece of paper.</p>",
          "courseC_collector_prog5_d": "<p>Follow the path to collect the treasure.</p>"
        },
        "courseC_collector_prog5_2018_authored_hint": {
          "courseC_collector_prog5_a": "<p>\"Does it work at the first step?\nDoes it work at the second step? \nWhere do things go wrong?\"</p>",
          "courseC_collector_prog5_b": "<p>If you fixed one bug and the program still doesn't work, use the steps above to find more bugs.</p>",
          "courseC_collector_prog5_c": "<p>If you get stuck, try writing out the steps on a piece of paper.</p>",
          "courseC_collector_prog5_d": "<p>Follow the path to collect the treasure.</p>"
        },
        "courseC_collector_prog6_authored_hint": {
          "courseC_collector_prog6_a": "<p>Can you figure out what is going wrong?  </p>\n<p>Try using the \"Step\" button to find errors by running your code line by line.</p>",
          "courseC_collector_prog6_b": "<p>Stuck?  Try this path to collect the treasure.</p>"
        },
        "courseC_collector_prog6_2018_authored_hint": {
          "courseC_collector_prog6_a": "<p>Can you figure out what is going wrong?  </p>\n<p>Try using the \"Step\" button to find errors by running your code line by line.</p>",
          "courseC_collector_prog6_b": "<p>Stuck?  Try this path to collect the treasure.</p>"
        },
        "courseC_collector_prog7_authored_hint": {
          "courseC_collector_prog7_a": "<p>There is already a lot of great code in the workspace.  You don't need to delete any of it to solve this puzzle.  </p>",
          "courseC_collector_prog7_b": "<p>Don't see the block you need to get the adventurer moving in the right direction?  Pull one from the toolbox.</p>",
          "courseC_collector_prog7_c": "<p>Having trouble seeing a route to collect all of the treasure?  Try this path!</p>"
        },
        "courseC_collector_prog7_2018_authored_hint": {
          "courseC_collector_prog7_a": "<p>There is already a lot of great code in the workspace.  You don't need to delete any of it to solve this puzzle.  </p>",
          "courseC_collector_prog7_b": "<p>Don't see the block you need to get the adventurer moving in the right direction?  Pull one from the toolbox.</p>",
          "courseC_collector_prog7_c": "<p>Having trouble seeing a route to collect all of the treasure?  Try this path!</p>"
        },
        "courseC_collector_prog8_authored_hint": {},
        "courseC_collector_prog8_2018_authored_hint": {},
        "courseC_collector_prog9_authored_hint": {},
        "courseC_collector_prog9_2018_authored_hint": {},
        "courseC_collector_progA_authored_hint": {
          "courseC_collector_progA_a": "<p>Try using the \"Step\" button to go through your code line by line.</p>"
        },
        "courseC_collector_prog_challenge1_authored_hint": {
          "courseC_collector_prog_challenge1_a": "<p>You can use the <code>collect</code> block many times to collect the extra treasure.</p>"
        },
        "courseC_collector_prog_challenge1_2018_authored_hint": {
          "courseC_collector_prog_challenge1_a": "<p>You can use the <code>collect</code> block many times to collect the extra treasure.</p>"
        },
        "courseC_collector_prog_challenge2_authored_hint": {
          "courseC_collector_prog_challenge1_a": "<p>You can use more than one <code>collect</code> block at each space.</p>",
          "courseC_collector_prog_challenge1_b": "<p>Lost your way?  Try this path to solve the puzzle!</p>"
        },
        "courseC_collector_prog_challenge2_2018_authored_hint": {
          "courseC_collector_prog_challenge1_a": "<p>You can use more than one <code>collect</code> block at each space.</p>",
          "courseC_collector_prog_challenge1_b": "<p>Lost your way?  Try this path to solve the puzzle!</p>"
        },
        "courseC_external_events_authored_hint": {},
        "courseC_flappy_events1_authored_hint": {
          "courseC_flappy_events1_a": "<p><img src=\"https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif\"></p>"
        },
        "courseC_flappy_events1_2018_authored_hint": {
          "courseC_flappy_events1_a": "<p><img src=\"https://images.code.org/5f1d0edf6ebb44d98ffdce623cfe0ad4-image-1501192487040.gif\"></p>"
        },
        "courseC_flappy_events2_authored_hint": {
          "courseC_flappy_events2_a": "<p>The block you need to add is called <code>set speed</code>. </p>",
          "courseC_flappy_events2_b": "<p>Connect the <code>set speed</code> block to the <code>when run</code> block to solve this puzzle.</p>"
        },
        "courseC_flappy_events2_2018_authored_hint": {
          "courseC_flappy_events2_a": "<p>The block you need to add is called <code>set speed</code>. </p>",
          "courseC_flappy_events2_b": "<p>Connect the <code>set speed</code> block to the <code>when run</code> block to solve this puzzle.</p>"
        },
        "courseC_flappy_events3_authored_hint": {
          "courseC_flappy_events3_a": "<p>If something isn't working correctly, make sure your blocks are connected to the correct events in the workspace.</p>"
        },
        "courseC_flappy_events3_2018_authored_hint": {
          "courseC_flappy_events3_a": "<p>If something isn't working correctly, make sure your blocks are connected to the correct events in the workspace.</p>"
        },
        "courseC_flappy_events4_authored_hint": {
          "courseC_flappy_events4_a": "<p>Connect the <code>end game</code> block to <code>when hit an obstacle</code> to solve this puzzle.</p>"
        },
        "courseC_flappy_events4_2018_authored_hint": {
          "courseC_flappy_events4_a": "<p>Connect the <code>end game</code> block to <code>when hit an obstacle</code> to solve this puzzle.</p>"
        },
        "courseC_flappy_events5_authored_hint": {
          "courseC_flappy_events5_a": "<p>You will need to use the <code>score a point</code> block to pass this level.</p>"
        },
        "courseC_flappy_events5_2018_authored_hint": {
          "courseC_flappy_events5_a": "<p>You will need to use the <code>score a point</code> block to pass this level.</p>"
        },
        "courseC_flappy_events6_authored_hint": {
          "courseC_flappy_events6_a": "<p>Try connecting the <code>flap a ____ amount</code> block to the <code>when click</code> event.</p>"
        },
        "courseC_flappy_events6_2018_authored_hint": {
          "courseC_flappy_events6_a": "<p>Try connecting the <code>flap a ____ amount</code> block to the <code>when click</code> event.</p>"
        },
        "courseC_flappy_events7_authored_hint": {
          "courseC_flappy_events7_a": "<p>You can change the background using the <code>set scene</code> block. </p>"
        },
        "courseC_flappy_events7_2018_authored_hint": {
          "courseC_flappy_events7_a": "<p>You can change the background using the <code>set scene</code> block. </p>"
        },
        "courseC_flappy_events8_authored_hint": {
          "courseC_flappy_events8_a": "<p>Try connecting a second <code>set scene</code> block under the <code>when pass obstacle</code> event to pass this level.</p>"
        },
        "courseC_flappy_events8_2018_authored_hint": {
          "courseC_flappy_events8_a": "<p>Try connecting a second <code>set scene</code> block under the <code>when pass obstacle</code> event to pass this level.</p>"
        },
        "courseC_flappy_events9_authored_hint": {
          "courseC_flappy_events9_a": "<p>Connect the <code>set score 0</code> block to the <code>when hit an obstacle</code> event to pass this level.</p>"
        },
        "courseC_flappy_events9_2018_authored_hint": {
          "courseC_flappy_events9_a": "<p>Connect the <code>set score 0</code> block to the <code>when hit an obstacle</code> event to pass this level.</p>"
        },
        "courseC_flappy_events_template_authored_hint": {},
        "courseC_flappy_events_template_2018_authored_hint": {},
        "courseC_harvester_loops1_authored_hint": {
          "courseC_harvester_loops1_a": "<p>Once you have moved to a pumpkin, use <xml><block type=\"harvester_pumpkin\"/></xml> to collect it.</p>",
          "courseC_harvester_loops1_b": "<p>You can use a loop with the <xml><block type=\"harvester_pumpkin\"/></xml> block to pick more than one pumpkin from a square.</p>"
        },
        "courseC_harvester_loops10_authored_hint": {},
        "courseC_harvester_loops10_2018_authored_hint": {},
        "courseC_harvester_loops11_authored_hint": {},
        "courseC_harvester_loops11_2018_authored_hint": {},
        "courseC_harvester_loops1_2018_authored_hint": {
          "courseC_harvester_loops1_a": "<p>Once you have moved to a pumpkin, use <xml><block type=\"harvester_pumpkin\"/></xml> to collect it.</p>",
          "courseC_harvester_loops1_b": "<p>You can use a loop with the <xml><block type=\"harvester_pumpkin\"/></xml> block to pick more than one pumpkin from a square.</p>"
        },
        "courseC_harvester_loops2_authored_hint": {
          "courseC_harvester_loops2_a": "<p>If you get stuck, try writing the steps on paper and looking for repeating patterns.</p>",
          "courseC_harvester_loops2_b": "<p>You will need one <code>repeat</code> loop after another.</p>",
          "courseC_harvester_loops2_c": "<p>One loop will repeat the <code>move forward</code> command, and the other will repeat the <code>pick pumpkin</code> command.</p>"
        },
        "courseC_harvester_loops2_2018_authored_hint": {
          "courseC_harvester_loops2_a": "<p>If you get stuck, try writing the steps on paper and looking for repeating patterns.</p>",
          "courseC_harvester_loops2_b": "<p>You will need one <code>repeat</code> loop after another.</p>",
          "courseC_harvester_loops2_c": "<p>One loop will repeat the <code>move forward</code> command, and the other will repeat the <code>pick pumpkin</code> command.</p>"
        },
        "courseC_harvester_loops3_authored_hint": {
          "courseC_harvester_loops3_a": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>",
          "courseC_harvester_loops3_b": "<p>For the first pumpkins, you can use code very similar to the last puzzle. Which way do you need to turn afterwards?</p>",
          "courseC_harvester_loops3_c": "<p>If you want to simplify your code, you can actually put one loop inside of another! This is called a <strong>nested loop</strong>.</p>"
        },
        "courseC_harvester_loops3_2018_authored_hint": {
          "courseC_harvester_loops3_a": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>",
          "courseC_harvester_loops3_b": "<p>For the first pumpkins, you can use code very similar to the last puzzle. Which way do you need to turn afterwards?</p>",
          "courseC_harvester_loops3_c": "<p>If you want to simplify your code, you can actually put one loop inside of another! This is called a <strong>nested loop</strong>.</p>"
        },
        "courseC_harvester_loops4_authored_hint": {
          "courseC_harvester_loops4_a": "<p>Use the new <code>pick corn</code> block to collect the corn.</p>",
          "courseC_harvester_loops4_b": "<p>You can use multiple repeat loops in your code, some to pick corn and some to pick pumpkins.</p>",
          "courseC_harvester_loops4_c": "<p>If you want to simplify your code, you can actually put one loop inside of another! This is called a <strong>nested loop</strong>.</p>"
        },
        "courseC_harvester_loops4_2018_authored_hint": {
          "courseC_harvester_loops4_a": "<p>Use the new <code>pick corn</code> block to collect the corn.</p>",
          "courseC_harvester_loops4_b": "<p>You can use multiple repeat loops in your code, some to pick corn and some to pick pumpkins.</p>",
          "courseC_harvester_loops4_c": "<p>If you want to simplify your code, you can actually put one loop inside of another! This is called a <strong>nested loop</strong>.</p>"
        },
        "courseC_harvester_loops5_authored_hint": {
          "courseC_harvester_loops5_a": "<p>If you get stuck, try drawing the entire program and then looking for repeating patterns.</p>",
          "courseC_harvester_loops5_b": "<p>Does this stair step look familiar from other puzzles? The movements should be similar, just remember to collect crops along the way.</p>"
        },
        "courseC_harvester_loops5_2018_authored_hint": {
          "courseC_harvester_loops5_a": "<p>If you get stuck, try drawing the entire program and then looking for repeating patterns.</p>",
          "courseC_harvester_loops5_b": "<p>Does this stair step look familiar from other puzzles? The movements should be similar, just remember to collect crops along the way.</p>"
        },
        "courseC_harvester_loops6_authored_hint": {
          "courseC_harvester_loops6_a": "<p>Remember you can put multiple blocks in one repeat loop.</p>",
          "courseC_harvester_loops6_b": "<p>Don’t forget to turn at the end of the row of corn.</p>"
        },
        "courseC_harvester_loops6_2018_authored_hint": {
          "courseC_harvester_loops6_a": "<p>Remember you can put multiple blocks in one repeat loop.</p>",
          "courseC_harvester_loops6_b": "<p>Don’t forget to turn at the end of the row of corn.</p>"
        },
        "courseC_harvester_loops7_authored_hint": {
          "courseC_harvester_loops7_a": "<p>You can solve this puzzle two ways, either get the corn or the pumpkins first.</p>",
          "courseC_harvester_loops7_b": "<p>You will need multiple <code>repeat</code> loops to solve this puzzle.</p>"
        },
        "courseC_harvester_loops7_2018_authored_hint": {
          "courseC_harvester_loops7_a": "<p>You can solve this puzzle two ways, either get the corn or the pumpkins first.</p>",
          "courseC_harvester_loops7_b": "<p>You will need multiple <code>repeat</code> loops to solve this puzzle.</p>"
        },
        "courseC_harvester_loops8_authored_hint": {
          "courseC_harvester_loops8_a": "<p>Does this stair step look familiar from the previous puzzle? The movements should be similar, just remember to collect crops along the way.</p>",
          "courseC_harvester_loops8_b": "<p>If you want to simplify your code more, you can actually put one <code>repeat</code> loop inside of another! This is called a <strong>nested loop</strong>.</p>"
        },
        "courseC_harvester_loops8_2018_authored_hint": {
          "courseC_harvester_loops8_a": "<p>Does this stair step look familiar from the previous puzzle? The movements should be similar, just remember to collect crops along the way.</p>",
          "courseC_harvester_loops8_b": "<p>If you want to simplify your code more, you can actually put one <code>repeat</code> loop inside of another! This is called a <strong>nested loop</strong>.</p>"
        },
        "courseC_harvester_loops9_authored_hint": {},
        "courseC_harvester_loops9_2018_authored_hint": {},
        "courseC_harvester_loops_challenge1_authored_hint": {
          "courseC_harvester_loops_challenge1_a": "<p>This is too hard without loops!</p>",
          "courseC_harvester_loops_challenge1_b": "<p>You can repeat <code>move forward</code> and <code>pick corn</code> as many times as you need, then turn right at each corner.</p>",
          "courseC_harvester_loops_challenge1_c": "<p>The best way to collect the first four corn uses a <code>repeat</code> block inside of another <code>repeat</code> block. You can use this pattern for the rest of the puzzle too!</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">2</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">2</title>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"harvester_corn\"/>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n        </block></next></block></xml>"
        },
        "courseC_harvester_loops_challenge1a_authored_hint": {
          "courseC_harvester_loops_challenge1_a": "<p>This is too hard without loops!</p>",
          "courseC_harvester_loops_challenge1_b": "<p>You can repeat <code>move forward</code> and <code>pick corn</code> as many times as you need, then <code>turn right</code> at each corner.</p>",
          "courseC_harvester_loops_challenge1_c": "<p>The best way to collect the corn in the middle uses a <code>repeat</code> block inside of another <code>repeat</code> block.</p>\n<xml><block type=\"controls_repeat\">\n        <title name=\"TIMES\">2</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"harvester_corn\"/>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n        </block></xml>"
        },
        "courseC_harvester_loops_challenge1a_2018_authored_hint": {
          "courseC_harvester_loops_challenge1_a": "<p>This is too hard without loops!</p>",
          "courseC_harvester_loops_challenge1_b": "<p>You can repeat <code>move forward</code> and <code>pick corn</code> as many times as you need, then <code>turn right</code> at each corner.</p>",
          "courseC_harvester_loops_challenge1_c": "<p>The best way to collect the corn in the middle uses a <code>repeat</code> block inside of another <code>repeat</code> block.</p>\n<xml><block type=\"controls_repeat\">\n        <title name=\"TIMES\">2</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"harvester_corn\"/>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n        </block></xml>"
        },
        "courseC_harvester_loops_challenge2_authored_hint": {
          "courseC_harvester_loops_challenge2_a": "<p>One way to solve this looks like a zig-zag. Another way looks like a spiral! There are lots of different solutions to a puzzle like this. Be persistent!</p>",
          "courseC_harvester_loops_challenge2_b": "<p>You can repeat <code>move forward</code> and <code>pick lettuce</code> as many times as you need to, then turn at each corner.</p>",
          "courseC_harvester_loops_challenge2_c": "<p>This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!</p>\n<p><img src=\"https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png\"></p>",
          "courseC_harvester_loops_challenge2_d": "<p>This spiral pattern can be coded with just 18 blocks!</p>\n<p><img src=\"https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png\"></p>"
        },
        "courseC_harvester_loops_challenge2_2018_authored_hint": {
          "courseC_harvester_loops_challenge2_a": "<p>One way to solve this looks like a zig-zag. Another way looks like a spiral! There are lots of different solutions to a puzzle like this. Be persistent!</p>",
          "courseC_harvester_loops_challenge2_b": "<p>You can repeat <code>move forward</code> and <code>pick lettuce</code> as many times as you need to, then turn at each corner.</p>",
          "courseC_harvester_loops_challenge2_c": "<p>This zig-zag pattern can be repeated twice to finish the puzzle with just 20 blocks!</p>\n<p><img src=\"https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png\"></p>",
          "courseC_harvester_loops_challenge2_d": "<p>This spiral pattern can be coded with just 18 blocks!</p>\n<p><img src=\"https://images.code.org/0bfc0a0ed6783fae908368a6e6d12c02-image-1493501358990.18.52 PM.png\"></p>"
        },
        "courseC_harvester_loops_forVid_authored_hint": {},
        "courseC_maze_debugging1_authored_hint": {
          "courseC_maze_debugging1_a": "<ul>\n<li>Does everything work after the first step?</li>\n<li>Does it still work after the second?</li>\n<li>Where does it go wrong?</li>\n</ul>",
          "courseC_maze_debugging1_b": "<p>There is 1 block you need to add to complete this puzzle.</p>"
        },
        "courseC_maze_debugging1_2018_authored_hint": {
          "courseC_maze_debugging1_a": "<ul>\n<li>Does everything work after the first step?</li>\n<li>Does it still work after the second?</li>\n<li>Where does it go wrong?</li>\n</ul>",
          "courseC_maze_debugging1_b": "<p>There is 1 block you need to add to complete this puzzle.</p>"
        },
        "courseC_maze_debugging2_authored_hint": {
          "courseC_maze_debugging2_a": "<p>There is a lot of valuable code in the workspace.  Don't just delete it all and start over!</p>",
          "courseC_maze_debugging2_b": "<ul>\n<li>Does everything work after the first step?</li>\n<li>Does it still work after the second?</li>\n<li>Where does it go wrong?</li>\n</ul>",
          "courseC_maze_debugging2_c": "<p>Can't figure out what's wrong? Try running the code a couple of times to see what happens.</p>"
        },
        "courseC_maze_debugging2_2018_authored_hint": {
          "courseC_maze_debugging2_a": "<p>There is a lot of valuable code in the workspace.  Don't just delete it all and start over!</p>",
          "courseC_maze_debugging2_b": "<ul>\n<li>Does everything work after the first step?</li>\n<li>Does it still work after the second?</li>\n<li>Where does it go wrong?</li>\n</ul>",
          "courseC_maze_debugging2_c": "<p>Can't figure out what's wrong? Try running the code a couple of times to see what happens.</p>"
        },
        "courseC_maze_debugging3_authored_hint": {
          "courseC_maze_debugging3_a": "<p>To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.</p>\n<p>Drag the block you want to delete back to the toolbox.</p>\n<p>Finally, put your other blocks back where they belong.</p>\n<p><img src=\"https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif\"></p>",
          "courseC_maze_debugging3_b": "<p>Can't figure out what's wrong? Try running the code a couple of times to see what happens.</p>"
        },
        "courseC_maze_debugging3_2018_authored_hint": {
          "courseC_maze_debugging3_a": "<p>To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.</p>\n<p>Drag the block you want to delete back to the toolbox.</p>\n<p>Finally, put your other blocks back where they belong.</p>\n<p><img src=\"https://images.code.org/bbafa5a100505b2b99a3f43ad3195471-image-1479933232821.gif\"></p>",
          "courseC_maze_debugging3_b": "<p>Can't figure out what's wrong? Try running the code a couple of times to see what happens.</p>"
        },
        "courseC_maze_debugging4_authored_hint": {
          "courseC_maze_debugging4_a": "<p>Use the \"Step\" button to run through the instructions one at a time.  Does that help you find the line where things go wrong?</p>",
          "courseC_maze_debugging4_b": "<p>One of the turns is making Scrat go in the wrong direction. Can you figure out which one?</p>"
        },
        "courseC_maze_debugging4_2018_authored_hint": {
          "courseC_maze_debugging4_a": "<p>Use the \"Step\" button to run through the instructions one at a time.  Does that help you find the line where things go wrong?</p>",
          "courseC_maze_debugging4_b": "<p>One of the turns is making Scrat go in the wrong direction. Can you figure out which one?</p>"
        },
        "courseC_maze_debugging5_authored_hint": {
          "courseC_maze_debugging5_a": "<p>There are lots of helpful blocks in the workspace already.  Don't delete them all! </p>\n<p>Use the \"Step\" button to go through and figure out where the code goes wrong.</p>",
          "courseC_maze_debugging5_b": "<p>Try saying what Scrat should do out loud.  Is it the same as the code in the workspace?  What goes wrong?</p>"
        },
        "courseC_maze_debugging5_2018_authored_hint": {
          "courseC_maze_debugging5_a": "<p>There are lots of helpful blocks in the workspace already.  Don't delete them all! </p>\n<p>Use the \"Step\" button to go through and figure out where the code goes wrong.</p>",
          "courseC_maze_debugging5_c": "<p>You can change the direction of the turn block by clicking on the dropdown.</p>",
          "courseC_maze_debugging5_b": "<p>Try saying what Scrat should do out loud.  Is it the same as the code in the workspace?  What goes wrong?</p>"
        },
        "courseC_maze_debugging6_authored_hint": {
          "courseC_maze_debugging6_a": "<ul>\n<li>What is Scrat supposed to do?</li>\n<li>What does Scrat do?</li>\n<li>What does that tell you?</li>\n</ul>",
          "courseC_maze_debugging6_b": "<p>Once you've found and fixed the first bug, go through the debugging process again to find the second one.</p>\n<p>Repeat the process until the program works!</p>"
        },
        "courseC_maze_debugging6_2018_authored_hint": {
          "courseC_maze_debugging6_a": "<ul>\n<li>What is Scrat supposed to do?</li>\n<li>What does Scrat do?</li>\n<li>What does that tell you?</li>\n</ul>",
          "courseC_maze_debugging6_b": "<p>Once you've found and fixed the first bug, go through the debugging process again to find the second one.</p>\n<p>Repeat the process until the program works!</p>"
        },
        "courseC_maze_debugging7_authored_hint": {
          "courseC_maze_debugging7_a": "<ul>\n<li>Does everything work at the first step?</li>\n<li>How about the second step?</li>\n<li>Where does it go wrong?</li>\n</ul>",
          "courseC_maze_debugging7_b": "<p>Don't forget to use the \"Step\" button to run the program line by line!</p>",
          "courseC_maze_debugging7_c": "<p>After you find and fix the first bug, make sure to use the debugging process again to find the next one.</p>\n<p>Repeat the debugging process until the program works!</p>"
        },
        "courseC_maze_debugging7_2018_authored_hint": {
          "courseC_maze_debugging7_a": "<ul>\n<li>Does everything work at the first step?</li>\n<li>How about the second step?</li>\n<li>Where does it go wrong?</li>\n</ul>",
          "courseC_maze_debugging7_b": "<p>Don't forget to use the \"Step\" button to run the program line by line!</p>",
          "courseC_maze_debugging7_c": "<p>After you find and fix the first bug, make sure to use the debugging process again to find the next one.</p>\n<p>Repeat the debugging process until the program works!</p>"
        },
        "courseC_maze_debugging8_authored_hint": {
          "courseC_maze_debugging8_a": "<ul>\n<li>What is Scrat supposed to do?</li>\n<li>What does Scrat do?</li>\n<li>What does that tell you?</li>\n</ul>"
        },
        "courseC_maze_debugging8_predict1_authored_hint": {},
        "courseC_maze_debugging8_predict1_2018_authored_hint": {},
        "courseC_maze_debugging9_authored_hint": {},
        "courseC_maze_debugging9_2018_authored_hint": {},
        "courseC_maze_debugging_challenge1_authored_hint": {
          "courseC_maze_debugging_challenge1_a": "<p>Left or right? It's up to you!</p>",
          "courseC_maze_debugging_challenge1_b": "<p>Scrat's path is the shape of a rectangle! He needs to turn the same way each time.</p>",
          "courseC_maze_debugging_challenge1_c": "<p>If you are getting stuck, you can always start over and find a new way!</p>"
        },
        "courseC_maze_debugging_challenge1_2018_authored_hint": {
          "courseC_maze_debugging_challenge1_a": "<p>Left or right? It's up to you!</p>",
          "courseC_maze_debugging_challenge1_b": "<p>Scrat's path is the shape of a rectangle! He needs to turn the same way each time.</p>",
          "courseC_maze_debugging_challenge1_c": "<p>If you are getting stuck, you can always start over and find a new way!</p>"
        },
        "courseC_maze_debugging_challenge2_authored_hint": {
          "courseC_maze_debugging_challenge2_b": "<p>If you are getting stuck, try debugging the code.  Where does it go wrong?</p>",
          "courseC_maze_debugging_challenge2_c": "<p>There are two different paths you can follow by just moving forward and turning four times. If you find one way to use a loop, there may be even more!</p>\n<p><img src=\"https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png\"></p>"
        },
        "courseC_maze_debugging_challenge2_2018_authored_hint": {
          "courseC_maze_debugging_challenge2_b": "<p>If you are getting stuck, try debugging the code.  Where does it go wrong?</p>",
          "courseC_maze_debugging_challenge2_c": "<p>There are two different paths you can follow by just moving forward and turning four times. If you find one way to use a loop, there may be even more!</p>\n<p><img src=\"https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png\"></p>"
        },
        "courseC_maze_loops10_authored_hint": {},
        "courseC_maze_loops10_predict2_authored_hint": {},
        "courseC_maze_loops11_authored_hint": {},
        "courseC_maze_loops2_authored_hint": {
          "courseC_maze_loops2_a": "<p>You can solve this puzzle with just three blocks, including <code>when run</code>.</p>",
          "courseC_maze_loops2_b": "<p>Try putting the <code>move forward</code> block inside of a <code>repeat</code> block to create a loop.</p>",
          "courseC_maze_loops2_c": "<p>You need to repeat the <code>move forward</code> command 5 times to solve this puzzle.</p>"
        },
        "courseC_maze_loops2_predict1_authored_hint": {
          "courseC_maze_loops2_a": "<p>You can solve this puzzle with just three blocks, including <code>when run</code>.</p>",
          "courseC_maze_loops2_b": "<p>Try putting the <code>move forward</code> block inside of a <code>repeat</code> block to create a loop.</p>",
          "courseC_maze_loops2_c": "<p>You need to repeat the <code>move forward</code> command 5 times to solve this puzzle.</p>"
        },
        "courseC_maze_loops3_authored_hint": {
          "courseC_maze_loops3_a": "<p>This puzzle is very similar to the last one.</p>",
          "courseC_maze_loops3_b": "<p>Use a <code>repeat 5 times</code> block to create the loop.</p>"
        },
        "courseC_maze_loops4_authored_hint": {
          "courseC_maze_loops4_a": "<p>Not all command blocks should be repeated.</p>",
          "courseC_maze_loops4_b": "<p>Use two <code>repeat</code> blocks set to different numbers.</p>",
          "courseC_maze_loops4_c": "<p><code>Turn right</code> once between the two loops.</p>"
        },
        "courseC_maze_loops5_authored_hint": {
          "courseC_maze_loops5_a": "<p>The best solution uses two <code>move forward</code> commands and one loop.</p>"
        },
        "courseC_maze_loops6_authored_hint": {
          "courseC_maze_loops6_a": "<p>If the pattern is hard to see, try coding it all out first and see what repeats over and over before you put the loops in.</p>",
          "courseC_maze_loops6_b": "<p>To put lots of blocks inside a <code>repeat</code> loop, just drag a loop out into the workspace, then drag all of the blocks from the starting program inside of it.  </p>\n<p>Connect it all back to the <code>when run</code> block and you're good to go!</p>"
        },
        "courseC_maze_loops7_authored_hint": {
          "courseC_maze_loops7_a": "<p>If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.</p>"
        },
        "courseC_maze_loops8_authored_hint": {
          "courseC_puppy_loops8courseC_maze_loops8_a": "<p>Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!</p>",
          "courseC_puppy_loops8courseC_maze_loops8_b": "<p>The first half of this path is similar to the stairs from the last puzzle, but it goes in a different direction.</p>",
          "courseC_puppy_loops8courseC_maze_loops8_c": "<p>There are different ways to solve this. </p>\n<p>You will want to use at least two loops, and repeat a set of actions in the first one, then a single <code>move forward</code> in the other.</p>"
        },
        "courseC_maze_loops9_authored_hint": {
          "courseC_maze_loops9_1": "<p>If you're having trouble finding where the code should repeat, try writing it down on a piece of paper and looking for a pattern. </p>"
        },
        "courseC_maze_loops_challenge1_authored_hint": {
          "courseC_maze_loops_challenge1_a": "<p>Think about this path as being three different pieces. Each one has a pattern you can repeat.</p>",
          "courseC_maze_loops_challenge1_b": "<p>In between each <code>repeat</code> block, you will need to <code>turn left</code> or <code>turn right</code> to get ready Scrat for the next pattern.</p>"
        },
        "courseC_maze_loops_challenge1a_authored_hint": {
          "courseC_maze_loops_challenge1_a": "<p>Think about this path as being two different pieces. Each one has a pattern you can repeat.</p>",
          "courseC_maze_loops_challenge1_b": "<p>Can you remember how to use loops to repeat a staircase pattern?</p>"
        },
        "courseC_maze_loops_challenge1a_2018_authored_hint": {
          "courseC_maze_loops_challenge1_a": "<p>Think about this path as being two different pieces. Each one has a pattern you can repeat.</p>",
          "courseC_maze_loops_challenge1_b": "<p>Can you remember how to use loops to repeat a staircase pattern?</p>"
        },
        "courseC_maze_loops_challenge2_authored_hint": {
          "courseC_maze_loops_challenge2_a": "<p>The original code would work great - if there was only one piece of treasure in each pile!</p>",
          "courseC_maze_loops_challenge2_b": "<p>Use loops so you don't run out of <code>collect</code> blocks!</p>"
        },
        "courseC_maze_programming1_authored_hint": {
          "courseC_maze_programming1_0": "<p>Make sure all of the blocks have been fully snapped together, then click \"Run\" again.</p>"
        },
        "courseC_maze_programming1_2018_authored_hint": {
          "courseC_maze_programming1_0": "<p>Make sure all of the blocks have been fully snapped together, then click \"Run\" again.</p>"
        },
        "courseC_maze_programming2_authored_hint": {
          "courseC_maze_programming2_a": "<p>To use a <xml><block type=\"maze_moveForward\"/></xml> block, drag it out of the toolbox and snap it to the <xml><block type=\"when_run\"/></xml> block.</p>",
          "courseC_maze_programming2_b": "<p>Make sure all of the blocks have been fully snapped together, then click \"Run\" again.</p>"
        },
        "courseC_maze_programming2_2018_authored_hint": {
          "courseC_maze_programming2_a": "<p>To use a <xml><block type=\"maze_moveForward\"/></xml> block, drag it out of the toolbox and snap it to the <xml><block type=\"when_run\"/></xml> block.</p>",
          "courseC_maze_programming2_b": "<p>Make sure all of the blocks have been fully snapped together, then click \"Run\" again.</p>"
        },
        "courseC_maze_programming3_authored_hint": {
          "courseC_maze_programming3_a": "<p>Try running the code first to see where it goes wrong.</p>",
          "courseC_maze_programming3_b": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.</p>\n<p>Drag the block you want to delete back to the toolbox.</p>\n<p>Finally, put your other blocks back where they belong.</p>"
        },
        "courseC_maze_programming3_2018_authored_hint": {
          "courseC_maze_programming3_a": "<p>Try running the code first to see where it goes wrong.</p>",
          "courseC_maze_programming3_b": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks to another part of the workspace.</p>\n<p>Drag the block you want to delete back to the toolbox.</p>\n<p>Finally, put your other blocks back where they belong.</p>"
        },
        "courseC_maze_programming4_authored_hint": {
          "courseC_maze_programming4_a": "<p>Remember that when you turn, you are turning from the <em>bird's</em> point of view.  If you turn right, the bird will point down.</p>",
          "courseC_maze_programming4_b": "<p>To follow the path:</p>\n<ul>\n<li>move forward</li>\n<li>turn one way</li>\n<li>move forward</li>\n<li>turn back the other way</li>\n<li>move forward</li>\n</ul>"
        },
        "courseC_maze_programming4_2018_authored_hint": {
          "courseC_maze_programming4_a": "<p>Remember that when you turn, you are turning from the <em>bird's</em> point of view.  If you turn right, the bird will point down.</p>",
          "courseC_maze_programming4_b": "<p>To follow the path:</p>\n<ul>\n<li>move forward</li>\n<li>turn one way</li>\n<li>move forward</li>\n<li>turn back the other way</li>\n<li>move forward</li>\n</ul>"
        },
        "courseC_maze_programming5_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>The bird will need to make one turn to complete this puzzle. Can you figure out which way?</p>",
          "courseC_maze_programming5_c": "<p>The solution will have two <code>move forward</code> blocks, a turn, and two more <code>move forward</code> blocks.</p>"
        },
        "courseC_maze_programming5_2018_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>The bird will need to make one turn to complete this puzzle. Can you figure out which way?</p>",
          "courseC_maze_programming5_c": "<p>The solution will have two <code>move forward</code> blocks, a turn, and two more <code>move forward</code> blocks.</p>"
        },
        "courseC_maze_programming6_authored_hint": {
          "courseC_maze_programming6_a": "<p>There are two ways to solve this puzzle!</p>",
          "courseC_maze_programming6_b": "<p>Follow your finger from the bird to the pig, which steps did you take?</p>",
          "courseC_maze_programming6_c": "<p>Remember you have to turn first, since the bird starts facing a wall.</p>",
          "courseC_maze_programming6_d": "<p>Feel stuck?  Look at this path!</p>"
        },
        "courseC_maze_programming6_2018_authored_hint": {
          "courseC_maze_programming6_a": "<p>There are two ways to solve this puzzle!</p>",
          "courseC_maze_programming6_b": "<p>Follow your finger from the bird to the pig, which steps did you take?</p>",
          "courseC_maze_programming6_c": "<p>Remember you have to turn first, since the bird starts facing a wall.</p>",
          "courseC_maze_programming6_d": "<p>Feel stuck?  Look at this path!</p>"
        },
        "courseC_maze_programming7_authored_hint": {
          "courseC_maze_programming7_a": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseC_maze_programming7_b": "<p>If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper.</p>"
        },
        "courseC_maze_programming7_2018_authored_hint": {
          "courseC_maze_programming7_a": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseC_maze_programming7_b": "<p>If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper.</p>"
        },
        "courseC_maze_programming8_authored_hint": {
          "courseC_maze_programming8_a": "<p>Remember you can use the \"Step\" button to look through your code line-by-line if you get stuck.</p>",
          "courseC_maze_programming8_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseC_maze_programming8_2018_authored_hint": {
          "courseC_maze_programming8_a": "<p>Remember you can use the \"Step\" button to look through your code line-by-line if you get stuck.</p>",
          "courseC_maze_programming8_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseC_maze_programming8_predict1_authored_hint": {},
        "courseC_maze_programming8_predict1_2018_authored_hint": {},
        "courseC_maze_programming9_authored_hint": {},
        "courseC_maze_programming9_2018_authored_hint": {},
        "courseC_maze_programming_challenge1_authored_hint": {
          "courseC_maze_programming_challenge1_a": "<p>There are many ways to get to the pig. Use your finger to find a path and then program it!</p>"
        },
        "courseC_maze_programming_challenge1_2018_authored_hint": {
          "courseC_maze_programming_challenge1_a": "<p>There are many ways to get to the pig. Use your finger to find a path and then program it!</p>"
        },
        "courseC_maze_programming_challenge2_authored_hint": {
          "courseC_maze_programming_challenge2_a": "<p><em>\"If you send me backwards, be extra careful that I turn the correct way!\"</em></p>",
          "courseC_maze_programming_challenge2_b": "<p>The shortest solution uses only 5 blocks, but it uses this block:</p>\n<xml><block type=\"controls_repeat_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>"
        },
        "courseC_maze_programming_challenge2_2018_authored_hint": {
          "courseC_maze_programming_challenge2_a": "<p><em>\"If you send me backwards, be extra careful that I turn the correct way!\"</em></p>",
          "courseC_maze_programming_challenge2_b": "<p>The shortest solution uses only 5 blocks, but it uses this block:</p>\n<xml><block type=\"controls_repeat_dropdown\"><title name=\"TIMES\" config=\"3-10\">???</title></block></xml>"
        },
        "courseC_playLab_embedded_authored_hint": {},
        "courseC_puppy_loops10_authored_hint": {
          "courseC_puppy_loops9_1": "<p>I need to move two or three time between each turn.</p>"
        },
        "courseC_puppy_loops11_authored_hint": {},
        "courseC_puppy_loops8_authored_hint": {
          "2-3_Maze_Loops_17_a": "<p>Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!</p>",
          "2-3_Maze_Loops_17_b": "<p>The first half of this path is similar to the stair step from the last puzzle, but it goes a different direction.</p>",
          "courseC_puppy_loops8_c": "<p>There are different ways to solve this. You will want to use at least two loops, and repeat either a set of actions or a single movement.</p>"
        },
        "courseC_puppy_loops8courseC_maze_loops8_authored_hint": {
          "courseC_puppy_loops8courseC_maze_loops8_a": "<p>Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!</p>",
          "courseC_puppy_loops8courseC_maze_loops8_b": "<p>The first half of this path is similar to the stairs from the last puzzle, but it goes in a different direction.</p>",
          "courseC_puppy_loops8courseC_maze_loops8_c": "<p>There are different ways to solve this. </p>\n<p>You will want to use at least two loops, and repeat a set of actions in the first one, then a single <code>move forward</code> in the other.</p>"
        },
        "courseC_puppy_loops9_authored_hint": {
          "courseC_puppy_loops9_1": "<p>If you repeat the first few actions, you can get me to the pig with just four more blocks!</p>"
        },
        "courseC_starWars_loops1_authored_hint": {
          "courseC_starWars_loops1_a": "<p>When BB-8 rolls over scrap metal he picks it up automatically.</p>",
          "courseC_starWars_loops1_b": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>",
          "courseC_starWars_loops1_c": "<p>You will want to <code>move forward</code> five times to solve this puzzle.</p>"
        },
        "courseC_starWars_loops10_authored_hint": {
          "courseC_starWars_loops10_a": "<p>Doesn't this pattern look like a giant set of stair steps? See if you can use what you learned from previous puzzles to get all of the turns.</p>",
          "courseC_starWars_loops10_b": "<p>If you want to use less code, you can put one <code>repeat</code> loop inside of another!<br>This is called a <strong>nested loop</strong>.</p>",
          "courseC_starWars_loops10_c": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>"
        },
        "courseC_starWars_loops10_2018_authored_hint": {
          "courseC_starWars_loops10_a": "<p>Doesn't this pattern look like a giant set of stair steps? See if you can use what you learned from previous puzzles to get all of the turns.</p>",
          "courseC_starWars_loops10_b": "<p>If you want to use less code, you can put one <code>repeat</code> loop inside of another!<br>This is called a <strong>nested loop</strong>.</p>",
          "courseC_starWars_loops10_c": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>"
        },
        "courseC_starWars_loops10_predict2_authored_hint": {},
        "courseC_starWars_loops10_predict2_2018_authored_hint": {},
        "courseC_starWars_loops11_authored_hint": {},
        "courseC_starWars_loops11_2018_authored_hint": {},
        "courseC_starWars_loops1_2018_authored_hint": {
          "courseC_starWars_loops1_a": "<p>When BB-8 rolls over scrap metal he picks it up automatically.</p>",
          "courseC_starWars_loops1_b": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>",
          "courseC_starWars_loops1_c": "<p>You will want to <code>move forward</code> five times to solve this puzzle.</p>"
        },
        "courseC_starWars_loops2_authored_hint": {
          "courseC_starWars_loops2_a": "<p>To repeat code, drag out a <code>repeat</code> loop, then put the block you want inside of it.</p>"
        },
        "courseC_starWars_loops2_2018_authored_hint": {
          "courseC_starWars_loops2_a": "<p>To repeat code, drag out a <code>repeat</code> loop, then put the block you want inside of it.</p>"
        },
        "courseC_starWars_loops4_authored_hint": {
          "courseC_starWars_loops4_c": "<p>Clicking on the small arrow next to \"left\" on the turn block will let you change it to  \"right\".</p>",
          "courseC_starWars_loops4_a": "<p>Use two <code>repeat</code> blocks.</p>",
          "courseC_starWars_loops4_b": "<p>Each <code>repeat</code> loop will have only one command inside of it: <code>move forward</code>.</p>"
        },
        "courseC_starWars_loops4_2018_authored_hint": {
          "courseC_starWars_loops4_c": "<p>Clicking on the small arrow next to \"left\" on the turn block will let you change it to  \"right\".</p>",
          "courseC_starWars_loops4_a": "<p>Use two <code>repeat</code> blocks.</p>",
          "courseC_starWars_loops4_b": "<p>Each <code>repeat</code> loop will have only one command inside of it: <code>move forward</code>.</p>"
        },
        "courseC_starWars_loops5_authored_hint": {
          "courseC_starWars_loops5_b": "<p>To move down, you have to turn and then move forward.</p>",
          "courseC_starWars_loops5_a": "<p>The best solution uses a turn, then a single <code>move forward</code>, another turn, then a loop.</p>"
        },
        "courseC_starWars_loops5_2018_authored_hint": {
          "courseC_starWars_loops5_b": "<p>To move down, you have to turn and then move forward.</p>",
          "courseC_starWars_loops5_a": "<p>The best solution uses a turn, then a single <code>move forward</code>, another turn, then a loop.</p>"
        },
        "courseC_starWars_loops6_authored_hint": {
          "courseC_starWars_loops6_a": "<p>Try writing all of the moves down on a piece of paper and looking for a pattern.</p>",
          "courseC_starWars_loops6_b": "<p>If you want to use less code, you can put one <code>repeat</code> loop inside of another!<br>This is called a <strong>nested loop</strong>.</p>"
        },
        "courseC_starWars_loops6_2018_authored_hint": {
          "courseC_starWars_loops6_a": "<p>Try writing all of the moves down on a piece of paper and looking for a pattern.</p>",
          "courseC_starWars_loops6_b": "<p>If you want to use less code, you can put one <code>repeat</code> loop inside of another!<br>This is called a <strong>nested loop</strong>.</p>"
        },
        "courseC_starWars_loops7_authored_hint": {
          "courseC_starWars_loops7_a": "<p>This pattern looks harder than it is! Start with a simple stair step. Does that cover all of the scrap metal?</p>",
          "courseC_starWars_loops7_b": "<p>If you are having trouble with this puzzle, try writing all of the moves on a piece of paper and looking for a pattern.</p>",
          "courseC_starWars_loops7_c": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>"
        },
        "courseC_starWars_loops7_2018_authored_hint": {
          "courseC_starWars_loops7_a": "<p>This pattern looks harder than it is! Start with a simple stair step. Does that cover all of the scrap metal?</p>",
          "courseC_starWars_loops7_b": "<p>If you are having trouble with this puzzle, try writing all of the moves on a piece of paper and looking for a pattern.</p>",
          "courseC_starWars_loops7_c": "<p>Don't be afraid to make a mistake! Run the code to see what happens, even if you haven't solved the puzzle yet.</p>"
        },
        "courseC_starWars_loops8_authored_hint": {
          "course_starWars_loops8_a": "<p>Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!</p>",
          "course_starWars_loops8_b": "<p>Think of the first half of this problem as a stair step problem. How did you solve that before?</p>",
          "course_starWars_loops8_c": "<p>Take a look at this path.</p>\n<p><img src=\"https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png\"></p>"
        },
        "courseC_starWars_loops8_2018_authored_hint": {
          "course_starWars_loops8_a": "<p>Try thinking about this problem in small parts. Take your time. You don't need to solve it on the first try!</p>",
          "course_starWars_loops8_b": "<p>Think of the first half of this problem as a stair step problem. How did you solve that before?</p>",
          "course_starWars_loops8_c": "<p>Take a look at this path.</p>\n<p><img src=\"https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png\"></p>"
        },
        "courseC_starWars_loops9_authored_hint": {
          "course_starWars_loops9_b": "<p>You can put more than one block inside a <code>repeat</code> loop.</p>",
          "course_starWars_loops9_c": "<p>You do not need to turn left to solve this puzzle. All of your turns can be to the right.</p>\n<p><img src=\"https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png\"></p>"
        },
        "courseC_starWars_loops9_2018_authored_hint": {
          "course_starWars_loops9_b": "<p>You can put more than one block inside a <code>repeat</code> loop.</p>",
          "course_starWars_loops9_c": "<p>You do not need to turn left to solve this puzzle. All of your turns can be to the right.</p>\n<p><img src=\"https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png\"></p>"
        },
        "courseD_Frozen_nested1_authored_hint": {
          "courseD_artist_project1_a": "<p>Use the drop down menu on the <code>turn</code> blocks to choose the angle you need!</p>",
          "courseD_artist_project1_b": "<p>Remember that <code>move forward</code> draws a line, while <code>jump forward</code> does not.</p>"
        },
        "courseD_Frozen_nested2_authored_hint": {
          "courseD_artist_project2_a": "<p>Remember that <code>move forward</code> draws a line, while <code>jump forward</code> does not.</p>",
          "courseD_artist_project2_b": "<p>After you draw and move the first time, you can repeat the code by adding a loop around the outside.</p>"
        },
        "courseD_Frozen_nested3_authored_hint": {
          "courseD_artist_project3_a": "<p>Use the drop down menu on the <code>turn</code> blocks to choose the angle you need!</p>",
          "courseD_artist_project3_b": "<p>Try nested loops!</p>\n<p>Use the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  </p>\n<ul>\n<li>Try 72 degrees if you are repeating the outer loop 5 times</li>\n<li>Try 60 degrees if you are repeating the outer loop 6 times</li>\n</ul>"
        },
        "courseD_Frozen_nested4_authored_hint": {
          "courseD_artist_project4_a": "<p>Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:</p>\n<p><img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" /></p>\n<p>Here's a set of hexagons with squares:</p>\n<p><img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" /></p>",
          "courseD_artist_project4_b": "<p>To try this, draw your first snowflake, turn, then draw a second snowflake.</p>"
        },
        "courseD_Frozen_nested5_authored_hint": {
          "courseD_artist_project4_a": "<p>Lines of 2 hexagons and 4 triangles:</p>\n<p><img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" /></p>"
        },
        "courseD_Frozen_nested6_authored_hint": {
          "courseD_artist_project1a_a": "<p>This stair step uses a 76 degree turn and repeats 4 times.</p>\n<p><img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" /></p>",
          "courseD_artist_project1a_b": "<p>These patterns are a lot like the stair steps from other puzzles, but using a different angle.</p>"
        },
        "courseD_Frozen_nested7_authored_hint": {
          "courseD_artist_project2a_a": "<p>This drawing was made by nesting a loop of 4 stairs and a <code>turn right 180 degrees</code> block inside of a <code>repeat 2 times</code> block.</p>\n<p><img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" /></p>"
        },
        "courseD_Frozen_nested8_authored_hint": {
          "courseD_artist_project3a_a": "<p>You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?</p>"
        },
        "courseD_Frozen_nested9_authored_hint": {
          "courseD_artist_project4a_a": "<p>Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)</p>\n<p><img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" /></p>"
        },
        "courseD_artist_1_2018_authored_hint": {
          "courseD_artist_project1_a": "<p>Use the drop down menu on the <code>turn</code> blocks to choose the angle you need!</p>",
          "courseD_artist_project1_b": "<p>Remember that <code>move forward</code> draws a line, while <code>jump forward</code> does not.</p>"
        },
        "courseD_artist_2_2018_authored_hint": {
          "courseD_artist_project1_b": "<p>Remember that <code>move</code> draws a line, while <code>jump</code> does not.</p>",
          "courseD_artist_project1_a": "<p>Use the drop down menu on the <code>turn</code> blocks to choose the angle you need!</p>"
        },
        "courseD_artist_3_2018_authored_hint": {},
        "courseD_artist_4_2018_authored_hint": {},
        "courseD_artist_5_2018_authored_hint": {
          "1": "<p>If you are switching your shapes, don't forget that you will need to switch their angles, too!</p>"
        },
        "courseD_artist_6_2018_authored_hint": {},
        "courseD_artist_7_2018_authored_hint": {
          "courseD_artist_project2a_a": "<p>This drawing was made by nesting a loop of 4 stairs and a <code>turn right 180 degrees</code> block inside of a <code>repeat 2 times</code> block.</p>\n<p><img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" /></p>"
        },
        "courseD_artist_8_2018_authored_hint": {
          "courseD_artist_project3a_a": "<p>You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?</p>"
        },
        "courseD_artist_9_2018_authored_hint": {
          "courseD_artist_project4a_a": "<p>Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)</p>\n<p><img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" /></p>"
        },
        "courseD_artist_Template_2018_authored_hint": {},
        "courseD_artist_binary1_authored_hint": {
          "courseD_artist_binary1_a": "<p>Replace the \"???\" in the text block with the binary image you want, in zeroes and ones.</p>",
          "courseD_artist_binary1_b": "<p>The artist will draw a white space for every 1 and a black space for every 0.</p>",
          "courseD_artist_binary1_c": "<p>This is how you can input your binary code:</p>\n<p><img src=\"https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif\"></p>"
        },
        "courseD_artist_binary1_2018_authored_hint": {
          "courseD_artist_binary1_a": "<p>Replace the \"???\" in the text block with the binary image you want, in zeroes and ones.</p>",
          "courseD_artist_binary1_b": "<p>The artist will draw a white space for every 1 and a black space for every 0.</p>",
          "courseD_artist_binary1_c": "<p>This is how you can input your binary code:</p>\n<p><img src=\"https://images.code.org/ec0f974e32c4323fc61cb49b48b8f1c0-image-1500334311345.2_hint.gif\"></p>"
        },
        "courseD_artist_binary2_authored_hint": {
          "courseD_artist_binary2_a": "<p>Just click <code>Run</code> to see this program in action!</p>"
        },
        "courseD_artist_binary2_2018_authored_hint": {
          "courseD_artist_binary2_a": "<p>Just click <code>Run</code> to see this program in action!</p>"
        },
        "courseD_artist_binary3_authored_hint": {
          "courseD_artist_binary3_a": "<p>One of the four binary patterns in the toolbox will solve this puzzle!</p>",
          "courseD_artist_binary3_b": "<p>Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseD_artist_binary3_2018_authored_hint": {
          "courseD_artist_binary3_a": "<p>One of the four binary patterns in the toolbox will solve this puzzle!</p>",
          "courseD_artist_binary3_b": "<p>Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseD_artist_binary4_authored_hint": {
          "courseD_artist_binary4_a": "<p>Look at the first three squares on the top row. Could you repeat these three to get the whole pattern?</p>",
          "courseD_artist_binary4_b": "<p>Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_artist_binary4_2018_authored_hint": {
          "courseD_artist_binary4_a": "<p>Look at the first three squares on the top row. Could you repeat these three to get the whole pattern?</p>",
          "courseD_artist_binary4_b": "<p>Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_artist_binary5_authored_hint": {
          "courseD_artist_binary5_a": "<p>Try running the code first to see what you have to work with.</p>",
          "courseD_artist_binary5_b": "<p>You only need to switch two rows to make a smile.</p>",
          "courseD_artist_binary5_c": "<p>If you are having trouble figuring this puzzle out, try writing the binary lines down on a piece of paper and looking for a pattern.</p>"
        },
        "courseD_artist_binary5_2018_authored_hint": {
          "courseD_artist_binary5_a": "<p>Try running the code first to see what you have to work with.</p>",
          "courseD_artist_binary5_b": "<p>You only need to switch two rows to make a smile.</p>",
          "courseD_artist_binary5_c": "<p>If you are having trouble figuring this puzzle out, try writing the binary lines down on a piece of paper and looking for a pattern.</p>"
        },
        "courseD_artist_binary6_authored_hint": {
          "courseD_artist_binary6_a": "<p>Start at the top left. How far do you have to read before the pattern starts to repeat?</p>",
          "courseD_artist_binary6_b": "<p>You can build your binary string a bit at a time, and keep testing!</p>"
        },
        "courseD_artist_binary6_2018_authored_hint": {
          "courseD_artist_binary6_a": "<p>Start at the top left. How far do you have to read before the pattern starts to repeat?</p>",
          "courseD_artist_binary6_b": "<p>You can build your binary string a bit at a time, and keep testing!</p>"
        },
        "courseD_artist_binary7_authored_hint": {
          "courseD_artist_binary7_a": "<p>Start at the top left. How far do you have to read before the pattern starts to repeat?</p>",
          "courseD_artist_binary7_b": "<p>Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_artist_binary7_2018_authored_hint": {
          "courseD_artist_binary7_a": "<p>Start at the top left. How far do you have to read before the pattern starts to repeat?</p>",
          "courseD_artist_binary7_b": "<p>Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_artist_binary8_authored_hint": {
          "courseD_artist_binary8_a": "<p>The spiral can be confusing sometimes. Isolate each horizontal line in your mind as you create this design.</p>",
          "courseD_artist_binary8_b": "<p>Try running the code first to see what you have to work with.</p>",
          "courseD_artist_binary8_c": "<p>Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseD_artist_binary8_2018_authored_hint": {
          "courseD_artist_binary8_a": "<p>The spiral can be confusing sometimes. Isolate each horizontal line in your mind as you create this design.</p>",
          "courseD_artist_binary8_b": "<p>Try running the code first to see what you have to work with.</p>",
          "courseD_artist_binary8_c": "<p>Don't be afraid to make a mistake! Try writing binary and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseD_artist_binaryFP_authored_hint": {},
        "courseD_artist_binaryFP8_authored_hint": {},
        "courseD_artist_binaryFP_2018_authored_hint": {},
        "courseD_artist_binary_challenge2_authored_hint": {
          "courseD_artist_binary_challenge2_a": "<p>There are only few lines wrong in the original program.</p>"
        },
        "courseD_artist_binary_challenge2_2018_authored_hint": {
          "courseD_artist_binary_challenge2_a": "<p>There are only few lines wrong in the original program.</p>"
        },
        "courseD_artist_binary_challenge3_authored_hint": {
          "courseD_artist_binary_challenge3_a": "<p>The best tip I have for you is to press <code>⟲ Start Over</code> if it starts to get really messy.</p>\n<p>There are only few lines wrong in the original program. If one approach fails, back up and try again. There is a solution!</p>"
        },
        "courseD_artist_embed_frozen_authored_hint": {},
        "courseD_artist_embed_frozen2_authored_hint": {},
        "courseD_artist_embedded_project1a_authored_hint": {},
        "courseD_artist_functions10_authored_hint": {
          "courseD_artist_functions10_b": "<p>This drawing is a lot like the last one, except the function draws a different kind of line.</p>",
          "courseD_artist_functions10_a": "<p>To get around using multiple <code>move forward</code> blocks, create a <code>draw hexagon</code> function and call that multiple times.</p>"
        },
        "courseD_artist_functions2_authored_hint": {
          "courseD_artist_functions2_a": "<p>Your program should:</p>\n<ul>\n<li>Use function</li>\n<li>Move forward 100 + 75 pixels</li>\n<li>Use function</li>\n</ul>"
        },
        "courseD_artist_functions3_authored_hint": {
          "courseD_artist_functions3_a": "<p>To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.</p>\n<p>If you can't remember what the starter code was, click \"start over\" in the upper right corner of the workspace.</p>"
        },
        "courseD_artist_functions4_authored_hint": {
          "courseD_artist_functions4_a": "<p>Try using a function!</p>"
        },
        "courseD_artist_functions5_authored_hint": {
          "courseD_artist_functions5_a": "<p>Don't give up!  Remember what you have been learning.</p>",
          "courseD_artist_functions5_b": "<p>Functions make it easy to call saved code at any time, not just from inside a loop!</p>"
        },
        "courseD_artist_functions6_authored_hint": {
          "grade4_artist_functions_windows0_a": "<p>Focus only on making one window for now.  We'll create a function for it in the next puzzle.</p>",
          "grade4_artist_functions_windows0_b": "<p>Try using nested loops, where the inner loop makes the square and the outer loop rotates the square four times.</p>"
        },
        "courseD_artist_functions7_authored_hint": {
          "courseD_artist_functions7_a": "<p>Try creating your function first then adding in windows one at a time.</p>",
          "courseD_artist_functions7_b": "<p>You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels forward for each top window, and 150 pixels down to get the bottom windows.</p>"
        },
        "courseD_artist_functions8_authored_hint": {
          "courseD_artist_functions8_a": "<p>Start by making a function for a square, then try making a function for a line of squares.</p>\n<p>How would you use the <code>draw a line of squares</code> function to make this image?</p>",
          "courseD_artist_functions8_b": "<p>After your first line of squares, you need to move the artist down and back before you start your second line of squares.</p>",
          "courseD_artist_functions8_c": "<p>You should move the artist back a different number of pixels for even lines than for odd ones.</p>"
        },
        "courseD_artist_functions9_authored_hint": {
          "courseD_artist_functions9_a": "<p>To get around the need to have multiple <code>move forward</code> blocks, create a <code>draw triangle</code> function and call that multiple times.</p>",
          "courseD_artist_functions9_b": "<p>This drawing is made by creating a line of triangles and turning either 60 or 120 degrees after each time you draw the triangle line.</p>"
        },
        "courseD_artist_nestedLoops1_authored_hint": {
          "courseD_artist_nestedLoops1_a": "<p>The easiest way to draw this is to move forward and use right turns.</p>",
          "courseD_artist_nestedLoops1_b": "<p>You can draw this triangle with a <code>repeat</code> loop with two blocks inside. Which blocks do you need?</p>",
          "courseD_artist_nestedLoops1_c": "<p>Try writing the steps on paper and looking for patterns that can be simplified with loops.</p>"
        },
        "courseD_artist_nestedLoops10_authored_hint": {},
        "courseD_artist_nestedLoops10_2018_authored_hint": {},
        "courseD_artist_nestedLoops1_2018_authored_hint": {
          "courseD_artist_nestedLoops1_a": "<p>The easiest way to draw this is to move forward and use right turns.</p>",
          "courseD_artist_nestedLoops1_b": "<p>You can draw this triangle with a <code>repeat</code> loop with two blocks inside. Which blocks do you need?</p>",
          "courseD_artist_nestedLoops1_c": "<p>Try writing the steps on paper and looking for patterns that can be simplified with loops.</p>"
        },
        "courseD_artist_nestedLoops1a_authored_hint": {
          "courseD_artist_nestedLoops1a_a": "<p>You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.</p>\n<p><img src=\"https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif\"></p>",
          "courseD_artist_nestedLoops1a_b": "<p>If you create your triangle with a loop, the artist should be facing the same way as they started. This will make the 60 degree turns a lot easier.</p>",
          "courseD_artist_nestedLoops1a_c": "<p>If you want colors, use the <code>set color</code> block in your code. You don't have to match the colors in the template image.</p>"
        },
        "courseD_artist_nestedLoops1a_2018_authored_hint": {
          "courseD_artist_nestedLoops1a_a": "<p>You will need to draw a total of 6 triangles. After finishing each triangle, rotate 60 degrees and move to start the next triangle.</p>\n<p><img src=\"https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif\"></p>",
          "courseD_artist_nestedLoops1a_b": "<p>If you create your triangle with a loop, the artist should be facing the same way as they started. This will make the 60 degree turns a lot easier.</p>",
          "courseD_artist_nestedLoops1a_c": "<p>If you want colors, use the <code>set color</code> block in your code. You don't have to match the colors in the template image.</p>"
        },
        "courseD_artist_nestedLoops2_authored_hint": {
          "courseD_artist_nestedLoops2_a": "<p>Nest your loops by surrounding your triangle code with another <code>repeat</code> loop.</p>",
          "courseD_artist_nestedLoops2_b": "<p>Remember to put the <code>turn</code> block inside of the loop so that the artist turns after each triangle.</p>"
        },
        "courseD_artist_nestedLoops2_2018_authored_hint": {
          "courseD_artist_nestedLoops2_a": "<p>Nest your loops by surrounding your triangle code with another <code>repeat</code> loop.</p>",
          "courseD_artist_nestedLoops2_b": "<p>Remember to put the <code>turn</code> block inside of the loop so that the artist turns after each triangle.</p>"
        },
        "courseD_artist_nestedLoops3_authored_hint": {
          "courseD_artist_nestedLoops3_a": "<p>Try using the <code>jump forward</code> block to get from the top of one square to the place where you will start the next. </p>\n<p>If your squares are 20 pixels tall and they are 20 pixels apart, how far do you need to jump?</p>",
          "courseD_artist_nestedLoops3_b": "<p>Don't forget to use a nested loop to solve this puzzle quickly. </p>",
          "courseD_artist_nestedLoops3_c": "<p>Start by using a <code>repeat</code> loop to make one square.  Next, repeat that square 8 times, jumping 40 pixels in between. </p>"
        },
        "courseD_artist_nestedLoops3_2018_authored_hint": {
          "courseD_artist_nestedLoops3_a": "<p>Try using the <code>jump forward</code> block to get from the top of one square to the place where you will start the next. </p>\n<p>If your squares are 20 pixels tall and they are 20 pixels apart, how far do you need to jump?</p>",
          "courseD_artist_nestedLoops3_b": "<p>Don't forget to use a nested loop to solve this puzzle quickly. </p>",
          "courseD_artist_nestedLoops3_c": "<p>Start by using a <code>repeat</code> loop to make one square.  Next, repeat that square 8 times, jumping 40 pixels in between. </p>"
        },
        "courseD_artist_nestedLoops4_authored_hint": {
          "courseD_artist_nestedLoops4_d": "<p>To solve this correctly, you'll need to move <strong>before</strong> you turn, or else your circles will be off by the tiniest little amount!</p>",
          "courseD_artist_nestedLoops4_a": "<p>To make a circle:</p>\n<ul>\n<li>Repeat 360 times<ul>\n<li>Move forward 1 pixel</li>\n<li>Turn left 1 degree</li>\n</ul>\n</li>\n</ul>",
          "courseD_artist_nestedLoops4_b": "<p>Don't forget to jump forward by 50 pixels between circles.</p>",
          "courseD_artist_nestedLoops4_c": "<p>Use a nested loop to draw your circles 4 times.</p>"
        },
        "courseD_artist_nestedLoops4_2018_authored_hint": {
          "courseD_artist_nestedLoops4_d": "<p>To solve this correctly, you'll need to move <strong>before</strong> you turn, or else your circles will be off by the tiniest little amount!</p>",
          "courseD_artist_nestedLoops4_a": "<p>To make a circle:</p>\n<ul>\n<li>Repeat 360 times<ul>\n<li>Move forward 1 pixel</li>\n<li>Turn left 1 degree</li>\n</ul>\n</li>\n</ul>",
          "courseD_artist_nestedLoops4_b": "<p>Don't forget to jump forward by 50 pixels between circles.</p>",
          "courseD_artist_nestedLoops4_c": "<p>Use a nested loop to draw your circles 4 times.</p>"
        },
        "courseD_artist_nestedLoops5_authored_hint": {
          "courseD_artist_nestedLoops5_a": "<p>To do this easily:</p>\n<ul>\n<li>repeat 4 times<ul>\n<li>make a circle</li>\n<li>jump forward 50 pixels</li>\n<li>turn right 90 degrees</li>\n</ul>\n</li>\n</ul>",
          "courseD_artist_nestedLoops5_b": "<p>To make a circle you'll need to set a repeat loop to repeat 360 times. Inside the loop, move forward 1 pixel and turn by 1 degree.</p>"
        },
        "courseD_artist_nestedLoops5_2018_authored_hint": {
          "courseD_artist_nestedLoops5_a": "<p>To do this easily:</p>\n<ul>\n<li>repeat 4 times<ul>\n<li>make a circle</li>\n<li>jump forward 50 pixels</li>\n<li>turn right 90 degrees</li>\n</ul>\n</li>\n</ul>",
          "courseD_artist_nestedLoops5_b": "<p>To make a circle you'll need to set a repeat loop to repeat 360 times. Inside the loop, move forward 1 pixel and turn by 1 degree.</p>"
        },
        "courseD_artist_nestedLoops6_authored_hint": {
          "courseD_artist_nestedLoops6_a": "<p>You'll need to repeat your outer loop 6 times now, instead of only 4.</p>",
          "courseD_artist_nestedLoops6_b": "<p>Now that you're breaking 360 degrees into six pieces instead of only four, you will only need to turn 60 degrees between circles. </p>"
        },
        "courseD_artist_nestedLoops7_authored_hint": {
          "courseD_artist_nestedLoops7_a": "<p>You'll need to use nested loops here. First, use a loop to draw a square. What will the outer loop do if the inner loop draws a square?</p>",
          "courseD_artist_nestedLoops7_b": "<p>Use a nested loop, where the inner loop is the code for a square.</p>\n<ul>\n<li>repeat 6 times<ul>\n<li>make square</li>\n<li>jump forward by <strong>50 pixels</strong></li>\n<li>turn <strong>60 degrees</strong></li>\n</ul>\n</li>\n</ul>"
        },
        "courseD_artist_nestedLoops7_2018_authored_hint": {
          "courseD_artist_nestedLoops7_a": "<p>You'll need to use nested loops here. First, use a loop to draw a square. What will the outer loop do if the inner loop draws a square?</p>",
          "courseD_artist_nestedLoops7_b": "<p>Use a nested loop, where the inner loop is the code for a square.</p>\n<ul>\n<li>repeat 6 times<ul>\n<li>make square</li>\n<li>jump forward by <strong>50 pixels</strong></li>\n<li>turn <strong>60 degrees</strong></li>\n</ul>\n</li>\n</ul>"
        },
        "courseD_artist_nestedLoops8_authored_hint": {
          "courseD_artist_nestedLoops8_a": "<p>To have 8 hexagons in your drawing, you'll need to turn <strong>45 degrees</strong> between each of them. Why? Because 360 degrees (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.</p>",
          "courseD_artist_nestedLoops8_b": "<p>If you're stuck, start by looking at the last puzzle, then change the things that are different.</p>",
          "courseD_artist_nestedLoops8_c": "<p>Use a nested loop:</p>\n<ul>\n<li>Repeat 8 times<ul>\n<li>draw a hexagon</li>\n<li>jump forward 50 pixels</li>\n<li>turn right 45 degrees</li>\n</ul>\n</li>\n</ul>"
        },
        "courseD_artist_nestedLoops8_2018_authored_hint": {
          "courseD_artist_nestedLoops8_a": "<p>To have 8 hexagons in your drawing, you'll need to turn <strong>45 degrees</strong> between each of them. Why? Because 360 degrees (a full turn around) divided by 8 (the number of hexagons) is 45 degrees.</p>",
          "courseD_artist_nestedLoops8_b": "<p>If you're stuck, start by looking at the last puzzle, then change the things that are different.</p>",
          "courseD_artist_nestedLoops8_c": "<p>Use a nested loop:</p>\n<ul>\n<li>Repeat 8 times<ul>\n<li>draw a hexagon</li>\n<li>jump forward 50 pixels</li>\n<li>turn right 45 degrees</li>\n</ul>\n</li>\n</ul>"
        },
        "courseD_artist_nestedLoops9_authored_hint": {
          "courseD_artist_nestedLoops9_a": "<p>Start by using a nested loop like you had before, but this time, make it with squares.</p>",
          "courseD_artist_nestedLoops9_b": "<p>Add a second set of nested loops to the end of the first set, but this time use triangles.</p>",
          "courseD_artist_nestedLoops9_c": "<p>Use two nested loops:</p>\n<ul>\n<li>Repeat 8 times<ul>\n<li>draw a square</li>\n<li>jump forward 50 pixels</li>\n<li>turn right by 45 degrees</li>\n</ul>\n</li>\n<li>Repeat 8 times<ul>\n<li>draw a triangle</li>\n<li>jump forward 50 pixels</li>\n<li>turn right by 45 degrees</li>\n</ul>\n</li>\n</ul>"
        },
        "courseD_artist_nestedLoops9_2018_authored_hint": {
          "courseD_artist_nestedLoops9_a": "<p>Start by using a nested loop like you had before, but this time, make it with squares.</p>",
          "courseD_artist_nestedLoops9_b": "<p>Add a second set of nested loops to the end of the first set, but this time use triangles.</p>",
          "courseD_artist_nestedLoops9_c": "<p>Use two nested loops:</p>\n<ul>\n<li>Repeat 8 times<ul>\n<li>draw a square</li>\n<li>jump forward 50 pixels</li>\n<li>turn right by 45 degrees</li>\n</ul>\n</li>\n<li>Repeat 8 times<ul>\n<li>draw a triangle</li>\n<li>jump forward 50 pixels</li>\n<li>turn right by 45 degrees</li>\n</ul>\n</li>\n</ul>"
        },
        "courseD_artist_nestedLoops9_predict1_authored_hint": {},
        "courseD_artist_nestedLoops9_predict1_2018_authored_hint": {},
        "courseD_artist_nestedLoopsFP_authored_hint": {
          "courseD_artist_nestedLoopsFP_a": "<p><img src=\"https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png\" width=\"200px\"/></p>\n<p>This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.</p>",
          "courseD_artist_nestedLoopsFP_b": "<p><img src=\"https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png\" width=\"200px\"/></p>\n<p>This image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).</p>",
          "courseD_artist_nestedLoopsFP_c": "<p><img src=\"https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png\" width=\"200px\"/></p>\n<p>This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.</p>"
        },
        "courseD_artist_nestedLoopsFP_2018_authored_hint": {
          "courseD_artist_nestedLoopsFP_a": "<p><img src=\"https://images.code.org/9257cbf61f238f5a749a949059731934-image-1478732674615.02.25.png\" width=\"200px\"/></p>\n<p>This image was made using a single nested loop that repeats a hexagon (with 50px sides) 15 times using a 48 degree turn.</p>",
          "courseD_artist_nestedLoopsFP_b": "<p><img src=\"https://images.code.org/31a85d4e5be5209240195d34b17a177b-image-1478732674613.32.53.png\" width=\"200px\"/></p>\n<p>This image was made using similar code to other levels you've done before, but with circles (repeat 360 times: move forward 1, turn 1 degree).</p>",
          "courseD_artist_nestedLoopsFP_c": "<p><img src=\"https://images.code.org/f654f1512860c6c8cf6795c961a8959c-image-1478732674616.02.58.png\" width=\"200px\"/></p>\n<p>This image was made using a single nested loop that repeats a pentagon (with 50px sides) 15 times using a 48 degree turn.</p>"
        },
        "courseD_artist_nestedLoopsPre1_authored_hint": {},
        "courseD_artist_nestedLoops_challenge1_authored_hint": {
          "courseD_artist_nestedLoops_challenge1_a": "<p>Start by changing the color to blue, then create an octagon with 50 pixel sides and 45 degree left turns.</p>",
          "courseD_artist_nestedLoops_challenge1_b": "<p>Add the code to change the color to green, and make a triangle with 50 pixel sides and 120 degree left turns.</p>",
          "courseD_artist_nestedLoops_challenge1_c": "<p>After you've drawn both shapes, you will need to jump forward by 50 pixels before you turn right by 90 degrees.</p>",
          "courseD_artist_nestedLoops_challenge1_d": "<p>Put all of your code inside of a <code>repeat 4 times</code> loop to finish it off.</p>"
        },
        "courseD_artist_nestedLoops_challenge1_2018_authored_hint": {
          "courseD_artist_nestedLoops_challenge1_a": "<p>Start by changing the color to blue, then create an octagon with 50 pixel sides and 45 degree left turns.</p>",
          "courseD_artist_nestedLoops_challenge1_b": "<p>Add the code to change the color to green, and make a triangle with 50 pixel sides and 120 degree left turns.</p>",
          "courseD_artist_nestedLoops_challenge1_c": "<p>After you've drawn both shapes, you will need to jump forward by 50 pixels before you turn right by 90 degrees.</p>",
          "courseD_artist_nestedLoops_challenge1_d": "<p>Put all of your code inside of a <code>repeat 4 times</code> loop to finish it off.</p>"
        },
        "courseD_artist_nestedLoops_challenge2_authored_hint": {
          "courseD_artist_nestedLoops_challenge2_a": "<p>To draw a regular octagon, the artist needs to turn 45 degrees 8 times.</p>",
          "courseD_artist_nestedLoops_challenge2_b": "<p>To draw a square, the artist needs to turn 90 degrees 4 times.</p>"
        },
        "courseD_artist_nestedLoops_challenge2_2018_authored_hint": {
          "courseD_artist_nestedLoops_challenge2_a": "<p>To draw a regular octagon, the artist needs to turn 45 degrees 8 times.</p>",
          "courseD_artist_nestedLoops_challenge2_b": "<p>To draw a square, the artist needs to turn 90 degrees 4 times.</p>"
        },
        "courseD_artist_project1_authored_hint": {
          "courseD_artist_project1_a": "<p>Use the drop down menu on the <code>turn</code> blocks to choose the angle you need!</p>",
          "courseD_artist_project1_b": "<p>Remember that <code>move forward</code> draws a line, while <code>jump forward</code> does not.</p>"
        },
        "courseD_artist_project1_2018_authored_hint": {
          "courseD_artist_project1_a": "<p>Use the drop down menu on the <code>turn</code> blocks to choose the angle you need!</p>",
          "courseD_artist_project1_b": "<p>Remember that <code>move forward</code> draws a line, while <code>jump forward</code> does not.</p>"
        },
        "courseD_artist_project1a_authored_hint": {
          "courseD_artist_project1a_a": "<p>This stair step uses a 76 degree turn and repeats 4 times.</p>\n<p><img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" /></p>",
          "courseD_artist_project1a_b": "<p>These patterns are a lot like the stair steps from other puzzles, but using a different angle.</p>"
        },
        "courseD_artist_project1a_2018_authored_hint": {
          "courseD_artist_project1a_a": "<p>This stair step uses a 76 degree turn and repeats 4 times.</p>\n<p><img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\" width=\"200px\" /></p>",
          "courseD_artist_project1a_b": "<p>These patterns are a lot like the stair steps from other puzzles, but using a different angle.</p>"
        },
        "courseD_artist_project2_authored_hint": {
          "courseD_artist_project2_a": "<p>Remember that <code>move forward</code> draws a line, while <code>jump forward</code> does not.</p>",
          "courseD_artist_project2_b": "<p>After you draw and move the first time, you can repeat the code by adding a loop around the outside.</p>"
        },
        "courseD_artist_project2Template_authored_hint": {},
        "courseD_artist_project2Template_2018_authored_hint": {},
        "courseD_artist_project2_2018_authored_hint": {
          "courseD_artist_project2_a": "<p>Remember that <code>move forward</code> draws a line, while <code>jump forward</code> does not.</p>",
          "courseD_artist_project2_b": "<p>After you draw and move the first time, you can repeat the code by adding a loop around the outside.</p>"
        },
        "courseD_artist_project2a_authored_hint": {
          "courseD_artist_project2a_a": "<p>This drawing was made by nesting a loop of 4 stairs and a <code>turn right 180 degrees</code> block inside of a <code>repeat 2 times</code> block.</p>\n<p><img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" /></p>"
        },
        "courseD_artist_project2a_2018_authored_hint": {
          "courseD_artist_project2a_a": "<p>This drawing was made by nesting a loop of 4 stairs and a <code>turn right 180 degrees</code> block inside of a <code>repeat 2 times</code> block.</p>\n<p><img src=\"https://images.code.org/bb24f9acee8afed2e119c1e920cb43f6-image-1495834479042.16.27.png\" width=\"200px\" /></p>"
        },
        "courseD_artist_project3_authored_hint": {
          "courseD_artist_project3_a": "<p>Use the drop down menu on the <code>turn</code> blocks to choose the angle you need!</p>",
          "courseD_artist_project3_b": "<p>Try nested loops!</p>\n<p>Use the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  </p>\n<ul>\n<li>Try 72 degrees if you are repeating the outer loop 5 times</li>\n<li>Try 60 degrees if you are repeating the outer loop 6 times</li>\n</ul>"
        },
        "courseD_artist_project3_2018_authored_hint": {
          "courseD_artist_project3_a": "<p>Use the drop down menu on the <code>turn</code> blocks to choose the angle you need!</p>",
          "courseD_artist_project3_b": "<p>Try nested loops!</p>\n<p>Use the code that you created to draw a line of shapes and nest it inside of another loop.  At the bottom, before the outside loop ends, add a block that will turn Elsa around.  </p>\n<ul>\n<li>Try 72 degrees if you are repeating the outer loop 5 times</li>\n<li>Try 60 degrees if you are repeating the outer loop 6 times</li>\n</ul>"
        },
        "courseD_artist_project3a_authored_hint": {
          "courseD_artist_project3a_a": "<p>You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?</p>"
        },
        "courseD_artist_project3a_2018_authored_hint": {
          "courseD_artist_project3a_a": "<p>You can choose different amounts to rotate your shape! What about 18 times with a 20 degree turn in between?</p>"
        },
        "courseD_artist_project4_authored_hint": {
          "courseD_artist_project4_a": "<p>Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:</p>\n<p><img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" /></p>\n<p>Here's a set of hexagons with squares:</p>\n<p><img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" /></p>",
          "courseD_artist_project4_b": "<p>To try this, draw your first snowflake, turn, then draw a second snowflake.</p>"
        },
        "courseD_artist_project4_2018_authored_hint": {
          "courseD_artist_project4_a": "<p>Here is the pentagon snowflake with a turn of 36 degrees before a triangle snowflake:</p>\n<p><img src=\"https://images.code.org/2ba023db9404f948fab655bfa7923160-image-1495822526223.14.13.png\" width=\"200px\" /></p>\n<p>Here's a set of hexagons with squares:</p>\n<p><img src=\"https://images.code.org/4d77462f3d07df6f1f5f2dc25e5d2b70-image-1495822526224.15.08.png\" width=\"200px\" /></p>",
          "courseD_artist_project4_b": "<p>To try this, draw your first snowflake, turn, then draw a second snowflake.</p>"
        },
        "courseD_artist_project4a_authored_hint": {
          "courseD_artist_project4a_a": "<p>Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)</p>\n<p><img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" /></p>"
        },
        "courseD_artist_project4a_2018_authored_hint": {
          "courseD_artist_project4a_a": "<p>Here are two different lengths of snowflake, drawn one after another (with a 30 degree turn in between.)</p>\n<p><img src=\"https://images.code.org/45dedb51d89d3e5d0a88fe65ecbd7d7b-image-1495833855890.22.39.png\" width=\"200px\" /></p>"
        },
        "courseD_artist_project5_authored_hint": {
          "courseD_artist_project4_a": "<p>Lines of 2 hexagons and 4 triangles:</p>\n<p><img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" /></p>"
        },
        "courseD_artist_project5_2018_authored_hint": {
          "courseD_artist_project4_a": "<p>Lines of 2 hexagons and 4 triangles:</p>\n<p><img src=\"https://images.code.org/37ca9779bafd2ccc5cc801f82358008e-image-1495823683964.34.09.png\" width=\"200px\" /></p>"
        },
        "courseD_artist_projectTemplate_authored_hint": {},
        "courseD_artist_projectTemplate_2018_authored_hint": {},
        "courseD_artist_project_embedded_authored_hint": {},
        "courseD_artist_ramp11_authored_hint": {
          "courseD_artist_ramp11a": "<p>To draw a side, use the <code>move forward by 100 pixels</code> block, and change the 100 to a 200.</p>",
          "courseD_artist_ramp11b": "<p>To draw 4 sides, put a <code>move forward by 200 pixels</code> block inside of a repeat loop and make sure the loop is set to draw 4 times.</p>\n<p>Don't forget to turn afterward!</p>",
          "courseD_artist_ramp11_c": "<p>Remember to put the <code>turn</code> block inside of your loop!</p>"
        },
        "courseD_artist_ramp12_authored_hint": {
          "courseD_artist_ramp12_a": "<p>You can either draw the square first, then the triangle, or do it the other way around!</p>",
          "courseD_artist_ramp12_b": "<p>Try splitting the problem into 2 parts, and using 2 loops.</p>",
          "courseD_artist_ramp12_c": "<p>You can use the drop down menu on the <code>turn</code> blocks to see which angle you need!</p>"
        },
        "courseD_bee_conditionals1_authored_hint": {
          "courseD_bee_conditionals1_a": "<p>You will need to use an <code>if</code> block to check to see if there is a flower beneath the cloud before you try to get nectar.</p>"
        },
        "courseD_bee_conditionals10_authored_hint": {},
        "courseD_bee_conditionals10_2018_authored_hint": {},
        "courseD_bee_conditionals1_predict1_authored_hint": {
          "courseD_bee_conditionals1_a": "<p>You will need to use an <code>if</code> block to check to see if there is a flower beneath the cloud before you try to get nectar.</p>"
        },
        "courseD_bee_conditionals1_predict1_2018_authored_hint": {
          "courseD_bee_conditionals1_a": "<p>You will need to use an <code>if</code> block to check to see if there is a flower beneath the cloud before you try to get nectar.</p>"
        },
        "courseD_bee_conditionals2_authored_hint": {
          "courseD_bee_conditionals2_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals2_a": "<p>Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an <code>if</code> statement.</p>",
          "courseD_bee_conditionals2_b": "<p>You can use a <code>repeat</code> loop or a <code>while path ahead</code> to move through this maze.</p>",
          "courseD_bee_conditionals2_c": "<p>You don't have to check for honeycombs, there will only be flowers or blank spaces under the clouds.</p>",
          "courseD_bee_conditionals2_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals2_2018_authored_hint": {
          "courseD_bee_conditionals2_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals2_a": "<p>Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an <code>if</code> statement.</p>",
          "courseD_bee_conditionals2_b": "<p>You can use a <code>repeat</code> loop or a <code>while path ahead</code> to move through this maze.</p>",
          "courseD_bee_conditionals2_c": "<p>You don't have to check for honeycombs, there will only be flowers or blank spaces under the clouds.</p>",
          "courseD_bee_conditionals2_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals2_test_authored_hint": {
          "courseD_bee_conditionals2_aa": "<p>Need help getting started?  Here is a little hint video.</p>",
          "courseD_bee_conditionals2_a": "<p>Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an <code>if</code> statement.</p>",
          "courseD_bee_conditionals2_b": "<p>You can use a <code>repeat</code> loop or a <code>while path ahead</code> to move through this maze.</p>",
          "courseD_bee_conditionals2_c": "<p>You don't have to check for honeycombs, there will only be flowers or blank spaces under the clouds.</p>",
          "courseD_bee_conditionals2_d": "<p>Need help finishing things up?  Watch this hint video.</p>"
        },
        "courseD_bee_conditionals3_authored_hint": {
          "courseD_bee_conditionals3_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals3_a": "<p>Be sure to use an <code>if</code> statement to check each space to see if it has either a flower or nothing.</p>",
          "courseD_bee_conditionals3_b": "<p>You can use a <code>repeat</code> loop or a <code>while</code> loop to keep the bee moving forward. Use whichever one you like!</p>",
          "courseD_bee_conditionals3_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>",
          "courseD_bee_conditionals3_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals3_2018_authored_hint": {
          "courseD_bee_conditionals3_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals3_a": "<p>Be sure to use an <code>if</code> statement to check each space to see if it has either a flower or nothing.</p>",
          "courseD_bee_conditionals3_b": "<p>You can use a <code>repeat</code> loop or a <code>while</code> loop to keep the bee moving forward. Use whichever one you like!</p>",
          "courseD_bee_conditionals3_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>",
          "courseD_bee_conditionals3_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals4_authored_hint": {
          "courseD_bee_conditionals4_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals4_a": "<p>You can still treat every space as if there is a cloud over it, even though you can see the whole path.</p>",
          "courseD_bee_conditionals4_b": "<p>Use an <code>if</code> statement inside your loop to check each space for nectar. </p>",
          "courseD_bee_conditionals4_c": "<p>Using <xml><block type=\"maze_untilBlocked\"/></xml> block, you should move forward and check for a flower. If there is a flower, what should the bee do?</p>",
          "courseD_bee_conditionals4_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals4_2018_authored_hint": {
          "courseD_bee_conditionals4_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals4_a": "<p>You can still treat every space as if there is a cloud over it, even though you can see the whole path.</p>",
          "courseD_bee_conditionals4_b": "<p>Use an <code>if</code> statement inside your loop to check each space for nectar. </p>",
          "courseD_bee_conditionals4_c": "<p>Using <xml><block type=\"maze_untilBlocked\"/></xml> block, you should move forward and check for a flower. If there is a flower, what should the bee do?</p>",
          "courseD_bee_conditionals4_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals5_authored_hint": {
          "courseD_bee_conditionals5_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals5_a": "<p>Think of every side of the rectangular path as a path by itself. Set up a nested loop with a <code>repeat</code> block on the outside and a <code>while there is a path ahead</code> loop on the inside. How many paths does the bee need to buzz down if the bee needs to buzz down every side with a flower?</p>",
          "courseD_bee_conditionals5_c": "<p>There are 3 sides of the rectangle with flowers, so the code needs to <code>repeat 3 times</code>. In every repeat, the bee will need to continue along the path, <code>while there is a path ahead</code>. To continue down the path, the bee will need to <code>move forward</code>. While on the path, the bee needs to check for a flower. <code>if there is a flower</code>, the bee should <code>get nectar</code>.</p>",
          "courseD_bee_conditionals5_b": "<p>Inside the <code>while there is a path ahead</code> block you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?</p>",
          "courseD_bee_conditionals5_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals5_2018_authored_hint": {
          "courseD_bee_conditionals5_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals5_a": "<p>Think of every side of the rectangular path as a path by itself. Set up a nested loop with a <code>repeat</code> block on the outside and a <code>while path ahead</code> loop on the inside. How many paths does the bee need to buzz down if the bee needs to buzz down every side with a flower?</p>",
          "courseD_bee_conditionals5_c": "<p>There are 3 sides of the rectangle with flowers, so the code needs to <code>repeat 3 times</code>. In every repeat, the bee will need to continue along the path, <code>while path ahead</code>. To continue down the path, the bee will need to <code>move forward</code>. While on the path, the bee needs to check for a flower. <code>if there is a flower</code>, the bee should <code>get nectar</code>.</p>",
          "courseD_bee_conditionals5_b": "<p>Inside the <code>while path ahead</code> block you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?</p>",
          "courseD_bee_conditionals5_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals6_authored_hint": {
          "courseD_bee_conditionals6_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals6_a": "<p>Make sure to use an <code>if</code> statement to check for honeycomb beneath each cloud.</p>",
          "courseD_bee_conditionals6_b": "<p>In this case, you do not need to check for flowers under the clouds.</p>",
          "courseD_bee_conditionals6_c": "<p>Is there a loop you can use to make your code simpler?</p>",
          "courseD_bee_conditionals6_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals6_2018_authored_hint": {
          "courseD_bee_conditionals6_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals6_a": "<p>Make sure to use an <code>if</code> statement to check for honeycomb beneath each cloud.</p>",
          "courseD_bee_conditionals6_b": "<p>In this case, you do not need to check for flowers under the clouds.</p>",
          "courseD_bee_conditionals6_c": "<p>Is there a loop you can use to make your code simpler?</p>",
          "courseD_bee_conditionals6_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals7_authored_hint": {
          "courseD_bee_conditionals7_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals7_a": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if/else</code>) to solve the challenge.</p>",
          "courseD_bee_conditionals7_b": "<p>If there is not a flower under the cloud, there must be a honeycomb, so you don't need to think about the case of an empty space.</p>",
          "courseD_bee_conditionals7_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals7_2018_authored_hint": {
          "courseD_bee_conditionals7_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals7_a": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if/else</code>) to solve the challenge.</p>",
          "courseD_bee_conditionals7_b": "<p>If there is not a flower under the cloud, there must be a honeycomb, so you don't need to think about the case of an empty space.</p>",
          "courseD_bee_conditionals7_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals7_predict2_authored_hint": {
          "courseD_bee_conditionals7_a": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if/else</code>) to solve the challenge.</p>"
        },
        "courseD_bee_conditionals7_predict2_2018_authored_hint": {
          "courseD_bee_conditionals7_a": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if/else</code>) to solve the challenge.</p>"
        },
        "courseD_bee_conditionals8_authored_hint": {
          "courseD_bee_conditionals8_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals8_a": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>",
          "courseD_bee_conditionals8_b": "<p>This puzzle is tricky, because you can't check blank squares, nectar, <em>and</em> honey with just one single conditional.</p>\n<p>Only check for nectar and honey at the end of your path.</p>",
          "courseD_bee_conditionals8_c": "<p>How can you make sure to travel to the end every path, no matter how long the path is?</p>",
          "courseD_bee_conditionals8_d": "<p>Even though there is a cloud right in front of you, you don't have to visit it first. Try starting with the cloud in the bottom right of the square.</p>\n<p><img src=\"https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png\"></p>",
          "courseD_bee_conditionals8_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals8_2018_authored_hint": {
          "courseD_bee_conditionals8_hintVid1": "<p>Need help getting started?  Watch the video!</p>",
          "courseD_bee_conditionals8_a": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>",
          "courseD_bee_conditionals8_b": "<p>This puzzle is tricky, because you can't check blank squares, nectar, <em>and</em> honey with just one single conditional.</p>\n<p>Only check for nectar and honey at the end of your path.</p>",
          "courseD_bee_conditionals8_c": "<p>How can you make sure to travel to the end every path, no matter how long the path is?</p>",
          "courseD_bee_conditionals8_d": "<p>Even though there is a cloud right in front of you, you don't have to visit it first. Try starting with the cloud in the bottom right of the square.</p>\n<p><img src=\"https://images.code.org/166e71553edf23bf13ecd290a8e7e721-image-1501013509361.09.09.png\"></p>",
          "courseD_bee_conditionals8_hintVid2": "<p>Watch this video for help solving this puzzle.</p>"
        },
        "courseD_bee_conditionals9_authored_hint": {},
        "courseD_bee_conditionals9_2018_authored_hint": {},
        "courseD_bee_conditionals_challenge1_authored_hint": {
          "courseD_bee_conditionals_challenge1_a": "<p>Can you find a path that reaches every flower and honeycomb without hitting any trees? The best path is a spiral.</p>",
          "courseD_bee_conditionals_challenge1_b": "<p>In this puzzle, each space could have a flower, a honey comb, or nothing.  That means you can repeat your <code>if/else</code> conditional at each square.</p>"
        },
        "courseD_bee_conditionals_challenge1_2018_authored_hint": {
          "courseD_bee_conditionals_challenge1_a": "<p>Can you find a path that reaches every flower and honeycomb without hitting any trees? The best path is a spiral.</p>",
          "courseD_bee_conditionals_challenge1_b": "<p>In this puzzle, each space could have a flower, a honey comb, or nothing.  That means you can repeat your <code>if/else</code> conditional at each square.</p>"
        },
        "courseD_bee_conditionals_challenge2_authored_hint": {
          "courseD_bee_conditionals_challenge1_b": "<p>Just like the <code>if at flower</code> blocks, the code inside a <code>while nectar &gt; 0</code> will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:</p>\n<xml>  <block type=\"bee_whileNectarAmount\">\n    <title name=\"ARG1\">nectarRemaining</title>\n    <title name=\"OP\">&gt;</title>\n    <title name=\"ARG2\">0</title>                    <statement name=\"DO\">\n                      <block type=\"maze_nectar\"/>\n                    </statement>\n  </block></xml>"
        },
        "courseD_bee_conditionals_challenge2_2018_authored_hint": {
          "courseD_bee_conditionals_challenge1_b": "<p>Just like the <code>if at flower</code> blocks, the code inside a <code>while nectar &gt; 0</code> will only run if the bee is at a flower. The difference is that the code inside will run over and over until there is no nectar left.  Try this pattern:</p>\n<xml>  <block type=\"bee_whileNectarAmount\">\n    <title name=\"ARG1\">nectarRemaining</title>\n    <title name=\"OP\">&gt;</title>\n    <title name=\"ARG2\">0</title>                    <statement name=\"DO\">\n                      <block type=\"maze_nectar\"/>\n                    </statement>\n  </block></xml>"
        },
        "courseD_bee_conditionals_challenge3_authored_hint": {
          "courseD_bee_conditionals_challenge1_b": "<p>Just like the <code>if at flower</code> blocks, the code inside a <code>while nectar &gt; 0</code> will only run if the bee is at a flower. The main differences is that the code inside will run repetitively until there is no nectar left.  Try this pattern:</p>\n<xml>  <block type=\"bee_whileNectarAmount\">\n    <title name=\"ARG1\">nectarRemaining</title>\n    <title name=\"OP\">&gt;</title>\n    <title name=\"ARG2\">0</title>                    <statement name=\"DO\">\n                      <block type=\"maze_nectar\"/>\n                    </statement>\n  </block></xml>"
        },
        "courseD_bee_debugging1_authored_hint": {
          "courseD_bee_debugging1_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_bee_debugging1_b": "<p>Do you see any patterns that could be made more simple using a <code>repeat</code> loop?</p>"
        },
        "courseD_bee_debugging2_authored_hint": {
          "courseD_bee_debugging2_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_bee_debugging2_b": "<p>Do you see a pattern?<br>Try using nested loops to solve this puzzle.</p>\n<p><img src=\"https://images.code.org/72fbb8a06937479599b12804f990a0f3-image-1501012383369.50.27.png\"></p>"
        },
        "courseD_bee_debugging3_authored_hint": {
          "courseD_bee_debugging3_a": "<p>Is there any place where the bee does something that doesn't make sense? What happens when you change those blocks?</p>",
          "courseD_bee_debugging3_b": "<p>Try simplifying the code using nested loops.</p>"
        },
        "courseD_bee_debugging4_authored_hint": {
          "courseD_bee_debugging4_a": "<p>Try using the debugging process a couple of times in a row. </p>\n<p>What causes the first problem?</p>\n<p>Once that problem is fixed, what goes wrong?</p>",
          "courseD_bee_debugging4_b": "<p>If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. </p>\n<p>Don't forget to point out the direction of the turns!</p>"
        },
        "courseD_bee_debugging5_authored_hint": {
          "courseD_bee_debugging5_a": "<p>Start by looking at just the first loop.</p>\n<p>What does it do?</p>\n<p>What is it supposed to do?</p>\n<p>What does that tell you?</p>",
          "courseD_bee_debugging5_b": "<p>Once you have the first loop the way you want it, what is left over in your code?</p>",
          "courseD_bee_debugging5_c": "<p>Try wrapping the leftover loop around the rest of your completed code.  Does is work now?</p>\n<p>If not, what is still going wrong?</p>"
        },
        "courseD_bee_debugging6_authored_hint": {
          "courseD_bee_debugging6_a": "<p>Try running through the code using the \"Step\" button.  Is everything good at the first step?</p>\n<p>How about the second?</p>\n<p>Where do things go wrong?</p>",
          "courseD_bee_debugging6_b": "<p>It looks like all of the right steps are here, you just need more of them.  How can you repeat the <code>get nectar</code> and <code>make honey</code> actions multiple times?</p>"
        },
        "courseD_bee_debugging7_authored_hint": {
          "courseD_bee_debugging7_a": "<p>Try using the \"Step\" button.  Is everything right at the first step?  </p>\n<p>How about the second?  </p>\n<p>Where does it go wrong?  </p>",
          "courseD_bee_debugging7_b": "<p>If something needs to happen several times, try adding a <code>repeat</code> loop.</p>"
        },
        "courseD_bee_debugging8_authored_hint": {
          "courseD_bee_debugging8_a": "<p>Do you see a pattern that you can simplify with a loop?</p>",
          "courseD_bee_debugging8_b": "<p>Try using a nested loop to make this code shorter.</p>"
        },
        "courseD_bee_debugging9_authored_hint": {
          "courseD_bee_debugging9_a": "<p>There are several ways to solve this problem...but they all involve turns!</p>",
          "courseD_bee_debugging9_b": "<p>Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.</p>",
          "courseD_bee_debugging9_c": "<p>Envision one of these stair steps to the flowers.   </p>\n<p><img src=\"https://images.code.org/d3dfd710961b9ff8571816a97d76ae46-image-1501012931437.59.18.png\"></p>\n<p>Can you build either of these with what's in the workspace and toolbox?</p>"
        },
        "courseD_bee_debugging9_predict1_authored_hint": {},
        "courseD_bee_debugging_challenge1_authored_hint": {
          "courseD_bee_debugging_challenge1_a": "<p>Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?</p>",
          "courseD_bee_debugging_challenge1_b": "<p>On the way back, have the bee follow the same pattern. How much honey does the bee need to make each time it moves over a honey comb?</p>",
          "courseD_bee_debugging_challenge1_c": "<p>After the bee makes it to the bottom row, have it repeat these commands:</p>\n<ul>\n<li>Repeat 2 times:<ul>\n<li>Move forward</li>\n<li>Make 3 honey</li>\n</ul>\n</li>\n<li>Move backward</li>\n</ul>"
        },
        "courseD_bee_debugging_challenge1_2018_authored_hint": {
          "courseD_bee_debugging_challenge1_a": "<p>Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?</p>",
          "courseD_bee_debugging_challenge1_b": "<p>On the way back, have the bee follow the same pattern. How much honey does the bee need to make each time it moves over a honey comb?</p>",
          "courseD_bee_debugging_challenge1_c": "<p>After the bee makes it to the bottom row, have it repeat these commands:</p>\n<ul>\n<li>Repeat 2 times:<ul>\n<li>Move forward</li>\n<li>Make 3 honey</li>\n</ul>\n</li>\n<li>Move backward</li>\n</ul>"
        },
        "courseD_bee_debugging_challenge1a_authored_hint": {
          "courseD_bee_debugging_challenge1_a": "<p>Why does the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?</p>",
          "courseD_bee_debugging_challenge1_b": "<p>To solve this puzzle, have the bee follow the same pattern to make honey that it does when collecting nectar.</p>",
          "courseD_bee_debugging_challenge1_c": "<p>After the bee makes it to the bottom row, have it repeat these commands:</p>\n<xml><block type=\"controls_repeat\">\n                    <title name=\"TIMES\">2</title>\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                        <next>\n                          <block type=\"maze_honey\"/>\n                        </next>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveBackward</title>\n                      </block>\n                    </next>\n                  </block></xml>"
        },
        "courseD_bee_debugging_challenge2_authored_hint": {
          "courseD_bee_debugging_challenge1_a": "<p>Why the first half of this program work? Think about why the bee needs to move backward. How much nectar does the bee collect each time it moves over a flower?</p>",
          "courseD_bee_debugging_challenge1_b": "<p>On the way back, have the bee follow the same pattern. How much honey does the bee need to make each time it moves over a honey comb?</p>",
          "courseD_bee_debugging_challenge1_c": "<p>After the bee makes it to the bottom row, have it repeat these commands:</p>\n<ul>\n<li>Repeat 2 times:<ul>\n<li>Move forward</li>\n<li>Make 3 honey</li>\n</ul>\n</li>\n<li>Move backward</li>\n</ul>"
        },
        "courseD_bee_nestedLoops1_authored_hint": {
          "courseD_bee_nestedLoops1_a": "<p>Not working?  Try using the \"Step\" button to see what happens line by line.</p>",
          "courseD_bee_nestedLoops1_b": "<p>Try writing code for one side of the square first. Can you loop this to get all of the nectar?</p>",
          "courseD_bee_nestedLoops1_c": "<p>Remember to use the <code>get nectar</code> block once you are on a square with a flower.</p>"
        },
        "courseD_bee_nestedLoops1_2018_authored_hint": {
          "courseD_bee_nestedLoops1_a": "<p>Not working?  Try using the \"Step\" button to see what happens line by line.</p>",
          "courseD_bee_nestedLoops1_b": "<p>Try writing code for one side of the square first. Can you loop this to get all of the nectar?</p>",
          "courseD_bee_nestedLoops1_c": "<p>Remember to use the <code>get nectar</code> block once you are on a square with a flower.</p>"
        },
        "courseD_bee_nestedLoops1a_authored_hint": {
          "courseD_bee_nestedLoops1_a": "<p>Not working?  Try using the \"Step\" button to see what happens line by line.</p>",
          "courseD_bee_nestedLoops1_c": "<p>Remember to use the <code>get nectar</code> block once you are on a square with a flower.</p>"
        },
        "courseD_bee_nestedLoops1a_2018_authored_hint": {
          "courseD_bee_nestedLoops1_a": "<p>Not working?  Try using the \"Step\" button to see what happens line by line.</p>",
          "courseD_bee_nestedLoops1_c": "<p>Remember to use the <code>get nectar</code> block once you are on a square with a flower.</p>"
        },
        "courseD_bee_nestedLoops2_authored_hint": {
          "courseD_bee_nestedLoops2_a": "<p>To solve this puzzle, you will need to nest one <code>repeat</code> loop inside of another.</p>",
          "courseD_bee_nestedLoops2_b": "<p>Can't figure out where to put the loops? Try writing the code on paper step-by-step and look for a pattern.</p>",
          "courseD_bee_nestedLoops2_c": "<p>Remember you can put more than one block inside of a loop.</p>"
        },
        "courseD_bee_nestedLoops2_2018_authored_hint": {
          "courseD_bee_nestedLoops2_a": "<p>To solve this puzzle, you will need to nest one <code>repeat</code> loop inside of another.</p>",
          "courseD_bee_nestedLoops2_b": "<p>Can't figure out where to put the loops? Try writing the code on paper step-by-step and look for a pattern.</p>",
          "courseD_bee_nestedLoops2_c": "<p>Remember you can put more than one block inside of a loop.</p>"
        },
        "courseD_bee_nestedLoops2_predict1_authored_hint": {},
        "courseD_bee_nestedLoops2_predict1_2018_authored_hint": {},
        "courseD_bee_nestedLoops3_authored_hint": {
          "grade4_bee_nestedLoops1_a": "<p>If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see.</p>"
        },
        "courseD_bee_nestedLoops5_authored_hint": {
          "grade4_bee_nestedLoops4_a": "<p>Try building your code line by line and see if you can spot the places where a repeat will make the code shorter!</p>",
          "grade4_bee_nestedLoops4_b": "<p>You will need a nested loop to move forward and get nectar, but only a single loop to collect honey at the end.</p>\n<p>Altogether, you should be using 3 loops.</p>"
        },
        "courseD_bee_nestedLoops6_authored_hint": {},
        "courseD_bee_nestedLoops6_2018_authored_hint": {
          "courseD_maze_nestedLoops6_a": "<p>If you are stuck, try writing out the code out on paper without loops first and look for patterns.</p>",
          "courseD_maze_nestedLoops6_b": "<p>Nesting <code>repeat</code> loops can help decrease the number of blocks used.</p>",
          "courseD_maze_nestedLoops6_c": "<p>It will take two sets of nested <code>repeat</code> loops to solve this puzzle.</p>"
        },
        "courseD_bee_nestedLoops7_authored_hint": {
          "courseD_bee_nestedLoops7_a": "<p>You will need to repeat <code>get nectar</code> inside of another <code>repeat</code> that also has the <code>move forward</code> block inside of it.</p>",
          "courseD_bee_nestedLoops7_b": "<p>You will need to use all three of the available <code>repeat</code> blocks to solve this puzzle.</p>",
          "courseD_bee_nestedLoops7_c": "<p>Nest your blocks three deep, like this:</p>\n<ul>\n<li>repeat 4<ul>\n<li>repeat 3<ul>\n<li>repeat 12<ul>\n<li>get nectar</li>\n</ul>\n</li>\n<li>move forward</li>\n</ul>\n</li>\n<li>turn right</li>\n</ul>\n</li>\n</ul>"
        },
        "courseD_bee_nestedLoops7_2018_authored_hint": {
          "courseD_bee_nestedLoops7_a": "<p>You will need to repeat <code>get nectar</code> inside of another <code>repeat</code> that also has the <code>move forward</code> block inside of it.</p>",
          "courseD_bee_nestedLoops7_b": "<p>You will need to use all three of the available <code>repeat</code> blocks to solve this puzzle.</p>",
          "courseD_bee_nestedLoops7_c": "<p>Nest your blocks three deep, like this:</p>\n<ul>\n<li>repeat 4<ul>\n<li>repeat 3<ul>\n<li>repeat 12<ul>\n<li>get nectar</li>\n</ul>\n</li>\n<li>move forward</li>\n</ul>\n</li>\n<li>turn right</li>\n</ul>\n</li>\n</ul>"
        },
        "courseD_bee_nestedLoops8_authored_hint": {},
        "courseD_bee_nestedLoops8_2018_authored_hint": {},
        "courseD_bee_nestedLoops9_authored_hint": {},
        "courseD_bee_nestedLoops9_2018_authored_hint": {},
        "courseD_bee_nestedLoops9_predict2_authored_hint": {},
        "courseD_bee_nestedLoops9_predict2_2018_authored_hint": {},
        "courseD_bee_nested_loops_challenge1_authored_hint": {
          "courseD_bee_nested_loops_challenge2_a": "<p>Don't forget that you can <code>repeat</code> a single command or a longer pattern. You can even <code>repeat</code> a <code>repeat</code> block!</p>",
          "courseD_bee_nested_loops_challenge2_b": "<p>To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the <em>entire</em> cave!</p>",
          "courseD_bee_nested_loops_challenge2_c": "<p>The shortest program that reaches all the treasure uses only one <code>collect</code> block and two turns.</p>"
        },
        "courseD_bee_nested_loops_challenge2_authored_hint": {
          "courseD_bee_nested_loops_challenge2_a": "<p>Don't forget that you can <code>repeat</code> a single command or a longer pattern. You can even <code>repeat</code> a <code>repeat</code> block!</p>",
          "courseD_bee_nested_loops_challenge2_b": "<p>To get all 4 gems, first use a loop to move away from the center. Then turn left or right and use a nested loop to move from the first pile of treasure to the second.</p>",
          "courseD_bee_nested_loops_challenge2_c": "<p>If you repeat the nested loop enough times, the collector will move around the <em>entire</em> cave!</p>",
          "courseD_bee_nested_loops_challenge2_d": "<p>The shortest program that reaches all the treasure uses only one <code>collect</code> block and two turns.</p>"
        },
        "courseD_bounce_events10s_authored_hint": {
          "courseD_bounce_events10s_a": "<p>You should have both of these events in your code:</p>\n<xml><block type=\"bounce_whenBallInGoal\" deletable=\"false\"><next><block type=\"bounce_playSound\"><title name=\"SOUND\">swish</title><next><block type=\"bounce_incrementPlayerScore\"></block></next></block></next></block><block type=\"bounce_whenBallMissesPaddle\" deletable=\"false\"><next><block type=\"bounce_playSound\"><title name=\"SOUND\">whistle</title><next><block type=\"bounce_incrementOpponentScore\"></block></next></block></next></block</xml>"
        },
        "courseD_bounce_events10s_2018_authored_hint": {
          "courseD_bounce_events10s_a": "<p>You should have both of these events in your code:</p>\n<xml><block type=\"bounce_whenBallInGoal\" deletable=\"false\"><next><block type=\"bounce_playSound\"><title name=\"SOUND\">swish</title><next><block type=\"bounce_incrementPlayerScore\"></block></next></block></next></block><block type=\"bounce_whenBallMissesPaddle\" deletable=\"false\"><next><block type=\"bounce_playSound\"><title name=\"SOUND\">whistle</title><next><block type=\"bounce_incrementOpponentScore\"></block></next></block></next></block</xml>"
        },
        "courseD_bounce_events11s_authored_hint": {
          "courseD_bounce_events11s_a": "<p>You will need to throw a ball when the game starts, when you hit the basket, and when the hand misses the ball.</p>"
        },
        "courseD_bounce_events11s_2018_authored_hint": {
          "courseD_bounce_events11s_a": "<p>You will need to throw a ball when the game starts, when you hit the basket, and when the hand misses the ball.</p>"
        },
        "courseD_bounce_events12s_authored_hint": {
          "courseD_bounce_events12s_a": "<p>You can speed up the basketball or the hand by attaching those blocks to the <code>when run</code> event.</p>",
          "courseD_bounce_events12s_b": "<p>Try making each shot worth 2 points and changing the team logo to the one from your home town!</p>"
        },
        "courseD_bounce_events12s_2018_authored_hint": {
          "courseD_bounce_events12s_a": "<p>You can speed up the basketball or the hand by attaching those blocks to the <code>when run</code> event.</p>",
          "courseD_bounce_events12s_b": "<p>Try making each shot worth 2 points and changing the team logo to the one from your home town!</p>"
        },
        "courseD_bounce_events1s_authored_hint": {
          "courseD_bounce_events1s_a": "<p>You need to add the <code>move left</code> block to the <code>when left arrow</code> event to make this game work:</p>\n <xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n\n   </xml>",
          "courseD_bounce_events1s_b": "<p>Don't forget to press \"Run\" and get the hand to the basket in order to solve this puzzle.</p>"
        },
        "courseD_bounce_events1s_2018_authored_hint": {
          "courseD_bounce_events1s_a": "<p>You need to add the <code>move left</code> block to the <code>when left arrow</code> event to make this game work:</p>\n <xml> <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n\n   </xml>",
          "courseD_bounce_events1s_b": "<p>Don't forget to press \"Run\" and get the hand to the basket in order to solve this puzzle.</p>"
        },
        "courseD_bounce_events2s_authored_hint": {
          "courseD_bounce_events2s_a": "<p>You will need to have two sets of <code>move</code> events coded for this to work:</p>\n<xml>\n  <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n  <block type=\"bounce_whenRight\" deletable=\"false\" x=\"180\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveRight\"/>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_bounce_events2s_2018_authored_hint": {
          "courseD_bounce_events2s_a": "<p>You will need to have two sets of <code>move</code> events coded for this to work:</p>\n<xml>\n  <block type=\"bounce_whenLeft\" deletable=\"false\" x=\"20\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveLeft\"/>\n    </next>\n  </block>\n  <block type=\"bounce_whenRight\" deletable=\"false\" x=\"180\" y=\"20\">\n    <next>\n      <block type=\"bounce_moveRight\"/>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_bounce_events5s_authored_hint": {
          "courseD_bounce_events5s_a": "<p>You do not need to move the hand to solve this puzzle.</p>",
          "courseD_bounce_events5s_b": "<p>Make sure you have added this code to your workspace:</p>\n<xml>  <block type=\"bounce_whenPaddleCollided\" deletable=\"false\"> <next> <block type=\"bounce_bounceBall\"/></next></block></xml>"
        },
        "courseD_bounce_events5s_2018_authored_hint": {
          "courseD_bounce_events5s_a": "<p>You do not need to move the hand to solve this puzzle.</p>",
          "courseD_bounce_events5s_b": "<p>Make sure you have added this code to your workspace:</p>\n<xml>  <block type=\"bounce_whenPaddleCollided\" deletable=\"false\"> <next> <block type=\"bounce_bounceBall\"/></next></block></xml>"
        },
        "courseD_bounce_events6s_authored_hint": {
          "courseD_bounce_events6s_a": "<p>Do you have an event that looks like this?</p>\n<xml><block type=\"bounce_whenWallCollided\" deletable=\"false\"><next><block type=\"bounce_bounceBall\"></block></next></block></block></xml>",
          "courseD_bounce_events6s_b": "<p>If you've written the code correctly, you don't have to move the hand to win.</p>"
        },
        "courseD_bounce_events6s_2018_authored_hint": {
          "courseD_bounce_events6s_a": "<p>Do you have an event that looks like this?</p>\n<xml><block type=\"bounce_whenWallCollided\" deletable=\"false\"><next><block type=\"bounce_bounceBall\"></block></next></block></block></xml>",
          "courseD_bounce_events6s_b": "<p>If you've written the code correctly, you don't have to move the hand to win.</p>"
        },
        "courseD_bounce_events7s_authored_hint": {
          "courseD_bounce_events7s_a": "<p>You can add sounds in more places if you feel like it!</p>"
        },
        "courseD_bounce_events7s_2018_authored_hint": {
          "courseD_bounce_events7s_a": "<p>You can add sounds in more places if you feel like it!</p>"
        },
        "courseD_bounce_events_template_authored_hint": {},
        "courseD_bounce_events_template_2018_authored_hint": {},
        "courseD_collector_debugging1_authored_hint": {
          "courseD_collector_debugging1_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_collector_debugging1_b": "<p>Do you see any patterns that could be made more simple using a <code>repeat</code> loop?</p>",
          "courseD_collector_debugging1_c": "<p>Remember to use the <code>collect</code> block to pick up treasure once you have moved to it.</p>"
        },
        "courseD_collector_debugging10_predict1_authored_hint": {
          "courseD_collector_debugging9_a": "<p>There are several ways to solve this problem...but they all involve turns!</p>",
          "courseD_collector_debugging9_b": "<p>Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.</p>"
        },
        "courseD_collector_debugging10_predict1_2018_authored_hint": {
          "courseD_collector_debugging9_a": "<p>There are several ways to solve this problem...but they all involve turns!</p>",
          "courseD_collector_debugging9_b": "<p>Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.</p>"
        },
        "courseD_collector_debugging1_2018_authored_hint": {
          "courseD_collector_debugging1_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_collector_debugging1_b": "<p>Do you see any patterns that could be made more simple using a <code>repeat</code> loop?</p>",
          "courseD_collector_debugging1_c": "<p>Remember to use the <code>collect</code> block to pick up treasure once you have moved to it.</p>"
        },
        "courseD_collector_debugging1a_authored_hint": {
          "courseD_collector_debugging1_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_collector_debugging1_c": "<p>Remember to use the <code>collect</code> block to pick up treasure once you have moved to it.</p>"
        },
        "courseD_collector_debugging1a_2018_authored_hint": {
          "courseD_collector_debugging1_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_collector_debugging1_c": "<p>Remember to use the <code>collect</code> block to pick up treasure once you have moved to it.</p>"
        },
        "courseD_collector_debugging2_authored_hint": {
          "courseD_collector_debugging2_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_collector_debugging2_b": "<p>Do you see any patterns that could be made more simple using a <code>repeat</code> loop?</p>",
          "courseD_collector_debugging2_c": "<p>Try collecting treasure for one side of this pattern. Can you repeat this to collect treasure on the other two sides?</p>"
        },
        "courseD_collector_debugging2_2018_authored_hint": {
          "courseD_collector_debugging2_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_collector_debugging2_b": "<p>Do you see any patterns that could be made more simple using a <code>repeat</code> loop?</p>",
          "courseD_collector_debugging2_c": "<p>Try collecting treasure for one side of this pattern. Can you repeat this to collect treasure on the other two sides?</p>"
        },
        "courseD_collector_debugging2a_authored_hint": {
          "courseD_collector_debugging2a_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_collector_debugging2a_c": "<p>What happens?</p>\n<p>What is supposed to happen?</p>\n<p>What does that tell you?</p>"
        },
        "courseD_collector_debugging2a_2018_authored_hint": {
          "courseD_collector_debugging2a_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_collector_debugging2a_c": "<p>What happens?</p>\n<p>What is supposed to happen?</p>\n<p>What does that tell you?</p>"
        },
        "courseD_collector_debugging3_authored_hint": {
          "courseD_collector_debugging3_a": "<p>Is there any place where Laurel does something that doesn't make sense? What happens when you change those blocks?</p>",
          "courseD_collector_debugging3_b": "<p>Try simplifying the code using nested loops.</p>"
        },
        "courseD_collector_debugging3_2018_authored_hint": {
          "courseD_collector_debugging3_a": "<p>Is there any place where Laurel does something that doesn't make sense? What happens when you change those blocks?</p>",
          "courseD_collector_debugging3_b": "<p>Try simplifying the code using nested loops.</p>"
        },
        "courseD_collector_debugging3a_authored_hint": {
          "courseD_collector_debugging3_a": "<p>Is there any place where Laurel does something that doesn't make sense? What happens when you change those blocks?</p>"
        },
        "courseD_collector_debugging3a_2018_authored_hint": {
          "courseD_collector_debugging3_a": "<p>Is there any place where Laurel does something that doesn't make sense? What happens when you change those blocks?</p>"
        },
        "courseD_collector_debugging4_authored_hint": {
          "courseD_collector_debugging4_a": "<p>Try using the debugging process a couple of times in a row. </p>\n<p>What causes the first problem?</p>\n<p>Once that problem is fixed, what goes wrong?</p>",
          "courseD_collector_debugging4_b": "<p>If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. </p>\n<p>Don't forget to point out the direction of the turns!</p>",
          "courseD_collector_debugging4_c": "<p>This loop is only missing one block. Can you figure out which one?</p>"
        },
        "courseD_collector_debugging4_2018_authored_hint": {
          "courseD_collector_debugging4_a": "<p>Try using the debugging process a couple of times in a row. </p>\n<p>What causes the first problem?</p>\n<p>Once that problem is fixed, what goes wrong?</p>",
          "courseD_collector_debugging4_b": "<p>If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. </p>\n<p>Don't forget to point out the direction of the turns!</p>",
          "courseD_collector_debugging4_c": "<p>This loop is only missing one block. Can you figure out which one?</p>"
        },
        "courseD_collector_debugging4a_authored_hint": {
          "courseD_collector_debugging4_a": "<p>Try using the debugging process a couple of times in a row. </p>\n<p>What causes the first problem?</p>\n<p>Once that problem is fixed, what goes wrong?</p>",
          "courseD_collector_debugging4_b": "<p>If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. </p>\n<p>Don't forget to point out the direction of the turns!</p>"
        },
        "courseD_collector_debugging4a_2018_authored_hint": {
          "courseD_collector_debugging4_a": "<p>Try using the debugging process a couple of times in a row. </p>\n<p>What causes the first problem?</p>\n<p>Once that problem is fixed, what goes wrong?</p>",
          "courseD_collector_debugging4_b": "<p>If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. </p>\n<p>Don't forget to point out the direction of the turns!</p>"
        },
        "courseD_collector_debugging5_authored_hint": {
          "courseD_collector_debugging5_a": "<p>Start by looking at just the first loop.</p>\n<p>What does it do?</p>\n<p>What is it supposed to do?</p>\n<p>What does that tell you?</p>",
          "courseD_collector_debugging5_b": "<p>Once you have the first loop the way you want it, what is left over in your code?</p>"
        },
        "courseD_collector_debugging5_2018_authored_hint": {
          "courseD_collector_debugging5_a": "<p>Start by looking at just the first loop.</p>\n<p>What does it do?</p>\n<p>What is it supposed to do?</p>\n<p>What does that tell you?</p>",
          "courseD_collector_debugging5_b": "<p>Once you have the first loop the way you want it, what is left over in your code?</p>"
        },
        "courseD_collector_debugging5a_authored_hint": {
          "courseD_collector_debugging5a_a": "<p>What does it do?</p>\n<p>What is it supposed to do?</p>\n<p>What does that tell you?</p>",
          "courseD_collector_debugging5a_b": "<p>Once you have the first line of treasure collected, what is left over in your code?</p>"
        },
        "courseD_collector_debugging5a_2018_authored_hint": {
          "courseD_collector_debugging5a_a": "<p>What does it do?</p>\n<p>What is it supposed to do?</p>\n<p>What does that tell you?</p>",
          "courseD_collector_debugging5a_b": "<p>Once you have the first line of treasure collected, what is left over in your code?</p>"
        },
        "courseD_collector_debugging6_authored_hint": {
          "courseD_collector_debugging6_a": "<p>Try running through the code using the \"Step\" button.  Is everything good at the first step?</p>\n<p>How about the second?</p>\n<p>Where do things go wrong?</p>",
          "courseD_collector_debugging6_b": "<p>It looks like all of the right steps are here, you just need more of them.  How can you repeat the <code>collect</code> action multiple times?</p>"
        },
        "courseD_collector_debugging6_2018_authored_hint": {
          "courseD_collector_debugging6_a": "<p>Try running through the code using the \"Step\" button.  Is everything good at the first step?</p>\n<p>How about the second?</p>\n<p>Where do things go wrong?</p>",
          "courseD_collector_debugging6_b": "<p>It looks like all of the right steps are here, you just need more of them.  How can you repeat the <code>collect</code> action multiple times?</p>"
        },
        "courseD_collector_debugging6a_authored_hint": {
          "courseD_collector_debugging6_a": "<p>Try running through the code using the \"Step\" button.  Is everything good at the first step?</p>\n<p>How about the second?</p>\n<p>Where do things go wrong?</p>",
          "courseD_collector_debugging6_b": "<p>It looks like all of the blocks you need are in the workspace. Try clicking \"start over\" if things get too confusing.</p>"
        },
        "courseD_collector_debugging6a_2018_authored_hint": {
          "courseD_collector_debugging6_a": "<p>Try running through the code using the \"Step\" button.  Is everything good at the first step?</p>\n<p>How about the second?</p>\n<p>Where do things go wrong?</p>",
          "courseD_collector_debugging6_b": "<p>It looks like all of the blocks you need are in the workspace. Try clicking \"start over\" if things get too confusing.</p>"
        },
        "courseD_collector_debugging7_authored_hint": {
          "courseD_collector_debugging7_a": "<p>Try running through the code using the \"Step\" button.  Is everything good at the first step?</p>\n<p>How about the second?</p>\n<p>Where do things go wrong?</p>",
          "courseD_collector_debugging7_b": "<p>If something needs to happen several times, try adding a <code>repeat</code> loop.</p>",
          "courseD_collector_debugging7_c": "<p>If you're having trouble, try writing the steps on a piece of paper and then putting the blocks into that order.</p>"
        },
        "courseD_collector_debugging8_authored_hint": {
          "courseD_collector_debugging8_a": "<p>Do you see a pattern that you can simplify with a loop?</p>",
          "courseD_collector_debugging8_b": "<p>Try using a nested loop to make this code shorter.</p>"
        },
        "courseD_collector_debugging8_2018_authored_hint": {
          "courseD_collector_debugging8_a": "<p>Do you see a pattern that you can simplify with a loop?</p>",
          "courseD_collector_debugging8_b": "<p>Try using a nested loop to make this code shorter.</p>"
        },
        "courseD_collector_debugging8a_authored_hint": {},
        "courseD_collector_debugging8a_2018_authored_hint": {},
        "courseD_collector_debugging9_authored_hint": {
          "courseD_collector_debugging9_a": "<p>There are several ways to solve this problem...but they all involve turns!</p>",
          "courseD_collector_debugging9_b": "<p>Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.</p>"
        },
        "courseD_collector_debugging9_2018_authored_hint": {
          "courseD_collector_debugging9_a": "<p>There are several ways to solve this problem...but they all involve turns!</p>",
          "courseD_collector_debugging9_b": "<p>Figure out how you would solve the puzzle, then move step-by-step to try to make the code match what is in your head.</p>"
        },
        "courseD_collector_debugging9a_authored_hint": {},
        "courseD_collector_debugging9a_2018_authored_hint": {},
        "courseD_collector_debugging_challenge2_authored_hint": {
          "courseD_collector_debugging_challenge2_a": "<p>Start by collecting just <strong>two</strong> gems from each of the first <strong>two</strong> piles.</p>\n<p><img src=\"https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png\">\nUse these blocks.</p>\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n\n                  </block>\n\n\n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>",
          "courseD_collector_debugging_challenge2_b": "<p>Next, collect the remaining gems in this row.</p>\n<p><img src=\"https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png\">\nAdd these blocks to your program.</p>\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n\n        </statement>\n      </block>\n</xml>",
          "courseD_collector_debugging_challenge2_c": "<p>Finally, collect the remaining treasure. Add these blocks to your program.</p>\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n\n        </statement>\n      </block>\n\n</xml>",
          "courseD_collector_debugging_challenge2_d": "<p>Here is the complete solution for this puzzle.</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"controls_repeat\">\n                <title name=\"TIMES\">2</title>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveForward</title>\n                    <next>\n                      <block type=\"controls_repeat\">\n                        <title name=\"TIMES\">2</title>\n                        <statement name=\"DO\">\n                          <block type=\"collector_collect\"/>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_collector_debugging_challenge2_2018_authored_hint": {
          "courseD_collector_debugging_challenge2_a": "<p>Start by collecting just <strong>two</strong> gems from each of the first <strong>two</strong> piles.</p>\n<p><img src=\"https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04 AM copy.png\">\nUse these blocks.</p>\n<xml>\n<block type=\"collector_collect\"></block>\n<block type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n  </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title name=\"DIR\">moveForward</title>\n\n                  </block>\n\n\n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n    <title name=\"TIMES\">2</title>\n  </block>\n\n\n\n</xml>",
          "courseD_collector_debugging_challenge2_b": "<p>Next, collect the remaining gems in this row.</p>\n<p><img src=\"https://images.code.org/22fff9fb20a50beaf4800aa022a5deb0-image-1494775944657.25.04 AM.png\">\nAdd these blocks to your program.</p>\n<xml><block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n<block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n\n        </statement>\n      </block>\n</xml>",
          "courseD_collector_debugging_challenge2_c": "<p>Finally, collect the remaining treasure. Add these blocks to your program.</p>\n<xml>\n  <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n\n        </statement>\n      </block>\n\n</xml>",
          "courseD_collector_debugging_challenge2_d": "<p>Here is the complete solution for this puzzle.</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat\">\n        <title name=\"TIMES\">4</title>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">4</title>\n            <statement name=\"DO\">\n              <block type=\"controls_repeat\">\n                <title name=\"TIMES\">2</title>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveForward</title>\n                    <next>\n                      <block type=\"controls_repeat\">\n                        <title name=\"TIMES\">2</title>\n                        <statement name=\"DO\">\n                          <block type=\"collector_collect\"/>\n                        </statement>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_collector_nested_loops_challenge2_authored_hint": {
          "courseD_bee_nested_loops_challenge2_a": "<p>Don't forget that you can <code>repeat</code> a single command or a longer pattern. You can even <code>repeat</code> a <code>repeat</code> block!</p>",
          "courseD_bee_nested_loops_challenge2_b": "<p>To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the <em>entire</em> cave!</p>",
          "courseD_bee_nested_loops_challenge2_c": "<p>The shortest program that reaches all the treasure uses only one <code>collect</code> block and two turns.</p>",
          "courseD_bee_nested_loops_challenge2_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">3</title>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnLeft</title>\n            <next>\n              <block type=\"controls_repeat_dropdown\">\n                <title name=\"TIMES\" config=\"3-10\">3</title>\n                <statement name=\"DO\">\n                  <block type=\"collector_collect\">\n                    <next>\n                      <block type=\"controls_repeat_dropdown\">\n                        <title name=\"TIMES\" config=\"3-10\">3</title>\n                        <statement name=\"DO\">\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"controls_repeat_dropdown\">\n                                <title name=\"TIMES\" config=\"3-10\">3</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_collector_nested_loops_challenge2_2018_authored_hint": {
          "courseD_bee_nested_loops_challenge2_a": "<p>Don't forget that you can <code>repeat</code> a single command or a longer pattern. You can even <code>repeat</code> a <code>repeat</code> block!</p>",
          "courseD_bee_nested_loops_challenge2_b": "<p>To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the <em>entire</em> cave!</p>",
          "courseD_bee_nested_loops_challenge2_c": "<p>The shortest program that reaches all the treasure uses only one <code>collect</code> block and two turns.</p>",
          "courseD_bee_nested_loops_challenge2_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_dropdown\">\n        <title name=\"TIMES\" config=\"3-10\">3</title>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnLeft</title>\n            <next>\n              <block type=\"controls_repeat_dropdown\">\n                <title name=\"TIMES\" config=\"3-10\">3</title>\n                <statement name=\"DO\">\n                  <block type=\"collector_collect\">\n                    <next>\n                      <block type=\"controls_repeat_dropdown\">\n                        <title name=\"TIMES\" config=\"3-10\">3</title>\n                        <statement name=\"DO\">\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"controls_repeat_dropdown\">\n                                <title name=\"TIMES\" config=\"3-10\">3</title>\n                                <statement name=\"DO\">\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                  </block>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseD_collector_nested_loops_challenge2a_authored_hint": {
          "courseD_collector_nested_loops_challenge2a_a": "<p>Don't forget that you can <code>repeat</code> a single command or a longer pattern. You can even <code>repeat</code> a <code>repeat</code> block!</p>",
          "courseD_collector_nested_loops_challenge2a_b": "<p>Can you figure out how to get all four gems without using any more blocks than it takes to get two?</p>"
        },
        "courseD_collector_ramp10_authored_hint": {
          "courseD_artist_ramp10_a": "<p>Instead of using four <code>move forward</code> blocks for each side, try putting one <code>move forward</code> block inside of a <code>repeat</code> loop, like this:</p>\n<xml><block type=\"controls_repeat\">\n                                            <title name=\"TIMES\">4</title>\n                                            <statement name=\"DO\">\n                                              <block type=\"maze_moveForward\"/>\n                                            </statement>\n                                          </block></xml>",
          "courseD_artist_ramp10_b": "<p>Don't forget to collect one piece of treasure, then turn to start on a new side of the square!</p>",
          "courseD_artist_ramp10_c": "<p>If you want to simplify your code, you can put one loop inside of another! This is called a <strong>nested loop</strong>.</p>"
        },
        "courseD_collector_ramp8_authored_hint": {
          "courseD_collector_ramp8_a": "<p>When you get to a square with treasure, use <code>collect</code> to pick it up. For this puzzle, you'll need to collect treasure more than once!</p>",
          "courseD_collector_ramp8_b": "<p>If you want to simplify your code more, you can actually put one <code>repeat</code> loop inside of another! This is called a <strong>nested loop</strong>.</p>"
        },
        "courseD_collector_ramp9_authored_hint": {
          "courseD_collector_ramp9_a": "<p>Start by moving Laurel to the first treasure, then collecting it. Can you repeat this sequence to get the second pile?</p>",
          "courseD_collector_ramp9_b": "<p>If you want to simplify your code, you can put one repeat loop inside of another! This is called a <strong>nested loop</strong>.</p>"
        },
        "courseD_collector_until_challenge1_authored_hint": {},
        "courseD_debugging_1_authored_hint": {
          "courseD_debugging_1_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_debugging_1_b": "<p>Do you see any patterns that could be made more simple using a <code>repeat</code> loop?</p>"
        },
        "courseD_debugging_2_authored_hint": {
          "courseD_debugging_2_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "courseD_debugging_2_b": "<p>Do you see a pattern?  Try using nested loops to solve this puzzle.</p>"
        },
        "courseD_debugging_3_authored_hint": {
          "courseD_debugging_3_a": "<p>Is there any place where the bee does something that doesn't make sense? What happens when you change those blocks?</p>",
          "courseD_debugging_3_b": "<p>Try simplifying the code using nested loops.</p>"
        },
        "courseD_debugging_4_authored_hint": {
          "courseD_debugging_4_a": "<p>Try using the debugging process a couple of times in a row. </p>\n<p>What causes the first problem?</p>\n<p>Once that problem is fixed, what goes wrong?</p>",
          "courseD_debugging_4_b": "<p>If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. </p>\n<p>Don't forget to point out the direction of the turns!</p>"
        },
        "courseD_debugging_5_authored_hint": {
          "courseD_debugging_5_a": "<p>Start by looking at just the first loop.</p>\n<p>What does it do?</p>\n<p>What is it supposed to do?</p>\n<p>What does that tell you?</p>",
          "courseD_debugging_5_b": "<p>Once you have the first loop the way you want it, what is left over in your code?</p>",
          "courseD_debugging_5_c": "<p>Try wrapping the leftover loop around the rest of your completed code.  Does is work now?</p>\n<p>If not, what is still going wrong?</p>"
        },
        "courseD_debugging_6_authored_hint": {
          "courseD_debugging_6_a": "<p>Try running through the code using the \"Step\" button.  Is everything good at the first step?</p>\n<p>How about the second?</p>\n<p>Where do things go wrong?</p>",
          "courseD_debugging_6_b": "<p>It looks like all of the right steps are here, you just need more of them.  How can you repeat the <code>get nectar</code> and <code>make honey</code> actions multiple times?</p>"
        },
        "courseD_external_cond_authored_hint": {},
        "courseD_farmer_condLoops1_authored_hint": {
          "courseD_farmer_condLoops1_a": "<p>You will need to look for corn 5 times, using a repeat loop.</p>",
          "courseD_farmer_condLoops1_b": "<p>Make sure to use an <code>if at corn</code> block or you might try to pick something that's not there!</p>"
        },
        "courseD_farmer_condLoops1_2018_authored_hint": {
          "courseD_farmer_condLoops1_a": "<p>You will need to look for corn 5 times, using a repeat loop.</p>",
          "courseD_farmer_condLoops1_b": "<p>Make sure to use an <code>if at corn</code> block or you might try to pick something that's not there!</p>"
        },
        "courseD_farmer_condLoops2_authored_hint": {
          "courseD_farmer_condLoops2_a": "<p>The best way to do this is to nest <code>if</code> statements by placing one inside of the other.  </p>",
          "courseD_farmer_condLoops2_b": "<p>For this puzzle, you should have one <code>if/else</code> statement and one plain <code>if</code> statement.</p>",
          "courseD_farmer_condLoops2_c": "<p>Your <code>if</code> statement could look a lot like this:</p>\n<ul>\n<li>if at corn<ul>\n<li>pick corn</li>\n</ul>\n</li>\n<li>else<ul>\n<li>if at lettuce<ul>\n<li>pick lettuce</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>If there is nothing there, you won't pick anything!</p>"
        },
        "courseD_farmer_condLoops2_2018_authored_hint": {
          "courseD_farmer_condLoops2_a": "<p>The best way to do this is to nest <code>if</code> statements by placing one inside of the other.  </p>",
          "courseD_farmer_condLoops2_b": "<p>For this puzzle, you should have one <code>if/else</code> statement and one plain <code>if</code> statement.</p>",
          "courseD_farmer_condLoops2_c": "<p>Your <code>if</code> statement could look a lot like this:</p>\n<ul>\n<li>if at corn<ul>\n<li>pick corn</li>\n</ul>\n</li>\n<li>else<ul>\n<li>if at lettuce<ul>\n<li>pick lettuce</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>If there is nothing there, you won't pick anything!</p>"
        },
        "courseD_farmer_condLoops3_authored_hint": {
          "courseD_farmer_condLoops3_a": "<p>To get all of the items, try nesting <code>if</code> statements three deep.</p>\n<p>This means you should put one <code>if</code> statement inside of another, then put a third <code>if</code> statement inside the second one.</p>",
          "courseD_farmer_condLoops3_b": "<p>For this puzzle, you should have two <code>if/else</code> statements and one plain <code>if</code> statement.</p>"
        },
        "courseD_farmer_condLoops3_2018_authored_hint": {
          "courseD_farmer_condLoops3_a": "<p>To get all of the items, try nesting <code>if</code> statements three deep.</p>\n<p>This means you should put one <code>if</code> statement inside of another, then put a third <code>if</code> statement inside the second one.</p>",
          "courseD_farmer_condLoops3_b": "<p>For this puzzle, you should have two <code>if/else</code> statements and one plain <code>if</code> statement.</p>"
        },
        "courseD_farmer_condLoops4_authored_hint": {
          "grade3_RunningFarm_4courseD_farmer_condLoops4": "<p>No one knows how many heads of lettuce will grow from each sprout.</p>\n<p>Use a <code>while there is lettuce</code> loop to keep picking until each piece has been gathered.</p>",
          "grade3_RunningFarm_4courseD_farmer_condLoops4_b": "<p>The <code>while</code> loop will handle empty spaces as well! Since there is no lettuce, it will not pick any and let the code move on.</p>",
          "grade3_RunningFarm_4courseD_farmer_condLoops4_c": "<p>You can use either a <code>while path ahead</code> loop or a <code>repeat</code> loop to go through all of the crops.</p>"
        },
        "courseD_farmer_condLoops4_2018_authored_hint": {
          "grade3_RunningFarm_4courseD_farmer_condLoops4": "<p>No one knows how many heads of lettuce will grow from each sprout.</p>\n<p>Use a <code>while there is lettuce</code> loop to keep picking until each piece has been gathered.</p>",
          "grade3_RunningFarm_4courseD_farmer_condLoops4_b": "<p>The <code>while</code> loop will handle empty spaces as well! Since there is no lettuce, it will not pick any and let the code move on.</p>",
          "grade3_RunningFarm_4courseD_farmer_condLoops4_c": "<p>You can use either a <code>while path ahead</code> loop or a <code>repeat</code> loop to go through all of the crops.</p>"
        },
        "courseD_farmer_condLoops4a_authored_hint": {
          "grade3_RunningFarm_4courseD_farmer_condLoops4": "<p>No one knows how many heads of lettuce will grow from each sprout.</p>\n<p>Use a <code>while there is lettuce</code> loop to keep picking until each piece has been gathered.</p>"
        },
        "courseD_farmer_condLoops5_authored_hint": {
          "courseD_farmer_condLoops5_a": "<p>There is a new loop: <code>repeat until at pumpkin</code>. Can you see how to use it in this puzzle?</p>",
          "courseD_farmer_condLoops5_b": "<p>There could be more than one corn or lettuce plant in each spot. Use a <code>while</code> loop to gather all of them!</p>"
        },
        "courseD_farmer_condLoops5_2018_authored_hint": {
          "courseD_farmer_condLoops5_a": "<p>There is a new loop: <code>repeat until at pumpkin</code>. Can you see how to use it in this puzzle?</p>",
          "courseD_farmer_condLoops5_b": "<p>There could be more than one corn or lettuce plant in each spot. Use a <code>while</code> loop to gather all of them!</p>"
        },
        "courseD_farmer_condLoops6_authored_hint": {
          "courseD_farmer_condLoops6_a": "<p>Use a <code>while there is corn</code> loop to make sure you get all of the corn along the way. This block won't do anything if there's no corn to pick.</p>",
          "courseD_farmer_condLoops6_b": "<p>Make sure to check <code>if</code> there's a path ahead before you take your next step!</p>"
        },
        "courseD_farmer_condLoops6_2018_authored_hint": {
          "courseD_farmer_condLoops6_a": "<p>Use a <code>while path ahead</code> loop to move the farmer down each piece of the spiral.</p>",
          "courseD_farmer_condLoops6_b": "<p>You only need to check for corn during most of the harvest.  Just pick one pumpkin at the very end of your program.</p>"
        },
        "courseD_farmer_condLoops7_authored_hint": {
          "courseD_farmer_condLoops7_a": "<p>Notice that the easiest path to get to all of the crops is still a spiral.</p>\n<p><img src=\"https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png\"></p>",
          "courseD_farmer_condLoops7_b": "<p>Try using <code>when path ahead</code> to keep the harvester moving the right number of steps.</p>"
        },
        "courseD_farmer_condLoops7_2018_authored_hint": {
          "courseD_farmer_condLoops7_a": "<p>Notice that the easiest path to get to all of the crops is still a spiral.</p>\n<p><img src=\"https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png\"></p>",
          "courseD_farmer_condLoops7_b": "<p>Try using <code>when path ahead</code> to keep the harvester moving the right number of steps.</p>"
        },
        "courseD_farmer_condLoops8_authored_hint": {},
        "courseD_farmer_condLoops8_2018_authored_hint": {},
        "courseD_farmer_condLoops9_authored_hint": {},
        "courseD_farmer_condLoops9_2018_authored_hint": {},
        "courseD_farmer_condLoops9_predict1_authored_hint": {},
        "courseD_farmer_condLoops9_predict1_2018_authored_hint": {},
        "courseD_farmer_condLoops_challenge1_authored_hint": {
          "courseD_farmer_condLoops_challenge1_a": "<p>The \"Step\" button could be very helpful in this challenge.</p>",
          "courseD_farmer_condLoops_challenge1_b": "<p>Normally you would just <code>pick pumpkin</code> if you are at a pumpkin. What else do you need to do if you're at a pumpkin?</p>"
        },
        "courseD_farmer_condLoops_challenge1_2018_authored_hint": {
          "courseD_farmer_condLoops_challenge1_a": "<p>The \"Step\" button could be very helpful in this challenge.</p>",
          "courseD_farmer_condLoops_challenge1_b": "<p>Normally you would just <code>pick pumpkin</code> if you are at a pumpkin. What else do you need to do if you're at a pumpkin?</p>"
        },
        "courseD_farmer_condLoops_challenge2_authored_hint": {
          "courseD_farmer_condLoops_challenge2_a": "<p>The amount of each vegetable in each space can change. A <code>while</code> loop can help!</p>"
        },
        "courseD_farmer_condLoops_challenge2_2018_authored_hint": {
          "courseD_farmer_condLoops_challenge2_a": "<p>The amount of each vegetable in each space can change. A <code>while</code> loop can help!</p>"
        },
        "courseD_farmer_condLoops_challenge2_clone_authored_hint": {},
        "courseD_farmer_conditionals10_authored_hint": {},
        "courseD_farmer_conditionals4_authored_hint": {
          "courseD_farmer_conditionals4_a": "<p>Instead of using a <code>repeat</code> loop, use a <code>while</code> loop to keep digging until the pile is gone.</p>"
        },
        "courseD_farmer_conditionals5_authored_hint": {
          "courseD_farmer_conditionals5a": "<p>Try nesting a <code>while</code> loop inside of a <code>repeat</code> loop.</p>"
        },
        "courseD_farmer_conditionals6_authored_hint": {
          "courseD_farmer_conditionals6_a": "<p>Make sure you're using the <code>while</code> loop to figure out how many times to fill each hole.</p>",
          "courseD_farmer_conditionals6_b": "<p>Notice that the farmer needs to move forward and down several times in a stair-step pattern.</p>"
        },
        "courseD_farmer_conditionals7_authored_hint": {
          "courseD_farmer_conditionals8_a": "<p>The <code>while path ahead</code> block lets you keep going, even if you don't know how many squares are in a path.</p>"
        },
        "courseD_farmer_conditionals8_authored_hint": {
          "courseD_farmer_conditionals8_a": "<p>You are going to need to use more than one <code>while</code> loop.</p>",
          "courseD_farmer_conditionals8_b": "<p>Every hole is at the end of a path, so use <code>while path ahead</code> before using <code>while there is a hole</code>.</p>",
          "courseD_farmer_conditionals8_c": "<p>Notice that you need to repeat the <code>while path ahead</code>, <code>while there is a hole</code> code six times.</p>"
        },
        "courseD_farmer_conditionals9_authored_hint": {},
        "courseD_farmer_until_challenge2_authored_hint": {},
        "courseD_farmer_until_challenge2_2018_authored_hint": {},
        "courseD_farmer_while1_authored_hint": {
          "courseD_farmer_while1_a": "<p>You will need to move forward four times to get to the pile. Can you use a <code>repeat</code> loop for this?</p>",
          "courseD_farmer_while1_b": "<p>Use the <code>remove 1</code> block when you are standing on the pile of dirt to remove it.</p>"
        },
        "courseD_farmer_while10_authored_hint": {},
        "courseD_farmer_while10_2018_authored_hint": {},
        "courseD_farmer_while10_predict2_authored_hint": {},
        "courseD_farmer_while10_predict2_2018_authored_hint": {},
        "courseD_farmer_while1_2018_authored_hint": {
          "courseD_farmer_while1_a": "<p>You will need to move forward four times to get to the pile. Can you use a <code>repeat</code> loop for this?</p>",
          "courseD_farmer_while1_b": "<p>Use the <code>remove 1</code> block when you are standing on the pile of dirt to remove it.</p>"
        },
        "courseD_farmer_while2_authored_hint": {
          "courseD_farmer_while2_a": "<p>You will only need to move once to get to the hole.</p>",
          "courseD_farmer_while2_b": "<p>You will need the <code>fill 1</code> block six times. Can you use a loop to make this simpler?</p>"
        },
        "courseD_farmer_while2_2018_authored_hint": {
          "courseD_farmer_while2_a": "<p>You will only need to move once to get to the hole.</p>",
          "courseD_farmer_while2_b": "<p>You will need the <code>fill 1</code> block six times. Can you use a loop to make this simpler?</p>"
        },
        "courseD_farmer_while3_authored_hint": {
          "courseD_farmer_while3_a": "<p>A loop can help you simplify your code here.</p>",
          "courseD_farmer_while3_b": "<p>You shouldn't need any <code>turn</code> blocks to get to the pile.</p>"
        },
        "courseD_farmer_while3_2018_authored_hint": {
          "courseD_farmer_while3_a": "<p>A loop can help you simplify your code here.</p>",
          "courseD_farmer_while3_b": "<p>You shouldn't need any <code>turn</code> blocks to get to the pile.</p>"
        },
        "courseD_farmer_while4_authored_hint": {
          "courseD_farmer_conditionals4_a": "<p>Instead of using a <code>repeat</code> loop, use a <code>while</code> loop to keep digging until the pile is gone.</p>",
          "courseD_farmer_conditionals4_b": "<p>This looks very similar to an earlier puzzle, the only difference is which loop you need.</p>"
        },
        "courseD_farmer_while4_2018_authored_hint": {
          "courseD_farmer_conditionals4_a": "<p>Instead of using a <code>repeat</code> loop, use a <code>while</code> loop to keep digging until the pile is gone.</p>",
          "courseD_farmer_conditionals4_b": "<p>This looks very similar to an earlier puzzle, the only difference is which loop you need.</p>"
        },
        "courseD_farmer_while4_predict1_authored_hint": {},
        "courseD_farmer_while4_predict1_2018_authored_hint": {},
        "courseD_farmer_while5_authored_hint": {
          "courseD_farmer_conditionals5a_a": "<p>Try nesting a <code>while</code> loop inside of a <code>repeat</code> loop.</p>",
          "courseD_farmer_conditionals5a_b": "<p>The farmer needs to move forward a total of five times to get to the end of the row. What else does the farmer need to do?</p>",
          "courseD_farmer_conditionals5a_c": "<p>Move forward 5 times. Each time you move forward, remove the pile of dirt by using the <code>while there is a pile</code> block.</p>"
        },
        "courseD_farmer_while5_2018_authored_hint": {
          "courseD_farmer_conditionals5a_a": "<p>Try nesting a <code>while</code> loop inside of a <code>repeat</code> loop.</p>",
          "courseD_farmer_conditionals5a_b": "<p>The farmer needs to move forward a total of five times to get to the end of the row. What else does the farmer need to do?</p>",
          "courseD_farmer_conditionals5a_c": "<p>Move forward 5 times. Each time you move forward, remove the pile of dirt by using the <code>while there is a pile</code> block.</p>"
        },
        "courseD_farmer_while6_authored_hint": {
          "courseD_farmer_conditionals6_a": "<p>Make sure you're using the <code>while</code> loop to figure out how many times to fill each hole.</p>",
          "courseD_farmer_conditionals6_b": "<p>Notice that the farmer needs to move forward and down several times in a stair-step pattern.</p>",
          "courseD_farmer_conditionals6_c": "<p>The stair step pattern uses the following blocks</p>\n<ul>\n<li>move forward</li>\n<li>fill hole</li>\n<li>turn right</li>\n<li>move forward</li>\n<li>fill hole</li>\n<li>turn left</li>\n</ul>\n<p>How many times do you need to use this stair step pattern?</p>\n<p>Make sure you are using the <code>while there is a hole</code> to fill the hole.</p>"
        },
        "courseD_farmer_while6_2018_authored_hint": {
          "courseD_farmer_conditionals6_a": "<p>Make sure you're using the <code>while</code> loop to figure out how many times to fill each hole.</p>",
          "courseD_farmer_conditionals6_b": "<p>Notice that the farmer needs to move forward and down several times in a stair-step pattern.</p>",
          "courseD_farmer_conditionals6_c": "<p>The stair step pattern uses the following blocks</p>\n<ul>\n<li>move forward</li>\n<li>fill hole</li>\n<li>turn right</li>\n<li>move forward</li>\n<li>fill hole</li>\n<li>turn left</li>\n</ul>\n<p>How many times do you need to use this stair step pattern?</p>\n<p>Make sure you are using the <code>while there is a hole</code> to fill the hole.</p>"
        },
        "courseD_farmer_while7_authored_hint": {
          "courseD_farmer_conditionals8_a": "<p>The <code>while path ahead</code> block lets you keep going, even if you don't know how many squares are in a path.</p>",
          "courseD_farmer_conditionals8_b": "<p>Putting a <code>while path ahead</code> loop inside of a repeat loop can help you in this puzzle.</p>",
          "courseD_farmer_conditionals8_c": "<p>What do you need to do at the end of each path?</p>"
        },
        "courseD_farmer_while7_2018_authored_hint": {
          "courseD_farmer_conditionals8_a": "<p>The <code>while path ahead</code> block lets you keep going, even if you don't know how many squares are in a path.</p>",
          "courseD_farmer_conditionals8_b": "<p>Putting a <code>while path ahead</code> loop inside of a repeat loop can help you in this puzzle.</p>",
          "courseD_farmer_conditionals8_c": "<p>What do you need to do at the end of each path?</p>"
        },
        "courseD_farmer_while8_authored_hint": {
          "courseD_farmer_conditionals8_a": "<p>You are going to need to use more than one <code>while</code> loop.</p>",
          "courseD_farmer_conditionals8_b": "<p>Every hole is at the end of a path, so use <code>while path ahead</code> before using <code>while there is a hole</code>.</p>",
          "courseD_farmer_conditionals8_c": "<p>Notice that you need to repeat the <code>while path ahead</code>, <code>while there is a hole</code> code six times.</p>"
        },
        "courseD_farmer_while8_2018_authored_hint": {
          "courseD_farmer_conditionals8_a": "<p>You are going to need to use more than one <code>while</code> loop.</p>",
          "courseD_farmer_conditionals8_b": "<p>Every hole is at the end of a path, so use <code>while path ahead</code> before using <code>while there is a hole</code>.</p>",
          "courseD_farmer_conditionals8_c": "<p>Notice that you need to repeat the <code>while path ahead</code>, <code>while there is a hole</code> code six times.</p>"
        },
        "courseD_farmer_while9_authored_hint": {},
        "courseD_farmer_while9_2018_authored_hint": {},
        "courseD_farmer_while_challenge1_authored_hint": {
          "courseD_farmer_while_challenge1_a": "<p>Each hole or pile is located one space <strong>backward</strong> from the end of the path.</p>",
          "courseD_farmer_while_challenge1_b": "<p>If you use a <code>while</code> loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt or fill any hole, no matter where she is.</p>",
          "courseD_farmer_conditionals8_c": "<p>It is possible to solve this without using any <code>repeat</code> loops. To do this, you will need to use four <code>while</code> loops.</p>"
        },
        "courseD_farmer_while_challenge1_2018_authored_hint": {
          "courseD_farmer_while_challenge1_a": "<p>Each hole or pile is located one space <strong>backward</strong> from the end of the path.</p>",
          "courseD_farmer_while_challenge1_b": "<p>If you use a <code>while</code> loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt or fill any hole, no matter where she is.</p>",
          "courseD_farmer_conditionals8_c": "<p>It is possible to solve this without using any <code>repeat</code> loops. To do this, you will need to use four <code>while</code> loops.</p>"
        },
        "courseD_farmer_while_challenge2_authored_hint": {
          "courseD_farmer_while_challenge1_a": "<p>Each hole or pile is located one space <strong>backward</strong> from the end of the path.</p>",
          "courseD_farmer_while_challenge1_b": "<p>If you use a <code>while</code> loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt and fill any hole, while standing in the same place.</p>",
          "courseD_farmer_conditionals8_c": "<p>It is possible to solve this without using any <code>repeat</code> loops. To do this, you will need to use four <code>while</code> loops.</p>"
        },
        "courseD_farmer_while_challenge2_2018_authored_hint": {
          "courseD_farmer_while_challenge1_a": "<p>Each hole or pile is located one space <strong>backward</strong> from the end of the path.</p>",
          "courseD_farmer_while_challenge1_b": "<p>If you use a <code>while</code> loop, you can tell the farmer to remove a pile or fill a hole, even if one isn't there. That means you can program her to remove any dirt and fill any hole, while standing in the same place.</p>",
          "courseD_farmer_conditionals8_c": "<p>It is possible to solve this without using any <code>repeat</code> loops. To do this, you will need to use four <code>while</code> loops.</p>"
        },
        "courseD_harvester_nested_loops_challenge1-broken_authored_hint": {
          "courseD_harvester_nested_loops_challenge1_a": "<p>You have probably already used a loop to create a zig-zag pattern. If you remember that algorithm, you can make a few additions to it here.</p>"
        },
        "courseD_harvester_nested_loops_challenge1_authored_hint": {
          "courseD_harvester_nested_loops_challenge1_a": "<p>Try following this path to reach all of the corn! </p>",
          "courseD_harvester_nested_loops_challenge1_b": "<p>To collect more than one piece of corn, you need to use <code>pick corn</code> more than one time.</p>",
          "courseD_harvester_nested_loops_challenge1_c": "<p>You will need to put a small loop inside of your main loop to solve this puzzle!</p>"
        },
        "courseD_harvester_nested_loops_challenge1_2018_authored_hint": {
          "courseD_harvester_nested_loops_challenge1_a": "<p>Try following this path to reach all of the corn! </p>",
          "courseD_harvester_nested_loops_challenge1_b": "<p>To collect more than one piece of corn, you need to use <code>pick corn</code> more than one time.</p>",
          "courseD_harvester_nested_loops_challenge1_c": "<p>You will need to put a small loop inside of your main loop to solve this puzzle!</p>"
        },
        "courseD_iceage_loops1_authored_hint": {
          "courseD_iceage_loops1_a": "<p>Watch out for broken ice! Scrat will fall right through!</p>",
          "courseD_iceage_loops1_b": "<p>You will have to use this block:</p>\n<xml><block type=\"maze_moveForward\"/></xml>"
        },
        "courseD_iceage_loops10_authored_hint": {
          "courseB_iceage_loops10_a": "<p>Watch out for broken ice! Scrat will fall into the water!</p>",
          "courseB_iceage_loops10_b": "<p>Try saying the steps out loud or writing them down on a piece of paper. Do you see any patterns?</p>",
          "courseB_iceage_loops10_c": "<p>This is a long puzzle! Follow this path.</p>"
        },
        "courseD_iceage_loops2_authored_hint": {
          "courseD_iceage_loops2_a": "<p>Break this puzzle into two pieces, one before the corner, and one after the corner.</p>",
          "courseD_iceage_loops2_b": "<p>If you get stuck, try saying the steps out loud.</p>",
          "courseD_iceage_loops2_c": "<p>Follow this path to get Scrat to the acorn.</p>"
        },
        "courseD_iceage_loops3_authored_hint": {
          "courseB_iceage_loops3_a": "<p>Use this new block!\n <xml><block type=\"controls_repeat_dropdown\">\n    <title name=\"TIMES\" config=\"2-10\">5</title>\n  </block></xml></p>",
          "courseB_iceage_loops3_b": "<p>To repeat code, drag out a <code>repeat</code> loop, then put the block you want repeated inside.</p>"
        },
        "courseD_iceage_loops4_authored_hint": {
          "courseD_iceage_loops4_a": "<p>Don't be afraid to run your code and see what happens!</p>",
          "courseD_iceage_loops4_b": "<p>Try writing down the steps Scrat would take to get to the acorn.  Do you see a pattern?</p>",
          "courseD_iceage_loops4_c": "<p>This is the path Scrat should take.</p>"
        },
        "courseD_iceage_loops6_authored_hint": {
          "courseD_iceage_loops6_a": "<p>Your final code will have <strong>three</strong> <code>move forward</code> blocks.</p>",
          "courseD_iceage_loops6_b": "<p>You only need to add <strong>one</strong> more loop!</p>",
          "courseD_iceage_loops6_c": "<p>Your final path should look like this.</p>"
        },
        "courseD_iceage_loops7_authored_hint": {
          "courseB_iceage_loops7_a": "<p>If you get stuck, try writing steps down on a piece of paper. Do you see a pattern?</p>",
          "courseB_iceage_loops7_b": "<p>This is the path Scrat should take to get to the acorn.</p>"
        },
        "courseD_iceage_loops8_authored_hint": {
          "courseD_iceage_loops8_a": "<p>Are the <code>turn</code> blocks right? What else can you change?</p>",
          "courseD_iceage_loops8_b": "<p>The first loop should repeat <strong>3</strong> times, the second should repeat <strong>5</strong> times, the third loop should repeat <strong>4</strong> times, and the last loop should repeat <strong>4</strong> times.</p>",
          "courseD_iceage_loops8_c": "<p>Use loops to help Scrat follow this path.</p>"
        },
        "courseD_iceage_loops9_authored_hint": {
          "courseD_iceage_loops9_a": "<p>Having trouble? Try breaking this puzzle into smaller pieces. Don't be afraid to run your puzzle as you code!</p>",
          "courseD_iceage_loops9_b": "<p>Your final code should have <strong>4</strong> loops.</p>",
          "courseD_iceage_loops9_c": "<p>Scrat should follow this path to get the acorn.</p>"
        },
        "courseD_maze_loops_challenge1_authored_hint": {
          "courseD_bee_nested_loops_challenge1_a": "<p>Don't forget that you can <code>repeat</code> a single command or a longer pattern. You can even <code>repeat</code> a <code>repeat</code> block!</p>",
          "courseD_bee_nested_loops_challenge1_b": "<p>To get all 4 gems, first use a loop to move away from the center. Turn left or right, then use a nested loop to move from the first pile of treasure to the second. If you repeat the nested loop enough times, the collector will move around the <em>entire</em> cave!</p>",
          "courseD_bee_nested_loops_challenge1_c": "<p>The shortest program that reaches all the treasure uses only one <code>collect</code> block and two turns.</p>"
        },
        "courseD_maze_nestedLoops3_authored_hint": {
          "courseD_maze_nestedLoops3_a": "<p>To solve this puzzle, you will need to \"nest\" one <code>repeat</code> loop inside of another <code>repeat</code> loop.</p>",
          "courseD_maze_nestedLoops3_b": "<p>Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern.</p>",
          "courseD_maze_nestedLoops3_c": "<p>Try writing code for one straight piece of path and a turn. Can you repeat this to get to the sunflower?</p>"
        },
        "courseD_maze_nestedLoops3_2018_authored_hint": {
          "courseD_maze_nestedLoops3_a": "<p>To solve this puzzle, you will need to \"nest\" one <code>repeat</code> loop inside of another <code>repeat</code> loop.</p>",
          "courseD_maze_nestedLoops3_b": "<p>Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern.</p>",
          "courseD_maze_nestedLoops3_c": "<p>Try writing code for one straight piece of path and a turn. Can you repeat this to get to the sunflower?</p>"
        },
        "courseD_maze_nestedLoops4_authored_hint": {
          "courseD_maze_nestedLoops4_a": "<p>Try using this path through the maze.</p>\n<p><img src=\"https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png\"></p>",
          "courseD_maze_nestedLoops4_b": "<p>If the loop pattern is hard to see, try coding it all out first and see what code repeats over and over before you put the loops in.</p>",
          "courseD_maze_nestedLoops4_c": "<p>Try using one <code>repeat</code> loop inside of another to cut down on the amount of code you need.</p>"
        },
        "courseD_maze_nestedLoops4_2018_authored_hint": {
          "courseD_maze_nestedLoops4_a": "<p>Try using this path through the maze.</p>\n<p><img src=\"https://images.code.org/565dbbcaf5862da0f60e54195820e814-image-1505961491245.36.09.png\"></p>",
          "courseD_maze_nestedLoops4_b": "<p>If the loop pattern is hard to see, try coding it all out first and see what code repeats over and over before you put the loops in.</p>",
          "courseD_maze_nestedLoops4_c": "<p>Try using one <code>repeat</code> loop inside of another to cut down on the amount of code you need.</p>"
        },
        "courseD_maze_nestedLoops5_authored_hint": {
          "courseD_maze_nestedLoops5_a": "<p>Look for a stair-step pattern in this maze to find where a nested loop can be used.</p>",
          "courseD_maze_nestedLoops5_b": "<p>Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern.</p>"
        },
        "courseD_maze_nestedLoops5_2018_authored_hint": {
          "courseD_maze_nestedLoops5_a": "<p>Look for a stair-step pattern in this maze to find where a nested loop can be used.</p>",
          "courseD_maze_nestedLoops5_b": "<p>Can't figure out where to put the loops? Try writing the code step-by-step and look for a pattern.</p>"
        },
        "courseD_maze_nestedLoops6_authored_hint": {
          "courseD_maze_nestedLoops6_a": "<p>If you are stuck, try writing out the code out on paper without loops first and look for patterns.</p>",
          "courseD_maze_nestedLoops6_b": "<p>Nesting <code>repeat</code> loops can help decrease the number of blocks used.</p>",
          "courseD_maze_nestedLoops6_c": "<p>It will take two sets of nested <code>repeat</code> loops to solve this puzzle.</p>"
        },
        "courseD_maze_nestedLoops6_2018_authored_hint": {
          "courseD_maze_nestedLoops6_a": "<p>If you are stuck, try writing out the code out on paper without loops first and look for patterns.</p>",
          "courseD_maze_nestedLoops6_b": "<p>Nesting <code>repeat</code> loops can help decrease the number of blocks used.</p>",
          "courseD_maze_nestedLoops6_c": "<p>It will take two sets of nested <code>repeat</code> loops to solve this puzzle.</p>"
        },
        "courseD_maze_ramp1_authored_hint": {
          "courseC_maze_programming1_a": "<p>If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.</p>",
          "courseC_maze_programming1_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_maze_ramp1_2018_authored_hint": {
          "courseC_maze_programming1_a": "<p>If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.</p>",
          "courseC_maze_programming1_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_maze_ramp2_authored_hint": {
          "courseC_maze_programming2_a": "<p>To use a <code>move forward</code> block, drag it from the toolbox out into the workspace and connect it to the <code>when run</code> block.</p>",
          "courseC_maze_programming2_b": "<p>Make sure all 3 blocks are clicked together and attached to the <code>when run</code> block.</p>"
        },
        "courseD_maze_ramp2_2018_authored_hint": {
          "courseC_maze_programming2_a": "<p>To use a <code>move forward</code> block, drag it from the toolbox out into the workspace and connect it to the <code>when run</code> block.</p>",
          "courseC_maze_programming2_b": "<p>Make sure all 3 blocks are clicked together and attached to the <code>when run</code> block.</p>"
        },
        "courseD_maze_ramp3_authored_hint": {
          "courseC_maze_programming3_a": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  </p>\n<p>Click on the block you want to delete, and drag it back to the toolbox.</p>\n<p>Finally, put your other blocks back in place where they belong.</p>"
        },
        "courseD_maze_ramp3_2018_authored_hint": {
          "courseC_maze_programming3_a": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  </p>\n<p>Click on the block you want to delete, and drag it back to the toolbox.</p>\n<p>Finally, put your other blocks back in place where they belong.</p>"
        },
        "courseD_maze_ramp4_authored_hint": {
          "courseC_maze_programming4_a": "<p>You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.</p>",
          "courseC_maze_programming4_b": "<p>To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.</p>"
        },
        "courseD_maze_ramp4_2018_authored_hint": {
          "courseC_maze_programming4_a": "<p>You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.</p>",
          "courseC_maze_programming4_b": "<p>To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.</p>"
        },
        "courseD_maze_ramp5_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>Remember that turns are from the bird's perspective.</p>",
          "courseC_maze_programming5_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_maze_ramp5_2018_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>Remember that turns are from the bird's perspective.</p>",
          "courseC_maze_programming5_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_maze_ramp5a_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>Remember that turns are from the bird's perspective.</p>",
          "courseC_maze_programming5_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_maze_ramp5a_2018_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>Remember that turns are from the bird's perspective.</p>",
          "courseC_maze_programming5_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_maze_ramp5b_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>Remember that turns are from the bird's perspective.</p>",
          "courseC_maze_programming5_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_maze_ramp5b_2018_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>Remember that turns are from the bird's perspective.</p>",
          "courseC_maze_programming5_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_maze_ramp5c_authored_hint": {},
        "courseD_maze_ramp5c_2018_authored_hint": {},
        "courseD_maze_ramp5d_authored_hint": {},
        "courseD_maze_ramp5d_2018_authored_hint": {},
        "courseD_maze_ramp6_authored_hint": {
          "courseC_maze_programming6_a": "<p>There are two ways to solve this puzzle!</p>",
          "courseC_maze_programming6_b": "<p>The bird starts facing a wall, so remember to turn before you move.</p>",
          "courseC_maze_programming6_c": "<p>Remember you can write one piece of the code at a time, then run it to figure out where you need to go from there.</p>"
        },
        "courseD_maze_ramp6a_authored_hint": {
          "courseC_maze_programming6a_a": "<p>Use a <code>repeat</code> loop to get this bird moving!</p>"
        },
        "courseD_maze_ramp7_authored_hint": {
          "courseD_maze_ramp7_b": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseD_maze_ramp7_a": "<p>Use repeat blocks to run either a single block or a chunk of code over and over.</p>",
          "courseD_maze_ramp7_c": "<p>If you want to simplify your code, you can put one repeat loop inside of another! This is called a <strong>nested loop</strong>.</p>"
        },
        "courseD_maze_until1_authored_hint": {
          "courseD_maze_until1_a": "<p>Are there any sequences you can loop to make your code shorter?</p>",
          "courseD_maze_until1_b": "<p>Try using a nested loop to solve this puzzle.</p>"
        },
        "courseD_maze_until10_authored_hint": {},
        "courseD_maze_until10_2018_authored_hint": {},
        "courseD_maze_until10_predict2_authored_hint": {},
        "courseD_maze_until10_predict2_2018_authored_hint": {},
        "courseD_maze_until1_2018_authored_hint": {
          "courseD_maze_until1_a": "<p>Are there any sequences you can loop to make your code shorter?</p>",
          "courseD_maze_until1_b": "<p>Try using a nested loop to solve this puzzle.</p>"
        },
        "courseD_maze_until2_authored_hint": {
          "courseD_maze_until2_a": "<p>An <code>until pig</code> loop will help you keep going until you succeed!</p>"
        },
        "courseD_maze_until2_predict1_authored_hint": {},
        "courseD_maze_until2_predict1_2018_authored_hint": {},
        "courseD_maze_until3_authored_hint": {
          "courseD_maze_until3_a": "<ul>\n<li>What does your code do?</li>\n<li>What is it supposed to do?</li>\n<li>What does that tell you?</li>\n</ul>",
          "courseD_maze_until3_b": "<p>If you are getting stuck, try writing out the steps on a piece of paper and looking for places where they repeat.</p>",
          "courseD_maze_until3_c": "<p>Is there a stair step pattern you can follow for this puzzle?</p>",
          "courseD_maze_until3_d": "<p>Don't forget to use the <code>repeat until</code> block to make your code shorter.</p>"
        },
        "courseD_maze_until3_2018_authored_hint": {
          "courseD_maze_until3_a": "<ul>\n<li>What does your code do?</li>\n<li>What is it supposed to do?</li>\n<li>What does that tell you?</li>\n</ul>",
          "courseD_maze_until3_b": "<p>If you are getting stuck, try writing out the steps on a piece of paper and looking for places where they repeat.</p>",
          "courseD_maze_until3_c": "<p>Is there a stair step pattern you can follow for this puzzle?</p>",
          "courseD_maze_until3_d": "<p>Don't forget to use the <code>repeat until</code> block to make your code shorter.</p>"
        },
        "courseD_maze_until4_authored_hint": {
          "courseD_maze_until4_a": "<p>Use the \"Step\" button to go through your code line by line.</p>\n<ul>\n<li>Does everything work at the first step?</li>\n<li>Does everything work at the second step?</li>\n<li>Where does it go wrong?</li>\n</ul>",
          "courseD_maze_until4_b": "<p>Is there a stair step pattern you can follow for this puzzle?</p>",
          "courseD_maze_until4_c": "<p>Don't forget to use the <code>repeat until</code> block to make your code shorter.</p>"
        },
        "courseD_maze_until4_2018_authored_hint": {
          "courseD_maze_until4_a": "<p>Use the \"Step\" button to go through your code line by line.</p>\n<ul>\n<li>Does everything work at the first step?</li>\n<li>Does everything work at the second step?</li>\n<li>Where does it go wrong?</li>\n</ul>",
          "courseD_maze_until4_b": "<p>Is there a stair step pattern you can follow for this puzzle?</p>",
          "courseD_maze_until4_c": "<p>Don't forget to use the <code>repeat until</code> block to make your code shorter.</p>"
        },
        "courseD_maze_until5_authored_hint": {
          "courseD_maze_until5_a": "<p>Don't forget to use <code>if path to the left</code> to keep the zombie checking for a place to turn.</p>",
          "courseD_maze_until5_b": "<p>To use only one <code>move forward</code>, put it inside the <code>repeat until sunflower</code> block.</p>",
          "courseD_maze_until5_c": "<p>After each step, the zombie should check whether there is a path to the left. What should he do if he finds one?</p>"
        },
        "courseD_maze_until5_2018_authored_hint": {
          "courseD_maze_until5_b": "<p>To use only one <code>move forward</code>, put it inside the <code>repeat until sunflower</code> block.</p>"
        },
        "courseD_maze_until6_authored_hint": {
          "courseD_maze_until6_a": "<p>This time, try the <code>if path to the right</code> to keep the zombie on track.</p>",
          "courseD_maze_until6_b": "<p>To use only one <code>move forward</code>, put it inside the <code>repeat until sunflower</code> block.</p>",
          "courseD_maze_until6_c": "<p>Although there are more turns here than the last puzzle, your code can be almost identical because of the <code>repeat until</code> block!</p>"
        },
        "courseD_maze_until6_2018_authored_hint": {
          "courseD_maze_until6_b": "<p>To use only one <code>move forward</code>, put it inside the <code>repeat until sunflower</code> block.</p>"
        },
        "courseD_maze_until7_authored_hint": {
          "courseD_maze_until7_a": "<p>You don't need your code to be any longer than last time, just because the maze is!</p>",
          "courseD_maze_until7_b": "<p>Although there are more turns here than the last puzzle, your code can be almost identical because of the <code>repeat until</code> block!</p>",
          "courseD_maze_until7_c": "<p>Remember to check for paths to the left, because turning right will take you down the wrong path!</p>"
        },
        "courseD_maze_until7_2018_authored_hint": {
          "courseD_maze_until7_a": "<p>You don't need your code to be any longer than last time, just because the maze is!</p>",
          "courseD_maze_until7_b": "<p>Although there are more turns here than the last puzzle, your code can be almost identical because of the <code>repeat until</code> block!</p>"
        },
        "courseD_maze_until8_authored_hint": {
          "courseD_maze_until8_a": "<p>Make sure you're using an <code>if/else</code> block to keep the zombie headed the right direction.</p>",
          "courseD_maze_until8_b": "<p>With your <code>if/else</code> block: if there is a path ahead, what should you do?</p>",
          "courseD_maze_until8_c": "<p>With your <code>if/else</code> block: if there is not a path ahead, which way should you turn?</p>"
        },
        "courseD_maze_until8_2018_authored_hint": {
          "courseD_maze_until8_a": "<p>Make sure you're using an <code>if/else</code> block to keep the zombie headed the right direction.</p>",
          "courseD_maze_until8_b": "<p>With your <code>if/else</code> block: if there is a path ahead, what should you do?</p>",
          "courseD_maze_until8_c": "<p>With your <code>if/else</code> block: if there is not a path ahead, which way should you turn?</p>"
        },
        "courseD_maze_until9_authored_hint": {
          "courseD_maze_until8_a": "<p>Using <code>if path ahead</code> will keep you going forward whenever possible, helping you miss the paths with chompers.</p>",
          "courseD_maze_until8_b": "<p>Which direction should you turn if there is no path forward?</p>",
          "courseD_maze_until8_c": "<p>Remember to use the <code>repeat until</code> block to get you to the sunflower!</p>"
        },
        "courseD_maze_until9_2018_authored_hint": {
          "courseD_maze_until8_c": "<p>Remember to use the <code>repeat until</code> block to get you to the sunflower!</p>"
        },
        "courseD_maze_until_challenge_authored_hint": {},
        "courseD_maze_until_challenge1-delete-this-copy_authored_hint": {},
        "courseD_maze_until_challenge1_authored_hint": {},
        "courseD_maze_until_challenge1_2018_authored_hint": {},
        "courseD_maze_until_challenge2_authored_hint": {},
        "courseD_playLab_cond1_authored_hint": {
          "courseD_playLab_cond1_a": "<p>To solve this challenge, attach the <code>move actor 1 up</code> block to the <code>when up arrow</code> event, then do the same for every other direction.</p>",
          "courseD_playLab_cond1_b": "<p>Use the drop down menus on the <code>when arrow</code> and <code>move actor</code> blocks to change which direction they go.</p>",
          "courseD_playLab_cond1_c": "<p>Remember to move Pegleg to both of the flags once you click \"Run\"!</p>"
        },
        "courseD_playLab_cond1_2018_authored_hint": {
          "courseD_playLab_cond1_a": "<p>To solve this challenge, attach the <code>move actor 1 up</code> block to the <code>when up arrow</code> event, then do the same for every other direction.</p>",
          "courseD_playLab_cond1_b": "<p>Use the drop down menus on the <code>when arrow</code> and <code>move actor</code> blocks to change which direction they go.</p>",
          "courseD_playLab_cond1_c": "<p>Remember to move Pegleg to both of the flags once you click \"Run\"!</p>"
        },
        "courseD_playLab_cond2_authored_hint": {
          "courseD_playLab_cond2_a": "<p>To succeed with this puzzle, use the <code>score point</code> block beneath the <code>when actor 1 touches actor 2</code> event.</p>"
        },
        "courseD_playLab_cond2_2018_authored_hint": {
          "courseD_playLab_cond2_a": "<p>To succeed with this puzzle, use the <code>score point</code> block beneath the <code>when actor 1 touches actor 2</code> event.</p>"
        },
        "courseD_playLab_cond3_authored_hint": {
          "courseD_playLab_cond3_a": "<p>You will need to add two blocks to your <code>repeat forever</code> loop.  One will choose a random emotion for the dragon (actor 2) and the other will wait 1 second before going through the loop again.</p>"
        },
        "courseD_playLab_cond3_2018_authored_hint": {
          "courseD_playLab_cond3_a": "<p>You will need to add two blocks to your <code>repeat forever</code> loop.  One will choose a random emotion for the dragon (actor 2) and the other will wait 1 second before going through the loop again.</p>"
        },
        "courseD_playLab_cond3a_authored_hint": {
          "courseD_playLab_cond3_c": "<ul>\n<li><code>If</code> the dragon is happy <ul>\n<li><code>score point</code></li>\n<li><code>score point</code>  </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><code>Else</code> <code>score point</code></li>\n</ul>"
        },
        "courseD_playLab_cond3a_2018_authored_hint": {
          "courseD_playLab_cond3_c": "<ul>\n<li><code>If</code> the dragon is happy <ul>\n<li><code>score point</code></li>\n<li><code>score point</code>  </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><code>Else</code> <code>score point</code></li>\n</ul>"
        },
        "courseD_playLab_cond3b_authored_hint": {
          "courseD_playLab_cond3b_a": "<p>You will need to add blocks to your <code>repeat forever</code> loop to make the dragon continue to move up and down</p>"
        },
        "courseD_playLab_cond4_authored_hint": {
          "courseD_playLab_cond4_a": "<p>You will want to use the <code>when run</code> event to get the ninja to chase the pirate.</p>",
          "courseD_playLab_cond4_b": "<p>There is a special block called <code>set every masked ninja to chase actor</code> that will keep the ninja hot on the pirate's trail!</p>",
          "courseD_playLab_cond4_c": "<p>Put the <code>end game as a loss</code> block underneath the <code>when actor 1 touches actor 3</code> event.</p>"
        },
        "courseD_playLab_cond4_2018_authored_hint": {
          "courseD_playLab_cond4_a": "<p>You will want to use the <code>when run</code> event to get the ninja to chase the pirate.</p>",
          "courseD_playLab_cond4_b": "<p>There is a special block called <code>set every masked ninja to chase actor</code> that will keep the ninja hot on the pirate's trail!</p>",
          "courseD_playLab_cond4_c": "<p>Put the <code>end game as a loss</code> block underneath the <code>when actor 1 touches actor 3</code> event.</p>"
        },
        "courseD_playLab_cond5_authored_hint": {
          "courseD_playLab_cond5_a": "<p>Use an <code>if</code> statement that compares whether <code>score</code> is <code>&gt;</code> 5 to solve this challenge.</p>",
          "courseD_playLab_cond5_b": "<p>You can have more than one <code>repeat forever</code> loop in the workspace.</p>"
        },
        "courseD_playLab_cond5_2018_authored_hint": {
          "courseD_playLab_cond5_a": "<p>Use an <code>if</code> statement that compares whether <code>score</code> is <code>&gt;</code> 5 to solve this challenge.</p>",
          "courseD_playLab_cond5_b": "<p>You can have more than one <code>repeat forever</code> loop in the workspace.</p>"
        },
        "courseD_playLab_cond6_authored_hint": {
          "courseD_playLab_cond6_a": "<p>Add the <code>set masked ninja speed</code> block to the beginning of the program to help slow the ninja down.</p>",
          "courseD_playLab_cond6_b": "<p>You will need to use an <code>if actor 1 y position &gt; 255</code> block inside of a <code>repeat forever</code> block to always check if the pirate is below the octopuses.</p>"
        },
        "courseD_playLab_cond6_2018_authored_hint": {
          "courseD_playLab_cond6_a": "<p>Add the <code>set masked ninja speed</code> block to the beginning of the program to help slow the ninja down.</p>",
          "courseD_playLab_cond6_b": "<p>You will need to use an <code>if actor 1 y position &gt; 255</code> block inside of a <code>repeat forever</code> block to always check if the pirate is below the octopuses.</p>"
        },
        "courseD_playLab_cond6a_authored_hint": {
          "courseD_playLab_cond6_c": "<p>Add a <code>wait 1 second</code> block to the top of the <code>repeat forever</code> loop that checks the pirate position (but not inside the <code>if</code> statement) to keep points from being removed too quickly.</p>"
        },
        "courseD_playLab_cond6a_2018_authored_hint": {
          "courseD_playLab_cond6_c": "<p>Add a <code>wait 1 second</code> block to the top of the <code>repeat forever</code> loop that checks the pirate position (but not inside the <code>if</code> statement) to keep points from being removed too quickly.</p>"
        },
        "courseD_playLab_cond6cloneForTest_authored_hint": {
          "courseD_playLab_cond6_a": "<p>Add the <code>set masked ninja speed</code> block to the beginning of the program to help slow the ninja down.</p>",
          "courseD_playLab_cond6_b": "<p>You will need to use an <code>if actor 1 y position &gt; 255</code> block inside of a <code>repeat forever</code> block to always check if the pirate is below the octopuses.</p>",
          "courseD_playLab_cond6_c": "<p>Add a <code>wait 1 second</code> block to the top of the <code>repeat forever</code> loop that checks the pirate position (but not inside the <code>if</code> statement) to keep points from being removed too quickly.</p>"
        },
        "courseD_playLab_embed_cond6a_authored_hint": {},
        "courseD_playLab_embedded_authored_hint": {},
        "courseD_scrat_predict1_authored_hint": {},
        "courseD_scrat_predict1_2018_authored_hint": {},
        "courseD_scrat_ramp1_authored_hint": {
          "courseC_maze_programming1_a": "<p>If Scrat isn't getting to the acorn, make sure all three of the blocks have been fully snapped together, then click \"Run\" again.</p>",
          "courseC_maze_programming1_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_scrat_ramp1_2018_authored_hint": {
          "courseC_maze_programming1_a": "<p>If Scrat isn't getting to the acorn, make sure all three of the blocks have been fully snapped together, then click \"Run\" again.</p>",
          "courseC_maze_programming1_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_scrat_ramp2_authored_hint": {
          "courseC_maze_programming2_a": "<p>To use a <code>move forward</code> block, drag it from the toolbox out into the workspace and connect it to the <code>when run</code> block.</p>",
          "courseC_maze_programming2_b": "<p>Make sure all three <code>move forward</code> blocks are attached to the <code>when run</code> block.</p>"
        },
        "courseD_scrat_ramp2_2018_authored_hint": {
          "courseC_maze_programming2_a": "<p>To use a <code>move forward</code> block, drag it from the toolbox out into the workspace and connect it to the <code>when run</code> block.</p>",
          "courseC_maze_programming2_b": "<p>Make sure all three <code>move forward</code> blocks are attached to the <code>when run</code> block.</p>"
        },
        "courseD_scrat_ramp3_authored_hint": {
          "courseC_maze_programming3_a": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  </p>\n<p>Click on the block you want to delete, and drag it back to the toolbox.</p>\n<p>Finally, put your other blocks back in place where they belong.</p>",
          "courseC_maze_programming3_b": "<p>Remember that turns to the right and left are from Scrat's perspective.</p>"
        },
        "courseD_scrat_ramp3_2018_authored_hint": {
          "courseC_maze_programming3_a": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  </p>\n<p>Click on the block you want to delete, and drag it back to the toolbox.</p>\n<p>Finally, put your other blocks back in place where they belong.</p>",
          "courseC_maze_programming3_b": "<p>Remember that turns to the right and left are from Scrat's perspective.</p>"
        },
        "courseD_scrat_ramp4_authored_hint": {
          "courseC_maze_programming4_a": "<p>You can turn right or left from Scrat's point of view. If you are facing right, turning right will make you point downwards.</p>",
          "courseC_maze_programming4_b": "<p>To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the acorn.</p>",
          "courseC_maze_programming4_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_scrat_ramp4_2018_authored_hint": {
          "courseC_maze_programming4_a": "<p>You can turn right or left from Scrat's point of view. If you are facing right, turning right will make you point downwards.</p>",
          "courseC_maze_programming4_b": "<p>To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the acorn.</p>",
          "courseC_maze_programming4_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_scrat_ramp5_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>How far do you need to move to get to the corner?</p>",
          "courseC_maze_programming5_c": "<p>You will need to turn left at the corner to get to the acorn.</p>"
        },
        "courseD_scrat_ramp5_2018_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>How far do you need to move to get to the corner?</p>",
          "courseC_maze_programming5_c": "<p>You will need to turn left at the corner to get to the acorn.</p>"
        },
        "courseD_scrat_ramp6_authored_hint": {
          "courseC_maze_programming6a_a": "<p>Use a <code>repeat</code> loop to get Scrat moving!</p>"
        },
        "courseD_scrat_ramp6_2018_authored_hint": {
          "courseC_maze_programming6a_a": "<p>Use a <code>repeat</code> loop to get Scrat moving!</p>"
        },
        "courseD_scrat_ramp7_authored_hint": {
          "courseD_scrat_programming6_a": "<p>There are two ways to solve this puzzle!</p>",
          "courseD_scrat_programming6_b": "<p>Remember to turn first before moving, since Scrat is facing the wrong direction.</p>",
          "courseD_scrat_programming6_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_scrat_ramp7_2018_authored_hint": {
          "courseD_scrat_programming6_a": "<p>There are two ways to solve this puzzle!</p>",
          "courseD_scrat_programming6_b": "<p>Remember to turn first before moving, since Scrat is facing the wrong direction.</p>",
          "courseD_scrat_programming6_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_scrat_ramp8_authored_hint": {
          "courseD_maze_ramp7_b": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseD_maze_ramp7_a": "<p>Use repeat blocks to run either a single block or a chunk of code over and over.</p>",
          "courseD_maze_ramp7_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseD_scrat_ramp8_2018_authored_hint": {
          "courseD_maze_ramp7_b": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseD_maze_ramp7_a": "<p>Use repeat blocks to run either a single block or a chunk of code over and over.</p>",
          "courseD_maze_ramp7_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseE_artist_concept1_authored_hint": {
          "courseE_artist_concept1_a": "<p>The hexagons have 50 pixel sides and 60 degree turns to the right.</p>",
          "courseE_artist_concept1_b": "<p>Try using a function here so you don't have to write the code for a hexagon over and over again.</p>",
          "courseE_artist_concept1_c": "<p>Use the <code>set width</code> block before each function call to change the pen width.</p>"
        },
        "courseE_artist_concept1_2018_authored_hint": {
          "courseE_artist_concept1_a": "<p>The hexagons have 50 pixel sides and 60 degree turns to the right.</p>",
          "courseE_artist_concept1_b": "<p>Try using a function here so you don't have to write the code for a hexagon over and over again.</p>",
          "courseE_artist_concept1_c": "<p>Use the <code>set width</code> block before each function call to change the pen width.</p>"
        },
        "courseE_artist_concept4_authored_hint": {
          "courseE_artist_concept4_a": "<p>There are several ways to solve this puzzle. Can you make a plan?</p>",
          "courseE_artist_concept4_b": "<p>Try creating one square. Then make a line of squares.  What comes next?</p>",
          "courseE_artist_concept4_c": "<p>After drawing a line of squares, you can either turn around and draw another line of squares going left, or you can jump back to the left side of the figure to draw another line of squares going right. Which do you prefer?</p>"
        },
        "courseE_artist_concept4_2018_authored_hint": {
          "courseE_artist_concept4_a": "<p>There are several ways to solve this puzzle. Can you make a plan?</p>",
          "courseE_artist_concept4_b": "<p>Try creating one square. Then make a line of squares.  What comes next?</p>",
          "courseE_artist_concept4_c": "<p>After drawing a line of squares, you can either turn around and draw another line of squares going left, or you can jump back to the left side of the figure to draw another line of squares going right. Which do you prefer?</p>"
        },
        "courseE_artist_concept_challenge1_authored_hint": {
          "courseE_artist_concept_challenge1_a": "<p>The half-hexagon has a <strong>length of 30</strong> and turns right by <strong>60 degrees</strong>.  </p>",
          "courseE_artist_concept_challenge1_b": "<p>The 2/3 triangle has a <strong>length of 80</strong> and turns right by <strong>120 degrees</strong>. </p>",
          "courseE_artist_concept_challenge1_c": "<p>This is the design you want to repeat to make the full shape:</p>\n<p><img src=\"https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png\"></p>"
        },
        "courseE_artist_concept_challenge1_2018_authored_hint": {
          "courseE_artist_concept_challenge1_a": "<p>The half-hexagon has a <strong>length of 30</strong> and turns right by <strong>60 degrees</strong>.  </p>",
          "courseE_artist_concept_challenge1_b": "<p>The 2/3 triangle has a <strong>length of 80</strong> and turns right by <strong>120 degrees</strong>. </p>",
          "courseE_artist_concept_challenge1_c": "<p>This is the design you want to repeat to make the full shape:</p>\n<p><img src=\"https://images.code.org/d6b2afd39119da33d085dcce6077ada8-image-1501705780826.28.43 PM.png\"></p>"
        },
        "courseE_artist_concept_challenge2_authored_hint": {
          "courseE_artist_concept_challenge2_a": "<p>Once you define a function, you can call it over and over again - whenever and wherever you want!</p>",
          "courseE_artist_concept_challenge2_b": "<p>You can jump to different positions on the canvas using this command:</p>\n<xml>  <block type=\"jump_to\">\n    <title name=\"VALUE\">???</title>\n  </block></xml>"
        },
        "courseE_artist_concept_challenge2_2018_authored_hint": {
          "courseE_artist_concept_challenge2_a": "<p>Once you define a function, you can call it over and over again - whenever and wherever you want!</p>",
          "courseE_artist_concept_challenge2_b": "<p>You can jump to different positions on the canvas using this command:</p>\n<xml>  <block type=\"jump_to\">\n    <title name=\"VALUE\">???</title>\n  </block></xml>"
        },
        "courseE_artist_embed_functions8_authored_hint": {},
        "courseE_artist_functions1_authored_hint": {
          "courseE_artist_functions1_a": "<p>The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.</p>",
          "courseE_artist_functions1_b": "<p>It is okay to draw overlapping lines to make your glasses.</p>",
          "courseE_artist_functions1_c": "<p>For shorter code, try using a <code>repeat</code> loop to draw the square frames of the glasses.</p>"
        },
        "courseE_artist_functions10_authored_hint": {
          "courseD_artist_functions10_b": "<p>This drawing is a lot like the last one, but the <code>draw line</code> function is now drawing a different shape.</p>",
          "courseD_artist_functions10_a": "<p>To avoid using multiple <code>move forward</code> blocks, create a <code>draw hexagon</code> function and call that multiple times.</p>",
          "courseD_artist_functions10_c": "<p>Do you see where this drawing could use a function called <code>line of hexagons</code>?</p>\n<p><img src=\"https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif\"></p>"
        },
        "courseE_artist_functions10_2018_authored_hint": {
          "courseD_artist_functions10_b": "<p>This drawing is a lot like the last one, but the <code>draw line</code> function is now drawing a different shape.</p>",
          "courseD_artist_functions10_a": "<p>To avoid using multiple <code>move forward</code> blocks, create a <code>draw hexagon</code> function and call that multiple times.</p>",
          "courseD_artist_functions10_c": "<p>Do you see where this drawing could use a function called <code>line of hexagons</code>?</p>\n<p><img src=\"https://images.code.org/904e0f38232fd9c15a3d2d172e7dde0b-image-1493140714580.gif\"></p>"
        },
        "courseE_artist_functions1_2018_authored_hint": {
          "courseE_artist_functions1_a": "<p>The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.</p>",
          "courseE_artist_functions1_b": "<p>It is okay to draw overlapping lines to make your glasses.</p>",
          "courseE_artist_functions1_c": "<p>For shorter code, try using a <code>repeat</code> loop to draw the square frames of the glasses.</p>"
        },
        "courseE_artist_functions2_authored_hint": {
          "courseD_artist_functions2_b": "<p>The function you write should not contain your whole program, just the part that draws a square with 100 pixel sides.</p>",
          "courseD_artist_functions2_c": "<p>Use the green <code>draw a square</code> block to \"call\" your function under the <code>when run</code> block. Otherwise, the code in your function will not run.</p>\n<xml><block type=\"procedures_callnoreturn\" limit=\"2\"><mutation name=\"draw a square\"/></block></xml>",
          "courseD_artist_functions2_a": "<p>Your program should:</p>\n<ul>\n<li>Use function</li>\n<li>Move forward 100 + 75 pixels</li>\n<li>Use function</li>\n</ul>"
        },
        "courseE_artist_functions2_2018_authored_hint": {
          "courseD_artist_functions2_b": "<p>The function should not contain your whole program, just the part that draws a square with 100 pixel sides.</p>",
          "courseD_artist_functions2_c": "<p>Make sure that you use the green <code>draw a square</code> block to \"call\" your function. Otherwise, the code in your function will not run.</p>\n<xml><block type=\"procedures_callnoreturn\" limit=\"2\"><mutation name=\"draw a square\"/></block></xml>",
          "courseD_artist_functions2_a": "<p>Your program should:</p>\n<ul>\n<li>Use your function</li>\n<li>Move forward 100 + 75 pixels</li>\n<li>Use your function again</li>\n</ul>"
        },
        "courseE_artist_functions3_authored_hint": {
          "courseD_artist_functions3_a": "<p>To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.</p>\n<p>If you can't remember what the starter code was, click \"start over\" in the upper right corner of the workspace.</p>",
          "courseD_artist_functions3_b": "<p>Your loop should have all 3 starter code blocks inside of it.</p>"
        },
        "courseE_artist_functions3_2018_authored_hint": {},
        "courseE_artist_functions4_authored_hint": {
          "courseD_artist_functions4_a": "<p>Try using a function!</p>",
          "courseD_artist_functions4_b": "<p>Drag the <code>draw a star</code> function block out of the toolbox to begin building your function. It should have the same code as the previous puzzle, since you are drawing the same star pattern.</p>",
          "courseD_artist_functions4_c": "<p>Use the green <code>draw a star</code> block to call this function in your main program. Don't forget to jump forward between each star!</p>"
        },
        "courseE_artist_functions4_2018_authored_hint": {
          "courseD_artist_functions4_a": "<p>Try using a function!</p>",
          "courseD_artist_functions4_b": "<p>Drag the <code>draw a star</code> function block out of the toolbox to begin building your function. It should have the same code as the previous puzzle, since you are drawing the same star pattern.</p>",
          "courseD_artist_functions4_c": "<p>Use the green <code>draw a star</code> block to call this function in your main program. Don't forget to jump forward between each star!</p>"
        },
        "courseE_artist_functions5_authored_hint": {
          "courseD_artist_functions5_a": "<p>Don't give up!  Remember what you have been learning.</p>",
          "courseD_artist_functions5_b": "<p>Functions make it easy to call saved code at any time, not just from inside a loop!</p>",
          "courseD_artist_functions5_c": "<p>Start by dragging the code for a star shape into the <code>draw a star</code> function, then use this function to draw the three stars!</p>"
        },
        "courseE_artist_functions5_2018_authored_hint": {
          "courseD_artist_functions5_a": "<p>Don't give up!  Remember what you have been learning.</p>",
          "courseD_artist_functions5_b": "<p>Functions make it easy to call saved code at any time, not just from inside a loop!</p>",
          "courseD_artist_functions5_c": "<p>Start by creating your <code>draw a star</code> function, then use this function to draw the three stars!</p>"
        },
        "courseE_artist_functions6_authored_hint": {
          "grade4_artist_functions_windows0_a": "<p>Focus only on making one window for now.  We'll create a function in the next puzzle.</p>",
          "grade4_artist_functions_windows0_b": "<p>Try using nested loops. The inner loop will make the square and the outer loop will rotate the square four times.</p>",
          "grade4_artist_functions_windows0_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseE_artist_functions6_2018_authored_hint": {
          "grade4_artist_functions_windows0_a": "<p>Focus only on making one window for now.  We'll create a function in the next puzzle.</p>",
          "grade4_artist_functions_windows0_b": "<p>Try using nested loops. The inner loop will make the square and the outer loop will rotate the square four times.</p>",
          "grade4_artist_functions_windows0_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseE_artist_functions7_authored_hint": {
          "courseD_artist_functions7_a": "<p>Try creating your function first then add windows one at a time.</p>",
          "courseD_artist_functions7_b": "<p>You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels between each top window, then down 150 pixels to get to the bottom windows.</p>"
        },
        "courseE_artist_functions7_2018_authored_hint": {
          "courseD_artist_functions7_a": "<p>Try creating your function first then add windows one at a time.</p>",
          "courseD_artist_functions7_b": "<p>To get from the top windows to the bottom windows, simply turn the artist right, jump 150 pixels, then turn the artist right again!  Now the artist will be facing the correct direction to finish the rest of the house!</p>"
        },
        "courseE_artist_functions8_authored_hint": {
          "courseD_artist_functions8_f": "<p>You only need one <code>move forward</code> block, but you will need quite a few <code>jump forward</code> and/or <code>jump backward</code> blocks!</p>",
          "courseD_artist_functions8_a": "<p>Start by making a function for a square, then try making a function for a line of squares.</p>\n<p>How would you use the <code>draw a line of squares</code> function to make this image?</p>",
          "courseD_artist_functions8_d": "<p>To make a line of squares,</p>\n<ul>\n<li>repeat 3 times<ul>\n<li>draw a square with a side length of <strong>50 pixels</strong></li>\n<li>jump forward <strong>100 pixels</strong></li>\n</ul>\n</li>\n</ul>",
          "courseD_artist_functions8_b": "<p>Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?</p>\n<p><img src=\"https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png\"></p>",
          "courseD_artist_functions8_c": "<p>At the end of each line of squares, the artist will need to jump down and backward before he draws the next line of squares.</p>",
          "courseD_artist_functions8_g": "<p><img src=\"https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif\"></p>"
        },
        "courseE_artist_functions8_2018_authored_hint": {
          "courseD_artist_functions8_f": "<p>You only need one <code>move forward</code> block, but you will need quite a few <code>jump forward</code> and/or <code>jump backward</code> blocks!</p>",
          "courseD_artist_functions8_a": "<p>Start by making a function for a square, then try making a function for a line of squares.</p>\n<p>How would you use the <code>draw a line of squares</code> function to make this image?</p>",
          "courseD_artist_functions8_d": "<p>To make a line of squares,</p>\n<ul>\n<li>repeat 3 times<ul>\n<li>draw a square with a side length of <strong>50 pixels</strong></li>\n<li>jump forward <strong>100 pixels</strong></li>\n</ul>\n</li>\n</ul>",
          "courseD_artist_functions8_b": "<p>Think of each row in this picture as a line of 3 squares. How many lines of squares are there and where do you start drawing each of them?</p>\n<p><img src=\"https://images.code.org/22a6f5cc5551371057244eee01955f8e-image-1493135135468.4.10 Hint Drawing.png\"></p>",
          "courseD_artist_functions8_c": "<p>At the end of each set of staggered squares, the artist will need to jump down and backward before he draws the next set of staggered squares.</p>",
          "courseD_artist_functions8_g": "<p><img src=\"https://images.code.org/c5b48a0db328c6cb32a024d2bf9c00af-image-1493139855549.gif\"></p>"
        },
        "courseE_artist_functions8a_2018_authored_hint": {},
        "courseE_artist_functions8b_2018_authored_hint": {
          "courseD_artist_functions8_f": "<p>You only need one <code>move forward</code> block if you're doing this correctly!</p>",
          "courseD_artist_functions8_a": "<p>Start by making a function for a square, then try making a function for a line of squares.</p>",
          "courseD_artist_functions8_d": "<p>To make a line of squares,</p>\n<ul>\n<li>repeat 3 times<ul>\n<li>draw a square</li>\n<li>jump forward <strong>100 pixels</strong></li>\n</ul>\n</li>\n</ul>"
        },
        "courseE_artist_functions8c_2018_authored_hint": {
          "courseD_artist_functions8_f": "<p>This is easier than it looks!  You shouldn't need any <code>move</code> or <code>jump</code> blocks here!</p>",
          "courseD_artist_functions8_a": "<p>The second line of squares is just a 180 degree turn different than the first!</p>",
          "courseD_artist_functions8_c": "<p>At the end of each line of squares, the artist only needs to turn 180 degrees before drawing the next line of squares.  Put the whole thing in a repeat loop to set you up for the next exercise!</p>"
        },
        "courseE_artist_functions9_authored_hint": {
          "courseD_artist_functions9_e": "<p>Can you spot all four places that the <code>line of triangles</code> can be used in this drawing?</p>\n<p><img src=\"https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif\"></p>",
          "courseD_artist_functions9_a": "<p>This puzzle can be broken into three parts:</p>\n<ul>\n<li>make the <code>draw a triangle</code> function</li>\n<li>make the <code>draw a line of triangles</code> function</li>\n<li>use your <code>draw a line of triangles</code> function four times to complete the drawing</li>\n</ul>",
          "courseD_artist_functions9_b": "<p>This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line.</p>",
          "courseD_artist_functions9_c": "<p>To draw a line of triangles:</p>\n<ul>\n<li>repeat 4 times<ul>\n<li>draw a triangle</li>\n<li>jump forward 50 pixels</li>\n</ul>\n</li>\n</ul>",
          "courseD_artist_functions9_d": "<p>To draw the diamond:</p>\n<ul>\n<li>repeat 2 times<ul>\n<li>draw a line of triangles</li>\n<li>turn 60 degrees</li>\n<li>draw a line of triangles</li>\n<li>turn 120 degrees</li>\n</ul>\n</li>\n</ul>"
        },
        "courseE_artist_functions9_2018_authored_hint": {
          "courseD_artist_functions9_e": "<p>Can you spot all four places that the <code>line of triangles</code> can be used in this drawing?</p>\n<p><img src=\"https://images.code.org/130e1040ecca7186dea87f42666f5620-image-1493140373966.gif\"></p>",
          "courseD_artist_functions9_a": "<p>This puzzle can be broken into three parts:</p>\n<ul>\n<li>make the <code>draw a triangle</code> function</li>\n<li>make the <code>draw a line of triangles</code> function</li>\n<li>use your <code>draw a line of triangles</code> function four times to complete the drawing</li>\n</ul>",
          "courseD_artist_functions9_b": "<p>This drawing is made by drawing a line of triangles 4 times and turning either 60 or 120 degrees before you draw the next triangle line.</p>",
          "courseD_artist_functions9_c": "<p>To draw a line of triangles:</p>\n<ul>\n<li>repeat 4 times<ul>\n<li>draw a triangle</li>\n<li>jump forward 50 pixels</li>\n</ul>\n</li>\n</ul>",
          "courseD_artist_functions9_d": "<p>To draw the diamond:</p>\n<ul>\n<li>repeat 2 times<ul>\n<li>draw a line of triangles</li>\n<li>turn 60 degrees</li>\n<li>draw a line of triangles</li>\n<li>turn 120 degrees</li>\n</ul>\n</li>\n</ul>"
        },
        "courseE_artist_functionsProj_2018_authored_hint": {},
        "courseE_artist_functions_challenge_authored_hint": {
          "courseE_artist_functions_challenge_a": "<p>If you call the function one more time, you can create the same design in the final corner. You can also <code>jump to</code> other positions or change the whole thing around however you want!</p>"
        },
        "courseE_artist_functions_challenge1_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<p>If you call the function one more time, you can create the same design in the final corner.</p>",
          "courseE_artist_functions_challenge1_b": "<p>You can also <code>jump to</code> other positions or change the whole design however you want!</p>"
        },
        "courseE_artist_functions_challenge1_2018_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<p>If you call the function one more time, you can create the same design in the final corner.</p>",
          "courseE_artist_functions_challenge1_b": "<p>You can also <code>jump to</code> other positions or change the whole design however you want!</p>"
        },
        "courseE_artist_functions_challenge2_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n\n<p>This <code>jump to</code> block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is <em>before</em> the command is run!</p>\n<p><img src=\"https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png\"></p>"
        },
        "courseE_artist_functions_challenge2_2018_authored_hint": {
          "courseE_artist_functions_challenge1_a": "<xml>\n\n  <block type=\"jump_to_xy\">\n    <title name=\"XPOS\">350</title>\n    <title name=\"YPOS\">200</title>\n  </block>\n  </xml>\n\n<p>This <code>jump to</code> block lets you move the zombie artist to any pixel on the grid, whenever you want. It works by moving him a number of pixels over to the right and a number of pixels down. This is always counted from the top left corner, which it means it doesn't matter where the zombie artist is <em>before</em> the command is run!</p>\n<p><img src=\"https://images.code.org/b90fdddc778a27e199221271ce91307a-image-1496450976440.png\"></p>"
        },
        "courseE_artist_functions_predict1_authored_hint": {},
        "courseE_artist_functions_predict1_2018_authored_hint": {},
        "courseE_artist_functions_predict2_authored_hint": {},
        "courseE_artist_functions_predict2_2018_authored_hint": {},
        "courseE_artist_predict1_authored_hint": {},
        "courseE_artist_predict1_2018_authored_hint": {},
        "courseE_artist_ramp10_authored_hint": {
          "courseD_artist_ramp10_a": "<p>Don't forget to turn by 60 degrees after each triangle.  Which loop do you need to put that instruction inside?</p>",
          "courseD_artist_ramp10_b": "<p>You can use the drop down menu on the <code>turn</code> blocks to see which angle you need!</p>",
          "courseD_artist_ramp10_c": "<p>The artist will draw six triangles in total:</p>\n<p><img src=\"https://images.code.org/752d82f3afdca0a7d7c01d6fa2abb583-image-1499889821499.2_solution2.gif\"></p>"
        },
        "courseE_artist_ramp11_authored_hint": {
          "courseD_artist_ramp11a": "<p>To draw a side, use the <code>move forward by 100 pixels</code> block, and change the 100 to a 200.</p>",
          "courseD_artist_ramp11b": "<p>To draw 4 sides, put the <code>move forward by 100 pixels</code> block inside of a repeat loop and make sure the loop is set to draw 4 times.</p>\n<p>Don't forget to turn afterward!</p>"
        },
        "courseE_artist_ramp12_authored_hint": {
          "courseD_artist_ramp12_a": "<p>You can either draw the square first, then the triangle, or do it the other way around!</p>"
        },
        "courseE_artist_ramp8_authored_hint": {
          "courseE_artist_ramp8_a": "<p>To draw a side, use the <code>move forward by 100 pixels</code> block, and change the 100 to a 200.</p>",
          "courseE_artist_ramp8_b": "<p>To draw 4 sides, put the <code>move forward by 100 pixels</code> block inside of a repeat loop and make sure the loop is set to draw 4 times.</p>\n<p>Don't forget to turn afterward!</p>",
          "courseE_artist_ramp8_c": "<p>Your loop should have two blocks inside of it: <code>move forward</code> and <code>turn right by 90 degrees</code>.</p>"
        },
        "courseE_artist_ramp8_2_authored_hint": {
          "courseE_artist_ramp8_a": "<p>To draw a side, use the <code>move forward by 100 pixels</code> block, and change the 100 to a 200.</p>",
          "courseE_artist_ramp8_b": "<p>To draw 4 sides, put the <code>move forward by 100 pixels</code> block inside of a repeat loop and make sure the loop is set to draw 4 times.</p>\n<p>Don't forget to turn afterward!</p>",
          "courseE_artist_ramp8_c": "<p>Your loop should have two blocks inside of it: <code>move forward</code> and <code>turn right by 90 degrees</code>.</p>"
        },
        "courseE_artist_ramp8_2018_authored_hint": {
          "courseE_artist_ramp8_a": "<p>To draw a side, use the <code>move forward by 100 pixels</code> block, and change the 100 to a 200.</p>",
          "courseE_artist_ramp8_b": "<p>To draw 4 sides, put the <code>move forward by 100 pixels</code> block inside of a repeat loop and make sure the loop is set to draw 4 times.</p>\n<p>Don't forget to turn afterward!</p>",
          "courseE_artist_ramp8_c": "<p>Your loop should have two blocks inside of it: <code>move forward</code> and <code>turn right by 90 degrees</code>.</p>"
        },
        "courseE_artist_ramp8_2_2018_authored_hint": {
          "courseE_artist_ramp8_a": "<p>To draw a side, use the <code>move forward by 100 pixels</code> block, and change the 100 to a 200.</p>",
          "courseE_artist_ramp8_b": "<p>To draw 4 sides, put the <code>move forward by 100 pixels</code> block inside of a repeat loop and make sure the loop is set to draw 4 times.</p>\n<p>Don't forget to turn afterward!</p>",
          "courseE_artist_ramp8_c": "<p>Your loop should have two blocks inside of it: <code>move forward</code> and <code>turn right by 90 degrees</code>.</p>"
        },
        "courseE_artist_ramp9_authored_hint": {
          "courseD_artist_ramp12_a": "<p>How is this similar to a square?  How is it different?</p>",
          "courseD_artist_ramp12_b": "<p>You can use the drop down menu on the <code>turn</code> blocks to see which angle you need!</p>",
          "courseD_artist_ramp12_c": "<p>To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?</p>"
        },
        "courseE_artist_ramp9_2_authored_hint": {
          "courseD_artist_ramp12_a": "<p>How is this similar to a square?  How is it different?</p>",
          "courseD_artist_ramp12_b": "<p>You can use the drop down menu on the <code>turn</code> blocks to see which angle you need!</p>",
          "courseD_artist_ramp12_c": "<p>To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?</p>"
        },
        "courseE_artist_ramp9_2018_authored_hint": {
          "courseD_artist_ramp12_a": "<p>How is this similar to a square?  How is it different?</p>",
          "courseD_artist_ramp12_b": "<p>You can use the drop down menu on the <code>turn</code> blocks to see which angle you need!</p>",
          "courseD_artist_ramp12_c": "<p>To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?</p>"
        },
        "courseE_artist_ramp9_2_2018_authored_hint": {
          "courseD_artist_ramp12_a": "<p>How is this similar to a square?  How is it different?</p>",
          "courseD_artist_ramp12_b": "<p>You can use the drop down menu on the <code>turn</code> blocks to see which angle you need!</p>",
          "courseD_artist_ramp12_c": "<p>To draw each side, you will need to move forward 100 pixels, then turn right 120 degrees. How many sides do you need?</p>"
        },
        "courseE_bee_concept1_authored_hint": {
          "courseE_bee_concept1_b": "<p>Are there any patterns that <em>repeat</em> here?</p>",
          "courseE_bee_concept1_a": "<p>If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see.</p>"
        },
        "courseE_bee_concept1_2018_authored_hint": {
          "courseE_bee_concept1_b": "<p>Are there any patterns that <em>repeat</em> here?</p>",
          "courseE_bee_concept1_a": "<p>If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see.</p>"
        },
        "courseE_bee_concept2_authored_hint": {
          "courseE_bee_concept2_a": "<p>Would a <code>while</code> loop help here?</p>",
          "courseE_bee_concept2_d": "<p>You can even check empty spaces to see if honey is &gt; 0.</p>",
          "courseE_bee_concept2_b": "<p>You can use <code>while</code> loops to move to the end of each path, and to collect all of the honey from each space.</p>",
          "courseE_bee_concept2_c": "<p>Which way should the bee turn after each path?</p>"
        },
        "courseE_bee_concept2_2018_authored_hint": {
          "courseE_bee_concept2_a": "<p>Would a <code>while</code> loop help here?</p>",
          "courseE_bee_concept2_d": "<p>With this <code>while</code> loop you  can check empty spaces to see if the amount of honey is &gt; 0. This does the same as the <code>while there is honey</code> loop. </p>",
          "courseE_bee_concept2_b": "<p>You can use <code>while</code> loops to move to the end of each path, and to collect all of the honey from each space.</p>",
          "courseE_bee_concept2_c": "<p>Which way should the bee turn after each path?</p>"
        },
        "courseE_bee_concept3_authored_hint": {
          "courseE_bee_concept3a_a": "<p>Try using nested <code>repeat</code> loops to solve this puzzle.</p>",
          "courseE_bee_concept3a_b": "<p>If you can't figure out where to put the loops, try writing your code step-by-step and looking for patterns.</p>",
          "courseE_bee_concept3a_c": "<p>There are three groups of flowers, so your outer <code>repeat</code> loop should repeat three times.</p>"
        },
        "courseE_bee_concept3_2018_authored_hint": {
          "courseE_bee_concept3a_a": "<p>Try using nested <code>repeat</code> loops to solve this puzzle.</p>",
          "courseE_bee_concept3a_b": "<p>If you can't figure out where to put the loops, try writing your code step-by-step and looking for patterns.</p>",
          "courseE_bee_concept3a_c": "<p>There are three groups of flowers, so your outer <code>repeat</code> loop should repeat three times.</p>"
        },
        "courseE_bee_concept4_authored_hint": {
          "courseE_bee_concept4_a": "<p>An <code>if/else</code> statement could really help you out here.</p>",
          "courseE_bee_concept4_b": "<p>The stair step pattern can help you get through all of the flowers and honeycombs.</p>",
          "courseE_bee_concept4_c": "<p>If you are at a flower, how many times do you have to get nectar? Is this the same number for all flowers?</p>"
        },
        "courseE_bee_concept4_2018_authored_hint": {
          "courseE_bee_concept4_a": "<p>An <code>if/else</code> statement could really help you out here.</p>",
          "courseE_bee_concept4_b": "<p>The stair step pattern can help you get through all of the flowers and honeycombs.</p>",
          "courseE_bee_concept4_c": "<p>If you are at a flower, how many times do you have to get nectar? Is this the same number for all flowers?</p>"
        },
        "courseE_bee_concept5_authored_hint": {
          "courseE_bee_concept5_a": "<p>The flowers follow a rectangular path.  You can trace that rectangle using <code>while path ahead</code> even with a different number of squares per side.</p>",
          "courseE_bee_concept5_c": "<p>Here's a picture of a rectangular path the bee could take.</p>\n<p><img src=\"https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png\"></p>",
          "courseE_bee_concept5_b": "<p>You can check every square for a flower using the <code>if</code> block, even if you already know there's not one there.</p>"
        },
        "courseE_bee_concept5_2018_authored_hint": {
          "courseE_bee_concept5_a": "<p>The flowers follow a rectangular path.  You can trace that rectangle using <code>while path ahead</code> even with a different number of squares per side.</p>",
          "courseE_bee_concept5_c": "<p>Here's a picture of a rectangular path the bee could take.</p>\n<p><img src=\"https://images.code.org/39554a528b5ed168737e846c161f00ee-image-1510202150660.33.23.png\"></p>",
          "courseE_bee_concept5_b": "<p>You can check every square for a flower using the <code>if</code> block, even if you already know there's not one there.</p>"
        },
        "courseE_bee_functions1_authored_hint": {
          "courseE_bee_functions1_a": "<p>Remember that left and right turns are from the point of view of the bee.</p>",
          "courseE_bee_functions1_b": "<p>Use a <code>repeat</code> loop when collecting nectar to make your code shorter.</p>",
          "courseE_bee_functions1_c": "<p>Remember that left and right turns are from the perspective of the bee.</p>"
        },
        "courseE_bee_functions10_authored_hint": {
          "courseE_bee_functions10_a": "<p>You will need a <code>while</code> loop to collect all of the honey, since it varies between honeycombs.</p>",
          "courseE_bee_functions10_b": "<p>Include the turns and movement in your function, so you can call it when the bee is on the main path.</p>",
          "courseE_bee_functions10_c": "<p>Remember to call your function in the main program!</p>"
        },
        "courseE_bee_functions10_2018_authored_hint": {
          "courseE_bee_functions10_a": "<p>You will need a <code>while</code> loop to collect all of the honey, since it varies between honeycombs.</p>",
          "courseE_bee_functions10_b": "<p>Include the turns and movement in your function, so you can call it when the bee is on the main path.</p>",
          "courseE_bee_functions10_c": "<p>Remember to call your function in the main program!</p>"
        },
        "courseE_bee_functions1_2018_authored_hint": {
          "courseE_bee_functions1_a": "<p>Remember that left and right turns are from the point of view of the bee.</p>",
          "courseE_bee_functions1_b": "<p>Use a <code>repeat</code> loop when collecting nectar to make your code shorter.</p>",
          "courseE_bee_functions1_c": "<p>Remember that left and right turns are from the perspective of the bee.</p>"
        },
        "courseE_bee_functions2_authored_hint": {
          "courseE_bee_functions2_a": "<p>The function has been written for you, but you will need to call it at each flower.</p>",
          "courseE_bee_functions2_b": "<p>This <xml><block type=\"procedures_callnoreturn\"><mutation name=\"get 2 nectar\"/></block></xml> block calls the function given to you.</p>",
          "courseE_bee_functions2_c": "<p>You will want to move forward and get 2 nectar twice to solve this puzzle.</p>"
        },
        "courseE_bee_functions2_2018_authored_hint": {
          "courseE_bee_functions2_a": "<p>The function has been written for you, but you will need to call it at each flower.</p>",
          "courseE_bee_functions2_b": "<p>This <xml><block type=\"procedures_callnoreturn\"><mutation name=\"get 2 nectar\"/></block></xml> block calls the function given to you.</p>",
          "courseE_bee_functions2_c": "<p>You will want to move forward and get 2 nectar twice to solve this puzzle.</p>"
        },
        "courseE_bee_functions3_authored_hint": {
          "courseE_bee_functions3_a": "<p>Your function for this puzzle only needs to collect nectar, it shouldn't have any <code>move forward</code> or <code>turn</code> blocks in it. </p>",
          "courseE_bee_functions3_b": "<p>Call your <code>get 5</code> function under the <code>when run</code> block.</p>",
          "courseE_bee_functions3_c": "<p>Your main program will control all of the movement, the function is just for what happens when the bee reaches a flower.</p>",
          "courseE_bee_functions3_d": "<p>Try using this path through.</p>"
        },
        "courseE_bee_functions3_2018_authored_hint": {
          "courseE_bee_functions3_a": "<p>Your function for this puzzle only needs to collect nectar, it shouldn't have any <code>move forward</code> or <code>turn</code> blocks in it. </p>",
          "courseE_bee_functions3_b": "<p>Call your <code>get 5</code> function under the <code>when run</code> block.</p>",
          "courseE_bee_functions3_c": "<p>Your main program will control all of the movement, the function is just for what happens when the bee reaches a flower.</p>",
          "courseE_bee_functions3_d": "<p>Try using this path through.</p>"
        },
        "courseE_bee_functions4_authored_hint": {
          "courseE_bee_functions4_a": "<p>Your function will already travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.</p>",
          "courseE_bee_functions4_b": "<p>Use the green <code>move and get nectar</code> block to call this function.</p>",
          "courseE_bee_functions4_c": "<p>You don't need to change the function, just use it in your program.</p>"
        },
        "courseE_bee_functions4_2018_authored_hint": {
          "courseE_bee_functions4_a": "<p>Your function will already travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.</p>",
          "courseE_bee_functions4_b": "<p>Use the green <code>move and get nectar</code> block to call this function.</p>",
          "courseE_bee_functions4_c": "<p>You don't need to change the function, just use it in your program.</p>"
        },
        "courseE_bee_functions5_authored_hint": {
          "courseE_bee_functions5_a": "<p>Edit the function so that it solves the puzzle without having to change the main program.</p>",
          "courseE_bee_functions5_c": "<p>The <code>move forward</code> block can be changed into a <code>move backward</code> block. Use this instead of turning all the way around at the end of the paths!</p>",
          "courseE_bee_functions5_b": "<p>Your function should make the bee: </p>\n<ul>\n<li>turn</li>\n<li>move forward</li>\n<li>collect all of the nectar</li>\n<li>move backward</li>\n<li>turn back to the direction that the bee started from</li>\n</ul>"
        },
        "courseE_bee_functions5_2018_authored_hint": {
          "courseE_bee_functions5_a": "<p>Edit the function so that it solves the puzzle without having to change the main program.</p>",
          "courseE_bee_functions5_c": "<p>The <code>move forward</code> block can be changed into a <code>move backward</code> block. Use this instead of turning all the way around at the end of the paths!</p>",
          "courseE_bee_functions5_b": "<p>Your function should make the bee: </p>\n<ul>\n<li>turn</li>\n<li>move forward</li>\n<li>collect all of the nectar</li>\n<li>move backward</li>\n<li>turn back to the direction that the bee started from</li>\n</ul>"
        },
        "courseE_bee_functions6_authored_hint": {
          "courseE_bee_functions6_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>\n<p><img src=\"https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif\"></p>",
          "courseE_bee_functions6_b": "<p>It might help in this case to move inside of the function, but not all of your <code>move</code> blocks need to be there.</p>"
        },
        "courseE_bee_functions6_2018_authored_hint": {
          "courseE_bee_functions6_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>\n<p><img src=\"https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif\"></p>",
          "courseE_bee_functions6_b": "<p>It might help in this case to move inside of the function, but not all of your <code>move</code> blocks need to be there.</p>"
        },
        "courseE_bee_functions6test_authored_hint": {
          "courseE_bee_functions6_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>\n<p><img src=\"https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif\"></p>",
          "courseE_bee_functions6_b": "<p>It might help in this case to move inside of the function, but not all of your <code>move</code> blocks need to be there.</p>"
        },
        "courseE_bee_functions7_authored_hint": {
          "courseE_bee_functions7_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseE_bee_functions7_b": "<p>Remember to build your code inside of the green function block.</p>\n<p><img src=\"https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif\"></p>",
          "courseE_bee_functions7_c": "<p>This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back.</p>"
        },
        "courseE_bee_functions7_2018_authored_hint": {
          "courseE_bee_functions7_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseE_bee_functions7_b": "<p>Remember to build your code inside of the green function block.</p>\n<p><img src=\"https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif\"></p>",
          "courseE_bee_functions7_c": "<p>This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back.</p>"
        },
        "courseE_bee_functions8_authored_hint": {
          "courseE_bee_functions8_a": "<p>Your function will only need to collect nectar. Try using a while loop instead of a repeat loop.</p>",
          "courseE_bee_functions8_b": "<p>Use <code>while nectar &gt; 0</code> to make sure you get all of the nectar.</p>",
          "courseE_bee_functions8_c": "<p>Your main program will need a stair step movement pattern. Remember, the main program is the code under the <code>when run</code> block.</p>"
        },
        "courseE_bee_functions8_2018_authored_hint": {
          "courseE_bee_functions8_a": "<p>Your function will only need to collect nectar. Try using a while loop instead of a repeat loop.</p>",
          "courseE_bee_functions8_b": "<p>Use <code>while nectar &gt; 0</code> to make sure you get all of the nectar.</p>",
          "courseE_bee_functions8_c": "<p>Your main program will need a stair step movement pattern. Remember, the main program is the code under the <code>when run</code> block.</p>"
        },
        "courseE_bee_functions9_authored_hint": {
          "courseE_bee_functions9_a": "<p>You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.</p>",
          "courseE_bee_functions9_b": "<p>Even though you know how much nectar some of the flowers have, a <code>while</code> loop can make one function work for all of them.</p>"
        },
        "courseE_bee_functions9_2018_authored_hint": {
          "courseE_bee_functions9_a": "<p>You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.</p>",
          "courseE_bee_functions9_b": "<p>Even though you know how much nectar some of the flowers have, a <code>while</code> loop can make one function work for all of them.</p>"
        },
        "courseE_bee_functions_challenge1_authored_hint": {
          "courseE_bee_functions_challenge1_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseE_bee_functions_challenge1_b": "<p>Remember to build your code inside of the green function block.</p>"
        },
        "courseE_bee_functions_challenge1_2018_authored_hint": {
          "courseE_bee_functions_challenge1_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseE_bee_functions_challenge1_b": "<p>Remember to build your code inside of the green function block.</p>"
        },
        "courseE_bee_functions_challenge2_authored_hint": {
          "courseE_bee_functions_challenge1_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseE_bee_functions_challenge1_b": "<p>Remember to build your code inside of the green function block.</p>"
        },
        "courseE_bee_functions_challenge2_2018_authored_hint": {
          "courseE_bee_functions_challenge1_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseE_bee_functions_challenge1_b": "<p>Remember to build your code inside of the green function block.</p>"
        },
        "courseE_bee_ramp14_authored_hint": {
          "courseE_bee_ramp14_a": "<p>The bee works just like the farmer in the previous puzzle. Buzz along the path and collect nectar while there is nectar (while nectar &gt; 0) and make all of the honey.</p>",
          "courseE_bee_ramp14_b": "<p>There can be more than one flower or honeycomb at each space, so make sure to use <code>while</code> loops to get them all!</p>",
          "courseE_bee_ramp14_c": "<p>This puzzle is nearly identical to the previous one, just with honey and nectar instead of vegetables.</p>"
        },
        "courseE_bee_ramp14_2018_authored_hint": {
          "courseE_bee_ramp14_a": "<p>The bee works just like the farmer in the previous puzzle. Buzz along the path and collect nectar while there is nectar (while nectar &gt; 0) and make all of the honey.</p>",
          "courseE_bee_ramp14_b": "<p>There can be more than one flower or honeycomb at each space, so make sure to use <code>while</code> loops to get them all!</p>",
          "courseE_bee_ramp14_c": "<p>This puzzle is nearly identical to the previous one, just with honey and nectar instead of vegetables.</p>"
        },
        "courseE_bee_ramp17_authored_hint": {
          "courseE_bee_ramp17_a": "<p>Since we don't have a repeat block to do something a certain number of times, what block should we use to move along the path?</p>",
          "courseE_bee_ramp17": "<p>If you were to solve this puzzle without an until block, where would you see repeated code? How can you use this repeated code to shape how you must use an until block to solve the problem?</p>",
          "courseE_bee_ramp17_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>",
          "courseE_bee_ramp17_c": "<p>You will want to move in a stair-step pattern. Try coding that first, then adding the <code>if/else</code> statement and <code>while</code> loops to check for flowers and honeycombs.</p>"
        },
        "courseE_collector_ramp10_authored_hint": {
          "courseD_artist_ramp10_a": "<p>Instead of using four <code>move forward</code> blocks for each side, try putting one <code>move forward</code> block inside of a <code>repeat</code> loop, like this:</p>\n<xml><block type=\"controls_repeat\">\n                                            <title name=\"TIMES\">4</title>\n                                            <statement name=\"DO\">\n                                              <block type=\"maze_moveForward\"/>\n                                            </statement>\n                                          </block></xml>",
          "courseD_artist_ramp10_b": "<p>Don't forget to collect one piece of treasure, then turn after each set of steps!</p>"
        },
        "courseE_farmer_concept1_authored_hint": {
          "courseE_farmer_concept1_a": "<p>A <code>while there is a hole</code> block will help you fill any hole until it's flat.</p>",
          "courseE_farmer_concept1_b": "<p>You can use a stair step pattern to get to the holes.</p>"
        },
        "courseE_farmer_concept1_2018_authored_hint": {
          "courseE_farmer_concept1_a": "<p>A <code>while there is a hole</code> block will help you fill any hole until it's flat.</p>",
          "courseE_farmer_concept1_b": "<p>You can use a stair step pattern to get to the holes.</p>"
        },
        "courseE_farmer_concept2_authored_hint": {
          "courseE_farmer_concept2_a": "<p>The paths are all the same length, but they are a different number of squares apart.  A loop isn't ideal here. Try a function.</p>",
          "courseE_farmer_concept2_b": "<p>A function which turns, goes down the path, gathers pumpkins, and returns to the main horizontal path could be helpful here.</p>",
          "courseE_farmer_concept2_c": "<p>Your main program can call this function with the green <code>do something</code> block.</p>"
        },
        "courseE_farmer_concept2_2018_authored_hint": {
          "courseE_farmer_concept2_a": "<p>The paths are all the same length, but they are a different number of squares apart.  A loop isn't ideal here. Try a function.</p>",
          "courseE_farmer_concept2_b": "<p>A function which turns, goes down the path, gathers pumpkins, and returns to the main horizontal path could be helpful here.</p>",
          "courseE_farmer_concept2_c": "<p>Your main program can call this function with the green <code>do something</code> block.</p>"
        },
        "courseE_farmer_concept3_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_8_a": "<p>The <code>while path ahead</code> block lets you keep going, even if you don't know how many squares are in a path.</p>",
          "grade3_robotFarmer_ConditionalsIntro_8_b": "<p>What should you do once you've reached the end of a path?</p>",
          "grade3_robotFarmer_ConditionalsIntro_8_c": "<p>Use a <code>repeat</code> loop to run your code multiple times for each straight path.</p>"
        },
        "courseE_farmer_concept3_2018_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_8_a": "<p>The <code>while path ahead</code> block lets you keep going, even if you don't know how many squares are in a path.</p>",
          "grade3_robotFarmer_ConditionalsIntro_8_b": "<p>What should you do once you've reached the end of a path?</p>",
          "grade3_robotFarmer_ConditionalsIntro_8_c": "<p>Use a <code>repeat</code> loop to run your code multiple times for each straight path.</p>"
        },
        "courseE_farmer_concept4_authored_hint": {
          "4-5_Artist_Patterns_3_a": "<p>Be careful to pull out the full block of \"code from the toolbar each time you try a new one.</p>",
          "4-5_Artist_Patterns_3_b": "<p>If your code becomes too confusing, you can always click \"Start Over\" and try again!</p>"
        },
        "courseE_farmer_elseif_test_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_8_a": "<p>The <code>while path ahead</code> block lets you keep going, even if you don't know how many squares are in a path.</p>",
          "grade3_robotFarmer_ConditionalsIntro_8_b": "<p>What should you do once you've reached the end of a path?</p>",
          "grade3_robotFarmer_ConditionalsIntro_8_c": "<p>Use a <code>repeat</code> loop to run your code multiple times for each straight path.</p>"
        },
        "courseE_farmer_functions1_authored_hint": {
          "courseE_farmer_functions1_a": "<p>The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have.</p>",
          "courseE_farmer_functions1_b": "<p>You only need to pick one pumpkin, but could you use a loop to get to it?</p>"
        },
        "courseE_farmer_functions10_authored_hint": {},
        "courseE_farmer_functions10a1_2018_authored_hint": {},
        "courseE_farmer_functions10b_authored_hint": {
          "courseE_farmer_functions10b_a": "<p>You will have to re-create your function first.</p>",
          "courseE_farmer_functions10b_b": "<p>Which way do you need to turn after the first pumpkin?</p>",
          "courseE_farmer_functions10b_c": "<p>Look back at the last puzzle if you need help making the function.</p>"
        },
        "courseE_farmer_functions10b_2018_authored_hint": {
          "courseE_farmer_functions10b_a": "<p>You will have to re-create your function first.</p>",
          "courseE_farmer_functions10b_b": "<p>Which way do you need to turn after the first pumpkin?</p>",
          "courseE_farmer_functions10b_c": "<p>Look back at the last puzzle if you need help making the function.</p>"
        },
        "courseE_farmer_functions11_predict_authored_hint": {},
        "courseE_farmer_functions11_predict_2018_authored_hint": {},
        "courseE_farmer_functions13_2018_authored_hint": {},
        "courseE_farmer_functions1_2018_authored_hint": {
          "courseE_farmer_functions1_a": "<p>The toolbox is organized a little differently this time! Click on the different categories to see which blocks you have.</p>",
          "courseE_farmer_functions1_b": "<p>You only need to pick one pumpkin, but could you use a loop to get to it?</p>"
        },
        "courseE_farmer_functions1a_authored_hint": {
          "courseE_farmer_functions1a_a": "<p>Think through the <code>if/else</code> statements step by step. What should you do if you are standing at a corn plant?</p>",
          "courseE_farmer_functions1a_b": "<p>Use a <code>repeat until</code> block to get to the pumpkin!</p>"
        },
        "courseE_farmer_functions1a_2018_authored_hint": {
          "courseE_farmer_functions1a_a": "<p>Make sure you read through the function definition. Can you tell what it does?</p>",
          "courseE_farmer_functions1a_b": "<p>Use a <code>repeat until</code> block to get to the pumpkin!</p>"
        },
        "courseE_farmer_functions2a_authored_hint": {},
        "courseE_farmer_functions2aALT_authored_hint": {},
        "courseE_farmer_functions2b_authored_hint": {
          "courseE_farmer_functions2b_a": "<p>You can use a <code>repeat until pumpkin</code> to get to the ends of the two paths.</p>",
          "courseE_farmer_functions2b_b": "<p>There is no corn on the connecting path, so you can just move along it and turn.</p>",
          "courseE_farmer_functions2b_c": "<p>You will need two separate <code>repeat until</code> blocks to get all of the crops.</p>"
        },
        "courseE_farmer_functions2b_2018_authored_hint": {
          "courseE_farmer_functions2b_a": "<p>You can <code>repeat until pumpkin</code> to get to the ends of the two paths.</p>",
          "courseE_farmer_functions2b_b": "<p>There is no corn on the connecting path, so you can just move along it and turn.</p>",
          "courseE_farmer_functions2b_c": "<p>You will need two separate <code>repeat until</code> blocks to get all of the crops.</p>"
        },
        "courseE_farmer_functions2ba_authored_hint": {
          "courseE_farmer_functions2ba_a": "<p>Use the green <code>corn and pumpkin</code> block to call this function.</p>",
          "courseE_farmer_functions2ba_b": "<p>Drag all of the blocks in the workspace together under <code>when run</code> to see how this function works.</p>"
        },
        "courseE_farmer_functions2ba_2018_authored_hint": {
          "courseE_farmer_functions2ba_a": "<p>Use the green <code>get all pumpkins</code> block to make sure you get all of the pumpkins!</p>"
        },
        "courseE_farmer_functions3_authored_hint": {
          "courseE_farmer_functions3_a": "<p>Try using a <code>while path ahead</code> loop to get you where you need to be.</p>"
        },
        "courseE_farmer_functions3b_authored_hint": {
          "courseE_farmer_functions1a_a": "<p>Nested <code>if</code> and <code>if/else</code> statements will really help you out here.</p>"
        },
        "courseE_farmer_functions3c_authored_hint": {
          "courseE_farmer_functions3c_a": "<p>What sequence is repeated often in this program? Can you drag these blocks into the function?</p>",
          "courseE_farmer_functions3c_b": "<p>Don't forget to call your function in the main program wherever you removed blocks.</p>"
        },
        "courseE_farmer_functions3c1_2018_authored_hint": {
          "coursee_farmer_functions3c1_2018_a": "<p>You'll need to use the <code>pick along path</code> function three times to solve this puzzle.</p>",
          "coursee_farmer_functions3c1_2018_b": "<p>What code do you need to add to get around the corners?</p>"
        },
        "courseE_farmer_functions3c_2018_authored_hint": {},
        "courseE_farmer_functions4_authored_hint": {
          "courseE_farmer_functions4_a": "<p>Drag all of the code out of your <code>repeat</code> loop and into the <code>go get pumpkins</code> function.</p>",
          "courseE_farmer_functions4_b": "<p>Don't forget to put the block that calls the <code>go get pumpkins</code> functions inside your loop before you run your code.</p>"
        },
        "courseE_farmer_functions4b_authored_hint": {
          "courseE_farmer_functions4b_a": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>",
          "courseE_farmer_functions4b_b": "<p>Remember to turn after each path.</p>",
          "courseE_farmer_functions4b_c": "<p>The green <code>corn and pumpkin</code> blocks are in the Functions tab of the toolbox.</p>"
        },
        "courseE_farmer_functions4b_2018_authored_hint": {
          "courseE_farmer_functions4b_a": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>",
          "courseE_farmer_functions4b_b": "<p>Remember to turn after each path.</p>",
          "courseE_farmer_functions4b_c": "<p>The green <code>corn and pumpkin</code> blocks are in the Functions tab of the toolbox.</p>"
        },
        "courseE_farmer_functions5_authored_hint": {},
        "courseE_farmer_functions5a_authored_hint": {},
        "courseE_farmer_functions5b_authored_hint": {
          "courseE_farmer_functions5b_a": "<p>You will need to use a <code>while corn</code> loop, a <code>while lettuce</code> and a <code>while pumpkin</code> to make sure you get everything.</p>"
        },
        "courseE_farmer_functions5c_authored_hint": {
          "courseE_farmer_functions5c_a": "<p>Are there any other patterns you can loop in this puzzle?</p>",
          "courseE_farmer_functions5c_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseE_farmer_functions5c_2018_authored_hint": {
          "courseE_farmer_functions5c_a": "<p>Are there any other patterns you can loop in this puzzle?</p>",
          "courseE_farmer_functions5c_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseE_farmer_functions6_authored_hint": {},
        "courseE_farmer_functions6b_authored_hint": {},
        "courseE_farmer_functions6c_authored_hint": {
          "courseE_farmer_functions6c_a": "<p>Edit your function to check for the lettuce as well.</p>",
          "courseE_farmer_functions6c_b": "<p>Would an <code>if/else</code> block help to check if there is lettuce in a space?</p>",
          "courseE_farmer_functions6c_c": "<p>Don't forget to keep checking for corn!</p>"
        },
        "courseE_farmer_functions6c_2018_authored_hint": {
          "courseE_farmer_functions6c_a": "<p>Edit your function to check for the lettuce as well.</p>",
          "courseE_farmer_functions6c_b": "<p>Would an <code>if/else</code> block help to check if there is lettuce in a space?</p>",
          "courseE_farmer_functions6c_c": "<p>Don't forget to keep checking for corn!</p>"
        },
        "courseE_farmer_functions7_authored_hint": {},
        "courseE_farmer_functions7a1_2018_authored_hint": {
          "courseE_farmer_functions7a1_2018_a": "<p>Create your function under the <code>functions</code> section in the toolbox.</p>",
          "courseE_farmer_functions7a1_2018_b": "<p>Don't forget to use your function when you're done making it!</p>"
        },
        "courseE_farmer_functions7b_authored_hint": {
          "courseE_farmer_functions7b_a": "<p>You don't need a function here, but you can make one if it is helpful to you!</p>",
          "courseE_farmer_functions7b_b": "<p>Use an <code>if/else</code> statement to check for crops, then turn based on which crop you find.</p>",
          "courseE_farmer_functions7b_c": "<p>A <code>repeat until pumpkin</code> loop can help you get all the way through the maze.</p>"
        },
        "courseE_farmer_functions7b_2018_authored_hint": {
          "courseE_farmer_functions7b_a": "<p>You don't need a function here, but you can make one if it is helpful to you!</p>",
          "courseE_farmer_functions7b_b": "<p>Use an <code>if/else</code> statement to check for crops, then turn based on which crop you find.</p>",
          "courseE_farmer_functions7b_c": "<p>A <code>repeat until pumpkin</code> loop can help you get all the way through the maze.</p>"
        },
        "courseE_farmer_functions8_authored_hint": {
          "courseE_farmer_functions8_a": "<p>Create a function that takes the farmer to the corn, gets all of the corn, then turns around and comes back.</p>"
        },
        "courseE_farmer_functions8a1_2018_authored_hint": {
          "courseE_farmer_functions8a1_2018a": "<p>Start this puzzle off by coding the same function you made in the last puzzle.</p>",
          "courseE_farmer_functions8a1_2018b": "<p>After the function runs the first time, you'll need to make one extra turn before you can run it again.</p>"
        },
        "courseE_farmer_functions8b_authored_hint": {
          "courseE_farmer_functions8b_a": "<p>Try running the code given to see what it does. What do you need after this?</p>",
          "courseE_farmer_functions8b_b": "<p>Drag all of the starter blocks into a function so that you can use them more than once.</p>",
          "courseE_farmer_functions8b_c": "<p>How many times do you need to call the function?</p>"
        },
        "courseE_farmer_functions8b_2018_authored_hint": {
          "courseE_farmer_functions8b_a": "<p>Try running the code given to see what it does. What do you need after this?</p>",
          "courseE_farmer_functions8b_b": "<p>Drag all of the starter blocks into a function so that you can use them more than once.</p>",
          "courseE_farmer_functions8b_c": "<p>How many times do you need to call the function?</p>"
        },
        "courseE_farmer_functions9_authored_hint": {
          "courseE_farmer_functions8_a": "<p>Create a function that takes the farmer to the corn, gets all of the corn, then turns around and comes back.</p>"
        },
        "courseE_farmer_functions9a1_2018_authored_hint": {
          "courseE_farmer_functions9a1_2018a": "<p>You'll use the same function that you made in the last couple of puzzles.</p>",
          "courseE_farmer_functions9a1_2018b": "<p>Use the same steps from the previous puzzle to solve the first half of this puzzle.</p>",
          "courseE_farmer_functions9a1_2018c": "<p>You'll need to <code>turn</code> a few times and <code>move forward</code> to get to the last crop of lettuce before you can call your function again.</p>"
        },
        "courseE_farmer_functions9b_authored_hint": {
          "courseE_farmer_functions9b_a": "<p>Can you use nested <code>if</code> and <code>if/else</code> statements to move along the path?</p>",
          "courseE_farmer_functions9b_b": "<p>Use <code>repeat until pumpkin</code> to move through all of the paths.</p>",
          "courseE_farmer_functions9b_c": "<p>You will want to move through the paths as if they are squares getting larger after each loop.</p>"
        },
        "courseE_farmer_functions9b_2018_authored_hint": {
          "courseE_farmer_functions9b_a": "<p>Can you use nested <code>if</code> and <code>if/else</code> statements to move along the path?</p>",
          "courseE_farmer_functions9b_b": "<p>Use <code>repeat until pumpkin</code> to move through all of the paths.</p>",
          "courseE_farmer_functions9b_c": "<p>You will want to move through the paths as if they are squares getting larger after each loop.</p>"
        },
        "courseE_farmer_functions9b_clone_authored_hint": {},
        "courseE_farmer_predict1_authored_hint": {
          "courseE_farmer_ramp12a": "<p>Feel free to go back to the last puzzle if you need a reminder of how to pick produce only <strong>while</strong> there is produce to pick.</p>"
        },
        "courseE_farmer_predict1_2018_authored_hint": {
          "courseE_farmer_ramp12a": "<p>Feel free to go back to the last puzzle if you need a reminder of how to pick produce only <strong>while</strong> there is produce to pick.</p>"
        },
        "courseE_farmer_predict2_authored_hint": {},
        "courseE_farmer_predict2_2018_authored_hint": {},
        "courseE_farmer_ramp11_authored_hint": {
          "courseE_farmer_ramp11_a": "<p>If you're having a hard time seeing where the loops should go, try coding it all out then looking for a pattern.</p>",
          "courseE_farmer_ramp11_b": "<p>How can you use a <code>repeat</code> loop to pick lettuce instead of dragging out 5 <code>pick lettuce</code> blocks?</p>",
          "courseE_farmer_ramp11_c": "<p>You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a <code>move forward</code> block, and you'll have it!)</p>"
        },
        "courseE_farmer_ramp11a_authored_hint": {
          "courseE_farmer_ramp12_a": "<p>Instead of using a <code>repeat</code> loop to tell the farmer how many times to shovel dirt, now you can use a <code>while there is a pile</code> block.  </p>",
          "courseE_farmer_ramp12_b": "<p>You only need to move forward once to get to the dirt.</p>"
        },
        "courseE_farmer_ramp11a_2018_authored_hint": {
          "courseE_farmer_ramp12_a": "<p>Instead of using a <code>repeat</code> loop to tell the farmer how many times to shovel dirt, now you can use a <code>while there is a pile</code> block.  </p>",
          "courseE_farmer_ramp12_b": "<p>You only need to move forward once to get to the dirt.</p>"
        },
        "courseE_farmer_ramp11b_authored_hint": {
          "courseE_farmer_ramp11b_a": "<p>You can nest your <code>while</code> loop inside of a <code>repeat</code> loop to make your code shorter.</p>"
        },
        "courseE_farmer_ramp11b_2018_authored_hint": {
          "courseE_farmer_ramp11b_a": "<p>You can nest your <code>while</code> loop inside of a <code>repeat</code> loop to make your code shorter.</p>"
        },
        "courseE_farmer_ramp12_authored_hint": {
          "courseE_farmer_ramp12_b": "<p>You will still need to use a <code>repeat</code> loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce.</p>"
        },
        "courseE_farmer_ramp12_2018_authored_hint": {
          "courseE_farmer_ramp12_b": "<p>You will still need to use a <code>repeat</code> loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce.</p>"
        },
        "courseE_farmer_ramp12_forswap_authored_hint": {
          "courseE_farmer_ramp12_b": "<p>You will still need to use a <code>repeat</code> loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce.</p>"
        },
        "courseE_farmer_ramp12_forswap_2018_authored_hint": {
          "courseE_farmer_ramp12_b": "<p>You will still need to use a <code>repeat</code> loop on the outside of it all to tell the farmer how many times to walk forward and get lettuce.</p>"
        },
        "courseE_farmer_ramp12a_authored_hint": {
          "courseE_farmer_ramp12b": "<p>You will need to check your <code>if</code> statement 21 times to solve this puzzle.</p>",
          "courseE_farmer_ramp12c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>",
          "courseE_farmer_ramp12d": "<p>There will only be lettuce, so you don't need to worry about empty spaces, corn, or pumpkins.</p>"
        },
        "courseE_farmer_ramp12a_2018_authored_hint": {
          "courseE_farmer_ramp12b": "<p>You will need to check your <code>if</code> statement 21 times to solve this puzzle.</p>",
          "courseE_farmer_ramp12c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>",
          "courseE_farmer_ramp12d": "<p>There will only be lettuce, so you don't need to worry about empty spaces, corn, or pumpkins.</p>"
        },
        "courseE_farmer_ramp12b_authored_hint": {},
        "courseE_farmer_ramp12b_2018_authored_hint": {},
        "courseE_farmer_ramp12c_authored_hint": {
          "courseE_farmer_ramp12b_b": "<p>You will still need to use an <code>until</code> loop first, then use a <code>while</code> loop once you get to the lettuce.</p>"
        },
        "courseE_farmer_ramp12c_2018_authored_hint": {
          "courseE_farmer_ramp12b_b": "<p>You will still need to use an <code>until</code> loop first, then use a <code>while</code> loop once you get to the lettuce.</p>"
        },
        "courseE_farmer_ramp12d_authored_hint": {
          "courseE_farmer_ramp12d_b": "<p>You will still need to put your <code>until</code> and <code>while</code> loops inside of a <code>repeat</code> loop to solve this puzzle!</p>"
        },
        "courseE_farmer_ramp12d_2018_authored_hint": {
          "courseE_farmer_ramp12d_b": "<p>You will still need to put your <code>until</code> and <code>while</code> loops inside of a <code>repeat</code> loop to solve this puzzle!</p>"
        },
        "courseE_farmer_ramp12e_authored_hint": {
          "courseE_farmer_ramp12e_b": "<p>The solution to this puzzle will look a lot like the solution to the last puzzle, but turning in the other direction.</p>"
        },
        "courseE_farmer_ramp12e_2018_authored_hint": {
          "courseE_farmer_ramp12e_b": "<p>The solution to this puzzle will look a lot like the solution to the last puzzle, but turning in the other direction.</p>"
        },
        "courseE_farmer_ramp12f_authored_hint": {
          "courseE_farmer_ramp12f_b": "<p>Use an <code>if/else</code> block to help the farmer decide if she needs to turn right or left.</p>"
        },
        "courseE_farmer_ramp12f_2018_authored_hint": {
          "courseE_farmer_ramp12f_b": "<p>Use an <code>if/else</code> block to help the farmer decide if she needs to turn right or left.</p>"
        },
        "courseE_farmer_ramp12g_authored_hint": {
          "courseE_farmer_ramp12G_b": "<p>Use an <code>if/else</code> block to help the farmer decide if she needs to turn right or left.</p>"
        },
        "courseE_farmer_ramp12g_2018_authored_hint": {
          "courseE_farmer_ramp12G_b": "<p>Use an <code>if/else</code> block to help the farmer decide if she needs to turn right or left.</p>"
        },
        "courseE_farmer_ramp13_authored_hint": {
          "courseE_farmer_ramp13_a": "<p>There can be more than one of either crop in a space, so make sure to use <code>while</code> loops to pick them all!</p>",
          "courseE_farmer_ramp13_b": "<p>Use a <code>repeat</code> loop so that you don't have to write a separate if statement for each square.</p>",
          "courseE_farmer_ramp13_c": "<p>If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.</p>"
        },
        "courseE_farmer_ramp13_2018_authored_hint": {
          "courseE_farmer_ramp13_a": "<p>There can be more than one of either crop in a space, so make sure to use <code>while</code> loops to pick them all!</p>",
          "courseE_farmer_ramp13_b": "<p>Use a <code>repeat</code> loop so that you don't have to write a separate if statement for each square.</p>",
          "courseE_farmer_ramp13_c": "<p>If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.</p>"
        },
        "courseE_farmer_ramp15_authored_hint": {
          "courseE_farmer_ramp15_a": "<p>Use the <code>repeat until at pumpkin</code> block to make it to the end of the path.</p>",
          "courseE_farmer_ramp15_b": "<p>What else needs to be done while moving along the path to the pumpkin?</p>",
          "courseE_farmer_ramp15_c": "<p>The sprouts hide various amounts of either corn or lettuce to harvest on your way to the pumpkin.</p>"
        },
        "courseE_farmer_ramp15_2018_authored_hint": {
          "courseE_farmer_ramp15_a": "<p>Use the <code>repeat until at pumpkin</code> block to make it to the end of the path.</p>",
          "courseE_farmer_ramp15_b": "<p>What else needs to be done while moving along the path to the pumpkin?</p>",
          "courseE_farmer_ramp15_c": "<p>The sprouts hide various amounts of either corn or lettuce to harvest on your way to the pumpkin.</p>"
        },
        "courseE_farmer_ramp16_authored_hint": {
          "courseE_farmer_ramp16_a": "<p>If we are moving along the path to the pumpkin, what do we have to do over and over? When do we stop repeating?</p>",
          "courseE_farmer_ramp16_b": "<p>Checking for corn or lettuce at every space will help simplify your code. What should you do if there is a crop? What if there is nothing?</p>",
          "courseE_farmer_ramp16_c": "<p>Use an <code>if/else</code> block to keep moving forward. Which way do you need to turn when the forward path is blocked?</p>"
        },
        "courseE_maze_predict1_authored_hint": {},
        "courseE_maze_predict1_2018_authored_hint": {},
        "courseE_maze_ramp1_authored_hint": {
          "courseC_maze_programming1_0": "<p>If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.</p>",
          "courseC_maze_programming1_b": "<p>You don't need any extra blocks from the toolbox for this puzzle!</p>"
        },
        "courseE_maze_ramp13_authored_hint": {
          "courseD_maze_ramp11_b": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseD_maze_ramp11_a": "<p>Use repeat blocks to run either a single block or a chunk of code over and over.</p>"
        },
        "courseE_maze_ramp1_2018_authored_hint": {
          "courseC_maze_programming1_0": "<p>If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.</p>",
          "courseC_maze_programming1_b": "<p>You don't need any extra blocks from the toolbox for this puzzle!</p>"
        },
        "courseE_maze_ramp2_authored_hint": {
          "courseC_maze_programming2_a": "<p>To use a <code>move forward</code> block, drag it from the toolbox out into the workspace and connect it to the <code>when run</code> block.</p>",
          "courseC_maze_programming2_b": "<p>Make sure all three <code>move forward</code> blocks are attached to the <code>when run</code> block.</p>"
        },
        "courseE_maze_ramp2_2018_authored_hint": {
          "courseC_maze_programming2_a": "<p>To use a <code>move forward</code> block, drag it from the toolbox out into the workspace and connect it to the <code>when run</code> block.</p>",
          "courseC_maze_programming2_b": "<p>Make sure all three <code>move forward</code> blocks are attached to the <code>when run</code> block.</p>"
        },
        "courseE_maze_ramp3_authored_hint": {
          "courseC_maze_programming3_a": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  </p>\n<p>Click on the block you want to delete, and drag it back to the toolbox.</p>\n<p>Finally, put your other blocks back in place where they belong.</p>",
          "courseC_maze_programming3_b": "<p>Remember that turns to the right and left are from the bird's perspective.</p>"
        },
        "courseE_maze_ramp3_2018_authored_hint": {
          "courseC_maze_programming3_a": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  </p>\n<p>Click on the block you want to delete, and drag it back to the toolbox.</p>\n<p>Finally, put your other blocks back in place where they belong.</p>",
          "courseC_maze_programming3_b": "<p>Remember that turns to the right and left are from the bird's perspective.</p>"
        },
        "courseE_maze_ramp4_authored_hint": {
          "courseC_maze_programming4_a": "<p>You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.</p>",
          "courseC_maze_programming4_b": "<p>To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.</p>",
          "courseC_maze_programming4_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseE_maze_ramp4_2018_authored_hint": {
          "courseC_maze_programming4_a": "<p>You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.</p>",
          "courseC_maze_programming4_b": "<p>To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.</p>",
          "courseC_maze_programming4_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseE_maze_ramp5_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>How far do you need to move to get to the corner?</p>",
          "courseC_maze_programming5_c": "<p>You will need to turn left at the corner to get to the pig.</p>"
        },
        "courseE_maze_ramp5_2018_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseC_maze_programming5_b": "<p>How far do you need to move to get to the corner?</p>",
          "courseC_maze_programming5_c": "<p>You will need to turn left at the corner to get to the pig.</p>"
        },
        "courseE_maze_ramp6_authored_hint": {
          "courseC_maze_programming6_a": "<p>There are two ways to solve this puzzle!</p>",
          "courseC_maze_programming6_b": "<p>Remember to turn first before moving, since the bird starts facing a wall.</p>",
          "courseC_maze_programming6_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseE_maze_ramp6_2018_authored_hint": {
          "courseC_maze_programming6_a": "<p>There are two ways to solve this puzzle!</p>",
          "courseC_maze_programming6_b": "<p>Remember to turn first before moving, since the bird starts facing a wall.</p>",
          "courseC_maze_programming6_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseE_maze_ramp7_authored_hint": {
          "courseD_maze_ramp7_b": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseD_maze_ramp7_a": "<p>Use repeat blocks to run either a single block or a chunk of code over and over.</p>",
          "courseD_maze_ramp7_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseE_maze_ramp7_2018_authored_hint": {
          "courseD_maze_ramp7_b": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseD_maze_ramp7_a": "<p>Use repeat blocks to run either a single block or a chunk of code over and over.</p>",
          "courseD_maze_ramp7_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseE_maze_ramp_predict1_authored_hint": {},
        "courseE_multi_maze_ramp5_authored_hint": {
          "courseC_maze_programming5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>"
        },
        "courseE_playLab_challenge1_authored_hint": {
          "courseE_playLab_challenge1_a": "<p>Here are some things you could do when the player wins the game:</p>\n<ul>\n<li>Make the dinosaur vanish.</li>\n<li>Stop the squirrels.</li>\n<li>Make the squirrels and knight happy.</li>\n<li>Set a new background.</li>\n<li>Make the knight thank the player for helping.</li>\n<li>Make all of the actors vanish and show a \"You Win!\" message.</li>\n</ul>",
          "courseE_playLab_challenge1_b": "<p>Here are some things you could do when the player loses the game:</p>\n<ul>\n<li>Make the knight vanish.</li>\n<li>Make the squirrels sad.</li>\n<li>Make the dinosaur say something.</li>\n<li>Set a new background.</li>\n<li>Make all of the actors vanish and show a \"Game Over\" message.</li>\n</ul>"
        },
        "courseE_playLab_challenge1_2018_authored_hint": {
          "courseE_playLab_challenge1_a": "<p>Here are some things you could do when the player wins the game:</p>\n<ul>\n<li>Make the dinosaur vanish.</li>\n<li>Stop the squirrels.</li>\n<li>Make the squirrels and knight happy.</li>\n<li>Set a new background.</li>\n<li>Make the knight thank the player for helping.</li>\n<li>Make all of the actors vanish and show a \"You Win!\" message.</li>\n</ul>",
          "courseE_playLab_challenge1_b": "<p>Here are some things you could do when the player loses the game:</p>\n<ul>\n<li>Make the knight vanish.</li>\n<li>Make the squirrels sad.</li>\n<li>Make the dinosaur say something.</li>\n<li>Set a new background.</li>\n<li>Make all of the actors vanish and show a \"Game Over\" message.</li>\n</ul>"
        },
        "courseE_playLab_embed_scaffold5_authored_hint": {},
        "courseE_playLab_scaffold1_authored_hint": {
          "courseE_playLab_scaffold1_a": "<p>The <code>set actor 1 to ??? image</code> block can be used to add an actor to the stage.</p>",
          "courseE_playLab_scaffold1_b": "<p>Put the <code>set actor</code> block under <code>when run</code> to make your actor appear at the beginning of the program.</p>",
          "courseE_playLab_scaffold1_c": "<p>Use <code>set ??? background</code> to choose a background for your scene.</p>"
        },
        "courseE_playLab_scaffold1_2018_authored_hint": {
          "courseE_playLab_scaffold1_a": "<p>The <code>set actor 1 to ??? image</code> block can be used to add an actor to the stage.</p>",
          "courseE_playLab_scaffold1_b": "<p>Put the <code>set actor</code> block under <code>when run</code> to make your actor appear at the beginning of the program.</p>",
          "courseE_playLab_scaffold1_c": "<p>Use <code>set ??? background</code> to choose a background for your scene.</p>"
        },
        "courseE_playLab_scaffold2_authored_hint": {
          "courseE_playLab_scaffold1_a": "<p>Pull on the dropdown menu of the <code>when ____ arrow</code> event to change the direction the block controls.</p>",
          "courseE_playLab_scaffold1_b": "<p>You should have four <code>when arrow</code> event blocks, with a direction to move underneath each.</p>",
          "courseE_playLab_scaffold1_c": "<p>When you are done, you should be able to move your hero with the arrow keys!</p>"
        },
        "courseE_playLab_scaffold2_2018_authored_hint": {
          "courseE_playLab_scaffold1_a": "<p>Pull on the dropdown menu of the <code>when ____ arrow</code> event to change the direction the block controls.</p>",
          "courseE_playLab_scaffold1_b": "<p>You should have four <code>when arrow</code> event blocks, with a direction to move underneath each.</p>",
          "courseE_playLab_scaffold1_c": "<p>When you are done, you should be able to move your hero with the arrow keys!</p>"
        },
        "courseE_playLab_scaffold3_authored_hint": {},
        "courseE_playLab_scaffold3_2018_authored_hint": {},
        "courseE_playLab_scaffold4_authored_hint": {
          "courseE_playLab_scaffold4_a": "<p>Use <code>score point</code> to add a point, and <code>remove point</code> to subtract one.</p>"
        },
        "courseE_playLab_scaffold4_2018_authored_hint": {
          "courseE_playLab_scaffold4_a": "<p>Use <code>score point</code> to add a point, and <code>remove point</code> to subtract one.</p>"
        },
        "courseE_playLab_scaffold5_authored_hint": {
          "courseE_playLab_scaffold5_a": "<p>To finish this level, you need to win or lose. Use a <code>end game as win</code> or <code>end game as loss</code> block to finish.</p>"
        },
        "courseE_playLab_scaffold5_2018_authored_hint": {
          "courseE_playLab_scaffold5_a": "<p>To finish this level, you need to win or lose. Use a <code>end game as win</code> or <code>end game as loss</code> block to finish.</p>"
        },
        "courseE_playlab_challenge2_authored_hint": {
          "courseE_playlab_challenge2_a": "<p>The actor knows what to say based on its mood. Try playing with the things the witch might say.</p>\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">Concentrate and ask again!</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block></xml>",
          "courseE_playlab_challenge2_b": "<p>It will feel like the game starts all over if you call the <code>ask a question</code> function again below the list of conditionals.</p>\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n\n<block type=\"procedures_callnoreturn\">\n<mutation name=\"Ask a question\"></mutation>\n        </block></block></xml>",
          "courseE_playlab_challenge2_c": "<p>You will need to add more conditional statements to give the actors more things to say.</p>\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TEXT\">\n              <block type=\"text\">\n                <title name=\"TEXT\">???</title>\n              </block>\n            </value>\n            <value name=\"TIME\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n          </block>\n              </statement></block></xml>\n\n<p>Don't forget to change which moods the actor will show inside of the <code>repeat forever</code> loop. You can also set the moods randomly!</p>",
          "courseE_playlab_challenge2_d": "<p>Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.</p>\n<p>Don't forget to change the instructions inside the <code>show title screen</code> block so they still make sense!</p>",
          "courseE_playlab_challenge2_e": "<p>When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?</p>\n<p>Have a friend try your app when it is finished!</p>"
        },
        "courseE_playlab_variables_challenge2_authored_hint": {
          "courseF_playlab_variables_challenge3_a": "<p>The actor knows what to say because it checks the current value of the <code>fortune</code> variable.</p>\n<xml><block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">fortune</title>\n            <value name=\"VALUE\">\n              <block type=\"text\" movable=\"false\">\n                <title name=\"TEXT\">Concentrate and ask again!</title>\n              </block>\n            </value>\n          </block></xml>",
          "courseF_playlab_variables_challenge3_b": "<p>It will feel like the game starts all over if you call the <code>ask a question</code> function again after the actor says the fortune.</p>\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n                <value name=\"SPRITE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n                <value name=\"TEXT\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">fortune</title>\n                  </block>\n                </value>\n                <value name=\"TIME\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">2</title>\n                  </block>\n                </value>\n              <next>\n<block type=\"procedures_callnoreturn\">\n        <mutation name=\"Ask a question\"/>\n        </block></next></block></xml>",
          "courseF_playlab_variables_challenge3_c": "<p>You will need to add more conditional statements to give the actors more things to say.</p>\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n\n<p>Don't forget to change which moods the actor will show inside of the <code>repeat forever</code> loop. You can also set the moods randomly!</p>",
          "courseF_playlab_variables_challenge3_d": "<p>Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.</p>\n<p>Don't forget to change the instructions inside the <code>Ask a question</code> function so they still make sense!</p>",
          "courseF_playlab_variables_challenge3_e": "<p>When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?</p>\n<p>Have a friend try your app when it is finished!</p>"
        },
        "courseF_IceAge_1_authored_hint": {
          "iceage_hello1_a": "<p>You only need to add one block to solve this puzzle.  Drag the <code>actor 1 say</code> block out from the toolbar and connect it to the <code>when run</code> event block that is already in the workspace. Next, type \"Hello!\" inside.</p>"
        },
        "courseF_IceAge_10_authored_hint": {
          "iceage_throw_hearts_a": "<p>When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!</p>",
          "iceage_throw_hearts_b": "<p>To get granny to be happy when she receives a heart, you will need to connect the <code>set actor 2 mood to happy</code> block beneath the <code>when actor 2 touches projectile</code> event.</p>"
        },
        "courseF_IceAge_11_authored_hint": {
          "iceage_free_play_a": "<p>Can you make Sid and Manny have an Ice Crystal fight?  </p>",
          "iceage_free_play_b": "<p>Make Granny chase Diego.  End the game as a win if she catches him.</p>",
          "iceage_free_play_c": "<p>Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.</p>"
        },
        "courseF_IceAge_2_authored_hint": {
          "iceage_hello2_a": "<p>To solve this puzzle, you will need to have Sid say something using the <code>actor 1 say</code> block.  You will also need to have Manny say something with the <code>actor 2 say</code> block. </p>"
        },
        "courseF_IceAge_3_authored_hint": {
          "iceage_hello3_a": "<p>Use the <code>move actor 1 right by 200 pixels</code> block to solve this puzzle.</p>"
        },
        "courseF_IceAge_4_authored_hint": {
          "iceage_move_to_actor_a": "<p>For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.</p>",
          "iceage_move_to_actor_b": "<p>Connect the <code>play ___ sound</code> block to the <code>when actor 1 touches actor 2</code> event to finish this challenge.</p>"
        },
        "courseF_IceAge_5_authored_hint": {
          "iceage_repeat_a": "<p>Use both the <code>move actor 1 left</code> and <code>move actor 1 right</code> blocks to solve this puzzle.</p>"
        },
        "courseF_IceAge_6_authored_hint": {
          "iceage_click_hello_a": "<p>Add one or more <code>actor 1 say</code> blocks to the <code>when clicked</code> event to complete this puzzle.</p>"
        },
        "courseF_IceAge_7_authored_hint": {
          "iceage_move_events_a": "<p>Each of the <code>when ___ arrow</code> events will need to have a different <code>move actor 1</code> command connected to it to solve this puzzle. </p>"
        },
        "courseF_IceAge_8_authored_hint": {
          "iceage_sound_and_points_a": "<p>You will need to add two blocks beneath the <code>when actor 1 touches actor 2</code> event.</p>",
          "iceage_sound_and_points_b": "<p>You will need both the <code>score a point</code> block and the 'play <em>__</em> sound` block to pass this level.</p>"
        },
        "courseF_IceAge_9_authored_hint": {
          "iceage_warn_ice_age_a": "<p>You should only have to add two blocks to get this puzzle where it needs to be. </p>",
          "iceage_warn_ice_age_b": "<p>Add both new blocks beneath the <code>when run</code> event to have them happen immediately after the program starts.</p>"
        },
        "courseF_IceAge_template_authored_hint": {},
        "courseF_artist_embed_for7_authored_hint": {},
        "courseF_artist_for1_authored_hint": {
          "courseF_artist_for1_a": "<p>Can you draw something like this:</p>\n<p><img src=\"https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png\"></p>"
        },
        "courseF_artist_for10_authored_hint": {
          "courseF_artist_for10_a": "<p>The image in the drawing was made using a counter for the <code>set alpha</code> and <code>counter</code> / 10 as a brush size.</p>",
          "courseF_artist_for10_b": "<p>The image in the drawing uses a turn of 61 degrees.</p>",
          "courseF_artist_for10_c": "<p>Want to know how the sample image was done?</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n        <value name=\"COLOUR\">\n          <block type=\"colour_picker\">\n            <title name=\"COLOUR\">#ff0000</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">15</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">175</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_width\" inline=\"false\">\n                <value name=\"WIDTH\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">DIVIDE</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                    <value name=\"VALUE\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_turn\" inline=\"true\">\n                            <title name=\"DIR\">turnRight</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">61</title>\n                              </block>\n                            </value>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_for10_2018_authored_hint": {
          "courseF_artist_for10_a": "<p>The image in the drawing was made using a counter for the <code>set alpha</code> and <code>counter</code> / 10 as a brush size.</p>",
          "courseF_artist_for10_b": "<p>The image in the drawing uses a turn of 61 degrees.</p>",
          "courseF_artist_for10_c": "<p>Want to know how the sample image was done?</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n        <value name=\"COLOUR\">\n          <block type=\"colour_picker\">\n            <title name=\"COLOUR\">#ff0000</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">15</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">175</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_width\" inline=\"false\">\n                <value name=\"WIDTH\">\n                  <block type=\"math_arithmetic\" inline=\"true\">\n                    <title name=\"OP\">DIVIDE</title>\n                    <value name=\"A\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"B\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                    <value name=\"VALUE\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"draw_turn\" inline=\"true\">\n                            <title name=\"DIR\">turnRight</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">61</title>\n                              </block>\n                            </value>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_for10_predict1_authored_hint": {},
        "courseF_artist_for10_predict1_2018_authored_hint": {},
        "courseF_artist_for1_2018_authored_hint": {
          "courseF_artist_for1_a": "<p>Can you draw something like this:</p>\n<p><img src=\"https://images.code.org/efee6df2a8840c89fa535bef72e9e45f-image-1530131926453.png\"></p>"
        },
        "courseF_artist_for2_authored_hint": {
          "courseF_artist_for2_a": "<p>Use <code>counter</code> for the length of your triangles inside your <code>repeat</code> loop.</p>\n<xml><block type=\"draw_move\" inline=\"true\">\n      <title name=\"DIR\">moveForward</title>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <title name=\"VAR\">counter</title>\n        </block>\n      </value>\n    </block>\n    </xml>",
          "courseF_artist_for2_b": "<p>Remember to count by 10 within your for loop.</p>",
          "courseF_artist_for2_c": "<p>This is the pattern that the Artist will follow:</p>\n<p><img src=\"https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif\"></p>"
        },
        "courseF_artist_for2_2018_authored_hint": {
          "courseF_artist_for2_a": "<p>Use <code>counter</code> for the length of your triangles inside your <code>repeat</code> loop.</p>\n<xml><block type=\"draw_move\" inline=\"true\">\n      <title name=\"DIR\">moveForward</title>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <title name=\"VAR\">counter</title>\n        </block>\n      </value>\n    </block>\n    </xml>",
          "courseF_artist_for2_b": "<p>Remember to count by 10 within your for loop.</p>",
          "courseF_artist_for2_c": "<p>This is the pattern that the Artist will follow:</p>\n<p><img src=\"https://images.code.org/a2569b7732cf02a12263607c9e355d19-image-1503676269436.3_hint 2.gif\"></p>"
        },
        "courseF_artist_for3_authored_hint": {
          "courseF_artist_for3_a": "<p>To have the <code>for</code> loop drive your movement, make sure that you're using <code>counter</code> as your distance in the <code>move forward</code> block.</p>\n<xml>\n<block type=\"draw_move\" inline=\"true\">\n      <title name=\"DIR\">moveForward</title>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <title name=\"VAR\">counter</title>\n        </block>\n      </value>\n    </block>\n</xml>",
          "courseF_artist_for3_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseF_artist_for3_2018_authored_hint": {
          "courseF_artist_for3_a": "<p>To have the <code>for</code> loop drive your movement, make sure that you're using <code>counter</code> as your distance in the <code>move forward</code> block.</p>\n<xml>\n<block type=\"draw_move\" inline=\"true\">\n      <title name=\"DIR\">moveForward</title>\n      <value name=\"VALUE\">\n        <block type=\"variables_get\">\n          <title name=\"VAR\">counter</title>\n        </block>\n      </value>\n    </block>\n</xml>",
          "courseF_artist_for3_b": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseF_artist_for4_authored_hint": {
          "courseF_artist_for4_a": "<p><strong>What is the smallest number you will need?<br>What is the largest number?<br>How big is the increase each time?</strong></p>\n<p>Those are the questions you need to ask to fill in the blanks of the <code>for</code> loop.</p>",
          "courseF_artist_for4_b": "<p>Your code will be very similar to what you wrote in the last puzzle, but remember to draw a square this time!</p>",
          "courseF_artist_for4_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseF_artist_for4_2018_authored_hint": {
          "courseF_artist_for4_a": "<p><strong>What is the smallest number you will need?<br>What is the largest number?<br>How big is the increase each time?</strong></p>\n<p>Those are the questions you need to ask to fill in the blanks of the <code>for</code> loop.</p>",
          "courseF_artist_for4_b": "<p>Your code will be very similar to what you wrote in the last puzzle, but remember to draw a square this time!</p>",
          "courseF_artist_for4_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseF_artist_for5_authored_hint": {
          "courseF_artist_for5_a": "<p>You don't need the <code>repeat</code> loop inside when making this spiral!</p>",
          "courseF_artist_for5_b": "<p>Your <code>for</code> loop, move, and turn blocks can stay exactly the same.</p>"
        },
        "courseF_artist_for5_2018_authored_hint": {
          "courseF_artist_for5_a": "<p>You don't need the <code>repeat</code> loop inside when making this spiral!</p>",
          "courseF_artist_for5_b": "<p>Your <code>for</code> loop, move, and turn blocks can stay exactly the same.</p>"
        },
        "courseF_artist_for6_authored_hint": {
          "courseF_artist_for6_a": "<p>Your <code>for</code> loop will count from 15 to 300 by 15.</p>",
          "courseF_artist_for6_b": "<p>Put a <code>move forward</code> and a <code>turn</code> block within this <code>for</code> loop.</p>",
          "courseF_artist_for6_c": "<p>All you have to change is the number of degrees in the <code>turn</code> block.</p>"
        },
        "courseF_artist_for6_2018_authored_hint": {
          "courseF_artist_for6_a": "<p>Your <code>for</code> loop will count from 15 to 300 by 15.</p>",
          "courseF_artist_for6_b": "<p>Put a <code>move forward</code> and a <code>turn</code> block within this <code>for</code> loop.</p>",
          "courseF_artist_for6_c": "<p>All you have to change is the number of degrees in the <code>turn</code> block.</p>"
        },
        "courseF_artist_for7_authored_hint": {
          "courseF_artist_for7_a": "<p>The pen is thinner in this puzzle. You will need to set it to <code>1</code> before you start.</p>",
          "courseF_artist_for7_b": "<p>Notice that this spiral turns right instead of left!</p>",
          "courseF_artist_for7_c": "<p>The <code>for</code> loop in this puzzle goes from 15 to 300 by 2.</p>",
          "courseF_artist_for7_d": "<p>This image is made by turning just 89 degrees.</p>"
        },
        "courseF_artist_for7_2018_authored_hint": {
          "courseF_artist_for7_a": "<p>The pen is thinner in this puzzle. You will need to set it to <code>1</code> before you start.</p>",
          "courseF_artist_for7_b": "<p>Notice that this spiral turns right instead of left!</p>",
          "courseF_artist_for7_c": "<p>The <code>for</code> loop in this puzzle goes from 15 to 300 by 2.</p>",
          "courseF_artist_for7_d": "<p>This image is made by turning just 89 degrees.</p>"
        },
        "courseF_artist_for8_authored_hint": {
          "courseF_artist_for8_a": "<p>Keep everything else the same in your code, only the turn angle needs to change.</p>",
          "courseF_artist_for8_b": "<p>If you want, you can choose a different color for your spiral!</p>"
        },
        "courseF_artist_for8_2018_authored_hint": {
          "courseF_artist_for8_a": "<p>Keep everything else the same in your code, only the turn angle needs to change.</p>",
          "courseF_artist_for8_b": "<p>If you want, you can choose a different color for your spiral!</p>"
        },
        "courseF_artist_for9_authored_hint": {
          "courseF_artist_for9_a": "<p>If you put the <code>set alpha</code> block inside of your <code>for</code> loop, and use the <code>counter</code> variable to change it, you can create a design like this.</p>",
          "courseF_artist_for9_b": "<p>The <code>set alpha</code> block changes the opacity of a color. The smaller the value, the more transparent the color is.</p>"
        },
        "courseF_artist_for9_2018_authored_hint": {
          "courseF_artist_for9_a": "<p>If you put the <code>set alpha</code> block inside of your <code>for</code> loop, and use the <code>counter</code> variable to change it, you can create a design like this.</p>",
          "courseF_artist_for9_b": "<p>The <code>set alpha</code> block changes the opacity of a color. The smaller the value, the more transparent the color is.</p>"
        },
        "courseF_artist_for_challenge1_authored_hint": {
          "courseF_artist_for_challenge1_a": "<p>The <code>pen width</code> is 1. The first square has 50 pixel sides, and each square is 50 pixels wider than the last.</p>",
          "courseF_artist_for_challenge1_b": "<p>The opacity on the brush is always <code>counter</code>/2.</p>",
          "courseF_artist_for_challenge1_c": "<p>After you make each square, don't forget to jump backward, turn, jump again, then turn back!</p>",
          "courseF_artist_for_challenge1_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_picker\">\n                <title name=\"COLOUR\">#0000cd</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_for_counter\" inline=\"true\">\n              <mutation counter=\"counter\"></mutation>\n                <value name=\"FROM\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <value name=\"TO\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">350</title>\n                  </block>\n                </value>\n                <value name=\"BY\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">2</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">4</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"draw_move\" inline=\"true\">\n                            <title name=\"DIR\">moveForward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"jump\" inline=\"true\">\n                            <title name=\"DIR\">jumpBackward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">25</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"jump\" inline=\"true\">\n                                    <title name=\"DIR\">jumpBackward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">25</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_for_challenge1_2018_authored_hint": {
          "courseF_artist_for_challenge1_a": "<p>The <code>pen width</code> is 1. The first square has 50 pixel sides, and each square is 50 pixels wider than the last.</p>",
          "courseF_artist_for_challenge1_b": "<p>The opacity on the brush is always <code>counter</code>/2.</p>",
          "courseF_artist_for_challenge1_c": "<p>After you make each square, don't forget to jump backward, turn, jump again, then turn back!</p>",
          "courseF_artist_for_challenge1_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n            <value name=\"COLOUR\">\n              <block type=\"colour_picker\">\n                <title name=\"COLOUR\">#0000cd</title>\n              </block>\n            </value>\n            <next>\n              <block type=\"controls_for_counter\" inline=\"true\">\n              <mutation counter=\"counter\"></mutation>\n                <value name=\"FROM\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <value name=\"TO\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">350</title>\n                  </block>\n                </value>\n                <value name=\"BY\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">50</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"alpha\" inline=\"true\" id=\"alpha\">\n                    <value name=\"VALUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">DIVIDE</title>\n                        <value name=\"A\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">2</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">4</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"draw_move\" inline=\"true\">\n                            <title name=\"DIR\">moveForward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">counter</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </next>\n                          </block>\n                        </statement>\n                        <next>\n                          <block type=\"jump\" inline=\"true\">\n                            <title name=\"DIR\">jumpBackward</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">25</title>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnRight</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"jump\" inline=\"true\">\n                                    <title name=\"DIR\">jumpBackward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">25</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </statement>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_for_challenge2_authored_hint": {
          "courseF_artist_for_challenge2_c": "<p>The <code>for loop</code> goes from 5 to 250 by 2. </p>",
          "courseF_artist_for_challenge2_a": "<p>The color change happens using the <code>set color with red, green, blue</code> block.  Red is set constant at 255, green is always the value of <code>counter</code>, and blue is always <code>255 - counter</code>.</p>",
          "courseF_artist_for_challenge2_b": "<p>The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.</p>",
          "courseF_artist_for_challenge2_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">250</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                <value name=\"COLOUR\">\n                  <block type=\"colour_rgb\" inline=\"false\">\n                    <value name=\"RED\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">255</title>\n                      </block>\n                    </value>\n                    <value name=\"GREEN\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"BLUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">255</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">moveForward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnRight</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">80</title>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>\n\n<p><img src=\"https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png\"></p>"
        },
        "courseF_artist_for_challenge2_2018_authored_hint": {
          "courseF_artist_for_challenge2_c": "<p>The <code>for loop</code> goes from 5 to 250 by 2. </p>",
          "courseF_artist_for_challenge2_a": "<p>The color change happens using the <code>set color with red, green, blue</code> block.  Red is set constant at 255, green is always the value of <code>counter</code>, and blue is always <code>255 - counter</code>.</p>",
          "courseF_artist_for_challenge2_b": "<p>The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.</p>",
          "courseF_artist_for_challenge2_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"draw_width\" inline=\"false\">\n        <value name=\"WIDTH\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_for_counter\" inline=\"true\">\n          <mutation counter=\"counter\"></mutation>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">5</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">250</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">2</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_colour\" inline=\"true\" id=\"draw-color\">\n                <value name=\"COLOUR\">\n                  <block type=\"colour_rgb\" inline=\"false\">\n                    <value name=\"RED\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">255</title>\n                      </block>\n                    </value>\n                    <value name=\"GREEN\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <value name=\"BLUE\">\n                      <block type=\"math_arithmetic\" inline=\"true\">\n                        <title name=\"OP\">MINUS</title>\n                        <value name=\"A\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">255</title>\n                          </block>\n                        </value>\n                        <value name=\"B\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                      </block>\n                    </value>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_move\" inline=\"true\">\n                    <title name=\"DIR\">moveForward</title>\n                    <value name=\"VALUE\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_turn\" inline=\"true\">\n                        <title name=\"DIR\">turnRight</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_number\">\n                            <title name=\"NUM\">80</title>\n                          </block>\n                        </value>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>\n\n<p><img src=\"https://images.code.org/4ce89e8d907f670408c3705f040e8677-image-1497728974326.49.09 PM.png\"></p>"
        },
        "courseF_artist_fwp1_authored_hint": {
          "courseF_artist_fwp1_c": "<p>Put all of the code for drawing a square inside the function editor.</p>",
          "courseF_artist_fwp1_a": "<p>Remember, you need to turn 90 degrees to draw a square.</p>",
          "courseF_artist_fwp1_b": "<p>You only need to repeat as many times as the number of sides in a square.</p>"
        },
        "courseF_artist_fwp1_2018_authored_hint": {
          "courseF_artist_fwp1_c": "<p>Put all of the code for drawing a square inside the function editor.</p>",
          "courseF_artist_fwp1_a": "<p>Remember, you need to turn 90 degrees to draw a square.</p>",
          "courseF_artist_fwp1_b": "<p>You only need to repeat as many times as the number of sides in a square.</p>"
        },
        "courseF_artist_fwp2_authored_hint": {
          "courseF_artist_fwp2_a": "<p>You need to click the \"edit\" button to get into the function.  Once you're there, add a parameter called <code>length</code> and use it inside your <code>move forward</code> block!</p>",
          "courseF_artist_fwp2_b": "<p>When calling your function, use a <code>for loop</code> for the best possible code!</p>"
        },
        "courseF_artist_fwp2_2018_authored_hint": {
          "courseF_artist_fwp2_a": "<p>You need to click the \"edit\" button to get into the function.  Once you're there, add a parameter called <code>length</code> and use it inside your <code>move forward</code> block!</p>",
          "courseF_artist_fwp2_b": "<p>When calling your function, use a <code>for loop</code> for the best possible code!</p>"
        },
        "courseF_artist_fwp2_predict1_authored_hint": {},
        "courseF_artist_fwp2_predict1_2018_authored_hint": {},
        "courseF_artist_fwp3_authored_hint": {
          "courseF_artist_fwp3_a": "<p>This gets easier if you put it all in a <code>for</code> loop.</p>",
          "courseF_artist_fwp3_b": "<p>Be sure to turn 90 degrees between each square!</p>\n<p><img src=\"https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif\"></p>"
        },
        "courseF_artist_fwp3_2018_authored_hint": {
          "courseF_artist_fwp3_a": "<p>This gets easier if you put it all in a <code>for</code> loop.</p>",
          "courseF_artist_fwp3_b": "<p>Be sure to turn 90 degrees between each square!</p>\n<p><img src=\"https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif\"></p>"
        },
        "courseF_artist_fwp4_authored_hint": {
          "courseF_artist_fwp4_b": "<p>Remember to <strong>add</strong> a parameter.  Don't remove the one that is already there!</p>",
          "courseF_artist_fwp4_c": "<p>You will need to call your function three times to draw the shapes.</p>"
        },
        "courseF_artist_fwp4_2018_authored_hint": {
          "courseF_artist_fwp4_b": "<p>Remember to <strong>add</strong> a parameter.  Don't remove the one that is already there!</p>",
          "courseF_artist_fwp4_c": "<p>You will need to call your function three times to draw the shapes.</p>"
        },
        "courseF_artist_fwp5_authored_hint": {
          "courseF_artist_fwp5_d": "<p>A <code>for</code> loop would really help you out here!</p>",
          "courseF_artist_fwp5_c": "<p>You will need to edit the function a little bit, since your previous function turned the artist to the right after each side, and this image needs a turn to the left.</p>",
          "courseF_artist_fwp5_a": "<p>The length of sides for each shape is 7 times the number of sides it has.</p>",
          "courseF_artist_fwp5_b": "<p>Don't forget to jump 100 pixels between shapes.</p>"
        },
        "courseF_artist_fwp5_2018_authored_hint": {
          "courseF_artist_fwp5_d": "<p>A <code>for</code> loop would really help you out here!</p>",
          "courseF_artist_fwp5_c": "<p>You will need to edit the function a little bit, since your previous function turned the artist to the right after each side, and this image needs a turn to the left.</p>",
          "courseF_artist_fwp5_a": "<p>The length of sides for each shape is 7 times the number of sides it has.</p>",
          "courseF_artist_fwp5_b": "<p>Don't forget to jump 100 pixels between shapes.</p>"
        },
        "courseF_artist_fwp6_authored_hint": {
          "courseF_artist_fwp6_a": "<p>It's okay to run the program a few times to figure out how the function works with different parameters.</p>",
          "courseF_artist_fwp6_b": "<p>You don't need to add any <code>move</code> or <code>turn</code> blocks to finish this code.</p>"
        },
        "courseF_artist_fwp6_2018_authored_hint": {
          "courseF_artist_fwp6_a": "<p>It's okay to run the program a few times to figure out how the function works with different parameters.</p>",
          "courseF_artist_fwp6_b": "<p>You don't need to add any <code>move</code> or <code>turn</code> blocks to finish this code.</p>"
        },
        "courseF_artist_fwp7_authored_hint": {
          "courseF_artist_fwp7_a": "<p>Feeling lost after trying a couple of ideas? Try clicking the \"Start over\" button in the upper right-hand corner.</p>",
          "courseF_artist_fwp7_b": "<p>Your new <code>min</code> variable should go in the first slot in your <code>for</code> loop, inside the function.</p>"
        },
        "courseF_artist_fwp7_2018_authored_hint": {
          "courseF_artist_fwp7_a": "<p>Feeling lost after trying a couple of ideas? Try clicking the \"Start over\" button in the upper right-hand corner.</p>",
          "courseF_artist_fwp7_b": "<p>Your new <code>min</code> variable should go in the first slot in your <code>for</code> loop, inside the function.</p>"
        },
        "courseF_artist_fwp8_authored_hint": {
          "courseF_artist_fwp8_a": "<p>If your function is correct, you shouldn't need to change it for this puzzle.</p>",
          "courseF_artist_fwp8_b": "<p>The only thing you should need to do between function calls is change the color of the line.</p>"
        },
        "courseF_artist_fwp8_2018_authored_hint": {
          "courseF_artist_fwp8_a": "<p>If your function is correct, you shouldn't need to change it for this puzzle.</p>",
          "courseF_artist_fwp8_b": "<p>The only thing you should need to do between function calls is change the color of the line.</p>"
        },
        "courseF_artist_fwp9_authored_hint": {
          "courseF_artist_fwp9_a": "<p>Try one of these drawings.\n<img src=\"https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png\"></p>"
        },
        "courseF_artist_fwp9_2018_authored_hint": {
          "courseF_artist_fwp9_a": "<p>Try one of these drawings.\n<img src=\"https://images.code.org/eae6d52956c2bc06b90db3693037df36-image-1493739069435.9.13 hints.png\"></p>"
        },
        "courseF_artist_fwp_challenge1_authored_hint": {
          "courseF_artist_fwp_challenge1_b": "<p>This is a series of polygons with sides that are counter pixels long.</p>",
          "courseF_artist_fwp_challenge1_c": "<p>Each polygon is called from inside a for loop that goes from 3 down to 6 by an increment of 1. What shapes is it making?</p>"
        },
        "courseF_artist_fwp_challenge1_2018_authored_hint": {
          "courseF_artist_fwp_challenge1_b": "<p>This is a series of polygons with sides that are counter pixels long.</p>",
          "courseF_artist_fwp_challenge1_c": "<p>Each polygon is called from inside a for loop that goes from 3 down to 6 by an increment of 1. What shapes is it making?</p>"
        },
        "courseF_artist_fwp_challenge2_authored_hint": {
          "courseF_artist_fwp_challenge1_a": "<p><img src=\"https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif\"></p>",
          "courseF_artist_fwp_challenge1_b": "<p>This is a series of octagons with sides that are <code>counter</code> pixels long. </p>",
          "courseF_artist_fwp_challenge1_c": "<p>Each octagon is called from inside a <code>for</code> loop that goes from 200 down to 2 by 2. </p>",
          "courseF_artist_fwp_challenge1_d": "<p>Don't forget to turn by 22.5 degrees at the end of each iteration. </p>",
          "courseF_artist_fwp_challenge1_e": "<p>Both the color of each octagon and the width of the pen are controlled by the <code>counter</code> variable.</p>",
          "courseF_artist_fwp_challenge1_f": "<p><strong>Solution:</strong></p>\n<p><img src=\"https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png\" alt=\"Solution Blocks\"></p>"
        },
        "courseF_artist_fwp_challenge2_2018_authored_hint": {
          "courseF_artist_fwp_challenge1_a": "<p><img src=\"https://images.code.org/9310e6352e85a8265b424c9d57ca28d1-image-1446239776339.gif\"></p>",
          "courseF_artist_fwp_challenge1_b": "<p>This is a series of octagons with sides that are <code>counter</code> pixels long. </p>",
          "courseF_artist_fwp_challenge1_c": "<p>Each octagon is called from inside a <code>for</code> loop that goes from 200 down to 2 by 2. </p>",
          "courseF_artist_fwp_challenge1_d": "<p>Don't forget to turn by 22.5 degrees at the end of each iteration. </p>",
          "courseF_artist_fwp_challenge1_e": "<p>Both the color of each octagon and the width of the pen are controlled by the <code>counter</code> variable.</p>",
          "courseF_artist_fwp_challenge1_f": "<p><strong>Solution:</strong></p>\n<p><img src=\"https://images.code.org/a82cfea836b95ce6625b08afcc3b7b37-image-1469727289590.png\" alt=\"Solution Blocks\"></p>"
        },
        "courseF_artist_predict1_authored_hint": {},
        "courseF_artist_predict1_2018_authored_hint": {},
        "courseF_artist_ramp10_authored_hint": {
          "courseF_artist_ramp10_a": "<p>Don't forget to turn by 60 degrees after each triangle.  Which loop do you need to put that instruction inside?</p>",
          "courseF_artist_ramp10_b": "<p>If your code for a triangle is in a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">6</title></block></xml> loop, this task will be a lot simpler.</p>",
          "courseF_artist_ramp10_c": "<p>You will draw six triangles in total for this design:</p>\n<p><img src=\"https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif\"></p>"
        },
        "courseF_artist_ramp10_2018_authored_hint": {
          "courseF_artist_ramp10_a": "<p>Don't forget to turn by 60 degrees after each triangle.  Which loop do you need to put that instruction inside?</p>",
          "courseF_artist_ramp10_b": "<p>If your code for a triangle is in a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">6</title></block></xml> loop, this task will be a lot simpler.</p>",
          "courseF_artist_ramp10_c": "<p>You will draw six triangles in total for this design:</p>\n<p><img src=\"https://images.code.org/bc62bed22e90d35e420b0a116ac487ef-image-1500347536221.2_solution2.gif\"></p>"
        },
        "courseF_artist_ramp8_authored_hint": {
          "courseF_artist_ramp8_a": "<p>To draw a side, use the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">100</title></block></xml> block, and change the 100 to a 200.</p>",
          "courseF_artist_ramp8_b": "<p>To draw 4 sides, put the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">200</title></block></xml> block inside of a repeat loop and make sure the loop is set to draw 4 times.</p>\n<p>Don't forget to turn afterward!</p>",
          "courseF_artist_ramp8_c": "<p>Your turn will also go inside of the <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop.</p>"
        },
        "courseF_artist_ramp8_2018_authored_hint": {
          "courseF_artist_ramp8_a": "<p>To draw a side, use the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">100</title></block></xml> block, and change the 100 to a 200.</p>",
          "courseF_artist_ramp8_b": "<p>To draw 4 sides, put the <xml><block type=\"draw_move_by_constant\"><title name=\"DIR\">moveForward</title><title name=\"VALUE\">200</title></block></xml> block inside of a repeat loop and make sure the loop is set to draw 4 times.</p>\n<p>Don't forget to turn afterward!</p>",
          "courseF_artist_ramp8_c": "<p>Your turn will also go inside of the <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop.</p>"
        },
        "courseF_artist_ramp9_authored_hint": {
          "courseF_artist_ramp9_a": "<p>How is this similar to a square?  How is it different?</p>",
          "courseF_artist_ramp9_b": "<p>You can use the drop down menu on the turn blocks to see which angle you need!</p>",
          "courseF_artist_ramp9_c": "<p>You will want to move forward 100 pixels, then turn right 120 degrees for each side. Can you use a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop to make your code shorter?</p>"
        },
        "courseF_artist_ramp9_2018_authored_hint": {
          "courseF_artist_ramp9_a": "<p>How is this similar to a square?  How is it different?</p>",
          "courseF_artist_ramp9_b": "<p>You can use the drop down menu on the turn blocks to see which angle you need!</p>",
          "courseF_artist_ramp9_c": "<p>You will want to move forward 100 pixels, then turn right 120 degrees for each side. Can you use a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop to make your code shorter?</p>"
        },
        "courseF_artist_variables10_authored_hint": {
          "courseF_artist_variables10_a": "<p>Have fun with this level! See what little changes can do to your code.</p>",
          "courseF_artist_variables10_b": "<p>You can try multiple things, and run your code multiple times.</p>"
        },
        "courseF_artist_variables10_2018_authored_hint": {
          "courseF_artist_variables10_a": "<p>Have fun with this level! See what little changes can do to your code.</p>",
          "courseF_artist_variables10_b": "<p>You can try multiple things, and run your code multiple times.</p>"
        },
        "courseF_artist_variables2_authored_hint": {
          "courseF_artist_variables2_a": "<p>Remember to move forward after drawing each triangle.</p>",
          "courseF_artist_variables2_b": "<p>Your new loop will contain the loop for your triangle, then a <code>move forward</code> command.</p>"
        },
        "courseF_artist_variables2_2018_authored_hint": {
          "courseF_artist_variables2_a": "<p>Remember to move forward after drawing each triangle.</p>",
          "courseF_artist_variables2_b": "<p>Your new loop will contain the loop for your triangle, then a <code>move forward</code> command.</p>"
        },
        "courseF_artist_variables3_authored_hint": {
          "courseF_artist_variables3_a": "<p>The variable <code>length</code> will be used in two places in your code: In the side length of your triangle, and in the amount you move forward between triangles.</p>",
          "courseF_artist_variables3_b": "<p>A number block with value 50 should only be in one place: after the <code>set variable length</code> block.</p>"
        },
        "courseF_artist_variables3_2018_authored_hint": {
          "courseF_artist_variables3_a": "<p>The variable <code>length</code> will be used in two places in your code: In the side length of your triangle, and in the amount you move forward between triangles.</p>",
          "courseF_artist_variables3_b": "<p>A number block with value 50 should only be in one place: after the <code>set variable length</code> block.</p>"
        },
        "courseF_artist_variables4_authored_hint": {
          "courseF_artist_variables4_a": "<p>Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.</p>",
          "courseF_artist_variables4_c": "<p>This is the pattern your artist will be following:</p>\n<p><img src=\"https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif\"></p>",
          "courseF_artist_variables4_b": "<p><img src=\"https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif\"></p>"
        },
        "courseF_artist_variables4_2018_authored_hint": {
          "courseF_artist_variables4_a": "<p>Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to jump down, then turn him back to get ready to jump forward again.</p>",
          "courseF_artist_variables4_c": "<p>This is the pattern your artist will be following:</p>\n<p><img src=\"https://images.code.org/41ae98c1633755cf4553f90a80e125cf-image-1500325529204.6_hint.gif\"></p>",
          "courseF_artist_variables4_b": "<p><img src=\"https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif\"></p>"
        },
        "courseF_artist_variables5_authored_hint": {
          "courseF_artist_variables5_a": "<p>The second half of your code should look almost the same as the first half, except you will be turning <em>left</em>, jumping, then turning <em>right</em>.</p>",
          "courseF_artist_variables5_b": "<p>The first half of your code will draw three triangles, and the second half will draw the other three.</p>",
          "courseF_artist_variables5_c": "<p>Start by duplicating the code in the first half of your program, then alter it to make the design shown.</p>",
          "courseF_artist_variables5_d": "<p>This is the pattern your artist will follow:</p>\n<p><img src=\"https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif\"></p>"
        },
        "courseF_artist_variables5_2018_authored_hint": {
          "courseF_artist_variables5_a": "<p>The second half of your code should look almost the same as the first half, except you will be turning <em>left</em>, jumping, then turning <em>right</em>.</p>",
          "courseF_artist_variables5_b": "<p>The first half of your code will draw three triangles, and the second half will draw the other three.</p>",
          "courseF_artist_variables5_c": "<p>Start by duplicating the code in the first half of your program, then alter it to make the design shown.</p>",
          "courseF_artist_variables5_d": "<p>This is the pattern your artist will follow:</p>\n<p><img src=\"https://images.code.org/e4ac66f8e9a4503e49c4fad1e4fafc1d-image-1500326800109.7_hint.gif\"></p>"
        },
        "courseF_artist_variables6_authored_hint": {
          "courseF_artist_variables6_a": "<p>Thanks to variables, you only need to change one number at the top to make this work.</p>",
          "courseF_artist_variables6_b": "<p>You will need to edit the number block with value 50, but nothing else in the code needs to be altered.</p>"
        },
        "courseF_artist_variables6_2018_authored_hint": {
          "courseF_artist_variables6_a": "<p>Thanks to variables, you only need to change one number at the top to make this work.</p>",
          "courseF_artist_variables6_b": "<p>You will need to edit the number block with value 50, but nothing else in the code needs to be altered.</p>"
        },
        "courseF_artist_variables6a_authored_hint": {
          "courseF_artist_variables6a_a": "<p>Remember to use the variable <code>length</code> instead of an actual number to solve this puzzle.</p>",
          "courseF_artist_variables6a_b": "<p>This code will be very similar to your triangle code, just with a different shape!</p>",
          "courseF_artist_variables6a_c": "<p>Write the code for one square first, then add the code to move between squares. Finally, add a loop around everything!</p>",
          "courseF_artist_variables6a_d": "<p>This is the pattern you'll follow!</p>\n<p><img src=\"https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif\"></p>"
        },
        "courseF_artist_variables6a_2018_authored_hint": {
          "courseF_artist_variables6a_a": "<p>Remember to use the variable <code>length</code> instead of an actual number to solve this puzzle.</p>",
          "courseF_artist_variables6a_b": "<p>This code will be very similar to your triangle code, just with a different shape!</p>",
          "courseF_artist_variables6a_c": "<p>Write the code for one square first, then add the code to move between squares. Finally, add a loop around everything!</p>",
          "courseF_artist_variables6a_d": "<p>This is the pattern you'll follow!</p>\n<p><img src=\"https://images.code.org/7fd21023b1498742d1a83ad4132d276e-image-1500328404912.9_hint.gif\"></p>"
        },
        "courseF_artist_variables7_authored_hint": {
          "courseF_artist_variables7_a": "<p>Start your code by using the <code>set length</code> block. Set the length variable to 150.</p>",
          "courseF_artist_variables7_b": "<p>You can use a <code>repeat</code> loop to make your code for the triangle simpler.</p>",
          "courseF_artist_variables7_c": "<p>You will want to turn left 120 degrees to make the corners of the triangle.</p>"
        },
        "courseF_artist_variables7_2018_authored_hint": {
          "courseF_artist_variables7_a": "<p>Start your code by using the <code>set length</code> block. Set the length variable to 150.</p>",
          "courseF_artist_variables7_b": "<p>You can use a <code>repeat</code> loop to make your code for the triangle simpler.</p>",
          "courseF_artist_variables7_c": "<p>You will want to turn left 120 degrees to make the corners of the triangle.</p>"
        },
        "courseF_artist_variables8_authored_hint": {
          "courseF_artist_variables8_b": "<p>Remember to start your code for the triangle with the <code>set length</code> block, and start it at 150 pixels.</p>",
          "courseF_artist_variables8_c": "<p>Make sure to use the <code>repeat</code> loop to draw your triangle.</p>",
          "courseF_artist_variables8_a": "<p>Try putting the set of </p>\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\n<p>blocks inside your loop at the end.</p>"
        },
        "courseF_artist_variables8_2018_authored_hint": {
          "courseF_artist_variables8_b": "<p>Remember to start your code for the triangle with the <code>set length</code> block, and start it at 150 pixels.</p>",
          "courseF_artist_variables8_c": "<p>Make sure to use the <code>repeat</code> loop to draw your triangle.</p>",
          "courseF_artist_variables8_a": "<p>Try putting the set of </p>\n<xml>\n<block type=\"variables_set\" inline=\"false\">\n                        <title name=\"VAR\">length</title>\n                        <value name=\"VALUE\">\n                          <block type=\"math_arithmetic\" inline=\"true\">\n                            <title name=\"OP\">ADD</title>\n                            <value name=\"A\">\n                              <block type=\"variables_get\">\n                                <title name=\"VAR\">length</title>\n                              </block>\n                            </value>\n                            <value name=\"B\">\n                              <block type=\"math_number\">\n                                <title name=\"NUM\">10</title>\n                              </block>\n                            </value>\n                          </block>\n                        </value>\n                      </block>\n</xml>\n\n<p>blocks inside your loop at the end.</p>"
        },
        "courseF_artist_variables9_authored_hint": {
          "courseF_artist_variables9_a": "<p>For this puzzle, all you need to do is change how many times the loop repeats.</p>",
          "courseF_artist_variables9_b": "<p>Make sure the blocks that increment <code>length</code> are within your loop so the lines keep getting longer.</p>"
        },
        "courseF_artist_variables9_2018_authored_hint": {
          "courseF_artist_variables9_a": "<p>For this puzzle, all you need to do is change how many times the loop repeats.</p>",
          "courseF_artist_variables9_b": "<p>Make sure the blocks that increment <code>length</code> are within your loop so the lines keep getting longer.</p>"
        },
        "courseF_artist_variablesFP_authored_hint": {
          "courseF_artist_variablesFP_a": "<p>Try one of these three drawings.\n<img src=\"https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png\"></p>"
        },
        "courseF_artist_variablesFP_2018_authored_hint": {
          "courseF_artist_variablesFP_a": "<p>Try one of these three drawings.\n<img src=\"https://images.code.org/f0bac32182162bd26a8031f5aa4364ef-image-1493738360437.3.15 hints.png\"></p>"
        },
        "courseF_artist_variables_4_authored_hint": {
          "courseF_artist_variables_4_a": "<p>Your code won't be much different than it was in the last puzzle, except that you will need to turn the artist to move down, then turn him back to get ready to move forward again.</p>",
          "courseF_artist_variables_4_b": "<p><img src=\"https://images.code.org/fc31a4b60dc86d7b820c2d242f83e6ed-image-1477533361197.gif\"></p>"
        },
        "courseF_artist_variables_6_authored_hint": {
          "courseF_artist_variables_6_a": "<p>Thanks to variables, you only need to change one number at the top to make this work.</p>"
        },
        "courseF_artist_variables_6a_authored_hint": {
          "courseF_artist_variables6a_a": "<p>Remember to use the variable <code>length</code> instead of an actual number to solve this puzzle.</p>"
        },
        "courseF_artist_variables_8_authored_hint": {
          "courseF_artist_variables_8_a": "<p>Try putting the set of <img src=\"https://images.code.org/6525bebee31ee15b84a48761b2866f53-image-1477531948829.31.37.png\"> blocks inside your loop at the end.</p>"
        },
        "courseF_artist_variables_challenge1_authored_hint": {
          "courseF_artist_variables_challenge1_a": "<p>Each vertical line has a length of <code>10</code>. Each horizontal line should have a length of <code>length</code>.</p>",
          "courseF_artist_variables_challenge1_b": "<p>You will want to increase the value of <code>length</code> by 10 <strong>twice</strong> inside the loop.</p>",
          "courseF_artist_variables_challenge1_c": "<p>To complete the pattern you will need to turn left twice, turn right twice, and move forward a total of four times.</p>",
          "courseF_artist_variables_challenge1_d": "<p>This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.</p>\n<p><img src=\"https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png\"></p>\n<p>If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.</p>",
          "courseF_artist_variables_challenge1_e": "<p>Here is the solution.</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">length</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">18</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">10</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">90</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">length</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"variables_set\" inline=\"false\">\n                            <title name=\"VAR\">length</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_arithmetic\" inline=\"true\">\n                                <title name=\"OP\">ADD</title>\n                                <value name=\"A\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">length</title>\n                                  </block>\n                                </value>\n                                <value name=\"B\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">10</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnLeft</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_move\" inline=\"true\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">10</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"draw_move\" inline=\"true\">\n                                            <title name=\"DIR\">moveForward</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">length</title>\n                                              </block>\n                                            </value>\n                                            <next>\n                                              <block type=\"variables_set\" inline=\"false\">\n                                                <title name=\"VAR\">length</title>\n                                                <value name=\"VALUE\">\n                                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                                    <title name=\"OP\">ADD</title>\n                                                    <value name=\"A\">\n                                                      <block type=\"variables_get\">\n                                                        <title name=\"VAR\">length</title>\n                                                      </block>\n                                                    </value>\n                                                    <value name=\"B\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">10</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </value>\n                                                <next>\n                                                  <block type=\"draw_turn\" inline=\"true\">\n                                                    <title name=\"DIR\">turnRight</title>\n                                                    <value name=\"VALUE\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">90</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_variables_challenge1_2018_authored_hint": {
          "courseF_artist_variables_challenge1_a": "<p>Each vertical line has a length of <code>10</code>. Each horizontal line should have a length of <code>length</code>.</p>",
          "courseF_artist_variables_challenge1_b": "<p>You will want to increase the value of <code>length</code> by 10 <strong>twice</strong> inside the loop.</p>",
          "courseF_artist_variables_challenge1_c": "<p>To complete the pattern you will need to turn left twice, turn right twice, and move forward a total of four times.</p>",
          "courseF_artist_variables_challenge1_d": "<p>This puzzle just uses one loop. Without any variables, a similar path might just be a zig-zag.</p>\n<p><img src=\"https://images.code.org/664fdd219502d004fb07886f834fa3d5-image-1496868743379.51.36 PM.png\"></p>\n<p>If you are having trouble, start by creating this image, then try to see where you can use variables to change the length of the horizontal lines.</p>",
          "courseF_artist_variables_challenge1_e": "<p>Here is the solution.</p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"variables_set\" inline=\"false\">\n        <title name=\"VAR\">length</title>\n        <value name=\"VALUE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">10</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">18</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"draw_move\" inline=\"true\">\n                <title name=\"DIR\">moveForward</title>\n                <value name=\"VALUE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">10</title>\n                  </block>\n                </value>\n                <next>\n                  <block type=\"draw_turn\" inline=\"true\">\n                    <title name=\"DIR\">turnRight</title>\n                    <value name=\"VALUE\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">90</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"draw_move\" inline=\"true\">\n                        <title name=\"DIR\">moveForward</title>\n                        <value name=\"VALUE\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">length</title>\n                          </block>\n                        </value>\n                        <next>\n                          <block type=\"variables_set\" inline=\"false\">\n                            <title name=\"VAR\">length</title>\n                            <value name=\"VALUE\">\n                              <block type=\"math_arithmetic\" inline=\"true\">\n                                <title name=\"OP\">ADD</title>\n                                <value name=\"A\">\n                                  <block type=\"variables_get\">\n                                    <title name=\"VAR\">length</title>\n                                  </block>\n                                </value>\n                                <value name=\"B\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">10</title>\n                                  </block>\n                                </value>\n                              </block>\n                            </value>\n                            <next>\n                              <block type=\"draw_turn\" inline=\"true\">\n                                <title name=\"DIR\">turnLeft</title>\n                                <value name=\"VALUE\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">90</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"draw_move\" inline=\"true\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <value name=\"VALUE\">\n                                      <block type=\"math_number\">\n                                        <title name=\"NUM\">10</title>\n                                      </block>\n                                    </value>\n                                    <next>\n                                      <block type=\"draw_turn\" inline=\"true\">\n                                        <title name=\"DIR\">turnLeft</title>\n                                        <value name=\"VALUE\">\n                                          <block type=\"math_number\">\n                                            <title name=\"NUM\">90</title>\n                                          </block>\n                                        </value>\n                                        <next>\n                                          <block type=\"draw_move\" inline=\"true\">\n                                            <title name=\"DIR\">moveForward</title>\n                                            <value name=\"VALUE\">\n                                              <block type=\"variables_get\">\n                                                <title name=\"VAR\">length</title>\n                                              </block>\n                                            </value>\n                                            <next>\n                                              <block type=\"variables_set\" inline=\"false\">\n                                                <title name=\"VAR\">length</title>\n                                                <value name=\"VALUE\">\n                                                  <block type=\"math_arithmetic\" inline=\"true\">\n                                                    <title name=\"OP\">ADD</title>\n                                                    <value name=\"A\">\n                                                      <block type=\"variables_get\">\n                                                        <title name=\"VAR\">length</title>\n                                                      </block>\n                                                    </value>\n                                                    <value name=\"B\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">10</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </value>\n                                                <next>\n                                                  <block type=\"draw_turn\" inline=\"true\">\n                                                    <title name=\"DIR\">turnRight</title>\n                                                    <value name=\"VALUE\">\n                                                      <block type=\"math_number\">\n                                                        <title name=\"NUM\">90</title>\n                                                      </block>\n                                                    </value>\n                                                  </block>\n                                                </next>\n                                              </block>\n                                            </next>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_artist_variables_challenge1a_authored_hint": {
          "courseF_artist_variables_challenge1_a": "<p>Variables are helpful because you can add to them each time through a loop. </p>",
          "courseF_artist_variables_challenge1_b": "<p>This puzzle has one loop that creates the polygon, one loop that repeats the polygon <code>sides</code> times, then another loop that does it all again after adding 5 to <code>sides</code>.</p>",
          "courseF_artist_variables_challenge1_c": "<p>Using a variable for <code>sides</code> and one for <code>length</code> makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.</p>",
          "courseF_artist_variables_challenge1_d": "<p><strong>Solution:</strong></p>\n<p><img src=\"https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png\" alt=\"Solution\"></p>"
        },
        "courseF_artist_variables_challenge2_authored_hint": {
          "courseF_artist_variables_challenge2_a": "<p>Variables are helpful because you can add to them each time through a loop.</p>",
          "courseF_artist_variables_challenge2_c": "<p>Using one variable for <code>sides</code> and one for <code>length</code> makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.</p>",
          "courseF_artist_variables_challenge2_d": "<p><strong>Solution:</strong></p>\n<p><img src=\"https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png\" alt=\"Solution\"></p>"
        },
        "courseF_artist_variables_challenge2_2018_authored_hint": {
          "courseF_artist_variables_challenge2_a": "<p>Variables are helpful because you can add to them each time through a loop.</p>",
          "courseF_artist_variables_challenge2_c": "<p>Using one variable for <code>sides</code> and one for <code>length</code> makes the code cleaner because you can loop the same code multiple times, instead of creating a new copy for each set of numbers.</p>",
          "courseF_artist_variables_challenge2_d": "<p><strong>Solution:</strong></p>\n<p><img src=\"https://images.code.org/311b4a946cb8f3b4144b5075be6460a3-image-1469641878222.png\" alt=\"Solution\"></p>"
        },
        "courseF_bee_conditionals10_authored_hint": {
          "courseF_bee_conditionals10_a": "<p>Imagine there is a cloud in every spot. Does this help simplify your code?</p>",
          "courseF_bee_conditionals10_b": "<p>Use an <code>if/else</code> block to check every space for nectar or honey.</p>",
          "courseF_bee_conditionals10_c": "<p>Could a <code>while</code> loop help get to the end of this path?</p>"
        },
        "courseF_bee_conditionals10_2018_authored_hint": {
          "courseF_bee_conditionals10_a": "<p>Imagine there is a cloud in every spot. Does this help simplify your code?</p>",
          "courseF_bee_conditionals10_b": "<p>Use an <code>if/else</code> block to check every space for nectar or honey.</p>",
          "courseF_bee_conditionals10_c": "<p>Could a <code>while</code> loop help get to the end of this path?</p>"
        },
        "courseF_bee_conditionals1_predict1_authored_hint": {},
        "courseF_bee_conditionals1_predict1_2018_authored_hint": {},
        "courseF_bee_conditionals2_authored_hint": {
          "courseF_bee_conditionals2_a": "<p>Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an <code>if</code> statement.</p>",
          "courseF_bee_conditionals2_b": "<p>Try writing the sequence to get you to all of the spaces, then add the <code>if</code> statement.</p>"
        },
        "courseF_bee_conditionals2_2018_authored_hint": {
          "courseF_bee_conditionals2_a": "<p>Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an <code>if</code> statement.</p>",
          "courseF_bee_conditionals2_b": "<p>Try writing the sequence to get you to all of the spaces, then add the <code>if</code> statement.</p>"
        },
        "courseF_bee_conditionals3_authored_hint": {
          "courseF_bee_conditionals3_a": "<p>Be sure to use an <code>if</code> statement to check each space to see if it has either a flower or nothing.</p>",
          "courseF_bee_conditionals3_b": "<p>A <code>repeat</code> loop will be useful so you only have to use one <code>if</code> block.</p>",
          "courseF_bee_conditionals3_c": "<p>Try writing code to check the first cloud. Can you loop this to check all of them?</p>"
        },
        "courseF_bee_conditionals3_2018_authored_hint": {
          "courseF_bee_conditionals3_a": "<p>Be sure to use an <code>if</code> statement to check each space to see if it has either a flower or nothing.</p>",
          "courseF_bee_conditionals3_b": "<p>A <code>repeat</code> loop will be useful so you only have to use one <code>if</code> block.</p>",
          "courseF_bee_conditionals3_c": "<p>Try writing code to check the first cloud. Can you loop this to check all of them?</p>"
        },
        "courseF_bee_conditionals4_authored_hint": {
          "courseD_bee_conditionals4_a": "<p>You can still treat every space as if there is a cloud over it, even though you can see the whole path.</p>",
          "courseF_bee_conditionals4_b": "<p>Use an <code>if</code> statement inside your loop to check each space for nectar. </p>",
          "courseF_bee_conditionals4_c": "<p>Using the block <code>while there is a path ahead</code>, you should <code>move forward</code> and check for a flower. <code>if there is a flower</code> what should the bee do?</p>"
        },
        "courseF_bee_conditionals4_2018_authored_hint": {
          "courseD_bee_conditionals4_a": "<p>You can still treat every space as if there is a cloud over it, even though you can see the whole path.</p>",
          "courseF_bee_conditionals4_b": "<p>Use an <code>if</code> statement inside your loop to check each space for nectar. </p>",
          "courseF_bee_conditionals4_c": "<p>Using the block <code>while there is a path ahead</code>, you should <code>move forward</code> and check for a flower. <code>if there is a flower</code> what should the bee do?</p>"
        },
        "courseF_bee_conditionals5_authored_hint": {
          "courseF_bee_conditionals5_a": "<p>Think of every side of the rectangular path as a path by itself. Set up a nested loop with a <code>repeat</code> block on the outside and a <code>while there is a path ahead</code> on the inside. How many paths does the bee need to buzz down if the bee needs to buzz every side with a flower?</p>",
          "courseF_bee_conditionals5_b": "<p>Inside the <code>while there is a path ahead</code> block, you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?</p>",
          "courseF_bee_conditionals5_c": "<p>There are 3 sides of the rectangle with flowers, so the code needs to <code>repeat 3 times</code>. In every repeat, the bee will need to continue along the path, <code>while there is a path ahead</code>. </p>",
          "courseF_bee_conditionals5_d": "<p>To continue down the path, the bee will need to <code>move forward</code>. While on the path, the bee needs to check for a flower. What should the bee do if there is a flower?</p>"
        },
        "courseF_bee_conditionals5_2018_authored_hint": {
          "courseF_bee_conditionals5_a": "<p>Think of every side of the rectangular path as a path by itself. Set up a nested loop with a <code>repeat</code> block on the outside and a <code>while there is a path ahead</code> on the inside. How many paths does the bee need to buzz down if the bee needs to buzz every side with a flower?</p>",
          "courseF_bee_conditionals5_b": "<p>Inside the <code>while there is a path ahead</code> block, you will need to move forward and check for a flower. How do you check if there is a flower? What do you do if there is a flower?</p>",
          "courseF_bee_conditionals5_c": "<p>There are 3 sides of the rectangle with flowers, so the code needs to <code>repeat 3 times</code>. In every repeat, the bee will need to continue along the path, <code>while there is a path ahead</code>. </p>",
          "courseF_bee_conditionals5_d": "<p>To continue down the path, the bee will need to <code>move forward</code>. While on the path, the bee needs to check for a flower. What should the bee do if there is a flower?</p>"
        },
        "courseF_bee_conditionals7_predict2_authored_hint": {},
        "courseF_bee_conditionals7_predict2_2018_authored_hint": {},
        "courseF_bee_conditionals8_authored_hint": {
          "courseF_bee_conditionals8_a": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>",
          "courseF_bee_conditionals8_b": "<p>This puzzle is tricky, because you can't check blank squares, nectar, <em>and</em> honey with just one single conditional.</p>\n<p>Only check for nectar and honey at the end of your path.</p>",
          "courseF_bee_conditionals8_c": "<p>What happens if you skip the first flower, then use the <code>while path ahead</code> block?</p>"
        },
        "courseF_bee_conditionals8_2018_authored_hint": {
          "courseF_bee_conditionals8_a": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>",
          "courseF_bee_conditionals8_b": "<p>This puzzle is tricky, because you can't check blank squares, nectar, <em>and</em> honey with just one single conditional.</p>\n<p>Only check for nectar and honey at the end of your path.</p>",
          "courseF_bee_conditionals8_c": "<p>What happens if you skip the first flower, then use the <code>while path ahead</code> block?</p>"
        },
        "courseF_bee_for1_authored_hint": {
          "courseF_bee_for1_a": "<p>Drag a purple number block into the blank space on the <code>repeat</code> loop to tell it how many times to repeat.</p>",
          "courseF_bee_for1_b": "<p>You will need two blocks in your ‘repeat’ loop to collect all of the nectar.</p>"
        },
        "courseF_bee_for10_authored_hint": {
          "courseF_bee_for10_a": "<p>Can you find a pattern between the number of steps you need to take and the number of nectars to gather?</p>",
          "courseF_bee_for10_b": "<p>The first set of flowers has a total of <strong>14 flowers</strong>. To get to this first set, the bee must buzz down <strong>7 squares</strong> (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?</p>",
          "courseF_bee_for10_c": "<p>In the puzzle, the first set of flowers has <strong>14</strong> flowers, the second set has <strong>10</strong> flowers, third set has <strong>6</strong> flowers, and the fourth set has <strong>2</strong> flowers.</p>\n<p>In this drawing, notice there are <strong>7</strong> red squares, <strong>5</strong> orange squares, <strong>3</strong> green squares, and <strong>1</strong> blue block. </p>\n<p><img src=\"https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png\"></p>\n<p>How do the numbers relate?</p>",
          "courseF_bee_for10_d": "<p>You'll need to have 2 repeats, one will use a math block.</p>"
        },
        "courseF_bee_for10_2018_authored_hint": {
          "courseF_bee_for10_a": "<p>Can you find a pattern between the number of steps you need to take and the number of nectars to gather?</p>",
          "courseF_bee_for10_b": "<p>The first set of flowers has a total of <strong>14 flowers</strong>. To get to this first set, the bee must buzz down <strong>7 squares</strong> (or 14 squares divided by 2.) How many flowers are in the next set and how many squares will be the bee have to travel to get there?</p>",
          "courseF_bee_for10_c": "<p>In the puzzle, the first set of flowers has <strong>14</strong> flowers, the second set has <strong>10</strong> flowers, third set has <strong>6</strong> flowers, and the fourth set has <strong>2</strong> flowers.</p>\n<p>In this drawing, notice there are <strong>7</strong> red squares, <strong>5</strong> orange squares, <strong>3</strong> green squares, and <strong>1</strong> blue block. </p>\n<p><img src=\"https://images.code.org/602ce14659299af6a59a79ebd0bdb9d4-image-1493221855089.6.11 Hint Drawing.png\"></p>\n<p>How do the numbers relate?</p>",
          "courseF_bee_for10_d": "<p>You'll need to have 2 repeats, one will use a math block.</p>"
        },
        "courseF_bee_for11_authored_hint": {
          "courseF_bee_for11_a": "<p>How much less is 12 than 15?<br>How much less is 9 than 12?</p>\n<p>Do you see a pattern?</p>"
        },
        "courseF_bee_for11_2018_authored_hint": {
          "courseF_bee_for11_a": "<p>How much less is 12 than 15?<br>How much less is 9 than 12?</p>\n<p>Do you see a pattern?</p>"
        },
        "courseF_bee_for1_2018_authored_hint": {
          "courseF_bee_for1_a": "<p>Drag a purple number block into the blank space on the <code>repeat</code> loop to tell it how many times to repeat.</p>",
          "courseF_bee_for1_b": "<p>You will need two blocks in your ‘repeat’ loop to collect all of the nectar.</p>"
        },
        "courseF_bee_for2_authored_hint": {
          "courseF_bee_for2_a": "<p>If you’re confused, work one flower at a time, and test often.</p>",
          "courseF_bee_for2_b": "<p>Remember to move forward between each loop, so you reach each flower.</p>"
        },
        "courseF_bee_for2_2018_authored_hint": {
          "courseF_bee_for2_a": "<p>If you’re confused, work one flower at a time, and test often.</p>",
          "courseF_bee_for2_b": "<p>Remember to move forward between each loop, so you reach each flower.</p>"
        },
        "courseF_bee_for3_authored_hint": {
          "courseF_bee_for3_a": "<p>Use the <code>counter</code> variable inside the <code>repeat</code> loop where nectar is gathered to solve this puzzle. </p>",
          "courseF_bee_for3_b": "<p>Your <code>for</code> loop will need to count from 1 to 5 with an increment of 1.</p>"
        },
        "courseF_bee_for3_predict1_authored_hint": {},
        "courseF_bee_for3_predict1_2018_authored_hint": {},
        "courseF_bee_for4_authored_hint": {
          "courseF_bee_for4_a": "<p>Use a <code>for</code> loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.</p>",
          "courseF_bee_for4_b": "<p>Within your <code>for</code> loop, you will want to have a <code>move forward</code> command, and a loop to collect nectar.</p>",
          "courseF_bee_for4_c": "<p>Make sure to use the <code>counter</code> variable inside your nested <code>repeat</code> loop to get enough nectar!</p>"
        },
        "courseF_bee_for4_2018_authored_hint": {
          "courseF_bee_for4_a": "<p>Use a <code>for</code> loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.</p>",
          "courseF_bee_for4_b": "<p>Within your <code>for</code> loop, you will want to have a <code>move forward</code> command, and a loop to collect nectar.</p>",
          "courseF_bee_for4_c": "<p>Make sure to use the <code>counter</code> variable inside your nested <code>repeat</code> loop to get enough nectar!</p>"
        },
        "courseF_bee_for5_authored_hint": {
          "courseF_bee_for5_a": "<p>This time, your <code>move forward</code> block and your <code>get nectar</code> block will need to be in separate <code>repeat</code> loops, both inside the same <code>for</code> loop.</p>",
          "courseF_bee_for5_b": "<p>Use the <code>counter</code> variable in each loop so the bee moves different distances between each flower.</p>",
          "courseF_bee_for5_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseF_bee_for5_2018_authored_hint": {
          "courseF_bee_for5_a": "<p>This time, your <code>move forward</code> block and your <code>get nectar</code> block will need to be in separate <code>repeat</code> loops, both inside the same <code>for</code> loop.</p>",
          "courseF_bee_for5_b": "<p>Use the <code>counter</code> variable in each loop so the bee moves different distances between each flower.</p>",
          "courseF_bee_for5_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseF_bee_for6_authored_hint": {
          "courseF_bee_for6_a": "<p>Don't forget to use a <code>counter</code> variable inside your <code>repeat</code> loop.</p>",
          "courseF_bee_for6_b": "<p>Within your <code>for</code> loop, you will want to have a <code>move forward</code> command, and a loop to collect nectar.</p>",
          "courseF_bee_for6_c": "<p>Your loop should count <strong>from 5 to 1</strong>.</p>"
        },
        "courseF_bee_for6_2018_authored_hint": {
          "courseF_bee_for6_a": "<p>Don't forget to use a <code>counter</code> variable inside your <code>repeat</code> loop.</p>",
          "courseF_bee_for6_b": "<p>Within your <code>for</code> loop, you will want to have a <code>move forward</code> command, and a loop to collect nectar.</p>",
          "courseF_bee_for6_c": "<p>Your loop should count <strong>from 5 to 1</strong>.</p>"
        },
        "courseF_bee_for7_authored_hint": {
          "courseF_bee_for7_a": "<p>Your <code>for</code> loop will need to count from 1 to 7 by 2.</p>",
          "courseF_bee_for7_b": "<p>Within your <code>for</code> loop, you will want to have a <code>move forward</code> command, and a loop to collect nectar.</p>",
          "courseF_bee_for7_c": "<p>Remember to use the <code>counter</code> variable in your <code>repeat</code> loop.</p>"
        },
        "courseF_bee_for7_2018_authored_hint": {
          "courseF_bee_for7_a": "<p>Your <code>for</code> loop will need to count from 1 to 7 by 2.</p>",
          "courseF_bee_for7_b": "<p>Within your <code>for</code> loop, you will want to have a <code>move forward</code> command, and a loop to collect nectar.</p>",
          "courseF_bee_for7_c": "<p>Remember to use the <code>counter</code> variable in your <code>repeat</code> loop.</p>"
        },
        "courseF_bee_for8_authored_hint": {
          "courseF_bee_for8_a": "<p>If your loop is counting up, the increment is added to your counter variable each time through. </p>\n<p>What do you need to add to each number to get the next amount of nectar?</p>",
          "courseF_bee_for8_b": "<p>In this puzzle, you will need to move in a stair step pattern to get to the flowers.</p>",
          "courseF_bee_for8_c": "<p>Your loop will count <em>from 3 to 15</em> with some increment. What is it?</p>"
        },
        "courseF_bee_for8_2018_authored_hint": {
          "courseF_bee_for8_a": "<p>If your loop is counting up, the increment is added to your counter variable each time through. </p>\n<p>What do you need to add to each number to get the next amount of nectar?</p>",
          "courseF_bee_for8_b": "<p>In this puzzle, you will need to move in a stair step pattern to get to the flowers.</p>",
          "courseF_bee_for8_c": "<p>Your loop will count <em>from 3 to 15</em> with some increment. What is it?</p>"
        },
        "courseF_bee_for9_authored_hint": {
          "courseF_bee_for9_a": "<p>Try doing some math with the counter variable.</p>\n<p>What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?</p>",
          "courseF_bee_for9_c": "<p>It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.</p>",
          "courseF_bee_for9_b": "<p><strong>Remember:</strong> If your loop is counting up, the increment is added to your <code>counter</code> variable each time through.</p>"
        },
        "courseF_bee_for9_2018_authored_hint": {
          "courseF_bee_for9_a": "<p>Try doing some math with the counter variable.</p>\n<p>What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?</p>",
          "courseF_bee_for9_c": "<p>It looks like you will need to turn the bee at the beginning of each loop iteration if you want to solve the puzzle.</p>",
          "courseF_bee_for9_b": "<p><strong>Remember:</strong> If your loop is counting up, the increment is added to your <code>counter</code> variable each time through.</p>"
        },
        "courseF_bee_for_challenge1_authored_hint": {},
        "courseF_bee_for_challenge1_2018_authored_hint": {},
        "courseF_bee_for_challenge2_authored_hint": {
          "courseF_bee_for_challenge2_a": "<p>Take a look at this option for movement:  </p>\n<p><img src=\"https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png\"></p>",
          "courseF_bee_for_challenge2_b": "<p>Try using two <code>for</code> loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.</p>",
          "courseF_bee_for_challenge2_c": "<p>Notice that one <code>for</code> loop needs several regular loops inside that repeat <code>counter</code> times to make the increasing stair pattern. </p>\n<p>The other <code>for</code> loop only needs one regular loop to make <code>counter</code> amount of honey.</p>",
          "courseF_bee_for_challenge2_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">counter</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_nectar\"/>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnLeft</title>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"maze_moveForward\"/>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnRight</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"controls_for\" inline=\"true\">\n                    <title name=\"VAR\">counter</title>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\">\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"maze_moveForward\">\n                                <next>\n                                  <block type=\"maze_turn\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <next>\n                                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                                        <value name=\"TIMES\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">counter</title>\n                                          </block>\n                                        </value>\n                                        <statement name=\"DO\">\n                                          <block type=\"maze_honey\"/>\n                                        </statement>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_bee_for_challenge2_2018_authored_hint": {
          "courseF_bee_for_challenge2_a": "<p>Take a look at this option for movement:  </p>\n<p><img src=\"https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png\"></p>",
          "courseF_bee_for_challenge2_b": "<p>Try using two <code>for</code> loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.</p>",
          "courseF_bee_for_challenge2_c": "<p>Notice that one <code>for</code> loop needs several regular loops inside that repeat <code>counter</code> times to make the increasing stair pattern. </p>\n<p>The other <code>for</code> loop only needs one regular loop to make <code>counter</code> amount of honey.</p>",
          "courseF_bee_for_challenge2_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">counter</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_nectar\"/>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnLeft</title>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"maze_moveForward\"/>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnRight</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"controls_for\" inline=\"true\">\n                    <title name=\"VAR\">counter</title>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\">\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"maze_moveForward\">\n                                <next>\n                                  <block type=\"maze_turn\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <next>\n                                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                                        <value name=\"TIMES\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">counter</title>\n                                          </block>\n                                        </value>\n                                        <statement name=\"DO\">\n                                          <block type=\"maze_honey\"/>\n                                        </statement>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_bee_for_challenge3_authored_hint": {
          "courseF_bee_for_challenge2_a": "<p>Take a look at this option for movement:  </p>\n<p><img src=\"https://images.code.org/07fa7bdbbaaae3ecf2663a360b3e87d7-image-1469726373660.png\"></p>",
          "courseF_bee_for_challenge2_b": "<p>Try using two <code>for</code> loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.</p>",
          "courseF_bee_for_challenge2_c": "<p>Notice that one <code>for</code> loop needs several regular loops inside that repeat <code>counter</code> times to make the increasing stair pattern. </p>\n<p>The other <code>for</code> loop only needs one regular loop to make <code>counter</code> amount of honey.</p>",
          "courseF_bee_for_challenge2_d": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"controls_repeat_ext\" inline=\"true\">\n            <value name=\"TIMES\">\n              <block type=\"variables_get\">\n                <title name=\"VAR\">counter</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_moveForward\"/>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_nectar\"/>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnLeft</title>\n                    <next>\n                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                        <value name=\"TIMES\">\n                          <block type=\"variables_get\">\n                            <title name=\"VAR\">counter</title>\n                          </block>\n                        </value>\n                        <statement name=\"DO\">\n                          <block type=\"maze_moveForward\"/>\n                        </statement>\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnRight</title>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n        <next>\n          <block type=\"maze_turn\">\n            <title name=\"DIR\">turnRight</title>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"controls_for\" inline=\"true\">\n                    <title name=\"VAR\">counter</title>\n                    <value name=\"FROM\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <value name=\"TO\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">10</title>\n                      </block>\n                    </value>\n                    <value name=\"BY\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">2</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"maze_moveForward\">\n                        <next>\n                          <block type=\"maze_turn\">\n                            <title name=\"DIR\">turnLeft</title>\n                            <next>\n                              <block type=\"maze_moveForward\">\n                                <next>\n                                  <block type=\"maze_turn\">\n                                    <title name=\"DIR\">turnRight</title>\n                                    <next>\n                                      <block type=\"controls_repeat_ext\" inline=\"true\">\n                                        <value name=\"TIMES\">\n                                          <block type=\"variables_get\">\n                                            <title name=\"VAR\">counter</title>\n                                          </block>\n                                        </value>\n                                        <statement name=\"DO\">\n                                          <block type=\"maze_honey\"/>\n                                        </statement>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_bee_functions2_authored_hint": {
          "courseF_bee_functions2_a": "<p>The function has been written for you, but you will need to call it at each flower.</p>",
          "courseF_bee_functions2_b": "<p>Click on the blue edit button on the <code>get only nectar</code> function to see what it does.</p>"
        },
        "courseF_bee_functions2_2018_authored_hint": {
          "courseF_bee_functions2_a": "<p>The function has been written for you, but you will need to call it at each flower.</p>",
          "courseF_bee_functions2_b": "<p>Click on the blue edit button on the <code>get only nectar</code> function to see what it does.</p>"
        },
        "courseF_bee_functions3_authored_hint": {
          "courseF_bee_functions3_a": "<p>Your function for this puzzle only needs to make honey, it shouldn't have any <code>move forward</code> or <code>turn</code> blocks in it. </p>",
          "courseF_bee_functions3_b": "<p>Remember that your function should only get honey <em>if</em> there is a honeycomb.</p>",
          "courseF_bee_functions3_c": "<p>Use the green <code>only make honey</code> block to call your function.</p>",
          "courseF_bee_functions3_d": "<p>Check out this path.</p>"
        },
        "courseF_bee_functions3_2018_authored_hint": {
          "courseF_bee_functions3_a": "<p>Your function for this puzzle only needs to make honey, it shouldn't have any <code>move forward</code> or <code>turn</code> blocks in it. </p>",
          "courseF_bee_functions3_b": "<p>Remember that your function should only get honey <em>if</em> there is a honeycomb.</p>",
          "courseF_bee_functions3_c": "<p>Use the green <code>only make honey</code> block to call your function.</p>",
          "courseF_bee_functions3_d": "<p>Check out this path.</p>"
        },
        "courseF_bee_functions3a_authored_hint": {
          "courseF_bee_functions3a_a": "<p>Your function for this puzzle only needs to get nectar or make honey, it shouldn't have any <code>move forward</code> or <code>turn</code> blocks in it. </p>",
          "courseF_bee_functions3a_b": "<p>Use a stairstep pattern to check the first four clouds.</p>"
        },
        "courseF_bee_functions3a_2018_authored_hint": {
          "courseF_bee_functions3a_a": "<p>Your function for this puzzle only needs to get nectar or make honey, it shouldn't have any <code>move forward</code> or <code>turn</code> blocks in it. </p>",
          "courseF_bee_functions3a_b": "<p>Use a stairstep pattern to check the first four clouds.</p>"
        },
        "courseF_bee_functions4_authored_hint": {
          "courseF_bee_functions4_a": "<p>Your function should travel down the side paths and return the bee back to the main road.  You don't need to add that part to your main program.</p>",
          "courseF_bee_functions4_b": "<p>Try building the program and using the function blocks as you expect the function to behave, then create the function.</p>"
        },
        "courseF_bee_functions4_2018_authored_hint": {
          "courseF_bee_functions4_a": "<p>Your function should travel down the side paths and return the bee back to the main road.  You don't need to add that part to your main program.</p>",
          "courseF_bee_functions4_b": "<p>Try building the program and using the function blocks as you expect the function to behave, then create the function.</p>"
        },
        "courseF_bee_functions5_authored_hint": {
          "courseE_bee_functions5_a": "<p>Edit the function so that it solves the puzzle without having to change the main program.</p>",
          "courseE_bee_functions5_b": "<p>Your function should make the bee: </p>\n<ul>\n<li>turn</li>\n<li>move forward</li>\n<li>collect all of the nectar</li>\n<li>turn around</li>\n<li>move back to the main path</li>\n<li>turn back to the direction that the bee started from</li>\n</ul>"
        },
        "courseF_bee_functions5a_authored_hint": {
          "courseF_bee_functions5a_a": "<p>Your function should check if there's a path to the right, and if there is, travel down the side paths and return the bee back to the main road.  </p>\n<p>You don't need to add that part to your main program.</p>",
          "courseF_bee_functions5a_b": "<p>Use a <code>while</code> loop to travel down all of the main paths, since they are different lengths.</p>",
          "courseF_bee_functions5a_c": "<p>Within your <code>while</code> loop, make sure to move forward, then use your function to check for a path.</p>"
        },
        "courseF_bee_functions5a_2018_authored_hint": {
          "courseF_bee_functions5a_a": "<p>Your function should check if there's a path to the right, and if there is, travel down the side paths and return the bee back to the main road.  </p>\n<p>You don't need to add that part to your main program.</p>",
          "courseF_bee_functions5a_b": "<p>Use a <code>while</code> loop to travel down all of the main paths, since they are different lengths.</p>",
          "courseF_bee_functions5a_c": "<p>Within your <code>while</code> loop, make sure to move forward, then use your function to check for a path.</p>"
        },
        "courseF_bee_functions6_authored_hint": {
          "courseF_bee_functions6_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation/>\n    <title name=\"NAME\">get nectar make honey</title>\n    <statement name=\"STACK\">\n\n    </statement>\n  </block>\n</xml>",
          "courseF_bee_functions6_b": "<p>Your function should check if there is a flower or honeycomb, get nectar or make honey, then turn.</p>",
          "courseF_bee_functions6_c": "<p>Since you are turning within your function, you only need one <code>while</code> loop to get you through this maze.</p>"
        },
        "courseF_bee_functions6_2018_authored_hint": {
          "courseF_bee_functions6_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>\n<p><img src=\"https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif\"></p>",
          "courseF_bee_functions6_b": "<p>Your function should check if there is a flower or honeycomb, get nectar or make honey, then turn.</p>",
          "courseF_bee_functions6_c": "<p>Since you are turning within your function, you only need one <code>while</code> loop to get you through this maze.</p>"
        },
        "courseF_bee_functions7_authored_hint": {
          "courseF_bee_functions7_a": "<p>You can look back at the last puzzle to see your function.</p>",
          "courseF_bee_functions7_b": "<p>Try drawing a path through this maze with your finger. Where will the bee have to make a decision?</p>"
        },
        "courseF_bee_functions7_2018_authored_hint": {
          "courseF_bee_functions7_a": "<p>You can look back at the last puzzle to see your function.</p>",
          "courseF_bee_functions7_b": "<p>Try drawing a path through this maze with your finger. Where will the bee have to make a decision?</p>"
        },
        "courseF_bee_functions8a_authored_hint": {
          "courseF_bee_functions8a_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseF_bee_functions8a_b": "<p>Remember to build code inside of the function editor.</p>"
        },
        "courseF_bee_functions8a_2018_authored_hint": {
          "courseF_bee_functions8a_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseF_bee_functions8a_b": "<p>Remember to build code inside of the function editor.</p>"
        },
        "courseF_bee_functionsPre7_authored_hint": {
          "courseF_bee_functions7_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseF_bee_functions7_b": "<p>Remember to build code inside of the green function block.</p>\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n    <mutation/>\n    <title name=\"NAME\">get nectar make honey</title>\n    <statement name=\"STACK\">\n\n    </statement>\n  </block>\n</xml>",
          "courseF_bee_functions7_c": "<p>Which way should you turn if there is a honeycomb? What about a flower? What if there is nothing?</p>"
        },
        "courseF_bee_functionsPre7_2018_authored_hint": {
          "courseF_bee_functions7_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseF_bee_functions7_b": "<p>Remember to build code inside of the green function block.</p>\n<p><img src=\"https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif\"></p>",
          "courseF_bee_functions7_c": "<p>Which way should you turn if there is a honeycomb? What about a flower? What if there is nothing?</p>"
        },
        "courseF_bee_functions_1_2018_authored_hint": {},
        "courseF_bee_functions_2_2018_authored_hint": {},
        "courseF_bee_functions_3_2018_authored_hint": {},
        "courseF_bee_functions_challenge1_authored_hint": {
          "courseF_bee_functions_challenge1_a": "<p>You can use the functions in the tool box to help you. You can call a function inside of another function's definition!</p>"
        },
        "courseF_bee_functions_challenge1_2018_authored_hint": {
          "courseF_bee_functions_challenge1_a": "<p>You can use the functions in the tool box to help you. You can call a function inside of another function's definition!</p>"
        },
        "courseF_bee_functions_challenge2_authored_hint": {
          "courseF_bee_functions_challenge2_a": "<p>If there is a path to the right, you should do the following:</p>\n<ul>\n<li>Get any nectar or make any honey.</li>\n<li>Turn right towards the side path.</li>\n<li>Move to the end of the side path.</li>\n<li>Turn right.</li>\n</ul>\n<p>If you repeat the above actions twice, you will be ready to move back down the main path.</p>\n<p><strong>Only click for another hint if you want to see the full solution!</strong></p>",
          "courseF_bee_functions_challenge2_b": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_untilBlocked\">\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"maze_if\">\n                    <title name=\"DIR\">isPathRight</title>\n                    <statement name=\"DO\">\n                      <block type=\"procedures_callnoreturn\" id=\"function\">\n                      <mutation name=\"move and check\"></mutation>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n  <mutation></mutation>\n    <title name=\"NAME\">move and check</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"check nectar or honey\"></mutation>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"maze_untilBlocked\">\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n  <mutation></mutation>\n    <title name=\"NAME\">check nectar or honey</title>\n    <statement name=\"STACK\">\n      <block type=\"bee_whileNectarAmount\">\n        <title name=\"ARG1\">nectarRemaining</title>\n        <title name=\"OP\">&gt;</title>\n        <title name=\"ARG2\">0</title>\n        <statement name=\"DO\">\n          <block type=\"maze_nectar\"/>\n        </statement>\n        <next>\n          <block type=\"bee_whileNectarAmount\">\n            <title name=\"ARG1\">honeyAvailable</title>\n            <title name=\"OP\">&gt;</title>\n            <title name=\"ARG2\">0</title>\n            <statement name=\"DO\">\n              <block type=\"maze_honey\"/>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "courseF_bee_functions_challenge2_2018_authored_hint": {
          "courseF_bee_functions_challenge2_a": "<p>If there is a path to the right, you should do the following:</p>\n<ul>\n<li>Get any nectar or make any honey.</li>\n<li>Turn right towards the side path.</li>\n<li>Move to the end of the side path.</li>\n<li>Turn right.</li>\n</ul>\n<p>If you repeat the above actions twice, you will be ready to move back down the main path.</p>\n<p><strong>Only click for another hint if you want to see the full solution!</strong></p>",
          "courseF_bee_functions_challenge2_b": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">4</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_untilBlocked\">\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"maze_if\">\n                    <title name=\"DIR\">isPathRight</title>\n                    <statement name=\"DO\">\n                      <block type=\"procedures_callnoreturn\" id=\"function\">\n                      <mutation name=\"move and check\"></mutation>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnLeft</title>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\">\n  <mutation></mutation>\n    <title name=\"NAME\">move and check</title>\n    <statement name=\"STACK\">\n      <block type=\"controls_repeat_ext\" inline=\"true\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">2</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"procedures_callnoreturn\">\n          <mutation name=\"check nectar or honey\"></mutation>\n            <next>\n              <block type=\"maze_turn\">\n                <title name=\"DIR\">turnRight</title>\n                <next>\n                  <block type=\"maze_untilBlocked\">\n                    <statement name=\"DO\">\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                      </block>\n                    </statement>\n                    <next>\n                      <block type=\"maze_turn\">\n                        <title name=\"DIR\">turnRight</title>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </statement>\n  </block>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n  <mutation></mutation>\n    <title name=\"NAME\">check nectar or honey</title>\n    <statement name=\"STACK\">\n      <block type=\"bee_whileNectarAmount\">\n        <title name=\"ARG1\">nectarRemaining</title>\n        <title name=\"OP\">&gt;</title>\n        <title name=\"ARG2\">0</title>\n        <statement name=\"DO\">\n          <block type=\"maze_nectar\"/>\n        </statement>\n        <next>\n          <block type=\"bee_whileNectarAmount\">\n            <title name=\"ARG1\">honeyAvailable</title>\n            <title name=\"OP\">&gt;</title>\n            <title name=\"ARG2\">0</title>\n            <statement name=\"DO\">\n              <block type=\"maze_honey\"/>\n            </statement>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>"
        },
        "courseF_bee_functions_challenge2_recursion_authored_hint": {
          "courseF_bee_functions8a_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "courseF_bee_functions8a_b": "<p>Remember to build code inside of the function editor.</p>"
        },
        "courseF_bee_fwp1_authored_hint": {
          "courseF_bee_fwp1_a": "<p>Use <code>if</code> statements to make sure you're only getting nectar from a flower.</p>",
          "courseF_bee_fwp1_b": "<p>Continue along the path using a <code>repeat</code> block. Make sure you are using a <code>move forward</code> block and checking if there is a flower using a <code>if</code> statement.</p>"
        },
        "courseF_bee_fwp1_2018_authored_hint": {
          "courseF_bee_fwp1_a": "<p>Use <code>if</code> statements to make sure you're only getting nectar from a flower.</p>",
          "courseF_bee_fwp1_b": "<p>Continue along the path using a <code>repeat</code> block. Make sure you are using a <code>move forward</code> block and checking if there is a flower using a <code>if</code> statement.</p>"
        },
        "courseF_bee_fwp2_authored_hint": {
          "courseF_bee_fwp2_a": "<p>To turn this into a function, simply drag the code into the existing function block.  </p>\n<p><img src=\"https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif\"></p>",
          "courseF_bee_fwp2_b": "<p>Don't forget to connect the <code>rowOfNectar</code> block to <code>when run</code> to call the function that you just built.</p>"
        },
        "courseF_bee_fwp2_2018_authored_hint": {
          "courseF_bee_fwp2_a": "<p>To turn this into a function, simply drag the code into the existing function block.  </p>\n<p><img src=\"https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif\"></p>",
          "courseF_bee_fwp2_b": "<p>Don't forget to connect the <code>rowOfNectar</code> block to <code>when run</code> to call the function that you just built.</p>"
        },
        "courseF_bee_fwp3_authored_hint": {
          "courseF_bee_fwp3_a": "<p>Your function will run no matter which direction you're facing.</p>",
          "courseF_bee_fwp3_b": "<p>There are 3 rows of nectar, what kind of turns and movements do you need to make between each row?</p>",
          "courseF_bee_fwp3_c": "<p>To solve this puzzle, you'll need to call your function 3 times. In between each call, you need to <code>turn right</code>, <code>move forward</code> 2 times, then <code>turn right</code> again. OR, you need to <code>turn left</code>, <code>move forward</code> 2 times, then <code>turn left</code> again.</p>"
        },
        "courseF_bee_fwp3_2018_authored_hint": {
          "courseF_bee_fwp3_a": "<p>Your function will run no matter which direction you're facing.</p>",
          "courseF_bee_fwp3_b": "<p>There are 3 rows of nectar, what kind of turns and movements do you need to make between each row?</p>",
          "courseF_bee_fwp3_c": "<p>To solve this puzzle, you'll need to call your function 3 times. In between each call, you need to <code>turn right</code>, <code>move forward</code> 2 times, then <code>turn right</code> again. OR, you need to <code>turn left</code>, <code>move forward</code> 2 times, then <code>turn left</code> again.</p>"
        },
        "courseF_bee_fwp4_authored_hint": {
          "courseF_bee_fwp4_a": "<p>You will need to add a parameter and use the resulting variable in your loop.</p>",
          "courseF_bee_fwp4_b": "<p>The parameter you create for your function will be used to in the repeat loop to determine how many times the bee will move forward and check for nectar.</p>"
        },
        "courseF_bee_fwp4_2018_authored_hint": {
          "courseF_bee_fwp4_a": "<p>You will need to add a parameter and use the resulting variable in your loop.</p>",
          "courseF_bee_fwp4_b": "<p>The parameter you create for your function will be used to in the repeat loop to determine how many times the bee will move forward and check for nectar.</p>"
        },
        "courseF_bee_fwp5_authored_hint": {
          "courseF_bee_fwp5_a": "<p>Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.</p>",
          "courseF_bee_fwp5_a_b": "<p>Remember to turn between each function call.</p>"
        },
        "courseF_bee_fwp5_2018_authored_hint": {
          "courseF_bee_fwp5_a": "<p>Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.</p>",
          "courseF_bee_fwp5_a_b": "<p>Remember to turn between each function call.</p>"
        },
        "courseF_bee_fwp6_authored_hint": {
          "courseF_bee_fwp6_a": "<p>Which block automatically increments a variable that you could use as a parameter?</p>",
          "courseF_bee_fwp6_b": "<p>Try using a <code>for</code> loop to solve this puzzle.</p>"
        },
        "courseF_bee_fwp6_2018_authored_hint": {
          "courseF_bee_fwp6_a": "<p>Which block automatically increments a variable that you could use as a parameter?</p>",
          "courseF_bee_fwp6_b": "<p>Try using a <code>for</code> loop to solve this puzzle.</p>"
        },
        "courseF_bee_fwp7_authored_hint": {
          "courseF_bee_fwp7_a": "<p>You don't need a second parameter for this function, only a second <code>if</code> statement.</p>",
          "courseF_bee_fwp7_b": "<p>Add an <code>if</code> statement in your function so the bee checks for both honeycombs and flowers.</p>"
        },
        "courseF_bee_fwp7_2018_authored_hint": {
          "courseF_bee_fwp7_a": "<p>You don't need a second parameter for this function, only a second <code>if</code> statement.</p>",
          "courseF_bee_fwp7_b": "<p>Add an <code>if</code> statement in your function so the bee checks for both honeycombs and flowers.</p>"
        },
        "courseF_bee_fwp8_authored_hint": {
          "courseF_bee_fwp8_a": "<p>How could a <code>for</code> loop help in this puzzle?</p>",
          "courseF_bee_fwp8_b": "<p>Since the spiral gets smaller as you go in, your <code>for</code> loop should count down.</p>"
        },
        "courseF_bee_fwp8_2018_authored_hint": {
          "courseF_bee_fwp8_a": "<p>How could a <code>for</code> loop help in this puzzle?</p>",
          "courseF_bee_fwp8_b": "<p>Since the spiral gets smaller as you go in, your <code>for</code> loop should count down.</p>"
        },
        "courseF_bee_fwp9_authored_hint": {},
        "courseF_bee_fwp9_predict1_authored_hint": {},
        "courseF_bee_fwp9_predict1_2018_authored_hint": {},
        "courseF_bee_fwp_challenge1_authored_hint": {
          "courseF_bee_fwp_challenge1_a": "<p>The main program should look something like this:</p>\n<xml>\n<block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"procedures_callnoreturn\" inline=\"false\">\n        <mutation name=\"pick row\">\n          <arg name=\"length\"/>\n        </mutation>\n        <value name=\"ARG0\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"pick row\">\n                      <arg name=\"length\"/>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">5</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                        <next>\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                            <next>\n                              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                <mutation name=\"pick row\">\n                                  <arg name=\"length\"/>\n                                </mutation>\n                                <value name=\"ARG0\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">6</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <next>\n                                      <block type=\"maze_move\">\n                                        <title name=\"DIR\">moveForward</title>\n                                        <next>\n                                          <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                            <mutation name=\"pick row\">\n                                              <arg name=\"length\"/>\n                                            </mutation>\n                                            <value name=\"ARG0\">\n                                              <block type=\"math_number\">\n                                                <title name=\"NUM\">4</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>",
          "courseF_bee_fwp_challenge1_b": "<p>Look at how much corn is available to harvest in each space. Do you see the counter pattern? </p>",
          "courseF_bee_fwp_challenge1_b1": "<p>The <code>length</code> parameter should be used to set the maximum value in the <code>for loop</code>.</p>\n<p>Don't forget to have the farmer move back to the main path after harvesting!</p>",
          "courseF_bee_fwp_challenge1_c": "<p>Place a <code>for loop</code> inside a function and set it to count from <code>1</code> to <code>length</code> by <code>1</code>.\nInside this loop, you should move forward and pick all of the corn.</p>\n<xml>\n<block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n            </statement>\n</block></xml>",
          "courseF_bee_fwp_challenge1_d": "<p>Inside the <code>for loop</code> you will want to <code>move forward</code> then <code>pick corn</code> <strong>counter times</strong>.</p>",
          "courseF_bee_fwp_challenge1_d2": "<p>After the <code>for loop</code> you can just <code>move backward</code> <strong>length times</strong>.</p>",
          "courseF_bee_fwp_challenge1_e": "<p><strong>Here is the solution:</strong></p>\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_corn\"/>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n    </block></xml>"
        },
        "courseF_bee_fwp_challenge1_2018_authored_hint": {
          "courseF_bee_fwp_challenge1_a": "<p>The main program should look something like this:</p>\n<xml>\n<block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"procedures_callnoreturn\" inline=\"false\">\n        <mutation name=\"pick row\">\n          <arg name=\"length\"/>\n        </mutation>\n        <value name=\"ARG0\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">3</title>\n          </block>\n        </value>\n        <next>\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"procedures_callnoreturn\" inline=\"false\">\n                    <mutation name=\"pick row\">\n                      <arg name=\"length\"/>\n                    </mutation>\n                    <value name=\"ARG0\">\n                      <block type=\"math_number\">\n                        <title name=\"NUM\">5</title>\n                      </block>\n                    </value>\n                    <next>\n                      <block type=\"maze_move\">\n                        <title name=\"DIR\">moveForward</title>\n                        <next>\n                          <block type=\"maze_move\">\n                            <title name=\"DIR\">moveForward</title>\n                            <next>\n                              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                <mutation name=\"pick row\">\n                                  <arg name=\"length\"/>\n                                </mutation>\n                                <value name=\"ARG0\">\n                                  <block type=\"math_number\">\n                                    <title name=\"NUM\">6</title>\n                                  </block>\n                                </value>\n                                <next>\n                                  <block type=\"maze_move\">\n                                    <title name=\"DIR\">moveForward</title>\n                                    <next>\n                                      <block type=\"maze_move\">\n                                        <title name=\"DIR\">moveForward</title>\n                                        <next>\n                                          <block type=\"procedures_callnoreturn\" inline=\"false\">\n                                            <mutation name=\"pick row\">\n                                              <arg name=\"length\"/>\n                                            </mutation>\n                                            <value name=\"ARG0\">\n                                              <block type=\"math_number\">\n                                                <title name=\"NUM\">4</title>\n                                              </block>\n                                            </value>\n                                          </block>\n                                        </next>\n                                      </block>\n                                    </next>\n                                  </block>\n                                </next>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </next>\n  </block></xml>",
          "courseF_bee_fwp_challenge1_b": "<p>Look at how much corn is available to harvest in each space. Do you see the counter pattern? </p>",
          "courseF_bee_fwp_challenge1_b1": "<p>The <code>length</code> parameter should be used to set the maximum value in the <code>for loop</code>.</p>\n<p>Don't forget to have the farmer move back to the main path after harvesting!</p>",
          "courseF_bee_fwp_challenge1_c": "<p>Place a <code>for loop</code> inside a function and set it to count from <code>1</code> to <code>length</code> by <code>1</code>.\nInside this loop, you should move forward and pick all of the corn.</p>\n<xml>\n<block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n            </statement>\n</block></xml>",
          "courseF_bee_fwp_challenge1_d": "<p>Inside the <code>for loop</code> you will want to <code>move forward</code> then <code>pick corn</code> <strong>counter times</strong>.</p>",
          "courseF_bee_fwp_challenge1_d2": "<p>After the <code>for loop</code> you can just <code>move backward</code> <strong>length times</strong>.</p>",
          "courseF_bee_fwp_challenge1_e": "<p><strong>Here is the solution:</strong></p>\n<xml>\n  <block type=\"procedures_defnoreturn\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_corn\"/>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n    </block></xml>"
        },
        "courseF_bee_fwp_challenge2_authored_hint": {
          "courseF_bee_fwp_challenge2_a": "<p>Start by making sure you understand how this function is <em>supposed</em> to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?</p>\n<p>Add conditional statements to the function to check for corn, pumpkins, and lettuce.</p>",
          "courseF_bee_fwp_challenge2_b": "<p>Are you running out of <code>move forward</code> blocks?\nTry using a <em>second</em> <code>for loop</code> in your main program.</p>",
          "courseF_bee_fwp_challenge2_c": "<p><strong>Here is what your function should look like:</strong></p>\n<xml><block type=\"procedures_defnoreturn\" deletable=\"false\" movable=\"false\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_ifHasCrop\">\n                        <title name=\"LOC\">Corn</title>\n                        <statement name=\"DO\">\n                          <block type=\"harvester_corn\"/>\n                        </statement>\n                        <next>\n                          <block type=\"harvester_ifHasCrop\">\n                            <title name=\"LOC\">Pumpkin</title>\n                            <statement name=\"DO\">\n                              <block type=\"harvester_pumpkin\"/>\n                            </statement>\n                            <next>\n                              <block type=\"harvester_ifHasCrop\">\n                                <title name=\"LOC\">Lettuce</title>\n                                <statement name=\"DO\">\n                                  <block type=\"harvester_lettuce\"/>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>",
          "courseF_bee_fwp_challenge2_d": "<p><strong>Here is what your main program should look like:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter2</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">6</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                <mutation name=\"pick row\">\n                  <arg name=\"length\"/>\n                </mutation>\n                <value name=\"ARG0\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter2</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n    </block></xml>"
        },
        "courseF_bee_fwp_challenge2_2018_authored_hint": {
          "courseF_bee_fwp_challenge2_a": "<p>Start by making sure you understand how this function is <em>supposed</em> to work. As the farmer moves down each path, she will only try to collect corn. Instead, how can you make her check for each of the 3 vegetables and pick only the one she finds?</p>\n<p>Add conditional statements to the function to check for corn, pumpkins, and lettuce.</p>",
          "courseF_bee_fwp_challenge2_b": "<p>Are you running out of <code>move forward</code> blocks?\nTry using a <em>second</em> <code>for loop</code> in your main program.</p>",
          "courseF_bee_fwp_challenge2_c": "<p><strong>Here is what your function should look like:</strong></p>\n<xml><block type=\"procedures_defnoreturn\" deletable=\"false\" movable=\"false\" editable=\"false\" usercreated=\"true\">\n    <mutation>\n      <arg name=\"length\"/>\n    </mutation>\n    <title name=\"NAME\">pick row</title>\n    <statement name=\"STACK\">\n      <block type=\"maze_turn\">\n        <title name=\"DIR\">turnLeft</title>\n        <next>\n          <block type=\"controls_for\" inline=\"true\">\n            <title name=\"VAR\">counter</title>\n            <value name=\"FROM\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <value name=\"TO\">\n              <block type=\"parameters_get\">\n                <title name=\"VAR\">length</title>\n              </block>\n            </value>\n            <value name=\"BY\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"maze_move\">\n                <title name=\"DIR\">moveForward</title>\n                <next>\n                  <block type=\"controls_repeat_ext\" inline=\"true\">\n                    <value name=\"TIMES\">\n                      <block type=\"variables_get\">\n                        <title name=\"VAR\">counter</title>\n                      </block>\n                    </value>\n                    <statement name=\"DO\">\n                      <block type=\"harvester_ifHasCrop\">\n                        <title name=\"LOC\">Corn</title>\n                        <statement name=\"DO\">\n                          <block type=\"harvester_corn\"/>\n                        </statement>\n                        <next>\n                          <block type=\"harvester_ifHasCrop\">\n                            <title name=\"LOC\">Pumpkin</title>\n                            <statement name=\"DO\">\n                              <block type=\"harvester_pumpkin\"/>\n                            </statement>\n                            <next>\n                              <block type=\"harvester_ifHasCrop\">\n                                <title name=\"LOC\">Lettuce</title>\n                                <statement name=\"DO\">\n                                  <block type=\"harvester_lettuce\"/>\n                                </statement>\n                              </block>\n                            </next>\n                          </block>\n                        </next>\n                      </block>\n                    </statement>\n                  </block>\n                </next>\n              </block>\n            </statement>\n            <next>\n              <block type=\"controls_repeat_ext\" inline=\"true\">\n                <value name=\"TIMES\">\n                  <block type=\"parameters_get\">\n                    <title name=\"VAR\">length</title>\n                  </block>\n                </value>\n                <statement name=\"DO\">\n                  <block type=\"maze_move\">\n                    <title name=\"DIR\">moveBackward</title>\n                  </block>\n                </statement>\n                <next>\n                  <block type=\"maze_turn\">\n                    <title name=\"DIR\">turnRight</title>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>",
          "courseF_bee_fwp_challenge2_d": "<p><strong>Here is what your main program should look like:</strong></p>\n<xml>\n  <block type=\"when_run\" deletable=\"false\" movable=\"false\">\n    <next>\n      <block type=\"controls_for\" inline=\"true\">\n        <title name=\"VAR\">counter2</title>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">6</title>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">1</title>\n          </block>\n        </value>\n        <statement name=\"DO\">\n          <block type=\"maze_move\">\n            <title name=\"DIR\">moveForward</title>\n            <next>\n              <block type=\"procedures_callnoreturn\" inline=\"false\">\n                <mutation name=\"pick row\">\n                  <arg name=\"length\"/>\n                </mutation>\n                <value name=\"ARG0\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">counter2</title>\n                  </block>\n                </value>\n              </block>\n            </next>\n          </block>\n        </statement>\n      </block>\n    </next>\n    </block></xml>"
        },
        "courseF_bee_variables_1_2018_authored_hint": {},
        "courseF_bee_variables_2_2018_authored_hint": {},
        "courseF_bee_variables_3_2018_authored_hint": {},
        "courseF_bee_variables_4_2018_authored_hint": {},
        "courseF_bee_variables_5_2018_authored_hint": {},
        "courseF_bee_variables_6_2018_authored_hint": {},
        "courseF_bee_variables_7_2018_authored_hint": {},
        "courseF_bee_variables_8_2018_authored_hint": {},
        "courseF_farmer_ramp11_authored_hint": {
          "courseF_farmer_ramp11_a": "<p>If you're having a hard time seeing where the loops should go, try coding it all out then looking for a pattern.</p>",
          "courseF_farmer_ramp11_b": "<p>How can you use a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">???</title></block></xml> loop to pick lettuce, instead of dragging out 5 <xml><block type=\"harvester_lettuce\"/></xml> blocks?</p>",
          "courseF_farmer_ramp11_c": "<p>You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a <xml><block type=\"maze_moveForward\"/></xml> block, and you'll have it!)</p>"
        },
        "courseF_farmer_ramp11_2018_authored_hint": {
          "courseF_farmer_ramp11_a": "<p>If you're having a hard time seeing where the loops should go, try coding it all out then looking for a pattern.</p>",
          "courseF_farmer_ramp11_b": "<p>How can you use a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">???</title></block></xml> loop to pick lettuce, instead of dragging out 5 <xml><block type=\"harvester_lettuce\"/></xml> blocks?</p>",
          "courseF_farmer_ramp11_c": "<p>You don't need to use 5 repeat loops to get all of the lettuce.  Instead, drag your lettuce picking repeat loop inside of another loop (along with a <xml><block type=\"maze_moveForward\"/></xml> block, and you'll have it!)</p>"
        },
        "courseF_maze_predict1_authored_hint": {},
        "courseF_maze_ramp1_authored_hint": {
          "courseF_maze_ramp1_a": "<p>If the bird isn't getting to the pig, make sure all of the blocks have been fully snapped together, then click \"Run\" again.</p>",
          "courseF_maze_ramp1_b": "<p>You don't need any extra blocks from the toolbox here!</p>"
        },
        "courseF_maze_ramp13_authored_hint": {
          "courseF_maze_ramp13_b": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseF_maze_ramp13_a": "<p>Use repeat blocks to run either a single block or a chunk of code over and over.</p>",
          "courseF_maze_ramp13_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>",
          "courseF_maze_ramp13_d": "<p>Once your loop is done, what do you have to do to move the final few squares? Attach these blocks after the loop.</p>"
        },
        "courseF_maze_ramp15_authored_hint": {
          "courseF_maze_ramp7_b": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseF_maze_ramp7_a": "<p>Use repeat blocks to run either a single block or a chunk of code over and over.</p>"
        },
        "courseF_maze_ramp1_2018_authored_hint": {
          "courseF_maze_ramp1_a": "<p>If the bird isn't getting to the pig, make sure all of the blocks have been fully snapped together, then click \"Run\" again.</p>",
          "courseF_maze_ramp1_b": "<p>You don't need any extra blocks from the toolbox here!</p>"
        },
        "courseF_maze_ramp2_authored_hint": {
          "courseF_maze_ramp2_a": "<p>To use a new block, drag it from the toolbox out into the workspace and connect it to the program that is attached to the <xml><block type=\"when_run\"/></xml> block.</p>",
          "courseF_maze_ramp2_b": "<p>Make sure the <xml><block type=\"maze_moveForward\"/></xml> block is inside of the loop, so that it is repeated.</p>"
        },
        "courseF_maze_ramp2_2018_authored_hint": {
          "courseF_maze_ramp2_a": "<p>To use a new block, drag it from the toolbox out into the workspace and connect it to the program that is attached to the <xml><block type=\"when_run\"/></xml> block.</p>",
          "courseF_maze_ramp2_b": "<p>Make sure the <xml><block type=\"maze_moveForward\"/></xml> block is inside of the loop, so that it is repeated.</p>"
        },
        "courseF_maze_ramp4_authored_hint": {
          "courseF_maze_ramp4_a": "<p>You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.</p>",
          "courseF_maze_ramp4_b": "<p>To follow the path, move forward and turn one way, then move three times before turning the opposite way. Move forward one more time to reach the pig.</p>",
          "courseF_maze_ramp4_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseF_maze_ramp4_2018_authored_hint": {
          "courseF_maze_ramp4_a": "<p>You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.</p>",
          "courseF_maze_ramp4_b": "<p>To follow the path, move forward and turn one way, then move three times before turning the opposite way. Move forward one more time to reach the pig.</p>",
          "courseF_maze_ramp4_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you haven't solved the puzzle yet.</p>"
        },
        "courseF_maze_ramp5_authored_hint": {
          "courseF_maze_ramp5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseF_maze_ramp5_b": "<p>There is more than one way to get to the pig.</p>",
          "courseF_maze_ramp5_c": "<p>Try using a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop for shorter code!</p>"
        },
        "courseF_maze_ramp5_2018_authored_hint": {
          "courseF_maze_ramp5_a": "<p>Try using the \"Step\" button to run your code line by line. Can you figure out what you need to do next?</p>",
          "courseF_maze_ramp5_b": "<p>There is more than one way to get to the pig.</p>",
          "courseF_maze_ramp5_c": "<p>Try using a <xml><block type=\"controls_repeat\"><title name=\"TIMES\">3</title></block></xml> loop for shorter code!</p>"
        },
        "courseF_maze_ramp6_authored_hint": {
          "courseF_maze_ramp6_a": "<p>There are two ways to solve this puzzle!</p>",
          "courseF_maze_ramp6_b": "<p>The bird starts facing a wall, so remember to turn before moving!</p>",
          "courseF_maze_ramp6_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseF_maze_ramp6_2018_authored_hint": {
          "courseF_maze_ramp6_a": "<p>There are two ways to solve this puzzle!</p>",
          "courseF_maze_ramp6_b": "<p>The bird starts facing a wall, so remember to turn before moving!</p>",
          "courseF_maze_ramp6_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>"
        },
        "courseF_maze_ramp7_authored_hint": {
          "courseF_maze_ramp7_b": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>",
          "courseF_maze_ramp7_a": "<p>Use repeat blocks to run either a single block or a chunk of code over and over.</p>",
          "courseF_maze_ramp7_c": "<p>Don't be afraid to make a mistake! Try adding blocks and running the code to see what will happen, even if you don't think you've solved the puzzle yet.</p>",
          "courseF_maze_ramp7_d": "<p>There is more than one way to get to the pig. Which requires the least code?</p>",
          "courseF_maze_ramp7_aa": "<p>Look at this path...</p>\n<p><img src=\"https://images.code.org/e1d29901495eea9504c194b09efaa88e-image-1503437474226.29.32.png\"></p>"
        },
        "courseF_playlab_brokenText_authored_hint": {
          "courseF_playlab_variables6c_a": "<p>Under the “Input” section, use the <code>ask</code> block to get input from users.</p>"
        },
        "courseF_playlab_variables1a_authored_hint": {
          "courseF_playlab_variables1a_a": "<p>You will want to replace the words “What should I shout?” in the green block with “Goal!”</p>"
        },
        "courseF_playlab_variables1a_2018_authored_hint": {
          "courseF_playlab_variables1a_a": "<p>You will want to replace the words “What should I shout?” in the green block with “Goal!”</p>"
        },
        "courseF_playlab_variables2b_authored_hint": {
          "courseF_playlab_variables2b_a": "<p>What do you think Kiki will say when you hit <code>Run</code>?</p>"
        },
        "courseF_playlab_variables2b_2018_authored_hint": {
          "courseF_playlab_variables2b_a": "<p>What do you think Kiki will say when you hit <code>Run</code>?</p>"
        },
        "courseF_playlab_variables3b_authored_hint": {
          "courseF_playlab_variables3b_a": "<p>The variable blocks are already in the workspace.  All you have to do is put them where they belong!</p>"
        },
        "courseF_playlab_variables3bEdit_authored_hint": {
          "courseF_playlab_variables3b_a": "<p>The variable blocks are already in the workspace.  All you have to do is put them where they belong!</p>"
        },
        "courseF_playlab_variables3b_josh_authored_hint": {
          "courseF_playlab_variables3b_a": "<p>There are two blocks with empty spaces: an <code>actor say</code> block, and a <code>join</code> block. Add the variable blocks there!</p>"
        },
        "courseF_playlab_variables3b_josh_2018_authored_hint": {
          "courseF_playlab_variables3b_a": "<p>There are two blocks with empty spaces: an <code>actor say</code> block, and a <code>join</code> block. Add the variable blocks there!</p>"
        },
        "courseF_playlab_variables4b_authored_hint": {
          "courseF_playlab_variables4b_a": "<p>You don’t need any more blocks from the toolbox here.</p>",
          "courseF_playlab_variables4b_b": "<p>Put the two <code>age</code> variables and one <code>name</code> variable where they make the most sense in the conversation.</p>"
        },
        "courseF_playlab_variables4b_2018_authored_hint": {
          "courseF_playlab_variables4b_a": "<p>You don’t need any more blocks from the toolbox here.</p>",
          "courseF_playlab_variables4b_b": "<p>Put the two <code>age</code> variables and one <code>name</code> variable where they make the most sense in the conversation.</p>"
        },
        "courseF_playlab_variables5c_authored_hint": {
          "courseF_playlab_variables5c_a": "<p>Find an <code>answer</code> variable block in the toolbox, under “Variables”.</p>",
          "courseF_playlab_variables5c_b": "<p>Test your code! Try entering “red”, and also other colors, to see what happens.</p>"
        },
        "courseF_playlab_variables5c_2018_authored_hint": {
          "courseF_playlab_variables5c_a": "<p>Find an <code>answer</code> variable block in the toolbox, under “Variables”.</p>",
          "courseF_playlab_variables5c_b": "<p>Test your code! Try entering “red”, and also other colors, to see what happens.</p>"
        },
        "courseF_playlab_variables6c_authored_hint": {
          "courseF_playlab_variables6c_a": "<p>Under the “Input” section, use the <code>ask</code> block to get input from users.</p>"
        },
        "courseF_playlab_variables6c_2018_authored_hint": {
          "courseF_playlab_variables6c_a": "<p>Under the “Input” section, use the <code>ask</code> block to get input from users.</p>"
        },
        "courseF_playlab_variables7b_authored_hint": {
          "courseF_playlab_variables7b_a": "<p>Have a cat and a dog talk about their favorite foods. Use the ask block to find out the favorite food, then display the text to the screen!</p>",
          "courseF_playlab_variables7b_b": "<p>Have your favorite character ask if you want to hear a joke. If the answer is yes, display a joke to the screen.</p>"
        },
        "courseF_playlab_variables7b_2018_authored_hint": {
          "courseF_playlab_variables7b_a": "<p>Have a cat and a dog talk about their favorite foods. Use the ask block to find out the favorite food, then display the text to the screen!</p>",
          "courseF_playlab_variables7b_b": "<p>Have your favorite character ask if you want to hear a joke. If the answer is yes, display a joke to the screen.</p>"
        },
        "courseF_playlab_variables7c_authored_hint": {
          "courseF_playlab_variables7c_a": "<p>Put the new <code>ask</code> block before your <code>if/else</code> statement so you can use it there in other stages.</p>"
        },
        "courseF_playlab_variables7c_2018_authored_hint": {
          "courseF_playlab_variables7c_a": "<p>Put the new <code>ask</code> block before your <code>if/else</code> statement so you can use it there in other stages.</p>"
        },
        "courseF_playlab_variables8c_authored_hint": {
          "courseF_playlab_variables8c_a": "<p>The <code>join</code> block goes into an <code>actor say</code> block, and lets you use your variables in larger sentences.</p>"
        },
        "courseF_playlab_variables8c_2018_authored_hint": {
          "courseF_playlab_variables8c_a": "<p>The <code>join</code> block goes into an <code>actor say</code> block, and lets you use your variables in larger sentences.</p>"
        },
        "courseF_playlab_variables_challenge1_authored_hint": {
          "courseF_playlab_variables_challenge1_a": "<p>You will need additional blocks from the tool box to get the actors to talk.</p>\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n      <value name=\"SPRITE\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n                      <value name=\"TEXT\">\n                  <block type=\"text\">\n                    <title name=\"TEXT\">Knock knock.</title>\n                  </block>\n                </value>\n      <value name=\"TIME\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n      </block></xml>"
        },
        "courseF_playlab_variables_challenge1_2018_authored_hint": {
          "courseF_playlab_variables_challenge1_a": "<p>You will need additional blocks from the tool box to get the actors to talk.</p>\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n      <value name=\"SPRITE\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n                      <value name=\"TEXT\">\n                  <block type=\"text\">\n                    <title name=\"TEXT\">Knock knock.</title>\n                  </block>\n                </value>\n      <value name=\"TIME\">\n        <block type=\"math_number\">\n          <title name=\"NUM\">1</title>\n        </block>\n      </value>\n      </block></xml>"
        },
        "courseF_playlab_variables_challenge2_authored_hint": {
          "courseF_playlab_variables_challenge2_a": "<p>Add and subtract points to the <code>score</code> variable when sprites collide.</p>",
          "courseF_playlab_variables_challenge2_b": "<p>You can change how far you move your sprite each time one of the arrow keys is pressed.</p>",
          "courseF_playlab_variables_challenge2_c": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">1</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">4</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">8</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">2</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">1</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">ADD</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">3</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">2</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">ADD</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">3</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">1</title>\n    <title name=\"SPRITE2\">2</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">MINUS</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_playlab_variables_challenge2_2018_authored_hint": {
          "courseF_playlab_variables_challenge2_a": "<p>Add and subtract points to the <code>score</code> variable when sprites collide.</p>",
          "courseF_playlab_variables_challenge2_b": "<p>You can change how far you move your sprite each time one of the arrow keys is pressed.</p>",
          "courseF_playlab_variables_challenge2_c": "<p><strong>Solution:</strong></p>\n<xml>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">up</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">1</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">down</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">4</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">left</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">8</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenArrow\">\n    <title name=\"VALUE\">right</title>\n    <next>\n      <block type=\"studio_moveDistanceParams\" inline=\"true\">\n        <title name=\"SPRITE\">0</title>\n        <title name=\"DIR\">2</title>\n        <value name=\"DISTANCE\">\n          <block type=\"math_number\">\n            <title name=\"NUM\">25</title>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">1</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">ADD</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">3</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">0</title>\n    <title name=\"SPRITE2\">2</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">ADD</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">3</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"studio_whenSpriteCollided\">\n    <title name=\"SPRITE1\">1</title>\n    <title name=\"SPRITE2\">2</title>\n    <next>\n      <block type=\"studio_setScore\" inline=\"false\">\n        <value name=\"VALUE\">\n          <block type=\"math_arithmetic\" inline=\"true\">\n            <title name=\"OP\">MINUS</title>\n            <value name=\"A\">\n              <block type=\"studio_getScore\"/>\n            </value>\n            <value name=\"B\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n</xml>"
        },
        "courseF_playlab_variables_challenge3_authored_hint": {
          "courseF_playlab_variables_challenge3_a": "<p>The actor knows what to say because it checks the current value of the <code>fortune</code> variable.</p>\n<xml><block type=\"variables_set\" inline=\"false\">\n            <title name=\"VAR\">fortune</title>\n            <value name=\"VALUE\">\n              <block type=\"text\" movable=\"false\">\n                <title name=\"TEXT\">Concentrate and ask again!</title>\n              </block>\n            </value>\n          </block></xml>",
          "courseF_playlab_variables_challenge3_b": "<p>It will feel like the game starts all over if you call the <code>ask a question</code> function again after the actor says the fortune.</p>\n<xml><block type=\"studio_saySpriteParamsTime\" inline=\"true\">\n                <value name=\"SPRITE\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">1</title>\n                  </block>\n                </value>\n                <value name=\"TEXT\">\n                  <block type=\"variables_get\">\n                    <title name=\"VAR\">fortune</title>\n                  </block>\n                </value>\n                <value name=\"TIME\">\n                  <block type=\"math_number\">\n                    <title name=\"NUM\">2</title>\n                  </block>\n                </value>\n              <next>\n<block type=\"procedures_callnoreturn\">\n        <mutation name=\"Ask a question\"/>\n        </block></next></block></xml>",
          "courseF_playlab_variables_challenge3_c": "<p>You will need to add more conditional statements to give the actors more things to say.</p>\n<xml><block type=\"studio_ifActorHasEmotionParams\" inline=\"true\">\n            <title name=\"EMOTION\">2</title>\n            <value name=\"SPRITE\">\n              <block type=\"math_number\">\n                <title name=\"NUM\">1</title>\n              </block>\n            </value>\n            <statement name=\"DO\">\n              <block type=\"variables_set\" inline=\"false\">\n                <title name=\"VAR\">fortune</title>\n                <value name=\"VALUE\">\n                  <block type=\"text\" movable=\"false\">\n                    <title name=\"TEXT\">???</title>\n                  </block>\n                </value>\n              </block>\n              </statement></block></xml>\n\n<p>Don't forget to change which moods the actor will show inside of the <code>repeat forever</code> loop. You can also set the moods randomly!</p>",
          "courseF_playlab_variables_challenge3_d": "<p>Once you understand all of the code that relates to Actor 1, you can try re-writing the same code, but this time for Actor 2.</p>\n<p>Don't forget to change the instructions inside the <code>Ask a question</code> function so they still make sense!</p>",
          "courseF_playlab_variables_challenge3_e": "<p>When everything is done, you should be able to click on either actor and get up to 8 different messages. Is it possible to expand it even further?</p>\n<p>Have a friend try your app when it is finished!</p>"
        },
        "coursea_maze_ramp1_2018_authored_hint": {
          "courseC_maze_programming1_a": "<p>If the bird isn't getting to the pig, make sure both of the blocks have been fully clicked together, then click \"Run\" again.</p>",
          "courseC_maze_programming1_b": "<p>Don't be afraid to make a mistake! Try something, and if it doesn't work, try something else!</p>"
        },
        "coursef_maze_ramp3_authored_hint": {
          "courseF_maze_ramp3_a": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  </p>\n<p>Click on the block you want to delete, and drag it back to the toolbox.</p>\n<p>Finally, put your other blocks back in place where they belong.</p>",
          "courseF_maze_ramp3_b": "<p>Use the step button to go through the program line-by-line. Where does something go wrong?</p>"
        },
        "coursef_maze_ramp3_2018_authored_hint": {
          "courseF_maze_ramp3_a": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  </p>\n<p>Click on the block you want to delete, and drag it back to the toolbox.</p>\n<p>Finally, put your other blocks back in place where they belong.</p>",
          "courseF_maze_ramp3_b": "<p>Use the step button to go through the program line-by-line. Where does something go wrong?</p>"
        },
        "drawings!_authored_hint": {
          "triangle_geometry_hint": "<p>Remember: an equilateral triangle has three sides, with a 60 degree turn between each!</p>",
          "repeat_pointer": "<p>You have to draw a side and turn 3 times...what block can you use to run the same instructions many times?</p>",
          "repeat_bottom_out": "<p>Use a <code>repeat 3 times</code> block!</p>"
        },
        "grade1_adventurer_loops10_authored_hint": {
          "grade1_adventurer_loops10_a": "<p>You'll need three <code>repeat</code> loops to solve this puzzle.</p>"
        },
        "grade1_adventurer_loops2_authored_hint": {
          "grade1_adventurer_loops2_a": "<p>Try using a <code>repeat</code> block to collect your gold.</p>"
        },
        "grade1_adventurer_loops3_authored_hint": {
          "grade1_adventurer_loops3_a": "<p>Is something not right? Try using the step button to figure out where things go wrong.</p>"
        },
        "grade1_adventurer_loops4_authored_hint": {
          "grade1_adventurer_loops4_a": "<p>Try using more than one loop to get the job done.</p>"
        },
        "grade1_adventurer_loops5_authored_hint": {
          "grade1_adventurer_loops5_a": "<p>Can't figure out where things start going wrong? Use the \"Step\" button to run through your program one block at a time.</p>"
        },
        "grade1_adventurer_loops6_authored_hint": {
          "grade1_adventurer_loops6_a": "<p>If you are having a hard time with the puzzle, try drawing it on paper to help you figure it out.</p>"
        },
        "grade1_adventurer_loops7_challenge_authored_hint": {
          "grade1_adventurer_loops7_challenge_a": "<p>If you can't figure out where to put the repeat loops, program it out step-by-step and look for a pattern. </p>",
          "grade1_adventurer_loops7_challenge_b": "<p>Does the code feel a little long?  You can make it much shorter by moving two of your <code>repeat</code> loops inside of another loop.</p>"
        },
        "grade1_adventurer_loops8_challenge_authored_hint": {
          "grade1_adventurer_loops8_challenge_a": "<p>Can you find a pattern in the steps?  Where can you use a repeat?</p>"
        },
        "grade1_adventurer_loops9_authored_hint": {
          "grade1_adventurer_loops9_a": "<p>Does this seem too hard?  Break it up into 4 little problems to make it feel easier.</p>"
        },
        "grade1_artist_loops1_authored_hint": {
          "grade1_artist_loops1_a": "<p>If you want the loop to repeat more than 4 times, you can change the number at the top of the block.</p>"
        },
        "grade1_artist_loops2_authored_hint": {
          "grade1_artist_loops2_a": "<p>Remember to use a <code>repeat</code> loop for better code!</p>"
        },
        "grade1_artist_loops3_authored_hint": {},
        "grade1_artist_loops4_authored_hint": {
          "grade1_artist_loops4_a": "<p>Drag out a <code>repeat</code> loop, then put the other blocks inside of it. How many times do you need to repeat?</p>"
        },
        "grade1_artist_loops5_authored_hint": {},
        "grade1_artist_loops6_authored_hint": {
          "grade1_artist_loops6_a": "<p>This challenge uses FOUR loops, one right after another!</p>",
          "grade1_artist_loops6_b": "<p>Notice that every loop makes a stair pattern that travels in a different direction.</p>\n<p><img src=\"https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif\"></p>",
          "grade1_artist_loops6_c": "<p>The loops should do this:</p>\n<ul>\n<li><p>Loop 1</p>\n<ul>\n<li>Right</li>\n<li>Down</li>\n</ul>\n</li>\n<li><p>Loop 2</p>\n<ul>\n<li>Right</li>\n<li>Up</li>\n</ul>\n</li>\n<li><p>Loop 3</p>\n<ul>\n<li>Left</li>\n<li>Up</li>\n</ul>\n</li>\n<li><p>Loop 4</p>\n<ul>\n<li>Left</li>\n<li>Down</li>\n</ul>\n</li>\n</ul>"
        },
        "grade1_artist_loops7_authored_hint": {},
        "grade1_artist_loops7a_authored_hint": {
          "artistLoopsK9_a": "<p>This challenge uses FOUR loops, one right after another!</p>",
          "artistLoopsK9_b": "<p>Notice that every loop makes a stair pattern that travels in a different direction.</p>\n<p><img src=\"https://images.code.org/7d08d5514766c5c15074e90731991505-image-1466705649513.gif\"></p>",
          "artistLoopsK9_c": "<p>The loops should do this:</p>\n<ul>\n<li><p>Loop 1</p>\n<ul>\n<li>Right</li>\n<li>Down</li>\n</ul>\n</li>\n<li><p>Loop 2</p>\n<ul>\n<li>Right</li>\n<li>Up</li>\n</ul>\n</li>\n<li><p>Loop 3</p>\n<ul>\n<li>Left</li>\n<li>Up</li>\n</ul>\n</li>\n<li><p>Loop 4</p>\n<ul>\n<li>Left</li>\n<li>Down</li>\n</ul>\n</li>\n</ul>"
        },
        "grade1_artist_loops7b_authored_hint": {
          "grade1_artist_loops7b_a": "<p>How many times should you repeat the pattern to make the ladder?</p>"
        },
        "grade1_artist_loops8_authored_hint": {},
        "grade1_artist_loops9_authored_hint": {},
        "grade1_artist_loopsFP_authored_hint": {},
        "grade1_maze_sequence1_authored_hint": {
          "grade1_maze_sequence1_a": "<p>This program is missing one block. Can you figure out which one?</p>"
        },
        "grade1_maze_sequence10_authored_hint": {
          "grade1_maze_sequence10_a": "<p>If you're having trouble, try writing down the steps on a piece of paper first.</p>"
        },
        "grade1_maze_sequence2_authored_hint": {
          "grade1_maze_sequence2_a": "<p>One of the blocks is moving the bird in the wrong direction. Can you figure out which one and replace it with the correct block?</p>"
        },
        "grade1_maze_sequence3_authored_hint": {
          "grade1_maze_sequence3_a": "<p>Try adding one instruction at a time until you get to the pig.</p>"
        },
        "grade1_maze_sequence5_authored_hint": {
          "K2.0_sequence_5": "<p>Your final code should have three movement blocks.</p>"
        },
        "grade1_maze_sequence6_authored_hint": {
          "K2.0_sequence_6_a": "<p>There is 1 block that you need to add to move the bird to the pig.</p>"
        },
        "grade1_maze_sequence7_authored_hint": {
          "grade1_maze_sequence7a": "<p>If you're stuck, try adding one block at a time until you solve the puzzle.</p>"
        },
        "grade1_maze_sequence8_authored_hint": {
          "grade1_maze_sequence8_a": "<p>Stuck? Try tracing the bird's path with your finger.</p>",
          "grade1_maze_sequence8_b": "<p>The extra blocks need to be added before the last <img src=\"https://images.code.org/145dfc20c086bc8fc265de47f3cfe4b0-image-1467848177684.35.51 PM.png\"></p>"
        },
        "grade1_maze_sequence9_authored_hint": {
          "grade1_maze_sequence9_a": "<p>If you're having trouble, try writing down the steps on a piece of paper first.</p>"
        },
        "grade1_maze_sequenceA_authored_hint": {
          "grade1_maze_sequence10_a": "<p>If you're having trouble, try writing down the steps on a piece of paper first.</p>"
        },
        "grade1_maze_sequenceB_authored_hint": {
          "grade1_maze_sequenceB_a": "<p>If you're having trouble, try writing down the steps on a piece of paper first.</p>"
        },
        "grade1_maze_sequenceC_authored_hint": {
          "grade1_maze_sequenceC_a": "<p>If you're having trouble, try writing down the steps on a piece of paper first.</p>"
        },
        "grade2_CaringForNewPet_0_authored_hint": {
          "grade2_CaringForNewPet_0": "<p>If the bird isn't getting to the pig, make sure all three of the blocks have been fully clicked together, then click \"Run\" again.</p>"
        },
        "grade2_CaringForNewPet_1_authored_hint": {
          "2-3_Maze_1_a": "<p>To use a <code>move forward</code> block, drag it from the toolbox out into the workspace and connect it to the <code>when run</code> block.</p>"
        },
        "grade2_CaringForNewPet_11_authored_hint": {},
        "grade2_CaringForNewPet_2courseC_maze_programming3_authored_hint": {
          "courseC_maze_programming3_a": "<p><img src=\"https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif\"></p>\n<p>To delete a block from the middle of your code, drag all of the blocks underneath it away to the right and let them sit in the workspace for a while.  </p>\n<p>Click on the block you want to delete, and drag it back to the toolbox.</p>\n<p>Finally, put your other blocks back in place where they belong.</p>"
        },
        "grade2_CaringForNewPet_3_authored_hint": {
          "hint1": "<p>You can turn right or left from the bird's point of view. If you are facing right, turning right will make you point downwards.</p>",
          "hint2": "<p>This path is a zig-zag. You need to move forward 3 times and turn 2 times.</p>",
          "hint3": "<p>To follow the path, move forward and turn one way, then move again and turn the opposite way. Move forward one more time to reach the pig.</p>"
        },
        "grade2_CaringForNewPet_3D_authored_hint": {},
        "grade2_CaringForNewPet_4_authored_hint": {
          "2-3_Maze_6_a": "<p>There are two ways to solve this puzzle!</p>"
        },
        "grade2_CaringForNewPet_5_authored_hint": {
          "grade2_CaringForNewPet_5_a": "<p>If you can't quite see what you need to do, try saying the steps that your bird will take out loud one-by-one and see if they match the blocks in the workspace.</p>"
        },
        "grade2_CaringForNewPet_6_authored_hint": {
          "grade2_CaringForNewPet_6_a": "<p>You don't have to code the whole solution at once!  Try running the code as you go to make sure it works at each step.</p>"
        },
        "grade2_CaringForNewPet_7D_authored_hint": {
          "grade2_CaringForNewPet_7D_a": "<p>Don't forget to use the \"Step\" button to go through block by block and look for errors.</p>"
        },
        "grade2_MakeDogTag_1_authored_hint": {
          "2-3_Artist_1_new_a": "<p>If you use the block to have me <code>move forward by 100 pixels</code>, I will draw a line automatically.</p>",
          "2-3_Artist_1_new_b": "<p>Having trouble turning the corner? Use the <code>turn right 90 degrees</code> block.</p>"
        },
        "grade2_MakeDogTag_2_authored_hint": {
          "2-3_Artist_2_new_a": "<p>To create this window, just draw a square with 100 pixel sides.</p>"
        },
        "grade2_MakeDogTag_3_authored_hint": {
          "2-3_Artist_4_a": "<p>To finish the rocket, just draw the triangle on top!</p>"
        },
        "grade2_MakeDogTag_4_authored_hint": {},
        "grade2_MakeDogTag_5_authored_hint": {
          "grade2_MakeDogTag_5a": "<p>The artist is already facing the correct way to draw his first line.</p>",
          "grade2_MakeDogTag_5b": "<p>This diamond is really just a square that's standing on its corner.</p>",
          "grade2_MakeDogTag_5c": "<p>Since this diamond is also a square, be sure to turn 90 degrees at the corners.</p>"
        },
        "grade2_MakeDogTag_6_authored_hint": {
          "grade2_MakeDogTag_6a": "<p>Every angle is either 45 or 90 degrees.</p>",
          "grade2_MakeDogTag_6b": "<p>Does it work at the first step?<br>How about the second?<br>Where does it go wrong?</p>"
        },
        "grade2_MakeDogTag_7_authored_hint": {
          "2-3_Artist_11_a": "<p>The exterior angles on this triangle are 120 degrees each.</p>"
        },
        "grade2_MakeDogTag_9_authored_hint": {
          "2-3_Artist_Loops_New_11_a": "<p>Remember that the code from the last puzzle was:</p>\n<p><img src=\"https://images.code.org/e5c7492f509dd41efe2888c7e7895c28-image-1461177002636.29.02.png\"></p>",
          "2-3_Artist_Loops_New_11_b": "<p>Your new turn should go at the <strong>end</strong> of the code inside the loop.</p>"
        },
        "grade2_MakeDogTag_BFP_authored_hint": {},
        "grade2_PuppyLoops_10_authored_hint": {
          "2-3_Artist_Debugging_8_a": "<p>How many times did my shape repeat?</p>\n<p>How many times <em>should</em> the shape repeat?</p>\n<p>Where can you change that in the program?</p>"
        },
        "grade2_PuppyLoops_3_authored_hint": {
          "hint1": "<p>This puzzle is very similar to the last one.</p>",
          "hint2": "<p>Use a <code>repeat 5 times</code> block to create the loop.</p>",
          "hint3": "<p>Place a <code>move forward</code> block inside the <code>repeat block</code>.</p>"
        },
        "grade2_PuppyLoops_5_authored_hint": {
          "hint1": "<p>The best solution uses two <code>move forward</code> commands and one loop.</p>"
        },
        "grade2_PuppyLoops_6_authored_hint": {
          "2-3_Maze_16_a": "<p>If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.</p>",
          "2-3_Maze_16_b": "<p>To put lots of blocks inside a <code>repeat</code> loop, just drag a loop out into the workspace, then drag all of the blocks from the starting program inside of it.  </p>\n<p>Connect it all back to the <code>when run</code> block and you're good to go!</p>"
        },
        "grade2_PuppyLoops_7_authored_hint": {
          "2-3_Maze_Loops_17_a": "<p>If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.</p>",
          "2-3_Maze_Loops_17_b": "<p>Did the starting code get deleted?  Click <code>start over</code> to get it back!</p>"
        },
        "grade2_PuppyLoops_8_authored_hint": {
          "2-3_Artist_Debugging_2_a": "<p>Hint: Each whisker is 75 pixels long.</p>"
        },
        "grade2_PuppyLoops_9_authored_hint": {
          "2-3_Artist_Debugging_7_a": "<p>What happens if you have the artist move or jump backward after he draws the first line?</p>"
        },
        "grade2_collector_2_authored_hint": {
          "hint1": "<p>You can use four <code>move forward</code> blocks or use the <code>repeat 4 times</code> block to make your program shorter.</p>"
        },
        "grade2_collector_A_authored_hint": {},
        "grade2_collector_A_2018_authored_hint": {},
        "grade2_maze_debuggingFP_authored_hint": {},
        "grade2_maze_intro4_authored_hint": {
          "hint_1": "<p>Connect a \"move forward\" block to the bottom of the program.</p>"
        },
        "grade2_playlab_project_6_authored_hint": {
          "idea1": "<p><em>Need an idea?</em></p>\n<p><strong>Who's there?</strong> Make characters appear with random images, so no one knows who's showing up next.</p>\n<p><img src=\"https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif\"></p>",
          "idea2": "<p><em>Need an idea?</em></p>\n<p><strong>Going on an Adventure</strong> - Change the background, then have the characters talk about where they are now.</p>\n<p><img src=\"https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif\"></p>",
          "idea3": "<p><em>Need an idea?</em></p>\n<p><strong>Pinball</strong> - Make one character move using the arrow keys (use <code>when up arrow</code>, <code>when down arrow</code> blocks), then play random sounds when it collides with other characters on the screen.</p>"
        },
        "grade2_puppy_loops2_authored_hint": {
          "hint1": "<p>You can solve this puzzle with just three blocks, including <code>when run</code>.</p>",
          "hint2": "<p>Try putting the <code>move forward</code> block inside of a <code>repeat</code> block to create a loop.</p>",
          "hint3": "<p>You need to repeat the <code>move forward</code> command 5 times to solve this puzzle.</p>"
        },
        "grade2_puppy_loops3_authored_hint": {
          "hint1": "<p>This puzzle is very similar to the last one.</p>",
          "hint2": "<p>Use a <code>repeat 5 times</code> block to create the loop.</p>",
          "hint3": "<p>Place a <code>move forward</code> block inside the <code>repeat block</code>.</p>"
        },
        "grade2_puppy_loops4_authored_hint": {
          "hint1": "<p>Not all command blocks should be repeated.</p>",
          "hint2": "<p>Use two <code>repeat</code> blocks set to different numbers.</p>",
          "hint3": "<p><code>Turn right</code> once between the two loops.</p>"
        },
        "grade2_puppy_loops5_authored_hint": {
          "hint1": "<p>The best solution uses two <code>move forward</code> commands and one loop.</p>"
        },
        "grade2_puppy_loops6_authored_hint": {
          "2-3_Maze_16_a": "<p>If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.</p>",
          "2-3_Maze_16_b": "<p>To put lots of blocks inside a <code>repeat</code> loop, just drag a loop out into the workspace, then drag all of the blocks from the starting program inside of it.  </p>\n<p>Connect it all back to the <code>when run</code> block and you're good to go!</p>"
        },
        "grade2_puppy_loops7_authored_hint": {
          "2-3_Maze_Loops_17_a": "<p>If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.</p>"
        },
        "grade3_ConditionalsElse_4_authored_hint": {
          "remember_quantum": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>"
        },
        "grade3_ConditionalsElse_5_authored_hint": {
          "remember_quantum": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>"
        },
        "grade3_ConditionalsElse_TeacherIDo_authored_hint": {
          "remember_quantum": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>"
        },
        "grade3_Conditionals_10 BAD_authored_hint": {
          "4-5_Bee_Nested_Loops_Rows_a": "<p>Try treating this puzzle like a long rectangle where the bee needs to move forward, then turn left several times to complete the path.</p>"
        },
        "grade3_Conditionals_11_authored_hint": {
          "2-3_Bee_Conditionals_14_a": "<p>Having a hard time figuring out how to get the blocks down?  Try treating the red flower exactly the same as a purple flower!</p>",
          "2-3_Bee_Conditionals_14_b": "<p>If the red flower were purple, could you figure out how to use an extra <code>repeat</code> loop to cut down on code?</p>",
          "2-3_Bee_Conditionals_14_c": "<p>Try breaking this up into two separate chunks:  </p>\n<p><img src=\"https://images.code.org/670ac0889a8f523865ff4099b4c54844-image-1463445460440.36.42.png\"></p>\n<p>1) Gather nectar 3 times</p>\n<ul>\n<li>Move forward 5 times</li>\n<li>Check to see if nectar, if so: get it</li>\n<li>Turn left</li>\n</ul>\n<p>2) Make honey </p>\n<ul>\n<li>Move forward one time</li>\n<li>Make two honey</li>\n</ul>"
        },
        "grade3_Conditionals_12_authored_hint": {
          "2-3_Bee_Conditionals_15_a": "<p>Remember: Purple flowers only have either 0 or 1 nectar and they can change each time you run the program.</p>"
        },
        "grade3_Conditionals_2_authored_hint": {
          "2-3_Bee_Conditionals_3_a": "<p>The code will be shortest if you use a loop each time you move forward, another loop to gather nectar, and another one to make honey.</p>"
        },
        "grade3_Conditionals_4_authored_hint": {
          "2-3_Bee_Conditionals_6_a": "<p>Remember: Purple flowers change between 0 and 1 nectar when you run your program!</p>"
        },
        "grade3_Conditionals_TeacherIDo_authored_hint": {
          "2-3_Bee_Conditionals_6_a": "<p>Remember: Purple flowers change between 0 and 1 nectar when you run your program!</p>"
        },
        "grade3_Debugging_1_authored_hint": {
          "2-3_Bee_Debugging_1_a": "<p>Once you find and fix the incorrect block, do you see any patterns that could be made more simple using a <code>repeat</code> loop?</p>"
        },
        "grade3_Debugging_10_authored_hint": {
          "grade3_Debugging_10_a": "<p>Start by looking at just the first loop.</p>\n<p>What does it do?</p>\n<p>What is it supposed to do?</p>\n<p>What does that tell you?</p>",
          "grade3_Debugging_10_b": "<p>Once you have the first loop the way you want it, what is left over in your code?</p>",
          "grade3_Debugging_10_c": "<p>Try wrapping the leftover loop around the rest of your completed code.  Does is work now?</p>\n<p>If not, what is still going wrong?</p>"
        },
        "grade3_Debugging_11_authored_hint": {
          "grade3_Debugging_11_a": "<p>Try running through the code using the \"Step\" button.  Is everything good at the first step?</p>\n<p>How about the second?</p>\n<p>Where do things go wrong?</p>",
          "grade3_Debugging_11_b": "<p>It looks like all of the right steps are here, you just need more of them.  How can you repeat the <code>get nectar</code> and <code>make honey</code> actions multiple times?</p>"
        },
        "grade3_Debugging_2_authored_hint": {
          "grade3_Debugging_2_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "grade3_Debugging_2_b": "<p>Do you see any patterns that could be made more simple using a <code>repeat</code> loop?</p>"
        },
        "grade3_Debugging_3_authored_hint": {
          "grade3_Debugging_3_a": "<p>Use the \"Step\" button to see if everything is right at the first step.</p>\n<p>How about the second?</p>\n<p>Where does it go wrong?</p>",
          "grade3_Debugging_3_b": "<p>Do you see a pattern?  Try using nested loops to solve this puzzle.</p>"
        },
        "grade3_Debugging_4_authored_hint": {
          "grade3_Debugging_4_a": "<p>Is there any place where the bee does something that doesn't make sense? What happens when you change those blocks?</p>",
          "grade3_Debugging_4_b": "<p>Try simplifying the code using nested loops.</p>"
        },
        "grade3_Debugging_8_authored_hint": {
          "grade3_Debugging_8_a": "<p>Try using the debugging process a couple of times in a row. </p>\n<p>What causes the first problem?</p>\n<p>Once that problem is fixed, what goes wrong?</p>",
          "grade3_Debugging_8_b": "<p>If you're having a hard time figuring out how to make the stair step pattern, try tracing it with your finger and saying the commands out loud. </p>\n<p>Don't forget to point out the direction of the turns!</p>"
        },
        "grade3_Debugging_TeacherIDo_authored_hint": {
          "2-3_Bee_Debugging_4_a": "<p>Is there any place where the bee does something that doesn't make sense? What happens when you change that block?</p>"
        },
        "grade3_Loops_10_authored_hint": {
          "2-3_Bee_Loops_4_a": "<p>You should end up with five blocks inside your loop.</p>"
        },
        "grade3_Loops_11_authored_hint": {
          "2-3_Bee_Loops_5_a": "<p>If you can't spot the blocks to put inside <code>repeat</code> right away, start by coding out each move and look for a pattern.</p>"
        },
        "grade3_Loops_12_authored_hint": {
          "2-3_Bee_Loops_6_a": "<p>If you can't tell what should go into the <code>repeat</code> loop, try dragging blocks out one by one and see if you can find a pattern.</p>",
          "2-3_Bee_Loops_6_b": "<p>There should be 6 blocks inside your <code>repeat</code> loop when you're done.</p>"
        },
        "grade3_Loops_4_authored_hint": {
          "2-3_Bee_Loops_3B_a": "<p>You will need two different <code>repeat</code> loops, one after the other.</p>"
        },
        "grade3_Loops_5_authored_hint": {
          "2-3_Bee_Loops_7_a": "<p>The first action will be a turn, rather than a move.</p>",
          "2-3_Bee_Loops_7_b": "<p>If you can't quite picture the loop from the beginning, try coding it out the long way, then look for a pattern.  </p>"
        },
        "grade3_Loops_6_authored_hint": {
          "2-3_Bee_Loops_4A_a": "<p>The first action will be a turn, rather than a move.</p>",
          "2-3_Bee_Loops_4A_b": "<p>The last piece of the program can be finished by writing code at the end of your program outside of your loop.</p>",
          "2-3_Bee_Loops_4A_c": "<p>If you can't spot the loops yet, try coding it out the long way first, then see what you can combine into a <code>repeat</code> loop at the end.</p>"
        },
        "grade3_Loops_8_authored_hint": {
          "2-3_Bee_Loops_2_a": "<p>You should end up with four blocks inside your loop.</p>"
        },
        "grade3_Loops_9_authored_hint": {
          "2-3_Bee_Loops_3_a": "<p>You should have 6 blocks inside your loop.</p>"
        },
        "grade3_RunningFarm_1_authored_hint": {
          "grade3_RunningFarm_1_a": "<p>You will need to look for corn 5 times, using a repeat loop.</p>",
          "grade3_RunningFarm_1_b": "<p>Make sure to use an <code>if at corn</code> block or you might try to pick something that's not there!</p>"
        },
        "grade3_RunningFarm_10_authored_hint": {
          "grade3_RunningFarm_10_a": "<p>This puzzle uses almost the exact same code as the last level, except you only need to repeat 4 times.</p>"
        },
        "grade3_RunningFarm_11a_authored_hint": {
          "grade3_RunningFarm_11a_a": "<p>You shouldn't need the <code>while path ahead</code> loop this time.</p>"
        },
        "grade3_RunningFarm_2_authored_hint": {
          "grade3_RunningFarm_2_a": "<p>The best way to do this is to nest <code>if</code> statements by placing one inside of the other.  </p>",
          "grade3_RunningFarm_2_b": "<p>For this puzzle, you should have one <code>if/else</code> statement and one plain <code>if</code> statement.</p>"
        },
        "grade3_RunningFarm_3_authored_hint": {
          "grade3_RunningFarm_3_a": "<p>To get all of the items, try nesting <code>if</code> statements three deep.</p>\n<p>This means you should put one <code>if</code> statement inside of another, then put a third <code>if</code> statement inside the second one.</p>",
          "grade3_RunningFarm_3_b": "<p>For this puzzle, you should have two <code>if/else</code> statements and one plain <code>if</code> statement.</p>"
        },
        "grade3_RunningFarm_4_authored_hint": {
          "grade3_RunningFarm_4_a": "<p>No one knows how many heads of lettuce will grow from each sprout.</p>\n<p>Use a <code>while there is lettuce</code> loop to keep picking until each piece has been gathered.</p>"
        },
        "grade3_RunningFarm_5_authored_hint": {
          "grade3_RunningFarm_5_a": "<p>You will need to check for each type of crop that the farmer can pick.  Try using two <code>if/else</code> statements and one  <code>if</code> block.</p>"
        },
        "grade3_RunningFarm_6_authored_hint": {
          "grade3_RunningFarm_6_a": "<p>Use a <code>while path ahead</code> loop to move the farmer down each piece of the spiral.</p>",
          "grade3_RunningFarm_6_b": "<p>You only need to check for corn during most of the harvest.  Just pick one pumpkin at the very end of your program.</p>"
        },
        "grade3_RunningFarm_7_authored_hint": {
          "grade3_RunningFarm_7_a": "<p>Notice that the easiest path to get to all of the crops is still a spiral.</p>\n<p><img src=\"https://images.code.org/ba8b8c624f21ade9ac823b045085c435-image-1479364378437.png\"></p>",
          "grade3_RunningFarm_7_b": "<p>Try using <code>when path ahead</code> to keep the farmer moving the right number of steps.</p>",
          "grade3_RunningFarm_7_c": "<p>Use nested <code>if</code> statements and <code>while there is</code> loops to check each space for corn and lettuce, then pick only a single pumpkin at the end. </p>"
        },
        "grade3_bee_Conditionals_new4_authored_hint": {
          "grade3_bee_Conditionals_new4_a": "<p>Don't forget that you can use loops for shorter code!</p>"
        },
        "grade3_bee_conditionals_new1a_authored_hint": {
          "grade3_bee_conditionals_new1a_a": "<p>Be sure to use an <code>if</code> statement to check each space to see if it has a flower or nothing.</p>"
        },
        "grade3_bee_conditionals_new2a_authored_hint": {
          "grade3_bee_conditionals_new2a_a": "<p>You can still treat every space as if there is a cloud over it, even though you can see the whole path.</p>",
          "grade3_bee_conditionals_new2a_b": "<p>Use an <code>if</code> statement inside your loop to check each space. </p>"
        },
        "grade3_bee_conditionals_new3a_authored_hint": {
          "grade3_bee_conditionals_new3a_a": "<p>In this puzzle, you know that each square has either a flower or a honeycomb.  That means you can repeat your <code>if/else</code> conditional at each square.</p>"
        },
        "grade3_bee_conditionals_quantum1_authored_hint": {
          "grade3_bee_conditionals_quantum1_a": "<p>You will need to use an <code>if</code> block to check to see if there is a flower beneath the cloud before you try to get nectar.</p>"
        },
        "grade3_bee_conditionals_quantum2_authored_hint": {
          "grade3_bee_conditionals_quantum2_a": "<p>Sometimes a flower will be there, sometimes it won't.  If you want your code to run in both cases, make sure to use an <code>if</code> statement.</p>"
        },
        "grade3_bee_conditionals_quantum3_authored_hint": {
          "grade3_bee_conditionals_quantum3": "<p>Make sure to use an <code>if</code> statement to check for honeycomb beneath each cloud.</p>"
        },
        "grade3_bee_conditionals_quantum4_authored_hint": {
          "remember_quantum": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if/else</code>) to solve the challenge.</p>"
        },
        "grade3_bee_conditionals_quantum5_authored_hint": {
          "remember_quantum": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>",
          "grade3_bee_conditionals_quantum5_a": "<p>This puzzle is tricky, because you can't check blank squares, nectar <em>and</em> honey with a single conditional.</p>"
        },
        "grade3_maze_loops1_authored_hint": {
          "grade3_maze_loops1_a": "<p>Try using the \"Step\" button to find errors.</p>"
        },
        "grade3_maze_loops2_authored_hint": {
          "grade3_maze_loops2_a": "<p>Try using this path through the maze.</p>\n<p><img src=\"https://images.code.org/6a8b4b97a8eef813d8a827b0b7b2d36b-image-1480446509692.05.22.png\"></p>",
          "grade3_maze_loops2_b": "<p>If the pattern is hard to see, try coding it all out first and see what things repeat over and over before you put the loops in.</p>",
          "grade3_maze_loops2_c": "<p>Try using one <code>repeat</code> loop inside of another to cut down on the amount of code you need.</p>"
        },
        "grade3_maze_loops2a_authored_hint": {
          "grade3_maze_loops2a_a": "<p>To solve this puzzle, you will need to \"nest\" one <code>repeat</code> loop inside of another <code>repeat</code> loop.</p>"
        },
        "grade3_maze_loops3_authored_hint": {
          "2-3_Maze_Loops_19_a": "<p>If you are stuck, try writing out the code out on paper without loops first and look for patterns.</p>",
          "2-3_Maze_Loops_19_b": "<p>Nesting <code>repeat</code> loops can help decrease the number of blocks used.</p>",
          "2-3_Maze_Loops_19_c": "<p>It will take two sets of nested <code>repeat</code> loops to solve this puzzle.</p>"
        },
        "grade3_maze_loops4_authored_hint": {
          "2-3_Maze_Loops_20_a": "<p>Look for a stair-step pattern in this maze to find where a nested loop can be used.</p>"
        },
        "grade3_maze_loops5_authored_hint": {
          "2-3_Maze_Loops_21_a": "<p>If you are having trouble finding the stair-step pattern, try covering the blocked paths with your finger.</p>"
        },
        "grade3_robotFarmer_ConditionalsIntro_10a_authored_hint": {},
        "grade3_robotFarmer_ConditionalsIntro_11a_authored_hint": {},
        "grade3_robotFarmer_ConditionalsIntro_5_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_5a": "<p>Try nesting a <code>while</code> loop inside of a <code>repeat</code> loop.</p>"
        },
        "grade3_robotFarmer_ConditionalsIntro_7_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_7_a": "<p>Make sure you're using the <code>while</code> loop to figure out how many times to fill each hole.</p>",
          "grade3_robotFarmer_ConditionalsIntro_7_b": "<p>Notice that the farmer needs to move forward and down several times in a stair-step pattern.</p>"
        },
        "grade3_robotFarmer_ConditionalsIntro_8_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_8_a": "<p>The <code>while path ahead</code> block lets you keep going, even if you don't know how many squares are in a path.</p>"
        },
        "grade3_robotFarmer_ConditionalsIntro_9_authored_hint": {
          "grade3_robotFarmer_ConditionalsIntro_9_a": "<p>You are going to need to use more than one <code>while</code> loop.</p>",
          "grade3_robotFarmer_ConditionalsIntro_9_b": "<p>Every hole is at the end of a path, so use <code>while path ahead</code> before using <code>while there is a hole</code>.</p>",
          "grade3_robotFarmer_ConditionalsIntro_9_c": "<p>Notice that you need to repeat the <code>while path ahead</code>, <code>while there is a hole</code> code six times.</p>"
        },
        "grade4_arist_nested_loop_polygons1_authored_hint": {
          "4-5_Nested_Loops_7_a": "<p>This design will loop 10 times over 360 degrees.</p>\n<p><strong>360 / 10 = ?</strong></p>"
        },
        "grade4_arist_nested_loop_polygons2_authored_hint": {
          "4-5_Nested_Loops_8_a": "<p>You will be looping this shape 6 times over 360 degrees.</p>\n<p><strong>360 / 6 = ?</strong></p>"
        },
        "grade4_arist_nested_loop_triangles2_authored_hint": {},
        "grade4_arist_nested_loop_triangles3_authored_hint": {
          "4-5_Nested_Loops_6_a": "<p>Don't forget to make a turn after your inner loop.</p>\n<p>You'll be looping 6 triangles over 360 degrees.</p>\n<p><strong>360 / 6 = ?</strong></p>"
        },
        "grade4_arist_nested_loop_triangles6_authored_hint": {
          "4-5_Nested_Loops_12_a": "<p><strong>360 / 36 = ?</strong></p>"
        },
        "grade4_artist_functions1_authored_hint": {
          "2-3_Artist_Functions_1_a": "<p>The squares each have 100 pixel sides, that means that you will have to move forward 175 pixels before drawing your second square.</p>",
          "2-3_Artist_Functions_1_b": "<p>It is okay to draw overlapping lines to make your glasses.</p>"
        },
        "grade4_artist_functions2_authored_hint": {
          "2-3_Artist_Functions_2_a": "<p>Your program should:</p>\n<ul>\n<li>Use function</li>\n<li>Move forward 100 + 75 pixels</li>\n<li>Use function</li>\n</ul>"
        },
        "grade4_artist_functions2a_authored_hint": {
          "grade4_artist_functions2a_a": "<p>To get around using multiple <code>move forward</code> blocks, create a <code>draw triangle</code> function and call that multiple times.</p>"
        },
        "grade4_artist_functions3a_authored_hint": {
          "grade4_artist_functions2a_a": "<p>To get around using multiple <code>move forward</code> blocks, create a <code>draw triangle</code> function and call that multiple times.</p>"
        },
        "grade4_artist_functions3b_authored_hint": {
          "grade4_artist_functions2a_a": "<p>To get around using multiple <code>move forward</code> blocks, create a <code>draw hexagon</code> function and call that multiple times.</p>"
        },
        "grade4_artist_functionsChallenge0_authored_hint": {
          "grade4_artist_functionsChallenge0_a": "<p>Start by making a function for a square, then try making a function for a line of squares.</p>\n<p>How would you use the <code>draw a line of squares</code> function to make this image?</p>",
          "grade4_artist_functionsChallenge0_b": "<p>After your first line of squares, you need to move the artist down and back before you start your second line of squares.</p>",
          "grade4_artist_functionsChallenge0_c": "<p>You should move the artist back a different number of pixels for even lines than for odd ones.</p>"
        },
        "grade4_artist_functions_challenge_authored_hint": {
          "Course_4_SCF_1_a": "<p>Each hexagon has 40 pixel sides.</p>",
          "Course_4_SCF_1_b": "<p>There is a 120 pixel jump between each hexagon in each horizontal line.</p>",
          "Course_4_SCF_1_c": "<p>Before you draw the second row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  </p>\n<p>Once you're in the correct vertical location, you have to turn your artist back again and jump backward 320 pixels.</p>",
          "Course_4_SCF_1_d": "<p>Before you draw the third row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  </p>\n<p>Once you're in the correct vertical location, you have to turn your artist back again and jump backward 440 pixels (120 pixels farther than your <code>shift down/forward</code> function. </p>",
          "Course_4_SCF_1_e": "<p><strong>Solution:</strong></p>\n<p><img src=\"https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png\" alt=\"Solution Blocks\"></p>"
        },
        "grade4_artist_functions_challenge2_authored_hint": {
          "Course_4_SCF_1_a": "<p>Each hexagon has 40 pixel sides.</p>",
          "Course_4_SCF_1_b": "<p>There is a 120 pixel jump between each hexagon in each horizontal line.</p>",
          "Course_4_SCF_1_c": "<p>Before you draw the second row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  </p>\n<p>Once you're in the correct vertical location, you have to turn your artist back again and jump backward 320 pixels.</p>",
          "Course_4_SCF_1_d": "<p>Before you draw the third row of hexagons, you need to turn right by 60 degrees and jump forward 40 pixels.  </p>\n<p>Once you're in the correct vertical location, you have to turn your artist back again and jump backward 440 pixels (120 pixels farther than your <code>shift down/forward</code> function. </p>",
          "Course_4_SCF_1_e": "<p><strong>Solution:</strong></p>\n<p><img src=\"https://images.code.org/d64a0e22c1db1d98c35b243bca6460ab-image-1469727090121.png\" alt=\"Solution Blocks\"></p>"
        },
        "grade4_artist_functions_stars0_authored_hint": {
          "grade4_artist_functions_stars0_a": "<p>To solve this puzzle, you just need to add a  loop that repeats the starter code 8 times.</p>\n<p>If you can't remember what the starter code was, click \"start over\" in the upper right corner of the workspace.</p>"
        },
        "grade4_artist_functions_stars1_authored_hint": {
          "grade4_artist_functions_stars1_a": "<p>Try using a function!</p>"
        },
        "grade4_artist_functions_stars2_authored_hint": {
          "grade4_artist_functions_stars2_a": "<p>Don't give up!  Remember what you have been learning.</p>",
          "grade4_artist_functions_stars2_b": "<p>Functions make it easy to call saved code at any time, not just from inside a loop!</p>"
        },
        "grade4_artist_functions_stars3_authored_hint": {
          "hint1": "<p>Don't give up!</p>"
        },
        "grade4_artist_functions_windows0_authored_hint": {
          "grade4_artist_functions_windows0_a": "<p>Focus only on making one window for now.  We'll create a function for it in the next puzzle.</p>",
          "grade4_artist_functions_windows0_b": "<p>Try using nested loops, where the inner loop makes the square and the outer loop rotates the square four times.</p>"
        },
        "grade4_artist_functions_windows2_authored_hint": {
          "grade4_artist_functions_windows2_a": "<p>Try creating your function first then adding in windows one at a time.</p>",
          "grade4_artist_functions_windows2_b": "<p>You shouldn't need to add any extra repeat loops.  Just jump the artist 100 pixels forward for each top window, and 150 pixels down to get the bottom windows.</p>"
        },
        "grade4_artist_nestedLoops_challenge2_authored_hint": {
          "Course_4_Artist_11_a": "<p>The half-hexagon has a <strong>length of 30</strong> and turns right by <strong>60 degrees</strong>.  </p>",
          "Course_4_Artist_11_b": "<p>The 2/3 triangle has a <strong>length of 80</strong> and turns right by <strong>120 degrees</strong>. </p>"
        },
        "grade4_artist_nested_loop_polygons1_authored_hint": {
          "4-5_Nested_Loops_7_a": "<p>This design will loop 10 times over 360 degrees.</p>\n<p><strong>360 / 10 = ?</strong></p>"
        },
        "grade4_artist_nested_loop_polygons2_authored_hint": {
          "4-5_Nested_Loops_8_a": "<p>You will be looping this shape 6 times over 360 degrees.</p>\n<p><strong>360 / 6 = ?</strong></p>"
        },
        "grade4_artist_nested_loop_triangles2_authored_hint": {},
        "grade4_artist_nested_loop_triangles3_authored_hint": {
          "4-5_Nested_Loops_6_a": "<p>Don't forget to make a turn after your inner loop.</p>\n<p>You'll be looping 6 triangles over 360 degrees.</p>\n<p><strong>6 x ? = 360</strong></p>"
        },
        "grade4_artist_nested_loop_triangles6_authored_hint": {
          "4-5_Nested_Loops_12_a": "<p><strong>360 / 36 = ?</strong></p>"
        },
        "grade4_bee_conditionals_new1a_authored_hint": {
          "grade4_bee_conditionals_new1a_a": "<p>An <code>if</code> block will help you out in this puzzle.</p>"
        },
        "grade4_bee_conditionals_new2_authored_hint": {
          "grade4_bee_conditionals_new2_a": "<p>The flowers follow a rectangular path.  You can trace that rectangle using <code>while path ahead</code> even with a different number of squares per side. </p>",
          "grade4_bee_conditionals_new2_b": "<p>You can check every square for a flower using the <code>if</code> block, even if you already know there's not one there.</p>"
        },
        "grade4_bee_conditionals_new3b_authored_hint": {
          "grade4_bee_conditionals_new3b_a": "<p>An <code>if/else</code> statement could really help you out here.</p>"
        },
        "grade4_bee_conditionals_quantum4_authored_hint": {
          "remember_quantum": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>"
        },
        "grade4_bee_conditionals_quantum5_authored_hint": {
          "remember_quantum": "<p><strong>Remember:</strong> This puzzle changes each time it's run.  </p>\n<p>You'll want to use a conditional block (<code>if</code> or <code>if/else</code>) to solve the challenge.</p>"
        },
        "grade4_bee_functions1_authored_hint": {
          "grade4_bee_functions1_a": "<p>There is more than one right answer to this puzzle.</p>"
        },
        "grade4_bee_functions10_authored_hint": {
          "grade4_bee_functions10_a": "<p>You can use the exact same function for this puzzle as you did in the last puzzle.  All you need to do is create a function that collects all of the nectar when you get to each flower.</p>"
        },
        "grade4_bee_functions2_authored_hint": {
          "grade4_bee_functions2_a": "<p>The function has been written for you, but you will need to call it at each flower.</p>"
        },
        "grade4_bee_functions3_authored_hint": {
          "grade4_bee_functions3_a": "<p>Your function for this puzzle only needs to collect nectar, it shouldn't have any <code>move forward</code> or <code>turn</code> blocks in it. </p>"
        },
        "grade4_bee_functions4_authored_hint": {
          "grade4_bee_functions4_a": "<p>Your function will travel down the side paths and return the bee back to the main road.  You don't need to add that part to your program.</p>"
        },
        "grade4_bee_functions6_authored_hint": {
          "grade4_bee_functions6_a": "<p>Edit the function so that it solves the puzzle without having to change the main program.</p>",
          "grade4_bee_functions6_b": "<p>Your function should make the bee: </p>\n<ul>\n<li>turn</li>\n<li>move forward</li>\n<li>collect all of the nectar</li>\n<li>turn around</li>\n<li>move back to the main path</li>\n<li>turn back to the direction that the bee started from</li>\n</ul>"
        },
        "grade4_bee_functions7_authored_hint": {
          "2-3_Bee_Functions_8_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>\n<p><img src=\"https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif\"></p>"
        },
        "grade4_bee_functions8_authored_hint": {
          "2-3_Bee_Functions_8_a": "<p>If the puzzle seems challenging, try building your function a little at a time.  </p>\n<p>Add some blocks, then try it out. Add more, then try again.  Soon, you'll get there!</p>",
          "2-3_Bee_Functions_8_b": "<p>Remember to build your code inside of the green function block.</p>\n<p><img src=\"https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif\"></p>",
          "2-3_Bee_Functions_8_c": "<p>This function should turn the bee to head him down the path, collect the nectar, make the honey, then turn the bee around and bring him back.</p>"
        },
        "grade4_bee_functions9_authored_hint": {
          "grade4_bee_functions9_a": "<p>Your function will only need to collect nectar... but this time, you will need to use a <code>while</code> loop instead of a <code>repeat</code> loop.</p>",
          "grade4_bee_functions9_b": "<p>Use <code>while nectar &gt; 0</code> to make sure you get all of the nectar.</p>"
        },
        "grade4_bee_nestedLoops1_authored_hint": {
          "grade4_bee_nestedLoops1_a": "<p>If you don't understand how to use nested loops here, try writing out the instructions step by step on a piece of paper.  Circle the patterns that you see.</p>"
        },
        "grade4_bee_nestedLoops2_authored_hint": {
          "grade4_bee_nestedLoops2_a": "<p>You will need to repeat <code>get nectar</code> inside of another <code>repeat</code> that also has the <code>move forward</code> block inside of it.</p>",
          "grade4_bee_nestedLoops2_b": "<p>You will need to use all three of the available <code>repeat</code> blocks to solve this puzzle.</p>",
          "grade4_bee_nestedLoops2_c": "<p>Nest your blocks three deep, like this:</p>\n<ul>\n<li>repeat 3<ul>\n<li>repeat 3<ul>\n<li>move forward</li>\n<li>repeat 12<ul>\n<li>get nectar</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>turn right</li>\n</ul>\n</li>\n</ul>"
        },
        "grade4_bee_nestedLoops2a_authored_hint": {
          "grade4_bee_nestedLoops2a_a": "<p>Try using nested <code>repeat</code> loops to solve this puzzle.</p>"
        },
        "grade4_bee_nestedLoops4_authored_hint": {
          "grade4_bee_nestedLoops4_a": "<p>Try building your code line by line and see if you can spot the places where a repeat will make the code shorter!</p>",
          "grade4_bee_nestedLoops4_b": "<p>You will need a nested loop to move forward and get nectar, but only a single loop to collect honey at the end.</p>\n<p>Altogether, you should be using 3 loops.</p>"
        },
        "grade4_bee_nestedLoops5_authored_hint": {
          "grade4_bee_nestedLoops5_a": "<p>You will need 4 repeat blocks!</p>"
        },
        "grade4_review_artist1_authored_hint": {
          "2-3_Artist_1_new_a": "<p>If you use the block to have me <code>move forward by 100 pixels</code>, I will draw a line automatically.</p>",
          "2-3_Artist_1_new_b": "<p>Having trouble turning the corner? Use the <code>turn right 90 degrees</code> block.</p>"
        },
        "grade4_review_artist2_authored_hint": {
          "2-3_Artist_6_a": "<p>To make those little angles, you have to turn <em>farther</em> each time than you did with the square.   </p>",
          "2-3_Artist_6_b": "<p>Since I'm already facing to the right, it's easiest to start by moving forward, then make left turns to create the triangle.</p>",
          "2-3_Artist_6_c": "<p>Each side of the triangle is the same length as each side of the square...100 pixels!</p>"
        },
        "grade4_review_bee1_authored_hint": {
          "2-3_Bee_Loops_3B_a": "<p>You will need two different <code>repeat</code> loops, one after the other.</p>"
        },
        "grade4_review_bee2_authored_hint": {
          "2-3_Bee_Loops_3_a": "<p>You should have 6 blocks inside your loop.</p>"
        },
        "grade4_review_bee3_authored_hint": {
          "2-3_Bee_Loops_4_a": "<p>You should end up with five blocks inside your loop.</p>"
        },
        "grade5_artist_binary10_authored_hint": {
          "Course_4_Artist_Binary_Free_Play_2b_a": "<p>This code uses two <code>for loops</code>. One counts up from 1 to 8, the other counts down from 8 to 1.</p>",
          "Course_4_Artist_Binary_Free_Play_2b_b": "<p>Each <code>for loop</code> has three repeats.  The first draws the leftmost set of 1s, the second draws the 0s in the middle and the third draws the 1s on the right.</p>",
          "Course_4_Artist_Binary_Free_Play_2b_c": "<p>In each repeat you need <code>counter</code> for 1s and <code>16-(2 x counter)</code> for 0s.</p>",
          "Course_4_Artist_Binary_Free_Play_2b_d": "<p><strong>Solution:</strong>\n<img src=\"https://images.code.org/866a92e042a546de3afcf462a8b5c695-image-1444438735003.58.28.png\" alt=\"solution\"></p>"
        },
        "grade5_artist_for_loops1_authored_hint": {
          "grade5_artist_for_loops1_a": "<p>If you use this <code>for</code> loop, it will run just like a <code>repeat 3 times</code> loop.</p>\n<p><img src=\"https://images.code.org/585d2e24f3021ac2561aec6e96dde430-image-1475906135993.54.11.png\"></p>"
        },
        "grade5_artist_for_loops10_authored_hint": {
          "Course_4_Artist_For_Loops_Challenge_a": "<p>The largest polygon has 19 sides.</p>",
          "Course_4_Artist_For_Loops_Challenge_b": "<p>Each polygon is incomplete, with one side fewer than it should have.</p>"
        },
        "grade5_artist_for_loops1b_authored_hint": {
          "grade5_artist_for_loops1b_a": "<p>Can you draw something like this:</p>\n<p><img src=\"https://images.code.org/80ae9ab3e449db1ed4e13c86239f7617-image-1475906794954.06.12.png\"></p>"
        },
        "grade5_artist_for_loops2_authored_hint": {
          "grade5_artist_for_loops2_a": "<p>Use <code>counter</code> for the length of your triangles inside your <code>repeat</code> loop.</p>\n<p><img src=\"https://images.code.org/5e9465321a0b7a4d791848a79f3e6715-image-1475908305872.31.26.png\"></p>"
        },
        "grade5_artist_for_loops3_authored_hint": {
          "Course_4_Artist_For_Loops_3_a": "<p>To have the <code>for</code> loop drive your movement, make sure that you're using <code>counter</code> as your distance in the <code>move forward</code> block.</p>\n<p><img src=\"https://images.code.org/15e87fc7fe408cbf1b63e0e8e69b7ffe-image-1475908502078.31.26.png\"></p>"
        },
        "grade5_artist_for_loops4_authored_hint": {
          "Course_4_Artist_For_Loops_4_a": "<p><strong>What is the smallest number you will need?<br>What is the largest number?<br>How big is the increase each time?</strong></p>\n<p>Those are the questions you need to ask to fill in the blanks of the <code>for</code> loop.</p>"
        },
        "grade5_artist_for_loops5_authored_hint": {
          "grade5_artist_for_loops5_a": "<p>You don't need the traditional repeat loop when making this spiral!</p>"
        },
        "grade5_artist_for_loops7_authored_hint": {
          "grade5_artist_for_loops7_a": "<p>The pen is thinner in this puzzle. You will need to set it to <code>1</code> before you start.</p>",
          "grade5_artist_for_loops7_b": "<p>Notice that this spiral turns right instead of left!</p>"
        },
        "grade5_artist_for_loops7a_authored_hint": {},
        "grade5_artist_for_loops7b_authored_hint": {},
        "grade5_artist_for_loops8_authored_hint": {
          "Course_4_Artist_For_Loops_11_a": "<p>The turn angle will change with each shape!  </p>\n<p>Use the math block to enter 360 divided by the number of sides the shape has to get the angle right. </p>"
        },
        "grade5_artist_for_loops9_authored_hint": {
          "Course_4_Artist_For_Loops_11a_a": "<p>360 divided by the number of sides a shape has is the number of degrees you'll need to turn. </p>",
          "Course_4_Artist_For_Loops_11a_b": "<p>Each time, you will need to move forward by 10 times the length of the current number of sides. </p>"
        },
        "grade5_artist_for_loopsfreeplay11_authored_hint": {
          "Course_4_Artist_For_Loops_inspire_a": "<p>The foundation of this code is the same as the solution to the previous challenge puzzle...with a couple of changes.</p>",
          "Course_4_Artist_For_Loops_inspire_b": "<p>Try a <code>for</code> loop that goes from 3 to 10 with an increment of 1.</p>",
          "Course_4_Artist_For_Loops_inspire_c": "<p>There are two iterations of the same repeat loop inside the <code>for</code> loop, but the second repeat turns the opposite direction.</p>",
          "Course_4_Artist_For_Loops_inspire_d": "<p><strong>Solution:</strong>  <img src=\"https://images.code.org/d619892fc17ff491c201d86bb917e523-image-1441005190828.12.30.png\" alt=\"Solution\"> </p>"
        },
        "grade5_artist_for_loopsfreeplay12_authored_hint": {
          "grade5_artist_for_loopsfreeplay12_a": "<p>The image in the drawing was made using a counter for the <code>set alpha</code> and <code>counter</code> / 10 as a brush size.</p>",
          "grade5_artist_for_loopsfreeplay12_b": "<p>The image in the drawing uses a turn of 61 degrees.</p>",
          "grade5_artist_for_loopsfreeplay12_c": "<p>Want to know how the sample image was done?</p>\n<p><img src=\"https://images.code.org/fdc5d6c15b357ba9763ac9ea914967a9-image-1475911612774.23.51.png\"></p>"
        },
        "grade5_artist_functionparameters10_authored_hint": {
          "brush_width": "<p>We set the brush width to 1, then the color to blue before we did anything else.</p>",
          "double_loop": "<p>Try putting a <code>for loop</code> inside of a <code>repeat</code> loop.</p>",
          "specifics": "<p>The <code>for loop</code> runs from three to seventeen for each of the six \"petals\" before moving on to create the next, drawing shapes with only an odd number of sides.</p>\n<p>The <code>set alpha</code> block uses division to fade the color as the counter gets higher.</p>",
          "after": "<p>When you're done with each \"petal\", be sure to <code>move forward</code> 20 pixels before you make a 60 degree rotation.</p>",
          "solution": "<p><strong>Solution</strong></p>\n<p><img src=\"https://images.code.org/7e9f4be39d45726d537fe8e6e9147986-image-1456445254361.png\"></p>"
        },
        "grade5_artist_functionparameters8_authored_hint": {
          "NEW_Course_4_Artist_Params_13_a": "<p>The length of sides for each shape is 7 times the number of sides it has.</p>"
        },
        "grade5_artist_functionparameters9_authored_hint": {
          "NEW_Course_4_Artist_Params_14_a": "<p>It's okay to run the program a few times to figure out how the function works with different parameters.</p>",
          "grade5_artist_functionparameters9_b": "<p>You don't need to add any <code>move</code> or <code>turn</code> blocks to finish this code.</p>"
        },
        "grade5_artist_functionparameters9a_authored_hint": {
          "grade5_artist_functionparameters9a_a": "<p>Did the code get so scrambled up that it's no longer recognizable?  Try clicking the \"Start over\" button in the upper righthand corner. </p>",
          "grade5_artist_functionparameters9a_b": "<p>Your new <code>min</code> variable should go in the first slot in your <code>for</code> loop, inside the function.</p>"
        },
        "grade5_artist_functionparameters9b_authored_hint": {
          "grade5_artist_functionparameters9b_a": "<p>If your function is correct, you shouldn't need to change it for this puzzle.</p>",
          "grade5_artist_functionparameters9b_b": "<p>The only thing you should need to do between function calls is change the color of the line.</p>"
        },
        "grade5_artist_functionparameters_6_authored_hint": {
          "grade5_artist_functionparameters_6_a": "<p>Use a <code>for</code> loop to get the code as smooth as you can.</p>",
          "grade5_artist_functionparameters_6_b": "<p>Remember to <strong>add</strong> a parameter.  Don't remove the one that is already there!</p>"
        },
        "grade5_artist_parameters_squares1a_authored_hint": {
          "grade5_artist_parameters_squares1a_a": "<p>Remember, you need to turn 90 degrees to draw a square.</p>",
          "grade5_artist_parameters_squares1a_b": "<p>You only need to repeat as many times as the number of sides in a square.</p>"
        },
        "grade5_artist_parameters_squares2_authored_hint": {
          "grade5_artist_parameters_squares2_a": "<p>This gets easier if you put it all in a <code>for</code> loop.</p>",
          "grade5_artist_parameters_squares2_b": "<p>Be sure to turn 90 degrees between each square!</p>\n<p><img src=\"https://images.code.org/97bd8eded03c5aa39740876c8e9f7ff8-image-1469224745277.gif\"></p>"
        },
        "grade5_artist_parameters_squares2a_authored_hint": {
          "grade5_artist_parameters_squares2a_a": "<p>You need to click the \"edit\" button to get into the function.  Once you're there, add a parameter called <code>length</code> and use it inside your <code>move forward</code> block!</p>",
          "grade5_artist_parameters_squares2a_b": "<p>When calling your function, use a <code>for loop</code> for the best possible code!</p>"
        },
        "grade5_artist_parameters_stars1_authored_hint": {
          "hint1": "<p>Don't give up!</p>"
        },
        "grade5_artist_variables_freeplay10_authored_hint": {
          "Course_4_Artist_Vars_8_a": "<p>If you divide your starting length by the number of sides, the length of each side will get shorter as the number of sides gets higher.</p>"
        },
        "grade5_artist_variables_freeplay15_authored_hint": {
          "Course_4_Artist_Inspire_a": "<p>After you complete one square, try jumping forward half of it's length before turning and making another.</p>",
          "Course_4_Artist_Inspire_b": "<p>Each square and jump is repeated four times (using a left turn inbetween) to make a full pinwheel-like unit.</p>",
          "Course_4_Artist_Inspire_c": "<p>Each pinwheel is also repeated four times, with a right turn of <strong>360/sides</strong>.</p>",
          "Course_4_Artist_Inspire_d": "<p><strong>Solution:</strong>\n<img src=\"https://images.code.org/1865aaf1b4a8ba84a5e8a7408401092d-image-1440060930335.43.39.png\" alt=\"Blocks for solution\"></p>"
        },
        "grade5_artist_variables_octagons13_authored_hint": {
          "Course_4_Artist_Vars_13_a": "<p>You need two repeat loops (one inside the other) both repeating <code>sides</code> times.</p>",
          "Course_4_Artist_Vars_13_b": "<p>The inner repeat loop draws an octagon (turning to the left).   </p>\n<p>Afterwards, you need to move forward and turn right only in the outer loop.</p>",
          "Course_4_Artist_Vars_13_c": "<p>To adjust the shape to stay the same size when the number of sides change, use the math block to divide the length in pixels by the number of sides.</p>"
        },
        "grade5_artist_variables_square7_authored_hint": {
          "Course_4_Artist_Vars_6_a": "<p>To draw a regular polygon, turn <strong>360/sides</strong> each time.</p>"
        },
        "grade5_artist_variables_triangles1_authored_hint": {
          "grade5_artist_variables_triangles1_a": "<p>To make an internal angle of 60 degrees in this triangle, remember to turn the artist 120 degrees.</p>",
          "grade5_artist_variables_triangles1_b": "<p>Use the <code>repeat</code> loop to make your code shorter.</p>",
          "grade5_artist_variables_triangles1_c": "<p>Inside your loop, you will want to move forward 50 pixels, then turn left 120 degrees.</p>"
        },
        "grade5_artist_variables_triangles1_2018_authored_hint": {
          "grade5_artist_variables_triangles1_a": "<p>To make an internal angle of 60 degrees in this triangle, remember to turn the artist 120 degrees.</p>",
          "grade5_artist_variables_triangles1_b": "<p>Use the <code>repeat</code> loop to make your code shorter.</p>",
          "grade5_artist_variables_triangles1_c": "<p>Inside your loop, you will want to move forward 50 pixels, then turn left 120 degrees.</p>"
        },
        "grade5_bee_for_loops10_authored_hint": {
          "grade5_bee_for_loops10_a": "<p>How much less is 12 than 15?<br>How much less is 9 than 12?</p>\n<p>Do you see a pattern?</p>"
        },
        "grade5_bee_for_loops11_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_10a_a": "<p>Can you find a pattern between the number of steps you need to take and the number of nectars to gather?</p>",
          "NEW_Course_4_Bee_For_Loops_10a_b": "<p>You'll need to have 2 repeats, one will use a math block.</p>"
        },
        "grade5_bee_for_loops3_authored_hint": {
          "grade5_bee_for_loops3_a": "<p>Use the <code>counter</code> variable inside the <code>repeat</code> loop where nectar is gathered to solve this puzzle. </p>",
          "grade5_bee_for_loops3_b": "<p>Your <code>for</code> loop will need to count from 1 to 5 with an increment of 1.</p>"
        },
        "grade5_bee_for_loops4_authored_hint": {
          "grade5_bee_for_loops4_a": "<p>Use a <code>for</code> loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.</p>",
          "grade5_bee_for_loops4_b": "<p>Make sure to use the <code>counter</code> variable inside your nested <code>repeat</code> loop to get enough nectar!</p>"
        },
        "grade5_bee_for_loops5_authored_hint": {
          "grade5_bee_for_loops5_a": "<p>This time, your <code>move forward</code> block and your <code>get nectar</code> block will need to be in separate <code>repeat</code> loops.</p>"
        },
        "grade5_bee_for_loops6_authored_hint": {
          "grade5_bee_for_loops6_a": "<p>Don't forget to use a <code>counter</code> variable inside your <code>repeat</code> loop.</p>"
        },
        "grade5_bee_for_loops7_authored_hint": {
          "grade5_bee_for_loops7_a": "<p>Your <code>for</code> loop will need to count from 1 to 7 by 2.</p>"
        },
        "grade5_bee_for_loops8_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_8_a": "<p>If your loop is counting up, the increment is added to your counter variable each time through. </p>\n<p>What do you need to add to each number to get the next amount of nectar?</p>"
        },
        "grade5_bee_for_loops9_authored_hint": {
          "NEW_Course_4_Bee_For_Loops_7_a": "<p>Try doing some math with the counter variable.</p>\n<p>What do you have to do to the counter at each flower to equal the amount of nectar you need to collect?</p>",
          "NEW_Course_4_Bee_For_Loops_7_b": "<p>Remember: If your loop is counting up, the increment is added to your <code>counter</code> variable each time through.</p>"
        },
        "grade5_bee_parameters_new1_authored_hint": {
          "grade5_bee_parameters_new1_a": "<p>Use <code>if</code> statements to make sure you're only getting nectar from a flower.</p>"
        },
        "grade5_bee_parameters_new2_authored_hint": {
          "grade5_bee_parameters_new2_a": "<p>To turn this into a function, simply drag the code into the existing function block.  </p>\n<p><img src=\"https://images.code.org/4d918c677ecb9f1618c1556566805b32-image-1477621874625.gif\"></p>",
          "grade5_bee_parameters_new2_b": "<p>Don't forget to connect the <code>rowOfNectar</code> block to <code>when run</code> to call the function that you just built.</p>"
        },
        "grade5_bee_parameters_new3_authored_hint": {
          "grade5_bee_parameters_new3_a": "<p>Your function will run no matter which direction you're facing.</p>"
        },
        "grade5_bee_parameters_new4_authored_hint": {
          "grade5_bee_parameters_new4_a": "<p>You will need to add a parameter and use the resulting variable in your loop.</p>"
        },
        "grade5_bee_parameters_new5_authored_hint": {
          "grade5_bee_parameters_new5_a": "<p>Count the number of spaces you need to check in each stretch and use those numbers as your parameters to the function call.</p>"
        },
        "grade5_bee_parameters_new6_authored_hint": {
          "grade5_bee_parameters_new6_a": "<p>Which block automatically increments a variable that you could use as a parameter?</p>"
        },
        "grade5_bee_parameters_new7_authored_hint": {
          "grade5_bee_parameters_new7_a": "<p>You don't need a second parameter for this function, only a second <code>if</code> statement.</p>"
        },
        "grade5_bee_parameters_new8a_authored_hint": {
          "grade5_bee_parameters_new8a_a": "<p>This spiral can be simplified with a <code>for</code> loop.</p>"
        },
        "grade5_bee_parameters_new9a_authored_hint": {
          "grade5_bee_parameters_new9a_a": "<p>A <code>for</code> loop can help you with this stair step pattern, too!</p>",
          "grade5_bee_parameters_new9a_b": "<p>For each stair, you'll need to call the function once, turn right, call the function again, then turn left.</p>"
        },
        "grade5_playlab_variables2_authored_hint": {
          "Course_4_Play_Lab_Vars_2_a": "<p>Make sure to set the number for <code>dog_speed</code> to something larger than <code>cat_speed</code>.</p>"
        },
        "gradeK_sequence_4_authored_hint": {
          "gradeK_sequence_4_a": "<p>Try writing down the steps on paper to find a solution!</p>"
        },
        "gradek_adventurer_loops3_authored_hint": {
          "gradek_adventurer_loops3_a": "<p>To change how far the adventurer goes, change the number of times that the loop runs.</p>",
          "gradek_adventurer_loops3_b": "<p>Don't forget that the adventurer needs to walk down and collect gold after she finishes the <code>repeat</code> loop!</p>"
        },
        "gradek_adventurer_loops4_authored_hint": {
          "gradek_adventurer_loops4_a": "<p>If you can't figure out the answer right away, try using a piece of paper to figure out what arrows you will need and look for a pattern.</p>"
        },
        "gradek_adventurer_loops4a_authored_hint": {
          "gradek_adventurer_loops4a_a": "<p>Can't figure out what's wrong? Try running the code to see what happens.</p>"
        },
        "gradek_adventurer_loops5_authored_hint": {
          "gradek_adventurer_loops5_a": "<p>If you can't figure out what comes next, try running the code to see where Laurel ends up.</p>"
        },
        "gradek_adventurer_loops6_authored_hint": {
          "gradek_adventurer_loops6_a": "<p>If you are having trouble figuring this puzzle out, try writing the moves down on a piece of paper and look for a pattern.</p>"
        },
        "gradek_adventurer_loops7_challenge_authored_hint": {
          "gradek_adventurer_loops7_challenge_a": "<p>Does the code feel really long?  Try putting two of your <code>repeat</code> loops inside of another loop to make it much shorter!</p>"
        },
        "gradek_adventurer_loops8_authored_hint": {
          "gradek_adventurer_loops8_a": "<p>If you can't figure out where to put the loops, try writing the code out step-by-step and look for a pattern.</p>"
        },
        "gradek_adventurer_loops9_authored_hint": {
          "gradek_adventurer_loops9_a": "<p>If you can't figure out where to put the loops, try writing your code step-by-step and look for patterns.</p>"
        },
        "gradek_artist_loops1_authored_hint": {
          "gradek_artist_loops1_a": "<p>Can't figure out how to draw a line?  Start attaching blocks to the <code>when run</code> block to see what happens.</p>"
        },
        "gradek_artist_loops2_authored_hint": {
          "gradek_artist_loops2_a": "<p>Is something not quite right?  Use the \"Step\" button to see where things go wrong.</p>"
        },
        "gradek_artist_loops3_authored_hint": {
          "artistLoopsK2_a": "<p>If you want the loop to repeat more than 4 times, you can change the number at the top of the block.</p>"
        },
        "gradek_artist_loops4_authored_hint": {
          "artistLoopsK3_a": "<p>Try using what you've learned about repeat blocks to complete this puzzle!</p>"
        },
        "gradek_artist_loops5_authored_hint": {
          "gradek_artist_loops5_a": "<p>Can't figure out how to make the hill?  Try playing with the blocks a bit to see what each one draws.</p>"
        },
        "gradek_artist_loops6_authored_hint": {
          "gradek_artist_loops6_a": "<p>Can't figure out where to put the loop? Try writing the code step-by-step and look for a pattern.</p>"
        },
        "gradek_artist_loops7_authored_hint": {
          "gradek_artist_loops7_a": "<p>Try running the code to see what has been written for you.</p>",
          "gradek_artist_loops7_b": "<p>How would you loop the code that has been given to you?</p>",
          "gradek_artist_loops7_c": "<p>What does the code do?<br>What is it supposed to do?<br>What does that tell you?</p>"
        },
        "gradek_artist_loops8_authored_hint": {
          "gradek_artist_loops8_a": "<p>You don't have to delete everything!  Some of the code is good. Use it to build the rest of the stairs. </p>"
        },
        "gradek_artist_loops9_authored_hint": {
          "artistLoopsKA_a": "<p>Use the jump block to move forward without drawing a line.</p>"
        },
        "gradek_artist_loopsA_authored_hint": {
          "artistLoopsKB_a": "<p>There should be 2 blocks inside of your loop to solve this puzzle.</p>"
        },
        "gradek_artist_loopsFP_authored_hint": {},
        "gradek_playlab_events1a_authored_hint": {
          "gradek_playlab_events1a_a": "<p>Attach the <code>move up</code> block to the <code>when click</code> event so that the cat moves up when the \"up\" button is pressed.</p>"
        },
        "gradek_playlab_events1c_authored_hint": {
          "gradek_playlab_events1c_a": "<p>Here is the block you should connect to the <code>when run</code> block: </p>\n<p><img src=\"https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png\"></p>"
        },
        "gradek_playlab_events2c_authored_hint": {
          "gradek_playlab_events2c_a": "<p>drag this block out <img src=\"https://images.code.org/b3d6215901969328333d6393f8101c5b-image-1478142333199.png\"> and connect it to <img src=\"https://images.code.org/4f2130b2a3053695414a02c3d39ef864-image-1478143461271.png\"></p>"
        },
        "gradek_playlab_events3c_authored_hint": {
          "gradek_playlab_events3c_a": "<p>Here is the event block that you will need to get Jorge to move right:</p>\n<p><img src=\"https://images.code.org/cfc4b696b1ad5762ff40c1c8a17a194d-image-1478141370249.png\"></p>",
          "gradek_playlab_events3c_b": "<p>Here is the block you should connect to the <code>when right</code> event:</p>\n<p><img src=\"https://images.code.org/e5c559cc1deef643c8b997d17ecb78e3-image-1478141726783.png\"></p>"
        },
        "gradek_playlab_events4c_authored_hint": {
          "gradek_playlab_events4c_a": "<p>Here are the event blocks that you will need to use to move Jorge up and down:</p>\n<p><img src=\"https://images.code.org/cf9a6992f7b4619dfb592fb6905effbb-image-1478140906017.png\">\nand \n<img src=\"https://images.code.org/bb2a117cef485e79119a63e5d027968e-image-1478140979742.png\"></p>"
        },
        "gradek_playlab_events5c_authored_hint": {
          "gradek_playlab_events5c_a": "<p>Here is the event block that you would use to have Jorge do something when clicked:</p>\n<p><img src=\"https://images.code.org/6e3a654378643fd0590307ec3a0e429c-image-1478140058859.png\"></p>",
          "gradek_playlab_events5c_b": "<p>Here is the block you would use to change the background:</p>\n<p><img src=\"https://images.code.org/3f6d7a642b37c3abffe7b0de062ea076-image-1478140261440.png\"></p>",
          "gradek_playlab_events5c_c": "<p>Here is the block you would use to play a random sound:</p>\n<p><img src=\"https://images.code.org/81a8ef4f64023039438199fef67bb56b-image-1478140125332.png\"></p>"
        },
        "gradek_playlab_eventsA_authored_hint": {
          "gradek_playlab_eventsA_a": "<p>If this seems like too much to do, try breaking it down into steps:</p>\n<p>1)  Have the actor change to a random size on click.\n2) Play a random sound when you click the actor.</p>\n<p>Now, make sure both of those actions are attached underneath the same event!</p>"
        },
        "harvester_Kahoot_authored_hint": {
          "courseE_farmer_functions1a_a": "<p>Think through the <code>if/else</code> statements step by step. What should you do if you are standing at a corn plant?</p>",
          "courseE_farmer_functions1a_b": "<p>Use a <code>repeat until</code> block to get to the pumpkin!</p>"
        },
        "harvey_snowflake_artist1_authored_hint": {},
        "harvey_snowflake_artist2_authored_hint": {},
        "harvey_tictactoe_authored_hint": {
          "harvey_tictactoe": "<p>You can use <code>jump</code> blocks to move to other spaces.</p>"
        },
        "iceAgeLoopsforVideo_authored_hint": {},
        "iceage_click_hello_authored_hint": {
          "iceage_click_hello_a": "<p>Add one or more <code>actor 1 say</code> blocks to the <code>when clicked</code> event to complete this puzzle.</p>"
        },
        "iceage_click_hello_2018_authored_hint": {
          "iceage_click_hello_a": "<p>Add one or more <code>actor 1 say</code> blocks to the <code>when clicked</code> event to complete this puzzle.</p>"
        },
        "iceage_free_play_authored_hint": {
          "iceage_free_play_a": "<p>Can you make Sid and Manny have an Ice Crystal fight?  </p>",
          "iceage_free_play_b": "<p>Make Granny chase Diego.  End the game as a win if she catches him.</p>",
          "iceage_free_play_c": "<p>Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.</p>"
        },
        "iceage_free_play_2018_authored_hint": {
          "iceage_free_play_a": "<p>Can you make Sid and Manny have an Ice Crystal fight?  </p>",
          "iceage_free_play_b": "<p>Make Granny chase Diego.  End the game as a win if she catches him.</p>",
          "iceage_free_play_c": "<p>Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.</p>"
        },
        "iceage_free_playcourseF_IceAge_11_authored_hint": {
          "iceage_free_play_a": "<p>Can you make Sid and Manny have an Ice Crystal fight?  </p>",
          "iceage_free_play_b": "<p>Make Granny chase Diego.  End the game as a win if she catches him.</p>",
          "iceage_free_play_c": "<p>Can you have Sid throw snowflakes at Diego and have Diego get bigger each time one hits?  End the game as a win if Diego gets hit 5 times.</p>"
        },
        "iceage_hello1_authored_hint": {
          "iceage_hello1_a": "<p>You only need to add one block to solve this puzzle.  Drag the <code>say</code> block out from the toolbar and connect it to the <code>when run</code> event block that is already in the workspace. Next, type \"Hello!\" inside.</p>"
        },
        "iceage_hello1_2018_authored_hint": {
          "iceage_hello1_a": "<p>You only need to add one block to solve this puzzle.  Drag the <code>say</code> block out from the toolbar and connect it to the <code>when run</code> event block that is already in the workspace. Next, type \"Hello!\" inside.</p>"
        },
        "iceage_hello2_authored_hint": {
          "iceage_hello2_a": "<p>To solve this puzzle, you will need to have Sid say something using the <code>actor 1 say</code> block.  You will also need to have Manny say something with the <code>actor 2 say</code> block. </p>"
        },
        "iceage_hello2_2018_authored_hint": {
          "iceage_hello2_a": "<p>To solve this puzzle, you will need to have Sid say something using the <code>actor 1 say</code> block.  You will also need to have Manny say something with the <code>actor 2 say</code> block. </p>"
        },
        "iceage_move_events_authored_hint": {
          "iceage_move_events_a": "<p>Each of the <code>when ___ arrow</code> events will need to have a different <code>move actor 1</code> command connected to it to solve this puzzle. </p>"
        },
        "iceage_move_events_2018_authored_hint": {
          "iceage_move_events_a": "<p>Each of the <code>when ___ arrow</code> events will need to have a different <code>move actor 1</code> command connected to it to solve this puzzle. </p>"
        },
        "iceage_move_to_actor_authored_hint": {
          "iceage_move_to_actor_a": "<p>For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.</p>",
          "iceage_move_to_actor_b": "<p>Connect the <code>play ___ sound</code> block to the <code>when actor 1 touches actor 2</code> event to finish this challenge.</p>"
        },
        "iceage_move_to_actor_2018_authored_hint": {
          "iceage_move_to_actor_a": "<p>For this puzzle, you can either move Diego down by 200 pixels, or move Manny up by 200 pixels.</p>",
          "iceage_move_to_actor_b": "<p>Connect the <code>play ___ sound</code> block to the <code>when actor 1 touches actor 2</code> event to finish this challenge.</p>"
        },
        "iceage_move_to_flag_authored_hint": {
          "iceage_hello3_a": "<p>Use the <code>move actor 1 right by 200 pixels</code> block to solve this puzzle.</p>"
        },
        "iceage_move_to_flag_2018_authored_hint": {
          "iceage_hello3_a": "<p>Use the <code>move actor 1 right by 200 pixels</code> block to solve this puzzle.</p>"
        },
        "iceage_repeat_authored_hint": {
          "iceage_repeat_a": "<p>Use both the <code>move actor 1 left</code> and <code>move actor 1 right</code> blocks to solve this puzzle.</p>"
        },
        "iceage_repeat_2018_authored_hint": {
          "iceage_repeat_a": "<p>Use both the <code>move actor 1 left</code> and <code>move actor 1 right</code> blocks to solve this puzzle.</p>"
        },
        "iceage_sound_and_points_authored_hint": {
          "iceage_sound_and_points_a": "<p>You will need to add two blocks beneath the <code>when actor 1 touches actor 2</code> event.</p>",
          "iceage_sound_and_points_b": "<p>You will need both the <code>score a point</code> block and the 'play <em>__</em> sound` block to pass this level.</p>"
        },
        "iceage_sound_and_points_2018_authored_hint": {
          "iceage_sound_and_points_a": "<p>You will need to add two blocks beneath the <code>when actor 1 touches actor 2</code> event.</p>",
          "iceage_sound_and_points_b": "<p>You will need both the <code>score a point</code> block and the 'play <em>__</em> sound` block to pass this level.</p>"
        },
        "iceage_throw_hearts_authored_hint": {
          "iceage_throw_hearts_a": "<p>When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!</p>",
          "iceage_throw_hearts_b": "<p>To get granny to be happy when she receives a heart, you will need to connect the <code>set actor 2 mood to happy</code> block beneath the <code>when actor 2 touches projectile</code> event.</p>"
        },
        "iceage_throw_hearts_2018_authored_hint": {
          "iceage_throw_hearts_a": "<p>When do you want to throw hearts at granny?  When an arrow is pressed? When you click on Sid?  When you click on Granny?  The choice is yours!</p>",
          "iceage_throw_hearts_b": "<p>To get granny to be happy when she receives a heart, you will need to connect the <code>set actor 2 mood to happy</code> block beneath the <code>when actor 2 touches projectile</code> event.</p>"
        },
        "iceage_warn_embed_ice_age_authored_hint": {},
        "iceage_warn_ice_age_authored_hint": {
          "iceage_warn_ice_age_a": "<p>You should only have to add two blocks to get this puzzle where it needs to be. </p>",
          "iceage_warn_ice_age_b": "<p>Add both new blocks beneath the <code>when run</code> event to have them happen immediately after the program starts.</p>"
        },
        "iceage_warn_ice_age_2018_authored_hint": {
          "iceage_warn_ice_age_a": "<p>You should only have to add two blocks to get this puzzle where it needs to be. </p>",
          "iceage_warn_ice_age_b": "<p>Add both new blocks beneath the <code>when run</code> event to have them happen immediately after the program starts.</p>"
        },
        "k1stickerfreeplay_authored_hint": {},
        "level 'grade3_Loops_10_authored_hint": {
          "2-3_Bee_Loops_4_a": "<p>You should end up with five blocks inside your loop.</p>"
        },
        "level 'grade3_Loops_11_authored_hint": {
          "2-3_Bee_Loops_5_a": "<p>If you can't spot the blocks to put inside <code>repeat</code> right away, start by coding out each move and look for a pattern.</p>"
        },
        "level 'grade3_Loops_12_authored_hint": {
          "2-3_Bee_Loops_6_a": "<p>If you can't tell what should go into the <code>repeat</code> loop, try dragging blocks out one by one and see if you can find a pattern.</p>",
          "2-3_Bee_Loops_6_b": "<p>There should be 6 blocks inside your <code>repeat</code> loop when you're done.</p>"
        },
        "level 'grade3_Loops_4_authored_hint": {
          "2-3_Bee_Loops_3B_a": "<p>You will need two different <code>repeat</code> loops, one after the other.</p>"
        },
        "level 'grade3_Loops_5_authored_hint": {
          "2-3_Bee_Loops_7_a": "<p>The first action will be a turn, rather than a move.</p>",
          "2-3_Bee_Loops_7_b": "<p>If you can't quite picture the loop from the beginning, try coding it out the long way, then look for a pattern.  </p>"
        },
        "level 'grade3_Loops_6_authored_hint": {
          "2-3_Bee_Loops_4A_a": "<p>The first action will be a turn, rather than a move.</p>",
          "2-3_Bee_Loops_4A_b": "<p>The last piece of the program can be finished by writing code at the end of your program outside of your loop.</p>",
          "2-3_Bee_Loops_4A_c": "<p>If you can't spot the loops yet, try coding it out the long way first, then see what you can combine into a <code>repeat</code> loop at the end.</p>"
        },
        "level 'grade3_Loops_8_authored_hint": {
          "2-3_Bee_Loops_2_a": "<p>You should end up with four blocks inside your loop.</p>"
        },
        "level 'grade3_Loops_9_authored_hint": {
          "2-3_Bee_Loops_3_a": "<p>You should have 6 blocks inside your loop.</p>"
        },
        "playLabDebugVideo1_authored_hint": {
          "courseA_playLab_events2_a": "<p>Here is the block you should connect to the <code>when run</code> block: </p>\n<p><img src=\"https://images.code.org/ae72d1270ad210cd00fae7e0dfb3549a-image-1478144412134.png\"></p>"
        },
        "sample3_authored_hint": {
          "sample3_a": "<p>Try writing the code once and looping it seven times:</p>\n<p><img src=\"https://images.code.org/2a116e75e31ee3a8a8683349c9460286-image-1464307689813.gif\"></p>"
        },
        "sample5_authored_hint": {
          "sample5_a": "<p>Did you know that you can put as many blocks inside of a repeat loop as you want to?</p>",
          "sample5_b": "<p>The bee is looping these actions over and over again:</p>\n<ul>\n<li>move forward</li>\n<li>make honey</li>\n<li>turn left</li>\n<li>move forward</li>\n<li>turn right</li>\n</ul>"
        },
        "sample6_authored_hint": {
          "sample6_a": "<p>Did you know that you can use more than one repeat loop in a puzzle?</p>",
          "sample6_b": "<p>Sometimes repeat loops have lots of blocks inside, and sometimes they might only have one!</p>"
        },
        "sample7assessment_authored_hint": {}
      }
    }
  }
}