AWSTemplateFormatVersion: 2010-09-09
Resources:
  VerifyDatabaseLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonRDSFullAccess'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'
      Policies:
        - PolicyName: AWSLambdaBasicExecutionRole
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
  RestoreDatabaseCopyForVerification:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: 'Restore Database from Snapshot copied from primary Account so it can be verified by a separate Lambda.'
      FunctionName: RestoreDatabaseCopyForVerification
      Code:
        S3Bucket: cdo-secondary-dist
        S3Key: restore-database-copy-for-verification.zip
      Handler: index.handler
      Runtime: nodejs6.10
      Timeout: 30
      Role: !GetAtt VerifyDatabaseLambdaRole.Arn
      Environment:
        Variables:
          DB_PORT: '3306'
          DB_ENGINE: mysql
          DB_LICENSE_MODEL: general-public-license
          DB_SUBNET_GROUP_NAME: default
          DB_SNAPSHOT_IDENTIFIER_PREFIX: production
          DB_AVAILABILITY_ZONE: us-east-1f
          DB_INSTANCE_CLASS: db.t2.medium
          DB_INSTANCE_IDENTIFIER: verification-copy
          DB_OPTION_GROUP_NAME: 'default:mysql-5-6'
          DB_STORAGE_TYPE: gp2
