require_relative '../deployment.rb'
require 'cdo/erb'
require 'cdo/rake_utils'

module RakeUtils
  def self.erb(source, target, locals)
    puts "erb #{target}"
    erb_file_to_file source, target, locals
  end
end

DEPENDENCIES = [
  deploy_dir('deployment.rb'),
  deploy_dir('aws','Rakefile'),
  deploy_dir('locals.yml'),
  secrets_dir('config.yml'),
].select{|i| File.file?(i)}

file aws_dir('crontab') => [aws_dir('crontab.erb'), aws_dir('crontab.rb')] + DEPENDENCIES do |t|
  RakeUtils.erb t.prerequisites[0], t.name, task:t
end

file aws_dir('crontab.installed') => [aws_dir('crontab')] do |t|
  system "cat #{aws_dir('crontab')} | crontab -"
  touch t.name
end

file deploy_dir('i18n/code.org/crowdin.yaml') => [deploy_dir('i18n/code.org/crowdin.yaml.erb')] + DEPENDENCIES do |t|
  RakeUtils.erb t.prerequisites[0], t.name, task:t
end

file deploy_dir('i18n/hourofcode.com/crowdin.yaml') => [deploy_dir('i18n/hourofcode.com/crowdin.yaml.erb')] + DEPENDENCIES do |t|
  RakeUtils.erb t.prerequisites[0], t.name, task:t
end

file deploy_dir('i18n/curriculum/crowdin.yaml') => [deploy_dir('i18n/curriculum/crowdin.yaml.erb')] + DEPENDENCIES do |t|
  RakeUtils.erb t.prerequisites[0], t.name, task:t
end

INSTALL = [:production, :staging, :test].include?(rack_env)

task :default => [
  INSTALL ? aws_dir('crontab.installed')        : aws_dir('crontab'),

  deploy_dir('i18n/code.org/crowdin.yaml'),
  deploy_dir('i18n/hourofcode.com/crowdin.yaml'),
  deploy_dir('i18n/curriculum/crowdin.yaml'),
].select{|i|i}

task :clean do
  [
    aws_dir('crontab'),
    aws_dir('crontab.installed'),
    deploy_dir('i18n/crowdin.yaml'),
  ].each do |path|
    rm path if File.file?(path)
  end
end
