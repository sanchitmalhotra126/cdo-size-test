{
  "1": {
    "instructionsImportant": true,
    "requiredBlocks": [
      [{
        "test": "flap",
        "type": "flappy_flap"
      }]
    ],
    "obstacles": false,
    "ground": false,
    "score": false,
    "freePlay": false,
    "goal": {
      "startX": 100,
      "startY": 0
    },
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_playSound\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"></block>",
    "appSpecificFailError": "Your code looks good - it will flap with each click. But you need to click many times to flap to the target.",
    "successCondition": "function successCondition() {\n\t        return Flappy.avatarY <= 40;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        return Flappy.avatarY > Flappy.MAZE_HEIGHT;\n\t      }"
  },
  "2": {
    "requiredBlocks": [
      [{
        "test": "endGame",
        "type": "flappy_endGame"
      }]
    ],
    "obstacles": false,
    "ground": true,
    "score": false,
    "freePlay": false,
    "goal": {
      "startX": 100,
      "startY": 324
    },
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_playSound\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"flappy_whenCollideGround\" deletable=\"false\"></block>",
    "successCondition": "function successCondition() {\n\t        // this only happens after avatar hits ground, and we spin him because of\n\t        // game over\n\t        return Flappy.avatarY === 322 && Flappy.avatarX === 110;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        var avatarBottom = Flappy.avatarY + AVATAR_HEIGHT;\n\t        var ground = Flappy.MAZE_HEIGHT - Flappy.GROUND_HEIGHT;\n\t        return avatarBottom >= ground && Flappy.gameState === Flappy.GameStates.ACTIVE;\n\t      }"
  },
  "3": {
    "requiredBlocks": [
      [{
        "test": "setSpeed",
        "type": "flappy_setSpeed"
      }]
    ],
    "obstacles": false,
    "ground": true,
    "score": false,
    "freePlay": false,
    "goal": {
      "startX": 345,
      "startY": 0,
      "moving": true
    },
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"when_run\" deletable=\"false\"></block>",
    "successCondition": "function successCondition() {\n\t        var avatarCenter = {\n\t          x: (Flappy.avatarX + AVATAR_WIDTH) / 2,\n\t          y: (Flappy.avatarY + AVATAR_HEIGHT) / 2\n\t        };\n\t        var goalCenter = {\n\t          x: (Flappy.goalX + Flappy.GOAL_SIZE) / 2,\n\t          y: (Flappy.goalY + Flappy.GOAL_SIZE) / 2\n\t        };\n\t\n\t        var diff = {\n\t          x: Math.abs(avatarCenter.x - goalCenter.x),\n\t          y: Math.abs(avatarCenter.y - goalCenter.y)\n\t        };\n\t\n\t        return diff.x < 15 && diff.y < 15;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        return Flappy.activeTicks() >= 120 && Flappy.SPEED === 0;\n\t      }"
  },
  "4": {
    "requiredBlocks": [
      [{
        "test": "endGame",
        "type": "flappy_endGame"
      }]
    ],
    "obstacles": true,
    "ground": true,
    "score": false,
    "freePlay": false,
    "goal": {
      "startX": 572,
      "startY": 324,
      "moving": true
    },
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\"></block>",
    "successCondition": "function successCondition() {\n\t        return Flappy.obstacles[0].hitAvatar && Flappy.gameState === Flappy.GameStates.OVER;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        // todo - would be nice if we could distinguish feedback for\n\t        // flew through pipe vs. didnt hook up endGame block\n\t        var obstacleEnd = Flappy.obstacles[0].x + Flappy.OBSTACLE_WIDTH;\n\t        return obstacleEnd < Flappy.avatarX;\n\t      }"
  },
  "5": {
    "requiredBlocks": [
      [{
        "test": "incrementPlayerScore",
        "type": "flappy_incrementPlayerScore"
      }]
    ],
    "defaultFlap": "SMALL",
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": false,
    "goal": {},
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block>",
    "successCondition": "function successCondition() {\n\t        var insideObstacle = false;\n\t        Flappy.obstacles.forEach(function (obstacle) {\n\t          if (!obstacle.hitAvatar && obstacle.containsAvatar()) {\n\t            insideObstacle = true;\n\t          }\n\t        });\n\t        return insideObstacle && Flappy.playerScore > 0;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        var insideObstacle = false;\n\t        Flappy.obstacles.forEach(function (obstacle) {\n\t          if (!obstacle.hitAvatar && obstacle.containsAvatar()) {\n\t            insideObstacle = true;\n\t          }\n\t        });\n\t        return insideObstacle && Flappy.playerScore === 0;\n\t      }"
  },
  "6": {
    "requiredBlocks": [
      [{
        "test": "flap",
        "type": "flappy_flap_height"
      }]
    ],
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": false,
    "goal": {},
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap_height\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"><next><block type=\"flappy_incrementPlayerScore\"></block></next></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block>",
    "successCondition": "function successCondition() {\n\t        var insideObstacle = false;\n\t        Flappy.obstacles.forEach(function (obstacle) {\n\t          if (obstacle.containsAvatar()) {\n\t            insideObstacle = true;\n\t          }\n\t        });\n\t        return insideObstacle && Flappy.playerScore > 0;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        var insideObstacle = false;\n\t        Flappy.obstacles.forEach(function (obstacle) {\n\t          if (obstacle.containsAvatar()) {\n\t            insideObstacle = true;\n\t          }\n\t        });\n\t        return insideObstacle && Flappy.playerScore === 0;\n\t      }"
  },
  "7": {
    "requiredBlocks": [
      [{
        "test": "setBackground",
        "type": "flappy_setBackground"
      }]
    ],
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": false,
    "goal": {},
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap_height\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block><block type=\"flappy_setBackground\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap_height\"></block></next></block><block type=\"flappy_whenCollideGround\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"><next><block type=\"flappy_incrementPlayerScore\"></block></next></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block>",
    "successCondition": "function successCondition() {\n\t        return Flappy.gameState === Flappy.GameStates.OVER;\n\t      }",
    "failureCondition": ""
  },
  "8": {
    "requiredBlocks": [
      [{
        "type": "flappy_setBackground",
        "titles": {
          "VALUE": "random"
        }
      }]
    ],
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": false,
    "goal": {},
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap_height\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block><block type=\"flappy_setBackground\"></block><block type=\"flappy_setPlayer\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap_height\"></block></next></block><block type=\"flappy_whenCollideGround\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"><next><block type=\"flappy_incrementPlayerScore\"></block></next></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block>",
    "successCondition": "function successCondition() {\n\t        return Flappy.gameState === Flappy.GameStates.OVER;\n\t      }",
    "failureCondition": ""
  },
  "9": {
    "requiredBlocks": [
      [{
        "type": "flappy_setScore"
      }]
    ],
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": false,
    "goal": {},
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap_height\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block><block type=\"flappy_setBackground\"></block><block type=\"flappy_setPlayer\"></block><block type=\"flappy_setScore\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap_height\"></block></next></block><block type=\"flappy_whenCollideGround\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\"></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"><next><block type=\"flappy_incrementPlayerScore\"></block></next></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block>",
    "successCondition": "function successCondition() {\n\t        return Flappy.gameState === Flappy.GameStates.OVER;\n\t      }",
    "failureCondition": ""
  },
  "11": {
    "shareable": true,
    "requiredBlocks": [],
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": true,
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap_height\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_setSpeed\"></block><block type=\"flappy_setBackground\"></block><block type=\"flappy_setPlayer\"></block><block type=\"flappy_setObstacle\"></block><block type=\"flappy_setGround\"></block><block type=\"flappy_setGapHeight\"></block><block type=\"flappy_setGravity\"></block><block type=\"flappy_setScore\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"></block><block type=\"flappy_whenCollideGround\" deletable=\"false\"></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\"></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"></block><block type=\"when_run\" deletable=\"false\"></block>",
    "successCondition": "",
    "failureCondition": ""
  },
  "k1": {
    "requiredBlocks": [],
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": true,
    "isK1": true,
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_setBackground\"></block><block type=\"flappy_setPlayer\"></block><block type=\"flappy_setObstacle\"></block><block type=\"flappy_setGround\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_flap_height\"></block><block type=\"flappy_setSpeed\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_setGapHeight\"></block><block type=\"flappy_setGravity\"></block><block type=\"flappy_setScore\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"></block><block type=\"flappy_whenCollideGround\" deletable=\"false\"></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\"></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"></block><block type=\"when_run\" deletable=\"false\"></block>",
    "successCondition": "",
    "failureCondition": ""
  },
  "k1_1": {
    "isK1": true,
    "grayOutUndeletableBlocks": true,
    "requiredBlocks": [],
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": true,
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\" movable=\"false\"><next><block type=\"flappy_flap\" deletable=\"false\" movable=\"false\"></block></next></block><block type=\"flappy_whenCollideGround\" deletable=\"false\" movable=\"false\"><next><block type=\"flappy_endGame\" deletable=\"false\" movable=\"false\"></block></next></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\" movable=\"false\"><next><block type=\"flappy_endGame\" deletable=\"false\" movable=\"false\"></block></next></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\" movable=\"false\"><next><block type=\"flappy_incrementPlayerScore\" deletable=\"false\" movable=\"false\"></block></next></block><block type=\"when_run\" deletable=\"false\" movable=\"false\"><next><block type=\"flappy_setSpeed\" deletable=\"false\" movable=\"false\"></block></next></block>",
    "successCondition": "",
    "failureCondition": ""
  },
  "k1_2": {
    "instructionsImportant": true,
    "requiredBlocks": [
      [{
        "test": "flap",
        "type": "flappy_flap"
      }]
    ],
    "obstacles": false,
    "ground": false,
    "score": false,
    "freePlay": false,
    "goal": {
      "startX": 100,
      "startY": 0
    },
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_playSound\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"></block>",
    "appSpecificFailError": "Your code looks good - it will flap with each click. But you need to click many times to flap to the target.",
    "isK1": true,
    "successCondition": "function successCondition() {\n\t        return Flappy.avatarY <= 40;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        return Flappy.avatarY > Flappy.MAZE_HEIGHT;\n\t      }"
  },
  "k1_3": {
    "requiredBlocks": [
      [{
        "test": "endGame",
        "type": "flappy_endGame"
      }]
    ],
    "obstacles": false,
    "ground": true,
    "score": false,
    "freePlay": false,
    "goal": {
      "startX": 100,
      "startY": 324
    },
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_playSound\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"flappy_whenCollideGround\" deletable=\"false\"></block>",
    "isK1": true,
    "successCondition": "function successCondition() {\n\t        // this only happens after avatar hits ground, and we spin him because of\n\t        // game over\n\t        return Flappy.avatarY === 322 && Flappy.avatarX === 110;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        var avatarBottom = Flappy.avatarY + AVATAR_HEIGHT;\n\t        var ground = Flappy.MAZE_HEIGHT - Flappy.GROUND_HEIGHT;\n\t        return avatarBottom >= ground && Flappy.gameState === Flappy.GameStates.ACTIVE;\n\t      }"
  },
  "k1_4": {
    "requiredBlocks": [
      [{
        "test": "setSpeed",
        "type": "flappy_setSpeed"
      }]
    ],
    "obstacles": false,
    "ground": true,
    "score": false,
    "freePlay": false,
    "goal": {
      "startX": 345,
      "startY": 0,
      "moving": true
    },
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"when_run\" deletable=\"false\"></block>",
    "isK1": true,
    "successCondition": "function successCondition() {\n\t        var avatarCenter = {\n\t          x: (Flappy.avatarX + AVATAR_WIDTH) / 2,\n\t          y: (Flappy.avatarY + AVATAR_HEIGHT) / 2\n\t        };\n\t        var goalCenter = {\n\t          x: (Flappy.goalX + Flappy.GOAL_SIZE) / 2,\n\t          y: (Flappy.goalY + Flappy.GOAL_SIZE) / 2\n\t        };\n\t\n\t        var diff = {\n\t          x: Math.abs(avatarCenter.x - goalCenter.x),\n\t          y: Math.abs(avatarCenter.y - goalCenter.y)\n\t        };\n\t\n\t        return diff.x < 15 && diff.y < 15;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        return Flappy.activeTicks() >= 120 && Flappy.SPEED === 0;\n\t      }"
  },
  "k1_5": {
    "requiredBlocks": [
      [{
        "test": "endGame",
        "type": "flappy_endGame"
      }]
    ],
    "obstacles": true,
    "ground": true,
    "score": false,
    "freePlay": false,
    "goal": {
      "startX": 572,
      "startY": 324,
      "moving": true
    },
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\"></block>",
    "isK1": true,
    "successCondition": "function successCondition() {\n\t        return Flappy.obstacles[0].hitAvatar && Flappy.gameState === Flappy.GameStates.OVER;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        // todo - would be nice if we could distinguish feedback for\n\t        // flew through pipe vs. didnt hook up endGame block\n\t        var obstacleEnd = Flappy.obstacles[0].x + Flappy.OBSTACLE_WIDTH;\n\t        return obstacleEnd < Flappy.avatarX;\n\t      }"
  },
  "k1_6": {
    "requiredBlocks": [
      [{
        "test": "incrementPlayerScore",
        "type": "flappy_incrementPlayerScore"
      }]
    ],
    "defaultFlap": "SMALL",
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": false,
    "goal": {},
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block>",
    "isK1": true,
    "successCondition": "function successCondition() {\n\t        var insideObstacle = false;\n\t        Flappy.obstacles.forEach(function (obstacle) {\n\t          if (!obstacle.hitAvatar && obstacle.containsAvatar()) {\n\t            insideObstacle = true;\n\t          }\n\t        });\n\t        return insideObstacle && Flappy.playerScore > 0;\n\t      }",
    "failureCondition": "function failureCondition() {\n\t        var insideObstacle = false;\n\t        Flappy.obstacles.forEach(function (obstacle) {\n\t          if (!obstacle.hitAvatar && obstacle.containsAvatar()) {\n\t            insideObstacle = true;\n\t          }\n\t        });\n\t        return insideObstacle && Flappy.playerScore === 0;\n\t      }"
  },
  "k1_7": {
    "isK1": true,
    "requiredBlocks": [
      [{
        "test": "incrementPlayerScore",
        "type": "flappy_incrementPlayerScore"
      }]
    ],
    "defaultFlap": "SMALL",
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": false,
    "goal": {},
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block>",
    "successCondition": "function successCondition() {\n\t      var insideObstacle = false;\n\t      Flappy.obstacles.forEach(function (obstacle) {\n\t        if (!obstacle.hitAvatar && obstacle.containsAvatar()) {\n\t          insideObstacle = true;\n\t        }\n\t      });\n\t      return insideObstacle && Flappy.playerScore > 1;\n\t    }",
    "failureCondition": "function failureCondition() {\n\t      var insideObstacle = false;\n\t      Flappy.obstacles.forEach(function (obstacle) {\n\t        if (!obstacle.hitAvatar && obstacle.containsAvatar()) {\n\t          insideObstacle = true;\n\t        }\n\t      });\n\t      return insideObstacle && Flappy.playerScore <= 1;\n\t    }"
  },
  "k1_8": {
    "requiredBlocks": [
      [{
        "test": "setBackground",
        "type": "flappy_setBackground"
      }]
    ],
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": false,
    "goal": {},
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block><block type=\"flappy_setBackground\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"flappy_whenCollideGround\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"><next><block type=\"flappy_incrementPlayerScore\"></block></next></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block>",
    "isK1": true,
    "successCondition": "function successCondition() {\n\t        return Flappy.gameState === Flappy.GameStates.OVER;\n\t      }",
    "failureCondition": ""
  },
  "k1_9": {
    "isK1": true,
    "requiredBlocks": [
      [{
        "test": "setPlayer",
        "type": "flappy_setPlayer"
      }]
    ],
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": false,
    "goal": {},
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block><block type=\"flappy_setBackground\"></block><block type=\"flappy_setPlayer\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"flappy_whenCollideGround\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"><next><block type=\"flappy_incrementPlayerScore\"></block></next></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block>",
    "successCondition": "function successCondition() {\n\t      return Flappy.gameState === Flappy.GameStates.OVER;\n\t    }",
    "failureCondition": ""
  },
  "custom": {
    "requiredBlocks": [],
    "obstacles": true,
    "ground": true,
    "score": true,
    "freePlay": false,
    "goal": {},
    "scale": {
      "snapRadius": 2
    },
    "toolbox": "<xml id=\"toolbox\" style=\"display: none;\"><block type=\"flappy_flap\"></block><block type=\"flappy_endGame\"></block><block type=\"flappy_incrementPlayerScore\"></block><block type=\"flappy_playSound\"></block><block type=\"flappy_setSpeed\"></block><block type=\"flappy_setBackground\"></block><block type=\"flappy_setPlayer\"></block></xml>",
    "startBlocks": "<block type=\"flappy_whenClick\" deletable=\"false\"><next><block type=\"flappy_flap\"></block></next></block><block type=\"flappy_whenCollideGround\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenCollideObstacle\" deletable=\"false\"><next><block type=\"flappy_endGame\"></block></next></block><block type=\"flappy_whenEnterObstacle\" deletable=\"false\"><next><block type=\"flappy_incrementPlayerScore\"></block></next></block><block type=\"when_run\" deletable=\"false\"><next><block type=\"flappy_setSpeed\"></block></next></block>",
    "successCondition": "function successCondition() {\n\t      return Flappy.gameState === Flappy.GameStates.OVER;\n\t    }",
    "failureCondition": ""
  }
}
