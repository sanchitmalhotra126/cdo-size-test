#!/usr/bin/env ruby

require_relative '../../../dashboard/config/environment'

def course_from_current_teacher_accepted_app(si)
  app = Pd::Application::Teacher1920Application.find_by(user_id: si.user_id)
  if app && Pd::SharedApplicationConstants::COHORT_CALCULATOR_STATUSES.include?(app.status)
    return app.course
  end
  nil
end

def course_from_current_teacher_lsw_enrollment(si)
  enrollments = Pd::Enrollment.where(user_id: si.user_id)
  course = nil
  enrollments.each do |e|
    next unless e.workshop.local_summer? && e.workshop.summer_workshop_school_year == "2019-2020"

    if Pd::Application::Facilitator1920Application.find_by(user_id: si.user_id)&.status == 'accepted'
      puts "user #{si.user_id} new facilitator, app #{Pd::Application::Facilitator1920Application.find_by(user_id: si.user_id).id}"
    end
    if e.workshop.course == "CS Discoveries"
      course = 'csd'
    elsif e.workshop.course == 'CS Principles'
      course = 'csp'
    end
  end
  course
end

ActiveRecord::Base.transaction do
  count = 0
  Pd::ScholarshipInfo.find_each do |si|
    course = course_from_current_teacher_accepted_app(si) || course_from_current_teacher_lsw_enrollment(si)
    if course
      puts "#{si.id} #{course}"
      # This script is a dry run unless we comment out this update line
      # si.update!(course: course)
      count += 1
    else
      puts "no application or enrollment found for user #{si.user_id}"
    end
  end

  puts "#{count} scholarshipInfos updated with course"

  # This script is a dry-run unless we comment out this last line
  raise ActiveRecord::Rollback.new, "Intentional rollback"
end
