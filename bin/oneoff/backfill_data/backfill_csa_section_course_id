#!/usr/bin/env ruby

require_relative '../../../dashboard/config/environment'

CDO.log = Logger.new(STDOUT)
ActiveRecord::Base.record_timestamps = false

options = {actually_update: false}
OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)} [options]"
  opts.on('-u', '--actually-update', 'Actually perform the update.') do
    options[:actually_update] = true
  end
  opts.on('-h', '--help', 'Add -u to perform the update.') do
    puts opts
    exit
  end
end.parse!
CDO.log.info "Called with options: #{options}"

pilot_names = %w(csa-pilot csa-pilot-facilitator)
updated = []

pilot_names.each do |pilot_name|
  CDO.log.info "fixing pilot #{pilot_name}."
  pilot = UnitGroup.find_by_name(pilot_name)
  script_ids = UnitGroupUnit.where(course_id: pilot.id).pluck(:script_id)
  sections = Section.where(course_id: nil, script_id: script_ids)
  CDO.log.info "found #{sections.length} sections to update."
  sections.each do |section|
    if options[:actually_update]
      section.course_id = pilot.id
      section.save!
    end
    updated << section.id
  end
end

if options[:actually_update]
  CDO.log.info "Update complete. Updated #{updated.length} sections."
else
  CDO.log.info "Dry run complete. Would have updated #{updated.length} sections."
end
CDO.log.info "Sections updated: #{updated}"
