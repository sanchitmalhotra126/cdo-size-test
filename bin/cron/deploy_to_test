#!/usr/bin/env ruby

require 'cdo/chat_client'
require 'cdo/github'
require 'cdo/only_one'

# Checks whether the topic of Slack#developers includes "DTT: yes", updating it
# to reflect auto-DTT if so.
# @return [Boolean] Whether to proceed with the auto-DTT.
def check_and_update_developers_topic
  current_topic = Slack.get_topic('developers')
  unless current_topic.include? 'DTT: yes'
    ChatClient.message(
      'infra-test',
      "auto-DTT aborted (\#developers topic is #{current_topic}).",
      color: yellow
    )
    return false
  end

  new_topic = current_topic.gsub('DTT: yes', 'DTT: no (robo-DTT in progress)')
  Slack.update_topic(new_topic)

  # TODO(asher): Determine if we should continue with the DTT if the Slack topic
  # update failed.
  true
end

def main
  return unless check_and_update_developers_topic

  pr_number = GitHub.create_pull_request(
    title: 'DTT (Staging > Test) [robo-dtt]',
    head: 'staging',
    base: 'test'
  )
  if pr_number.nil?
    ChatClient.message(
      'infra-test',
      'GitHub.create_pull request failed.',
      color: red
    )
    return
  end

  # TODO(asher): Add a reviewer (namely the next DOTD), add appropriate tags
  # (particularly deploy).

  merged = GitHub.merge_pull_request(pr_number)
  unless merged
    ChatClient.message(
      'infra-test',
      "GitHub.merge_pull_request(#{pr_number}) failed.",
      color: red
    )
    return
  end

  ChatClient.mesage(
    'infra-test',
    "auto-DTT (PR\##{pr_number})",
    color: green
  )
end

main if only_one_running?(__FILE__)
