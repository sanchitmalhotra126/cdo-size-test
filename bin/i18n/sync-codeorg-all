#!/usr/bin/env ruby
require_relative '../../lib/cdo/github'
require_relative 'i18n_script_utils'

IN_UP_BRANCH = "i18n-sync-in-up-#{Date.today.strftime("%m-%d")}"
DOWN_OUT_BRANCH = "i18n-sync-down-out-#{Date.today.strftime("%m-%d")}"

def should_i(question)
  loop do
    print "Should I #{question}? [Yes]/Skip/Quit: "
    response = gets.strip.downcase
    puts ''
    if 'yes'.start_with?(response) # also catches blank/return ;)
      return true
    elsif 'skip'.start_with?(response) || 'no'.start_with?(response)
      return false
    elsif 'quit'.start_with?(response)
      puts "quitting"
      exit(-1)
    else
      puts "Sorry, I didn't understand that.\n\n"
    end
  end
end

def update_repo
  return unless should_i "update the repo"
  `git checkout staging`
  `git pull origin staging`
end

def sync_in
  return unless should_i "sync in"
  run_standalone_script(File.join(__dir__, "sync-codeorg-in"))
end

def sync_up
  return unless should_i "sync up"
  run_standalone_script(File.join(__dir__, "sync-codeorg-up"))
end

def create_in_up_pr
  return unless should_i "create the in & up PR"
  `git checkout -B #{IN_UP_BRANCH}`

  `git add -u dashboard/config/locales/*.en.yml`
  `git add -u i18n/locales/source/dashboard`
  `git commit -m "dashboard i18n sync"`

  `git add -u i18n/locales/source/pegasus`
  `git commit -m "pegasus i18n sync"`

  `git push origin #{IN_UP_BRANCH}`
  in_up_pr = GitHub.create_pull_request(
    base: 'staging',
    head: IN_UP_BRANCH,
    title: "I18n sync In & Up #{Date.today.strftime("%m/%d")}"
  )
  puts "Created In & Up PR: #{GitHub.url(in_up_pr)}"
end

def sync_down
  return unless should_i "sync down"
  run_standalone_script(File.join(__dir__, "sync-codeorg-down"))
end

def sync_out
  return unless should_i "sync out"
  run_standalone_script(File.join(__dir__, "sync-codeorg-out"))
end

def create_down_out_pr
  return unless should_i "create the down & out PR"
  `git checkout -B #{DOWN_OUT_BRANCH}`

  `git add -u pegasus/cache`
  `git add -u i18n/locales/*/pegasus`
  `git commit -m "pegasus i18n updates"`

  `git add -u dashboard/config/locales/*.yml`
  `git add -u i18n/locales/*/dashboard`
  `git commit -m "dashboard i18n updates"`

  `git add -u apps/i18n/*/*.json`
  `git add -u i18n/locales/*/blockly-mooc`
  `git commit -m "apps i18n updates"`

  `git add -u apps/lib/blockly/*.js`
  `git add -u i18n/locales/*/blockly-core`
  `git commit -m "blockly i18n updates"`

  `git push origin #{DOWN_OUT_BRANCH}`
  down_out_pr = GitHub.create_pull_request(
    base: IN_UP_BRANCH,
    head: DOWN_OUT_BRANCH,
    title: "I18n sync Down & Out #{Date.today.strftime("%m/%d")}"
  )

  puts "Created Down & Out PR: #{GitHub.url(down_out_pr)}"

  # TODO automate blockly update, too
  puts "\r\rremember to update blockly\r\r"
end

def main
  update_repo
  sync_in
  sync_up
  create_in_up_pr
  sync_down
  sync_out
  create_down_out_pr
end

main
