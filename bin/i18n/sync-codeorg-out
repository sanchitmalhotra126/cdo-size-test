#!/usr/bin/env ruby

# Distribute downloaded translations from i18n/locales
# back to blockly-core, apps, pegasus, and dashboard.

require File.expand_path('../../../pegasus/src/env', __FILE__)
require 'cdo/languages'
require 'fileutils'

require_relative 'i18n_script_utils'

def push_out_translated_files
  rename_from_crowdin_name_to_locale
  run_bash_script "bin/i18n-codeorg/out.sh"
  copy_untranslated_apps
  cleanup_chinese_and_portuguese_codes
  rebuild_blockly_js_files
end

# Files downloaded from Crowdin are organized by language name,
# rename folders to be organized by locale
def rename_from_crowdin_name_to_locale
  Languages.get_crowdin_name_and_locale.each do |prop|
    if File.directory?("i18n/locales/#{prop[:crowdin_name_s]}/")
      FileUtils.cp_r "i18n/locales/#{prop[:crowdin_name_s]}/.", "i18n/locales/#{prop[:locale_s]}"
      FileUtils.rm_r "i18n/locales/#{prop[:crowdin_name_s]}"
    end
  end
end

# For untranslated apps, copy English file for all locales
def copy_untranslated_apps
  untranslated_apps = %w(applab calc eval gamelab netsim weblab)

  Languages.get_locale.each do |prop|
    if prop[:locale_s] != 'en-US'
      untranslated_apps.each do |app|
        app_locale = prop[:locale_s].tr('-', '_').downcase!
        FileUtils.cp_r "apps/i18n/#{app}/en_us.json", "apps/i18n/#{app}/#{app_locale}.json"
      end
    end
  end
end

# Dashboard currently has a bug; it uses 2 letter language codes instead of 4 letter locales.
# When two languages share the same language code, Dashboard doesn't know which language
# to use so we've overrided the user's selected language to always show Simplified Chinese
# (zh-CN) even if they've selected Traditional Chinese (zh-TW). Likewise for Brazilian
# Portuguese (pt-BR) and Portugal Portuguese (pt-PT).
# TODO (Tanya): Fix Dashboard to use 4 letter locales instead of 2 letter language codes
# and remove this hacky override.
def cleanup_chinese_and_portuguese_codes
  dashboard_categories = %w(authored_hints callouts data devise dsls failure_message_overrides instructions markdown_instructions scripts slides unplugged)

  locales_with_same_language = {
    'zh' => ['zh-CN', 'zh-TW'],
    'pt' => ['pt-BR', 'pt-PT']
  }

  locales_with_same_language.each do |language, locales|
    # Fix codes in base file
    file = "dashboard/config/locales/#{locales[0]}.yml"
    File.write(file, File.read(file).gsub(/"#{locales[0]}":/, "\"#{language}\":"))
    file = "dashboard/config/locales/#{locales[1]}.yml"
    File.write(file, File.read(file).gsub(/"#{language}":/, "\"#{locales[1]}\":"))

    # Fix codes in each dashboard locale file
    dashboard_categories.each do |dashboard|
      file = "dashboard/config/locales/#{dashboard}.#{locales[0]}.yml"
      File.write(file, File.read(file).gsub(/"#{locales[0]}":/, "\"#{language}\":"))

      file = "dashboard/config/locales/#{dashboard}.#{locales[1]}.yml"
      File.write(file, File.read(file).gsub(/"#{language}":/, "\"#{locales[1]}\":"))
    end
  end
end

def rebuild_blockly_js_files
  run_bash_script "apps/node_modules/@code-dot-org/blockly/i18n/codeorg-messages.sh"
  Dir.chdir('apps') do
    puts `yarn build`
  end
end

push_out_translated_files
