#!/usr/bin/env ruby

require_relative '../mailing-common/mailing-list-utils'

PEGASUS_REPORTING_DB_READONLY = sequel_connect(
  CDO.pegasus_reporting_db_reader,
  CDO.pegasus_reporting_db_reader
)

# EMAIL 1 (csf_pd): Code Studio teachers who attended a K5 PD.
query_1_csf_pd = "
  SELECT email
  FROM contact_rollups
  WHERE opted_out IS NULL
    AND roles LIKE '%Teacher%'
    AND professional_learning_attended LIKE '%CS Fundamentals%'
"
results_1_csf_pd = {}
PEGASUS_REPORTING_DB_READONLY.fetch(query_1_csf_pd).
  reject {|row| UNSUBSCRIBERS.include? row[:email]}.
  each do |row|
  results_1_csf_pd[row[:email]] = {email: row[:email]}
end

puts "LIST 1 (CSF PD) SIZE: #{results_1_csf_pd.size}."
export_contacts_to_csv results_1_csf_pd, 'email_1_csf_pd.csv'

# EMAIL 2: Code Studio teachers in (US or unknown location) and
#   (sections where grade is K5 or ages of students taught is 4 to 11)
# minus EMAIL 1.

query_2_csf_no_pd = "
  SELECT email
  FROM contact_rollups
  WHERE opted_out IS NULL
    AND roles LIKE '%Teacher%'
    AND (country = 'United States' OR country IS NULL)
    AND (
      (
        FIND_IN_SET('K', grades_taught) > 0
          OR FIND_IN_SET('1', grades_taught) > 0
          OR FIND_IN_SET('2', grades_taught) > 0
          OR FIND_IN_SET('3', grades_taught) > 0
          OR FIND_IN_SET('4', grades_taught) > 0
          OR FIND_IN_SET('5', grades_taught) > 0
      ) OR (
        FIND_IN_SET('4', ages_taught) > 0
          OR FIND_IN_SET('5', ages_taught) > 0
          OR FIND_IN_SET('6', ages_taught) > 0
          OR FIND_IN_SET('7', ages_taught) > 0
          OR FIND_IN_SET('8', ages_taught) > 0
          OR FIND_IN_SET('9', ages_taught) > 0
          OR FIND_IN_SET('10', ages_taught) > 0
          OR FIND_IN_SET('11', ages_taught) > 0
      )
    )
"
results_2_csf_no_pd = {}
PEGASUS_REPORTING_DB_READONLY.fetch(query_2_csf_no_pd).
  reject {|row| UNSUBSCRIBERS.include? row[:email]}.
  reject {|row| results_1_csf_pd.key? row[:email]}.
  each do |row|
  results_2_csf_no_pd[row[:email]] = {email: row[:email]}
end

puts "LIST 2 (CSF NO PD) SIZE: #{results_2_csf_no_pd.size}."
export_contacts_to_csv results_2_csf_no_pd, 'email_2_csf_no_pd.csv'
# Split up for 2 A/B test formats at 10% each, leaving 80% for the final mail.
puts `../mailing-common/split ./email_2_csf_no_pd.csv #{' 10' * 2}`

# EMAIL 3: Code Studio teachers in (US or unknown location) and
#   (sections where grade is 9 to 12 or ages of students taught is 14 to 18)
# minus EMAIL 1 and EMAIL 2.

query_3_csp = "
  SELECT email
  FROM contact_rollups
  WHERE opted_out IS NULL
    AND roles LIKE '%Teacher%'
    AND (country = 'United States' OR country IS NULL)
    AND (
      (
        FIND_IN_SET('9', grades_taught) > 0
          OR FIND_IN_SET('10', grades_taught) > 0
          OR FIND_IN_SET('11', grades_taught) > 0
          OR FIND_IN_SET('12', grades_taught) > 0
      ) OR (
        FIND_IN_SET('14', ages_taught) > 0
          OR FIND_IN_SET('15', ages_taught) > 0
          OR FIND_IN_SET('16', ages_taught) > 0
          OR FIND_IN_SET('17', ages_taught) > 0
          OR FIND_IN_SET('18', ages_taught) > 0
      )
    )
"
results_3_csp = {}
PEGASUS_REPORTING_DB_READONLY.fetch(query_3_csp).
  reject {|row| UNSUBSCRIBERS.include? row[:email]}.
  reject {|row| results_1_csf_pd.key?(row[:email]) || results_2_csf_no_pd.key?(row[:email])}.
  each do |row|
  results_3_csp[row[:email]] = {email: row[:email]}
end

puts "LIST 3 (CSP) SIZE: #{results_3_csp.size}."
export_contacts_to_csv results_3_csp, 'email_3_csp.csv'

# EMAIL 4: Code Studio teachers in (US or unknown location) and
#   (sections where grade is 6 to 8 or ages of students taught is 12 to 13)
# minus EMAIL 1 and EMAIL 2 and EMAIL 3.

query_4_csd = "
  SELECT email
  FROM contact_rollups
  WHERE opted_out IS NULL
    AND roles LIKE '%Teacher%'
    AND (country = 'United States' OR country IS NULL)
    AND (
      (
        FIND_IN_SET('6', grades_taught) > 0
          OR FIND_IN_SET('7', grades_taught) > 0
          OR FIND_IN_SET('8', grades_taught) > 0
      ) OR (
        FIND_IN_SET('12', ages_taught) > 0
          OR FIND_IN_SET('13', ages_taught) > 0
      )
    )
"
results_4_csd = {}
PEGASUS_REPORTING_DB_READONLY.fetch(query_4_csd).
  reject {|row| UNSUBSCRIBERS.include? row[:email]}.
  reject {|row| results_1_csf_pd.key?(row[:email]) || results_2_csf_no_pd.key?(row[:email]) || results_3_csp.key?(row[:email])}.
  each do |row|
  results_4_csd[row[:email]] = {email: row[:email]}
end

puts "LIST 4 (CSD) SIZE: #{results_4_csd.size}."
export_contacts_to_csv results_4_csd, 'email_4_csd.csv'

# EMAIL 5: Code Studio teachers in (US or unknown location)
# minus EMAIL 1 and EMAIL 2 and EMAIL 3 and EMAIL 4.

query_5_unknown = "
  SELECT email
  FROM contact_rollups
  WHERE opted_out IS NULL
    AND roles LIKE '%Teacher%'
    AND (country = 'United States' OR country IS NULL)
"
results_5_unknown = {}
PEGASUS_REPORTING_DB_READONLY.fetch(query_5_unknown).
  reject {|row| UNSUBSCRIBERS.include? row[:email]}.
  reject {|row| results_1_csf_pd.key?(row[:email]) || results_2_csf_no_pd.key?(row[:email]) || results_3_csp.key?(row[:email]) || results_4_csd.key?(row[:email])}.
  each do |row|
  results_5_unknown[row[:email]] = {email: row[:email]}
end

puts "LIST 5 (UNKNOWN) SIZE: #{results_5_unknown.size}."
export_contacts_to_csv results_5_unknown, 'email_5_unknown.csv'

# EMAIL 6: Code Studio teachers
# minus EMAIL 1 and EMAIL 2 and EMAIL 3 and EMAIL 4 and EMAIL 5.

query_6_international = "
  SELECT email
  FROM contact_rollups
  WHERE opted_out IS NULL
    AND roles LIKE '%Teacher%'
"
results_6_international = {}
PEGASUS_REPORTING_DB_READONLY.fetch(query_6_international).
  reject {|row| UNSUBSCRIBERS.include? row[:email]}.
  reject {|row| results_1_csf_pd.key?(row[:email]) || results_2_csf_no_pd.key?(row[:email]) || results_3_csp.key?(row[:email]) || results_4_csd.key?(row[:email]) || results_5_unknown.key?(row[:email])}.
  each do |row|
  results_6_international[row[:email]] = {email: row[:email]}
end

puts "LIST 6 (INTERNATIONAL) SIZE: #{results_6_international.size}."
export_contacts_to_csv results_6_international, 'email_6_international.csv'
