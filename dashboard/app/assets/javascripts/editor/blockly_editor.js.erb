//= require codemirror
//= require codemirror/modes/markdown
//= require codemirror/addons/edit/closetag
//= require codemirror/addons/edit/matchtags
//= require codemirror/addons/edit/matchbrackets
//= require codemirror/addons/fold/xml-fold
//= require codemirror/modes/xml
//= require codemirror/modes/javascript
//= require codemirror.inline-attach
//= require_self
//= require jquery.handsontable.full

$('head').append($('<script src="/blockly/js/marked/marked.js" type="text/javascript"/>'));

function codeMirror(name, mode, callback, attachments) {
  var editor = CodeMirror.fromTextArea(document.getElementById('level_' + name), {
    mode: mode,
    htmlMode: false,
    viewportMargin: Infinity,
    matchTags: {bothTags: true},
    autoCloseTags: true
  });
  if (callback) {
    editor.on('change', callback)
  }
  if (attachments) {
    inlineAttach.attachToCodeMirror(editor, {
      uploadUrl: '/level_assets/upload',
      uploadFieldName: 'file',
      downloadFieldName: 'newAssetUrl',
      allowedTypes: ['image/jpeg', 'image/png', 'image/jpg', 'image/gif'],
      progressText: '![Uploading file...]()',
      urlText: "![]({filename})", // `{filename}` tag gets replaced with URL
      errorText: "Error uploading file",
      extraHeaders: {
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      }
    });
  }
  return editor;
}
