- app = 'level_group'
- data = @level.properties

:javascript
  window.levelData = #{data.to_json};

= render partial: 'levels/common_audio'

- if data["per_page"]
  - page = params[:page] ? params[:page].to_i : 0
  - per_page = data["per_page"].to_i
  - first_level = page * per_page
  - last_level = [first_level + per_page - 1, data["levels"].length - 1].min
- else
  - first_level = 0
  - last_level = data["levels"].length - 1

- data["levels"][first_level..last_level].each_with_index do |level_name, index|
  - level_blob = Level.find_by_name(level_name)
  - level = level_blob
  - # Parse the array of the level resuts; see sample below in JavaScript.
  - if @last_attempt
    - last_attempt = JSON.parse(@last_attempt).find{|item| item["level_id"]==level.id}["result"]
  - else
    - last_attempt = ""
  = render partial: 'levels/single_multi', locals: {page: page, index: index, standalone: false, level: level, last_attempt: last_attempt }

= render partial: 'levels/common_audio'

- if data["per_page"]
  %a.btn.btn-large.btn-primary.nextPageButton
    =t('nextPage')
- else
  = render partial: 'levels/dialog', locals: {app: app, data: data}

:javascript
  #{render template: 'levels/multi.js', formats: [:js]}

  var levelCount = #{data["levels"].count};
  var page = #{page};
  #{render template: 'levels/levelGroup.js', formats: [:js]}
