-# inhibit brakeman warning about unescaped model attribute - comes from static data in database, level.properties does not contain XSS attacks
- data = brakeman_no_warn(level.properties)
- app = 'text_match'
- contained_mode = local_assigns.fetch :contained_mode, false

.text-match{id: "level_#{level.id}"}
  .mainblock
    = render partial: 'levels/content', locals: {app: app, data: data, source_level: level, hide_header: !standalone}
    - height = data['height'] || '80'
    %textarea.response{placeholder: data['placeholder'] ? level.localized_property(:placeholder) : t(app + '.placeholder'), style: "width: 700px; height: #{height}px;", readonly: @view_options.readonly_workspace}

    - if standalone
      = render partial: 'levels/dialog', locals: {app: app}

    = render partial: 'levels/teacher_markdown', locals: {data: data} unless contained_mode

  .clear

= render partial: 'levels/common_audio'

-# Don't operate if we're a LevelGroup with a /level/ URL.
- if standalone || @script_level
  :javascript

    window.dashboard.codeStudioLevels.registerLevel(#{level.id}, new TextMatch(
      #{level.id},
      "level_#{level.id}",
      "#{app}",
      #{standalone},
      #{data['answers'] || []},
      #{last_attempt.to_json}
    ));
