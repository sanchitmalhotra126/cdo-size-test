%h1.control-legend{data: {toggle: "collapse", target: "#validation"}}
  Validation

#validation.in.collapse
  -# Deprecated for Sprite Lab and Dance
  - if (!(@level.is_a?(GamelabJr) || @level.is_a?(Dancelab)) && (@level.is_a?(Blockly)))
    .field
      = f.label :failure_message_override, 'Failure Message Override'
      %p If specified this error message will be used to replace ALL error messages in the puzzle. Be certain this is what you want before using.
      = f.text_field :failure_message_override, style: 'width: 600px;', placeholder: 'Type Override Failure Message Here'
  -# Dance and Spritelab are special types of Gamelab levels
  - if @level.is_a?(Gamelab)
    %p
      This is a snippet of javascript that is run after every draw loop. Call levelSuccess() in here to stop the level as a success. You can also pass a number into levelSuccess() to give the student a non-perfect test result (see <a href="https://github.com/code-dot-org/code-dot-org/blob/101fbfd2dcdd635d7359e991559ba782f9fd00be/apps/src/constants.js#L33-L106">TestResults</a> for the list of valid test results). There is also a `validationProps` object that you can stick arbitrary properties on to track state across draw loops.
    = f.text_area :validation_code

  - if @level.is_a?(Applab)
    = render partial: 'levels/editors/fields/applab_validations', locals: {f: f}

  - if @level.is_a?(Studio)
    = render partial: 'levels/editors/fields/studio_validations', locals: {f: f}
