.field
  = f.label :timeout_failure_tick, 'Timeout failure tick'
  %p Number of 'ticks' to simulate before marking the level as failed. Default is unlimited.  Step speed (above) controls the length of a tick.
  = f.number_field :timeout_failure_tick
.field
  = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :timeout_after_when_run, description: "Timeout after all blocks run"}
  %p When set, if the only event block that had children is when_run, and those commands are finished executing, don't wait for the timeout. If we have additional event blocks that DO have children, we keeping running until timeoutFailureTick or a success/failure condition is met
.field
  = f.label :success_condition, 'Success condition'
  %p Optional JavaScript function to run every tick. If the function ever return true, the level immediately succeeds.
  = f.text_area :success_condition, rows: 4
.field
  = f.label :failure_condition, 'Failure condition'
  %p Optional JavaScript function to run every tick. If the function ever return true, the level immediately fails.
  = f.text_area :failure_condition, rows: 4
