.field
  = f.label :instructions
  = f.text_area :instructions, placeholder: 'Instructions', rows: 4
.field
  = f.label :markdown_instructions
  %p When specified, these instructions will render in the instructions popup.
  %p The regular instruction field above will still display as the instructions below the game area.
  %p Note: since markdown instructions do not currently get translated, please do not use outside of middle school, high school and PD.
  %p You can drag-and-drop or paste images in to this box, and they will be uploaded to a suitable location.
  = f.text_area :markdown_instructions, placeholder: 'Markdown Instructions', rows: 4
  #markdown-instructions-preview

.field
  = f.label :text_to_speech
  %p When specified, this will generate audio that the students can use to have the instructions read aloud to them.
  #tts-error.alert.alert-error{style: "display: none"}
    #alert-content
  = f.text_area :custom_tts, placeholder: '', rows: 4
  - if CDO.use_acapela
    = f.label :voice
    %select#level_tts_voice
    %button#tts{type: 'button'} Hear TTS
    %div
      %audio#tts-audio

:javascript
  var mdEditor = levelbuilder.initializeCodeMirror('level_markdown_instructions', 'markdown', function (editor, change) {
    localStorage.setItem('markdown_' + '#{@level.id || params[:type]}', editor.getValue());

    $('#markdown-instructions-preview')
      .html(marked(editor.getValue()))
      .children('details').details();
  }, true);

  var locallyStoredMarkdown = localStorage.getItem('markdown_' + '#{@level.id || params[:type]}');
  if (locallyStoredMarkdown) {
    mdEditor.setValue(locallyStoredMarkdown);
  }

  $('#markdown-instructions-preview')
      .html(marked(mdEditor.getValue()))
      .children('details').details();

  if (#{!!CDO.use_acapela}) {
    $('#tts').click(function () {
      $.getJSON("http://vaas.acapela-group.com/Services/UrlMaker?jsoncallback=?", {
        cl_login: "#{CDO.acapela_login}",
        cl_app: "#{CDO.acapela_app}",
        cl_pwd: "#{CDO.acapela_password}",
        req_voice: $("#level_tts_voice").val(),
        req_text: $("#level_custom_tts").val()
      }, function (data) {
        $('#tts-error').hide();
        if (data.err_msg) {
          $('#alert-content').text(unescape(data.err_msg));
          $('#tts-error').show();
        }
        if (data.snd_url) {
          $("#tts-audio").attr({
            src: data.snd_url,
            controls: 'controls'
          });
        }
      });
    });

    $(document).ready(function () {
      $.getJSON("http://vaas.acapela-group.com/Services/Voices.json?jsoncallback=?", {
          cl_login: "#{CDO.acapela_login}",
          cl_app: "#{CDO.acapela_app}",
          fields_selection: "language_desc;speaker",
          frequency: "22050",
          technology: "HQ",
        }, function (data) {

          var voices = Object.keys(data.voices).reduce(function (prev, curr) {
            var voice = {
              speaker: data.voices[curr].speaker,
              id: curr
            }
            if (prev[data.voices[curr].language_desc]) {
              prev[data.voices[curr].language_desc].push(voice);
            } else {
              prev[data.voices[curr].language_desc] = [voice];
            }
            return prev;
          }, {});

          var optgroups = Object.keys(voices).map(function (language) {
            var options = voices[language].map(function (voice) {
              return "<option value='" + voice.id + "'>" + voice.speaker + "</option>";
            });

            return "<optgroup label='" + language + "'>" + options.join('') + "</optgroup>";
          });

          $("#level_tts_voice").html(optgroups.join(''));
          $('#level_tts_voice option[value="karen22k"]').attr("selected",true);
        });
    });
  }
