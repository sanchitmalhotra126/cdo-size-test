- content_for(:head) do
  %script{src: webpack_asset_path('js/levels/editors/_studio.js')}

= render partial: 'levels/editors/fields/encrypted_examples', locals: {f: f, level_type: 'playlab'}
= render partial: 'levels/editors/fields/control_buttons', locals: {f: f}

.field
  = f.label :first_sprite_index, 'First sprite index'
  %p Integer representing which sprite to use for the first character. Default is 0.
  = f.number_field :first_sprite_index
.field
  = f.label :protaganist_sprite_index, 'Protaganist sprite index'
  %p Integer of the protaganist character (zero indexed, counting from the top left of the grid). This character must touch all the waypoint flags to complete the level. If no value is set, all sprites can collect flags.
  = f.number_field :protaganist_sprite_index
.field
  = f.label :custom_game_type, 'Custom game type'
  %p Used to tell playlab we want to run some of our custom onTick logic.
  = f.select :custom_game_type, options_for_select(["", "Big Game", "Rocket Height", "Sam the Bat", "Ninja Cat"], @level.custom_game_type)

.field
  = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :edge_collisions, description: "Edge collisions"}
.field
  = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :projectile_collisions, description: "Projectile collisions"}
.field
  = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :allow_sprites_outside_playspace, description: "Allow sprites outside playspace"}
.field
  = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :sprites_hidden_to_start, description: "Sprites hidden to start"}
.field
  = f.label :remove_items_when_actor_collides, 'Remove an item (e.g. a stormtrooper) when the actor collides with it'
  = boolean_check_box f, :remove_items_when_actor_collides
.field
  = f.label :background, 'Default background'
  = f.text_field :background

%div.collapsed_area_header{data: {toggle: "collapse", target: "#cs_in_a"}}
  CS in A Options
.collapse{id: "cs_in_a"}
  = render partial: 'levels/editors/cs_in_a', locals: {f: f}
