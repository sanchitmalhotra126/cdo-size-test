- content_for(:head) do
  = stylesheet_link_tag 'css/levelbuilder', media: 'all'
  = stylesheet_link_tag 'jquery.handsontable.full', media: 'all'
  %script{src: webpack_asset_path('js/levelbuilder.js')}
  = javascript_include_tag 'jquery.handsontable.full'

- content_for :body_scripts do
  - video_infos = {}
  - Video.all.each { |video| video_infos[video.key] = video.summarize(false) }
  - script_data = { editorall: { video_infos: video_infos }.to_json }
  %script{src: webpack_asset_path('js/levels/editors/_all.js'), data: script_data}

- if !@level.is_a?(BubbleChoice)
  = render partial: 'levels/editors/fields/bubble_choice_sublevel', locals: {f: f}

.field
  = f.label :video_key, 'Level Video'
  %p
    Add new videos by going to
    %a{href:"/videos/new"} the add video page
    - if @level.is_a?(DSLDefined)
      %p Warning: This is a DSL defined level. You can use the dropdown to find the video key that you'd like to use, but selecting in the dropdown will NOT be sufficient to associate the video with the level. If you'd like to add a video to this level you need to add video_key 'video_key' to the DSL box.
  = f.select :video_key, options_for_select(video_key_choices, @level.video_key), {include_blank: true}, {class: 'video-dropdown'}
  .video-preview{style: 'display: block'}

=render partial: 'levels/editors/fields/callouts', locals: {f: f}
- if @level.respond_to? :free_play
  .field
    = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :free_play, description: "Free Play"}
    %p Free Play levels are not checked for correctness (any solution is accepted), can be shared, and can be saved to the public and private gallery

    .field
      = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :embed, description: "Embed"}
      %p Embedded levels hide the Blockly workspace, only showing the visualization area (and the 'finish' button, if 'freeplay' is also set).

- if @level.respond_to? :disable_sharing
  .field
    = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :disable_sharing, description: "Disable sharing"}
    %p If set, this level cannot be shared or saved to galleries even if it's free play.

- if @level.respond_to? :coordinate_grid_background
  .field
    = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :coordinate_grid_background, description: "Coordinate grid background"}

-if current_user.levelbuilder?
  .field
    = f.label :editor_experiment, 'Editor Experiment'
    %p If specified, users with this experiment on the levelbuilder machine will be able to edit this level.
    = f.text_field :editor_experiment, placeholder: 'Editor Experiment'

= render partial: 'levels/editors/droplet', locals: {f: f} if @level.uses_droplet?
= render partial: 'levels/editors/fields/curriculum_specific', locals: {f: f} if (@level.uses_droplet?) || @level.is_a?(Blockly)
= render partial: 'levels/editors/blockly', locals: {f: f} if !(@level.uses_droplet?) && @level.is_a?(Blockly)
