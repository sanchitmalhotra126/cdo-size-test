- content_for(:head) do
  = stylesheet_link_tag 'css/levelbuilder', media: 'all'
  = stylesheet_link_tag 'jquery.handsontable.full', media: 'all'
  %script{src: webpack_asset_path('js/levelbuilder.js')}
  = javascript_include_tag 'jquery.handsontable.full'

- if !(@level.is_a?(BubbleChoice) || @level.is_a?(CurriculumReference))
  = render partial: 'levels/editors/fields/bubble_choice_sublevel', locals: {f: f}

= render partial: 'levels/editors/fields/callouts', locals: {f: f} unless (@level.is_a?(CurriculumReference) || @level.is_a?(DSLDefined))
= render partial: 'levels/editors/fields/hide_share_and_remix', locals: {f: f}
= render partial: 'levels/editors/fields/video', locals: {f: f} unless (@level.is_a?(DSLDefined) || @level.is_a?(CurriculumReference))

- if @level.respond_to? :free_play
  .field
    = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :free_play, description: "Free Play"}
    %p Free Play levels are not checked for correctness (any solution is accepted), can be shared, and can be saved to the public and private gallery

    .field
      = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :embed, description: "Embed"}
      %p Embedded levels hide the Blockly workspace, only showing the visualization area (and the 'finish' button, if 'freeplay' is also set).

- if @level.respond_to? :coordinate_grid_background
  .field
    = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :coordinate_grid_background, description: "Coordinate grid background"}

= render partial: 'levels/editors/fields/special_level_types', locals: {f: f} if @level.is_a?(Blockly)

-# Deprecated for Sprite Lab and Dance
- if (!(@level.is_a?(GamelabJr) || @level.is_a?(Dancelab)) && (@level.is_a?(Blockly)))
  .field
    = f.label :failure_message_override, 'Failure Message Override'
    %p If specified this error message will be used to replace ALL error messages in the puzzle. Be certain this is what you want before using.
    = f.text_field :failure_message_override, style: 'width: 600px;', placeholder: 'Type Override Failure Message Here'

- if @level.is_a?(Blockly)
  .field
    = f.label :preload_asset_list, 'Preload asset list'
    %p A list of assets to be preloaded at page load time. The extension must be mp3, ogg, png, gif, jpg, jpeg, mov, or mp4. (click the plus sign to add an asset)
    - @level.preload_asset_list = [''] unless @level.preload_asset_list.try(:present?)
    - @level.preload_asset_list.each do |url|
      = text_field_tag 'level[preload_asset_list][]', url, placeholder: 'Asset URL', style: 'width: 100%; box-sizing: border-box; min-height: 28px;'
    #plusPreloadAssetList
      %i.fa.fa-plus-circle
