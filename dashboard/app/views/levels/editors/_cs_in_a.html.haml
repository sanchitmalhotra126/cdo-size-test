//CS in A stuff
%div.collapsed_area_header{data: {toggle: "collapse", target: "#cs_in_a"}}
  CS in A Options
.collapse{id: "cs_in_a"}
  - if @level.respond_to? :coordinate_grid_background
    = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :coordinate_grid_background, description: "Coordinate grid background"}

  .field
    = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :use_contract_editor, description: "Use MSM contract editor"}
  .field
    = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :default_num_example_blocks, description: "Default # of example blocks in contract editor"}
  .field
    = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :disable_examples, description: "Hide examples section in contract editor"}
  .field
    = render partial: 'levels/editors/fields/checkboxes', locals: {f: f, field_name: :examples_required, description: "Each function must have at least 1 example, and examples will be checked when hitting run"}
  %table.contract-editor-config
    %tr
      %th Section
      %th Highlight
      %th Collapse
    -%w(contract examples definition).each_with_index do |section, i|
      %tr
        %td #{i + 1}. #{section.titleize}
        %td= boolean_check_box f, "#{section}_highlight".to_sym
        %td= boolean_check_box f, "#{section}_collapse".to_sym

  -if @level.respond_to? :input_output_table
    .field
      = f.label :input_output_table, 'Input/Output Table'
      %p An array of tuples where each tuple is [input, output].
      %p i.e. The table for f(x) = x - 5 might look like: [ [15, 10], [10, 5], [25, 20] ]
      = f.text_area :input_output_table, placeholder: 'Input/Output', rows: 4, value: @level.input_output_table
