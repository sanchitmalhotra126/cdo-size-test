:css
  .contract select {
    color: white;
    background-color: #999999;
    margin-top: 10px;
  }

  #functionNameText {
    margin-top: 10px;
  }

  .domainItem {
    /*width: 160px;*/
    height: 36px;
    color: white;
    border-radius: 5px;
    float: left;
    margin-right: 5px;
  }

  #domainItemText {
    margin-top: 10px;
  }

  .domainItem .domainItemText {
    font-size: 16px;
    padding: 10px;
    color: white;
    overflow: hidden;
  }

  .domain-x-button {
    float: right;
    width: 27px;
    height: 27px;
    font-size: 22px;
    padding: 0;
    margin: 4px;
  }

  .contract .buttons {
    margin-top: 8px;
  }

  #sectionTitle {
    font-size: 20px;
  }

.contract
  - data = @level.properties
  - app = 'contract_match'

  - options_to_colors = { None: "#999999", Number: "#00ccff", String: "#0099999", Image: "#9900cc", Boolean: "#336600" }

  .mainblock
    = render partial: 'levels/content', locals: {app: app, data: data}
    #sectionTitle Name
    %div
      %input#functionNameText{type: 'text', placeholder: 'Name'}
    #sectionTitle Range
    %select#rangeInput
      - options_to_colors.each do |type_name, color|
        %option{"data-color" => "#{color}"}= type_name
    #sectionTitle Domain
    %div
      %input#domainItemText{type: 'text', placeholder: 'Name'}
      %select#domainInput
        - options_to_colors.each do |type_name, color|
          %option{"data-color" => "#{color}"}= type_name
      %button#addButton Add
    #domainItems
    .clear
    = render partial: 'levels/dialog', locals: {app: app, data: data}
  .clear
= render partial: 'levels/common_audio'
:javascript
  $('#addButton').click(function()
  {
    var domainItemText = $('#domainItemText').val();
    var domainInput = $('#domainInput').val();
    var domainOptionSelected = $("#domainInput option:selected");
    $('#domainItemText').val('');
    var $div = $('<div/>').addClass('domainItem')
    $div.css("background-color", $(domainOptionSelected).data("color"));
    var $button = $('<button class="domain-x-button">x</button>');
    $div.append($button);
    $div.append($('<div/>').text(domainItemText + ':' + domainInput).addClass('domainItemText'));
    $button.click(function(event) {
      $(event.target.parentElement).remove();
    });
    $('#domainItems').append($div);
  });

  $('.contract select').on('change', function (e) {
    var optionSelected = $("option:selected", this);
    $(this).css("background-color", $(optionSelected).data("color"));
  });

  function getResult()
  {
    var functionName = $('#functionNameText').val();
    var rangeInput = $('#rangeInput').val();
    var items = $('#domainItems').children().map(function(item, element) {
      return $(element).find('.domainItemText')[0].textContent;
     });

    // Order domain inputs alphabetically sorted
    var domainInput = $.makeArray(items).slice().sort().join('|');
    var response = functionName + '|' + rangeInput + '|' + domainInput;
    console.log('input="' + response + '"');
    var result = #{data['answers'].to_json}.some(function(element) {
      return response == element;
    });
    return {
      response: response,
      result: result
    };
  }
