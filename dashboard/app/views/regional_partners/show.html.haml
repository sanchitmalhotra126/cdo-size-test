- content_for(:head) do
  = stylesheet_link_tag 'css/pd', media: 'all'
:javascript
  $('#program-manager-id2').selectize({
    valueField: 'url',
    labelField: 'name',
    searchField: 'name',
    create: false,
    render: {
        option: function(item, escape) {
            return '<div>' +
                '<span class="title">' +
                    '<span class="name"><i class="icon ' + (item.fork ? 'fork' : 'source') + '"></i>' + escape(item.name) + '</span>' +
                    '<span class="by">' + escape(item.username) + '</span>' +
                '</span>' +
                '<span class="description">' + escape(item.description) + '</span>' +
                '<ul class="meta">' +
                    (item.language ? '<li class="language">' + escape(item.language) + '</li>' : '') +
                    '<li class="watchers"><span>' + escape(item.watchers) + '</span> watchers</li>' +
                    '<li class="forks"><span>' + escape(item.forks) + '</span> forks</li>' +
                '</ul>' +
            '</div>';
        }
    },
    score: function(search) {
        var score = this.getScoreFunction(search);
        return function(item) {
            return score(item) * (1 + Math.min(item.watchers / 100, 1));
        };
    },
    load: function(query, callback) {
        if (!query.length) return callback();
        $.ajax({
            url: 'https://api.github.com/legacy/repos/search/' + encodeURIComponent(query),
            type: 'GET',
            error: function() {
                callback();
            },
            success: function(res) {
                callback(res.repositories.slice(0, 10));
            }
        });
    }
  });

%h1 View Regional Partner

#application-container
  = show_flashes.html_safe
%p
  %strong ID:
  = @regional_partner.id
%p
  %strong Name:
  = @regional_partner.name
%p
  %strong Group:
  = @regional_partner.group
%p
  %strong Urban:
  = @regional_partner.urban? ? 'Yes' : 'No'
%p
  %strong Contact Email:
  = @regional_partner.contact.try(:email)
%p
  %strong Contact Name:
  = @regional_partner.contact.try(:name)
%p
  %strong Ship Attention:
  = @regional_partner.attention
%p
  %strong Street:
  = @regional_partner.street
%p
  %strong Apartment/Suite:
  = @regional_partner.apartment_or_suite
%p
  %strong City:
  = @regional_partner.city
%p
  %strong State:
  = @regional_partner.state
%p
  %strong Zip Code:
  = @regional_partner.zip_code
%p
  %strong Ship Phone Number:
  = @regional_partner.phone_number
%p
  %strong Notes:
  = @regional_partner.notes
%p
  %strong Created At:
  = @regional_partner.created_at.strftime('%F')
%p
  %strong Updated At:
  = @regional_partner.updated_at.strftime('%F')
- if can? :update, @regional_partner
  = link_to 'Edit', edit_regional_partner_path(@regional_partner)
\|
= link_to 'Back', regional_partners_path
%br
%h2 Program Managers
%table.table.table-hover.table-condensed.table-auto-width{:id => 'program-managers-table'}
  %thead
    %th Action
    %th ID
    %th Name
    %th Email
    %th Recent Sign In
    %th Sign In Count
    %th Registered Account At
  %tbody
    - @regional_partner.program_managers.each do |program_manager|
      %tr
        %td= link_to 'Remove', action: :remove_program_manager, program_manager_id: program_manager.id
        %td= program_manager.id
        %td= program_manager.name
        %td= program_manager.email
        %td= program_manager.current_sign_in_at.try(:strftime, '%F')
        %td= program_manager.sign_in_count
        %td= program_manager.created_at.strftime('%F')
%p Enter a User Name or Email to Assign a Program Manager
= form_tag url_for(action: 'search_program_manager'), method: 'get', class: 'form-inline', enforce_utf8: false do
  = text_field_tag :search_term, params[:search_term], class: 'form-control'
  %button.btn{type: 'submit'}
    %i.fa.fa-search
-if @users
  %table.table.table-hover.table-condensed.table-auto-width{:id => 'assign-program-managers-table'}
    %thead
      %th Action
      %th ID
      %th Name
      %th Email
      %th Recent Sign In
      %th Sign In Count
      %th Registered Account At
    %tbody
      - @users.each do |user|
        %tr
          %td= link_to 'Assign', action: :assign_program_manager, program_manager_id: user.id
          %td= user.id
          %td= user.name
          %td= user.email
          %td= user.current_sign_in_at.try(:strftime, '%F')
          %td= user.sign_in_count
          %td= user.created_at.strftime('%F')
