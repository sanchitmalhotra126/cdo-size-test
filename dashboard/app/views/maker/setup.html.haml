- app = 'applab'
- js_locale = 'en_us'

%script{src: asset_path('js/marked/marked.js')}
%script{src: asset_path('js/initApp/initApp.js')}
%script{src: minifiable_asset_path('js/common.js')}
%script{src: asset_path("js/#{js_locale}/common_locale.js")}
%script{src: asset_path("js/#{js_locale}/#{app}_locale.js")}
%script{src: minifiable_asset_path("js/#{app}.js")}

:css
  .maker-setup img {
    border-radius: 50%;
    float: right;
  }

  .setup-status {
    font-size: 26px;
  }

  .setup-status div {
    margin: 15px 0;
  }

  .setup-status .complete {
    color: green;
  }

  .setup-status .incomplete {
    color: red;
    font-weight: bold;
  }

  .setup-status .hidden {
    display: none;
  }

= javascript_include_tag 'js/makerlab'

.maker-setup
  :markdown
    # CS Discoveries Maker APIs Pilot IT Setup

    ## The Circuit Playground

    <center><a href="https://www.adafruit.com/products/3000"><img src="#{image_url('maker/circuit-playground-200.jpg')}" width=200></a></center>

    The Adafruit [Circuit Playground](https://www.adafruit.com/products/3000) is a programmable circuit board with built-in components that make getting started with physical computing quick and fun.

    In the Computer Science Discoveries curriculum being piloted this school year, we will be using the Circuit Playground tethered via USB to students' computers to allow for online curriculum integration and interactive debugging of programs.

    To connect from USB to the Code Studio Applab website, we will need to install a Chrome App extension to support serial communication from the browser.

    ## Computer Setup Steps

    1. If you're using Windows, you will need to start by installing the [Adafruit Windows drivers](https://learn.adafruit.com/adafruit-feather-32u4-basic-proto/using-with-arduino-ide#install-drivers-windows-only).
    1. Install [Google Chrome](https://www.google.com/chrome/browser/) and [Chrome App extension](https://chrome.google.com/webstore/detail/codeorg-serial-connector/ncmmhcpckfejllekofcacodljhdhibkg). _Note: we plan to support other browsers including IE in Fall 2017._
       * If you previously had the Chrome App installed, confirm the version # has been updated to 30, by navigating to `chrome://extensions` in your browser bar
    1. Navigate to the Maker APIs w/ App Lab page:
       * [Make an account](https://studio.code.org/users/sign_up) or [log in](https://studio.code.org/users/sign_in) to Code Studio.
       * Navigate to the Maker APIs w/ App Lab project page: [https://studio.code.org/p/makerlab](https://studio.code.org/p/makerlab)
    1. Plug in a Circuit Playground board, write some code (new blocks are in the “Maker Lab” and “Circuit” tabs) and press **Run**.
    1. If something seems to be not working (e.g. “`ERROR: Line: 1: Unknown identifier: touchSensor0`”, open your Chrome console (command + option + I) & send brian@code.org the error. This often means the board did not successfully connect due to an incomplete setup step.

    ## Setup Status

    <div class="setup-status">
      <div id="is-chrome" class="complete"><i class="fa fa-times-circle"/> Chrome version 33+</div>
      <div id="app-installed" class="incomplete"><i class="fa fa-times-circle"/> Chrome App installed</div>
      <div id="windows-drivers" class="hidden"><i class="fa fa-times-circle"/> Windows drivers installed</div>
      <div id="board-plug" class="incomplete"><i class="fa fa-times-circle"/> Board plugged in</div>
      <div id="board-connect" class="incomplete"><i class="fa fa-times-circle"/> Board connect-able</div>
    </div>

:javascript

  function deviceOnPortAppearsUsable(port) {
    var comNameRegex = /usb|acm|^com/i;
    return comNameRegex.test(port.comName);
  }

  function getDevicePort() {
    return new Promise(function (resolve, reject) {
      window.ChromeSerialport.list(function (error, list) {
        if (error) {
          reject(error);
          return;
        }

        var prewiredBoards = list.filter(function (port) {
          return deviceOnPortAppearsUsable(port);
        });

        if (prewiredBoards.length > 0) {
          resolve(prewiredBoards[0].comName);
        } else {
          reject('Could not get device port.');
        }
      });
    }.bind(this));
  }

  function connectToBoard(portId) {
    return new Promise(function (resolve, reject) {
      var serialPort = new window.ChromeSerialport.SerialPort(portId, {
        bitrate: 57600
      }, true);
      var io = new PlaygroundIO({port: serialPort});
      var board = new JohnnyFive.Board({io: io, repl: false});
      board.once('ready', function () {
        resolve(board);
      });
      board.once('error', reject);
    }.bind(this));
  }

  $(function () {
    $('.maker-setup a').attr('target', '_blank');

    var isChrome = !!window.chrome;
    var gtChrome33 = isChrome && getChromeVersion() >= 33;

    function getChromeVersion() {
      var raw = navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);

      return raw ? parseInt(raw[2], 10) : false;
   }

    function isMacintosh() {
      return navigator.platform.indexOf('Mac') > -1
    }

    function isWindows() {
      return navigator.platform.indexOf('Win') > -1
    }

    if (isChrome) {
      if (gtChrome33) {
        check('#is-chrome');
      } else {
        $('#is-chrome').append("Your Chrome version is " + getChromeVersion() + ", please upgrade to at least version 33");
      }
      var CHROME_APP_ID = 'ncmmhcpckfejllekofcacodljhdhibkg';
      window.ChromeSerialport.extensionId = CHROME_APP_ID
      window.ChromeSerialport.isInstalled(function (error) {
        if (error) {
          return;
        }
        check('#app-installed');

        return getDevicePort().then(function(port) {
          check('#board-plug');
          connectToBoard(port).then(function(board) {
            check('#board-connect');

          });
        });
      });
    }

    if (isWindows()) {
      $('#windows-drivers').removeClass('hidden').addClass('incomplete');
    }

  });

  function check(selector) {
    $(selector).removeClass('incomplete').addClass('complete');
    $(selector + ' i').removeClass('fa-times-circle').addClass('fa-check-circle');
  }
