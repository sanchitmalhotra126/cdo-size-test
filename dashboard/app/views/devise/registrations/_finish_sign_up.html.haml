- require 'geocoder'
- require 'country_codes'
- location = Geocoder.search(request.ip).try(:first)
- us_ip = location.nil? || ['US', 'RD'].include?(location.country_code.to_s.upcase)

- @page_title = t('activerecord.attributes.user.finish_sign_up_header')

#signup
  %h1= @page_title
  %p= t('activerecord.attributes.user.finish_sign_up_subheader')

  = form_for(@user, url: registration_path(@user), html: {class: "finish-signup"}) do |f|
    = f.hidden_field :locale, value: locale

    .field-row
      .field
        = f.label :user_type, t('signup_form.create_user_type')
        = f.select :user_type, user_type_options, include_blank: true

    .field-row#name-field{style: "display: none;"}
      .field
        #teacher-name-label{style: "display: none;"}
          = f.label :name, t('activerecord.attributes.user.other_name_example').html_safe
        #student-name-label{style: "display: none;"}
          = f.label :name, t('activerecord.attributes.user.name_example').html_safe
        = f.text_field :name, maxlength: 255
      - if @user.errors[:name].present?
        %span.error= @user.errors[:name].join(', ')

    .field-row#age-dropdown{style: "display: none;"}
      .field
        = f.label :age
        = f.select :age, age_options, include_blank: true
      - if @user.errors[:age].present?
        %span.error= @user.errors[:age].join(', ')

    .field-row#gender-dropdown{style: "display: none;"}
      .field
        = f.label :gender, t('signup_form.gender')
        = f.select :gender, gender_options
      - if @user.errors[:gender].present?
        %span.error= @user.errors[:gender].join(', ')

    .field
      -# Mount point for React SchoolInfoInputs component.
      #school-info-inputs{style: "display: none;"}
        = f.fields_for :school_info_attributes do |ff|
          = ff.hidden_field :school_id
          = ff.hidden_field :school_name
          = ff.hidden_field :school_state
          = ff.hidden_field :school_zip
          = ff.hidden_field :country
          = ff.hidden_field :full_address

    #terms-of-service.checkbox{style: "display: none;"}
      = f.label :terms_of_service_version do
        = f.check_box :terms_of_service_version, {}, User::TERMS_OF_SERVICE_VERSIONS.last
        = t('terms_interstitial.accept_label', tos_url: CDO.code_org_url('/tos'), privacy_url: CDO.code_org_url('/privacy')).html_safe
        %span#student-consent{style: "display: none;"}
          = t('signup_form.student_consent')

    #email-preference-radio.field{style: "display: none;"}
      %span
        = t('signup_form.email_preference_question')
        = link_to t('signup_form.email_preference_privacy'), CDO.code_org_url('/privacy'), target: '_blank'
      %span
        .radio
          = f.radio_button :email_preference_opt_in, 'yes'
          = f.label :email_preference_opt_in, t('signup_form.email_preference_yes'), value: 'yes'
        .radio
          = f.radio_button :email_preference_opt_in, 'no'
          = f.label :email_preference_opt_in, t('signup_form.email_preference_no'), value: 'no'

    -# If GDPR applies, show an additional checkbox.
    - if request.gdpr? || request.params['force_in_eu']
      #data_transfer_agreement_accepted.checkbox
        = f.check_box :data_transfer_agreement_accepted
        = f.label :data_transfer_agreement_accepted do
          = t('signup_form.agree_us_website')
          = t('signup_form.my_data_to_us')

    %button#submit{style: "display: none;"}
      = t('signup_form.submit')

:ruby
  script_data = {
    signup: {
      usIp: us_ip
    }.to_json
  }
%script{src: minifiable_asset_path('js/devise/registrations/_finish_sign_up.js'), data: script_data}
