.header_level
  %div{class: 'header_level_container'}
    .header_text
    .progress_container
    .header_finished_link{style: 'display: none;'}
    %span.header_trophy_link{style: 'display: none;'}
      .header_text= t(:trophies)
      .header_status_bar.current_trophies
      .header_text.max_trophies
    %span.stage_links{style: 'display: none;'}
      %a.header_status_bar.level_free_play{title: t('nav.header.free_play.playlab'), href: playlab_freeplay_path}
        %i.fa.fa-rocket
      %a.header_status_bar.level_free_play{title: t('nav.header.free_play.artist'), href: artist_freeplay_path}
        %i.fa.fa-pencil
      %span.header_popup_link
        .header_popup_link_glyph
          &#x25BC;
        .header_popup_link_text= t(:more)

- if @script_level
  .header_popup
    .header_popup_header
      %span= t('nav.popup.progress')
      - if current_user
        .header_text{style: 'float: right;'}= t('nav.popup.lines', lines: current_user.total_lines)
    .header_popup_body
      .loading
    .header_popup_footer
      .header_popup_close
        = t('nav.popup.close')

:javascript
  //<![CDATA[
  var scriptData = #{header_progress(@script_level).to_json};
  $('.header_text').first().text(scriptData.title);
  if (scriptData.finishLink) {
    $('.header_finished_link').show().append($('<a>').attr('href', scriptData.finishLink.href).text(scriptData.finishLink.text));
  }
  if (scriptData.showStageLinks) {
    $('.stage_links').show();
  }
  if (scriptData.trophies) {
    $('.header_trophy_link').show();
    $('.header_trophy_link .current_trophies').text(scriptData.trophies.current);
    $('.header_trophy_link .max_trophies').text(scriptData.trophies.of + ' ' + scriptData.trophies.max);
  }
  var progressContainer = $('.progress_container');
  scriptData.levels.forEach(function(level, index, levels) {
    var defaultClass = level.assessment ? 'puzzle_outer_assessment' : 'puzzle_outer_level';
    var link = $('<a>').attr('href', level.link).addClass('level_link').addClass(level.status).text(level.displayText);
    if (level.unplugged) {
      link.addClass('unplugged_level');
    }
    var div = $('<div>').addClass(index === scriptData.currentLevelIndex ? 'puzzle_outer_current' : defaultClass).append(link);
    if (index === levels.length - 1) {
      div.addClass('last');
    }
    progressContainer.append(div).append('\n');
  });
  $('.level_free_play').qtip({
    content: {
      attr: 'title'
    },
    position: {
      my: 'top center',
      at: 'bottom center'
    }
  });

  function showHeaderPopup(target) {
    $('.header_popup').show();
    $('.header_popup_link_glyph').html('&#x25B2;');
    $('.header_popup_link_text').text('#{t(:less)}');
    $(document).on('click', hideHeaderPopup);
    lazyLoadPopup($(target).closest('.header_trophy_link').length > 0);
  }
  function hideHeaderPopup() {
    $('.header_popup').hide();
    $('.header_popup_link_glyph').html('&#x25BC;');
    $('.header_popup_link_text').text('#{t(:more)}');
    $(document).off('click', hideHeaderPopup);
  }
  $('.header_popup_link, .header_trophy_link').click(function (e) {
    e.stopPropagation();
    $('.header_popup').is(':visible') ? hideHeaderPopup() : showHeaderPopup(e.target);
  });
  $('.header_popup').click(function (e) {
    e.stopPropagation(); // Clicks inside the popup shouldn't close it
  });

  var popupLoaded = false;
  function lazyLoadPopup(trophiesClicked) {
    if (!popupLoaded) {
      popupLoaded = true;
      var script_level_id = #{@script_level.try(:level_id).to_json};
      $.ajax({
        url:'#{header_stats_path}',
        data: {
          script_id: #{@script.id},
          script_level_id: script_level_id
        }, success: function (result) {
          $('.header_popup_body').html(result);
          if (trophiesClicked) {
            jumpToTrophies();
          }
        }
      });
    } else if (trophiesClicked) {
      jumpToTrophies();
    }
  }
  function jumpToTrophies() {
    window.scrollTo(0, $('#trophies').offset().top);
  }
  //]]>
