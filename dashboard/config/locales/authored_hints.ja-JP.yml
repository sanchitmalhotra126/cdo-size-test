---
ja-JP:
  data:
    authored_hints:
      2-3 Artist 1 new:
        2-3_Artist_1_new_a: ブロックをつかって「100ピクセル前にすすむ」ことを教えて。そうすればぼくが線を引いてあげるよ。
        2-3_Artist_1_new_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使（つか）ってみて。
      2-3 Artist 11:
        2-3_Artist_11_a: '角度が、むずかしい？8回まがって360度ですね。360 ÷ 8 は、いくつでしょうか？ '
      2-3 Artist 12:
        2-3_Artist_12_a: 円は 360 度で、アーティストはループごとに1度まがるから、360 回くりかえして みてください。
      2-3 Artist 2 new:
        2-3_Artist_2_new_a: アーティストは、正しい方を向いていないです。せんを かく前に、アーティストの向きを かえてください。
      2-3 Artist 3new:
        2-3_Artist_3new_a: 100 - 70 は、いくつですか？それがぼうしの高さです！
        2-3_Artist_3new_b: アーティストは、正しい方を向いていないです。せんを かく前に、アーティストの向きを かえてください。
      2-3 Artist 4:
        2-3_Artist_4_a: 家を完成（かんせい）させるには、四角形をかいてください！
      2-3 Artist 6:
        2-3_Artist_6_a: '小さな角度を作るためには、正方形のときより大きくまがる必要（ひつよう）があります。   '
        2-3_Artist_6_b: 私はすでに右に向いているので、前に進（すす）むことから始（はじ）めるのがかんたんです。そして三角形を作るには左にまがります。
        2-3_Artist_6_c: 三角形の辺は、四角形の辺の長さと同じ、100ピクセルです！
      2-3 Artist 7:
        2-3_Artist_7_a: このパズルをとくいちばん早い方法（ほうほう）は、最初（さいしょ）の四角形をかいたあと、次の四角形をかくために、キャラクターを下向きにしておくことです。
      2-3 Artist 8:
        2-3_Artist_8_a: 200の長さを半分にする場合、ひとつひとつの四角形の幅（はば）は、何ピクセルにすれば良いでしょう？
      2-3 Artist 9 NEW:
        2-3_Artist_9_a: このダイヤモンドは、アーティストから見るとただの四角形に見えます。
      2-3 Artist Debugging 10:
        2-3_Artist_Debugging_10_a: コントロールパネルの幅（はば）を10ピクセル"広く"したい時は、あなたが変（か）えた数に、10"くわえる"ことをわすれないでください。
        2-3_Artist_Debugging_10_b: |-
          "いろいろやってみることが大切です！"

          まずはひとつの数字を変（か）えてみることから始（はじ）めましょう。

          どの数字でどう動（うご）きましたか・

          もし思ったよりも変わりすぎたなら、"はじめから"をクリックすれば、最初（さいしょ）からやり直すことができます。
      2-3 Artist Debugging 2:
        2-3_Artist_Debugging_2_a: 'ヒント: それぞれのヒゲの長さは、75ピクセルです。'
      2-3 Artist Debugging 3:
        2-3_Artist_Debugging_3_a: 回転（かいてん）の１つが、15度足りません。
        2-3_Artist_Debugging_3_b: もしプログラムがはやく動（うご）きすぎて何がおこっているのかわからなければ、スライダーを動かしてゆっくりにしてみてください。
      2-3 Artist Debugging 7:
        2-3_Artist_Debugging_7_a: もしアーティストがさいしょの線をかいた後に、後ろに動（うご）かしたり、とび下がるとどうなるでしょう？
      2-3 Artist Debugging 8:
        2-3_Artist_Debugging_8_a: |-
          わたしの形は何回くりかえしていましたか？

          その形は何回くりかえす"べき"でしょうか？

          プログラムのどこをかえればいいでしょうか？
      2-3 Artist Debugging 9:
        2-3_Artist_Debugging_9_a: アーティストはかきはじめる前に、左にもう60度回転（かいてん）しておく必要（ひつよう）があります！
        2-3_Artist_Debugging_9_b: 完全に回転するために、他のブロックを加える必要はありません。すでにある"左に向く"ブロックに60度を足すだけで良いのです！
      2-3 Artist Functions 1:
        2-3_Artist_Functions_1_a: その四角形にはそれぞれ100ピクセルの側面があります。これは、2番目の四角形を描く前に175ピクセル前に動かす必要があるという事です。
        2-3_Artist_Functions_1_b: メガネを作るために、重なり合う線を描いても大丈夫です。
      2-3 Artist Functions 11:
        2-3_Artist_Functions_11_a: その関数の中では、辺の数と長さだけでなく、アーティストが各辺の間で回転する角度も変えなければなりません。
      2-3 Artist Functions 12:
        2-3_Artist_Functions_12_a: さいしょにコードを実行して、追加する必要があるものを調べてみてください。
      2-3 Artist Functions 2:
        2-3_Artist_Functions_2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      2-3 Artist Functions 3:
        2-3_Artist_Functions_3_a: "**115 + 45 = 160**"
      2-3 Artist Functions 4:
        2-3_Artist_Functions_4_a: このデザインを完成させるためには、アーティストはそれぞれの四角形の間で120度回転する必要があります。
      2-3 Artist Loops New 11:
        2-3_Artist_Loops_New_11_a: |-
          前回といたパズルのコードは次のとおりです。

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">8</title>
                  <statement name="DO">
                    <block type="draw_colour" inline="true">
                      <value name="COLOUR">
                        <block type="colour_random"/>
                      </value>
                      <next>
                        <block type="draw_turn_by_constant_dropdown">
                          <title name="DIR">turnRight</title>
                          <title name="VALUE" config="45,60,90,120,180">45</title>
                          <next>
                            <block type="draw_move_by_constant">
                              <title name="DIR">moveForward</title>
                              <title name="VALUE">50</title>
                              <next>
                                <block type="draw_turn_by_constant_dropdown">
                                  <title name="DIR">turnLeft</title>
                                  <title name="VALUE" config="45,60,90,120,180">90</title>
                                  <next>
                                    <block type="draw_move_by_constant">
                                      <title name="DIR">moveForward</title>
                                      <title name="VALUE">50</title>
                                    </block>
                                  </next>
                                </block>
                              </next>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </statement>
                </block>
              </next>
            </block>
          </xml>
        2-3_Artist_Loops_New_11_b: 新たな回転は、ループの中のコードの**最後**におかなければなりません。
      2-3 Artist Loops New 12:
        2-3_Artist Loops_New_12_a: ダイヤモンドをかき始（はじ）める前に、アーティストは60度左に向く必要（ひつよう）があります。
        2-3_Artist Loops_New_12_b: アーティストが100ピクセル前にすすんだ後、するどくまがるためには、120度右に向く必要（ひつよう）があります。
        2-3_Artist Loops_New_12_c: アーティストがゆるやかにまがるときは、60度だけ右に向く必要（ひつよう）があります。
      2-3 Artist Loops New 13:
        2-3_Artist_Loops_New_13_a: |-
          それぞれのダイヤモンドの最後（さいご）で、アーティストは次のダイヤモンドを書くために右を向いています。

          そのため、次に始めるときに「左にまがる」ブロックを追加（ついか）する必要（ひつよう）はありません。
        2-3_Artist_Loops_New_13_b: |-
          それぞれのダイヤモンドを作るには、アーティストはつぎのことをする必要（ひつよう）があります。

          -   うごく
          -   右にまがる120度
          -   うごく
          -   右にまがる60度

          そしてそれぜんぶをもう一度やります！
      2-3 Artist Loops New 9:
        2-3_Artist_Loops_New_9_a: 書き始（はじ）める前にアーティストは右に45度まがる必要（ひつよう）があります。
        2-3_Artist_Loops_New_9_b: このVは正方形の半分です。正方形の半分をかくコードを考えてみよう。
      2-3 Artist Nested Loops 1:
        2-3_Artist_Nested_Loops_1_a: ループの中に灰色（はいいろ）のブロックをすべて入れることを覚（おぼ）えておいてください。
      2-3 Artist Nested Loops 3:
        2-3_Artist_Nested_Loops_3_a: 角度がわかりますか？12x30=360
        2-3_Artist_Nested_Loops_3_b: ループの中に灰色（はいいろ）のコードとまがるブロックをすべて入れることを覚（おぼ）えておいてください。
      2-3 Artist Nested Loops 4:
        2-3_Artist_Nested_Loops_3_a: 角度がわかりますか？12x30=360
      2-3 Artist Nested Loops 5:
        2-3_Artist_Nested_Loops_5_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
      2-3 Artist Nested Loops 7:
        2-3_Artist_Nested_Loops_7_a: |-
          それぞれのループでどれだけ曲（ま）がればよいでしょう？

          360/10って何ですか？
      2-3 Artist Nested Loops 9:
        2-3_Artist_Nested_Loops_9_a: |-
          正しい角度を知る手助（てだす）けが必要（ひつよう）ですか？

          **360 / 12 = 30**
      2-3 Bee Conditionals 14:
        2-3_Bee_Conditionals_14_a: ブロックのへらし方がむずかしいかな？赤い花をムラサキの花とまったく同じものとして考えてみよう！
        2-3_Bee_Conditionals_14_b: 赤い花がムラサキ色だったら、「くりかえし」ループを使（つか）ってコードをへらす方法（ほうほう）がわかったでしょうか？
        2-3_Bee_Conditionals_14_c: |-
          2つのかたまりに分けてみましょう。![](<https://images. code. org/895a52f3febff9edb83979f7861cf67a-image-1469640892331. png>)

          1.  花のミツをとるを3回

          2.  前にすすむを5回

          3.  花のミツかどうかしらべて、もしそうなら花のミツをとる

          4.  左にまがる

          5.  ハチミツをつくる

          6.  前にすすむを1回

          7.  ハチミツを2つつくる
      2-3 Bee Conditionals 15:
        2-3_Bee_Conditionals_15_a: 注意（ちゅうい）：ムラサキの花だけ0か1つの花のミツがあって、プログラムを実行（じっこう）するたびにそれが変（か）わります。
      2-3 Bee Conditionals 3:
        2-3_Bee_Conditionals_3_a: 前にすすむときに毎回ループを使い、ほかのループで花のミツをとり、そしてほかのループでハチミツを作ると、コードがもっとも短（みじか）くなります。
      2-3 Bee Conditionals 6:
        2-3_Bee_Conditionals_6_a: 注意（ちゅうい）：プログラムを実行（じっこう）するときに、ムラサキの花のミツは0から1つで変化（へんか）します！
      2-3 Bee Debugging 1:
        2-3_Bee_Debugging_1_a: まちがいのブロックを見つけて直した後、「くりかえし」ループを使ってもっとシンプルにできるパターンがわかりますか？
      2-3 Bee Debugging 2:
        2-3_Bee_Debugging_2_a: まちがいのブロックを見つけて直した後、「くりかえし」ループを使ってもっとシンプルにできるパターンがわかりますか？
      2-3 Bee Debugging 4:
        2-3_Bee_Debugging_4_a: ハチが おかしなことを しているところが ありますか？そのブロックをかえると、どうなりますか？
      2-3 Bee Functions 4:
        2-3_Bee_Functions_4_a: ループを関数といっしょ使う必要はありません。前にすすんで、関数を使って、そして前にすすんで、もう一度関数を使ってみてください。
      2-3 Bee Functions 6:
        2-3_Bee_Functions_6_a: ループを関数といっしょ使う必要はありません。前にすすんで、関数を使って、そして前にすすんで、もう一度関数を使ってみてください。
      2-3 Bee Functions 8:
        2-3_Bee_Functions_8_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      2-3 Bee Functions 9:
        2-3_Bee_Functions_8_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
        2-3_Bee_Functions_8_b: |-
          緑の関数ブロックの中にコードを書くことを覚えておいてください。

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      2-3 Bee Loops 2:
        2-3_Bee_Loops_2_a: くりかえしの中には４つのブロックが必要（ひつよう）です。
      2-3 Bee Loops 3:
        2-3_Bee_Loops_3_a: くりかえしの中には6ブロックが必要（ひつよう）です。
      2-3 Bee Loops 3B:
        2-3_Bee_Loops_3B_a: 2つの「くりかえし」ループが必要（ひつよう）になります。
      2-3 Bee Loops 4:
        2-3_Bee_Loops_4_a: ループの中には5つのブロックが必要（ひつよう）です。
      2-3 Bee Loops 4A:
        2-3_Bee_Loops_4A_a: 最初（さいしょ）にハチの向（む）きをかえよう。
        2-3_Bee_Loops_4A_b: プログラムを終わらせるために、ループの外に プログラムを たしてください。
        2-3_Bee_Loops_4A_c: まだループを見つけられない場合は、さいしょループをつかわずコーディングしてから、さいごに何を組み合わせると「くりかえし」のループにできるかをチェックしてみよう。
      2-3 Bee Loops 5:
        2-3_Bee_Loops_5_a: すぐに 「くりかえし」の中にブロックを入れられなかった場合は、それぞれの動きをコーディングしてパターンをさがすことからはじめましょう。
      2-3 Bee Loops 6:
        2-3_Bee_Loops_6_a: なにを「くりかえし」の中に入れればいいかわからない時は、ブロックを1つずつ、ふやしたりへらしたりして、いいパターンをさがしてみよう。
        2-3_Bee_Loops_6_b: できあがった時には「くりかえし」の中に6つのブロックがあるはずです。
      2-3 Bee Loops 7:
        2-3_Bee_Loops_7_a: 最初（さいしょ）にハチの向（む）きをかえよう。
        2-3_Bee_Loops_7_b: 'さいしょからかんぺきなループを作るのがむずかしい場合、ループをつかわずにコーディングしてから、パターンをさがしてください。  '
      2-3 Maze 1:
        2-3_Maze_1_a: "「前にすすむ」ブロックをつかうには、ブロックをドラッグして「実行（じっこう）した時」ブロックにくっつけましょう。"
      2-3 Maze 16:
        2-3_Maze_16_a: くりかえしのパターンがわかりにくいときは、さいしょにぜんぶコーディングしてみると、何がくりかえしできるのかがわかります。
        2-3_Maze_16_b: |-
          たくさんのブロックを「くりかえし」の中に入れるには、まず「くりかえし」をワークスペースの中にドラッグします。そしてその「くりかえし」の中に、たくさんのブロックの " さいしょのブロック " をドラッグします。

          それをすべて「実行（じっこう）した時」にくっつけ直してください。
      2-3 Maze 6:
        2-3_Maze_6_a: このパズルの解き方は二通りあるよ。
      2-3 Maze Loops 17:
        2-3_Maze_Loops_17_a: くりかえしのパターンがわかりにくいときは、さいしょにぜんぶコーディングしてみると、何がくりかえしできるのかがわかります。
        2-3_Maze_Loops_17_b: さいしょのコードをぜんぶ消しちゃった？「最初からやりなおす」をクリックすると、元にもどせるよ。
      2-3 Maze Loops 18:
        2-3_Maze_Loops_18_a: くりかえしのパターンがわかりにくいときは、さいしょにぜんぶコーディングしてみると、何がくりかえしできるのかがわかります。
      2-3 Maze Loops 19:
        2-3_Maze_Loops_19_a: お手上げの場合、さいしょにループなしでコードを書いて、パターンをさがしてみてください。
        2-3_Maze_Loops_19_b: ループの中にべつのループを入れると、ブロック数をへらせるよ。
      2-3 Maze Loops 20:
        2-3_Maze_Loops_20_a: ループをつかえる場所（ばしょ）を見つけるために、この迷路（めいろ）の階段（かいだん）パターンをさがしてください。
      2-3 Maze Loops 21:
        2-3_Maze_Loops_21_a: 階段（かいだん）パターンが見つからなかった場合は、通り道をゆびでなぞってみてください。
      4-5 Artist 11:
        4-5_Artist_11_a: ループ内で、各線を引いた後にアーティストが前後にジャンプすることをたしかめてください。
      4-5 Artist 3:
        4-5_Artist_3_a: |-
          花だんの周囲の長さは600ピクセルで、辺の2つが200ピクセルの長さの場合、短辺の長さの合計は以下になります。

          \*\* 600 - 200 - 200 = 200\*\*

          つまり、短辺の合計は200ピクセルになります。

          **200/2は何ですか？**
        4-5_Artist_3_b: "「くりかえし」ループをどこへ置けばいいかすぐにわからない場合は、ループを使わずに作り上げてからパターンをさがしてください。"
      4-5 Artist 4:
        4-5_Artist_4_a: |-
          円は360度です！

          これが円を作り上げるためにこのコードをくりかえす必要がある回数です (1回につき1度回転させる)。
      4-5 Artist 5:
        4-5_Artist_5_a: |-
          トライアンドエラーはすばらしい方法ですが、90度の角度を1/3に等分して問題をとくこともできます。

          **90 / 3 = \_\_\_\_\_**
      4-5 Artist 7:
        4-5_Artist_7_a: 'どの角度が一番小さい？アーティストはどちらの方向を向いて立っている？ '
      4-5 Artist 8:
        4-5_Artist_8_a: "長辺はそれぞれ240ピクセルです。つまり、2つの短辺は合計する必要があります。\n\n**800 - 240 -
          240 = 320**\n\n**320/2**は何ですか？ "
        4-5_Artist_8_b: |-
          この絵は2つの方法で作れます！

          -   長さ**120**、高さ**160**の2つの長方形を、重なり合う辺でかきます。

          -   長さ**240**、高さ**160**の長方形を1つかいてから、真ん中に線を追加します。
      4-5 Artist 9:
        4-5_Artist_9_a: '三角形が正三角形の場合、すべての辺とすべての角度は同じです。  '
        4-5_Artist_9_b: 同じサイズの3つの三角形をかく必要があるでしょう。それぞれの三角形をかいた後、新しい位置にジャンプすることをわすれないでください。
      4-5 Artist Assessment 1:
        4-5_Artist_Assessment_1_a: このパズルを完成させるには、外がわの三角形をかくだけです。
      4-5 Artist Patterns 11:
        4-5_Artist_Patterns_11_a: 円をかくには 360 度動く必要があります。1 回のループで 3 度動くとき、円全体をかくには何回ループすればよいでしょう。
      4-5 Artist Patterns 2:
        4-5_Artist_Patterns_2_a: 正方形の一辺は 20 ピクセルの長さですから、次の正方形を書く前に 20 ピクセル ジャンプします。
      4-5 Artist Patterns 3:
        4-5_Artist_Patterns_3_a: 4ブロックでひとつのセットです。３つのうちの、どれかが正しい答えです。
        4-5_Artist_Patterns_3_b: ぐちゃぐちゃになったら、「最初からやりなおす」で、やりなおしてください。
      4-5 Artist Patterns 5:
        4-5_Artist_Patterns_5_a: ひとつのダイヤモンドをかき終えたとき、アーティストは進むべき方向と、180度反対を向いています。
      4-5 Bee Conditionals 6:
        4-5 Bee Conditionals 6_a: ワークスペース上のブロックだけを使ってこのパズルが解けるかな？ どんな順番で並べればいいかな？
        4-5 Bee Conditionals 6_b: このパズルをとくためには、花のミツが**0**つ以上あることを、**3**回以上調べていることをチェックしてください。
      4-5 Bee Debugging 1:
        4-5_Bee_Debugging_1_a: 何がまちがっているのかわからない場合は、まずは実行してみて、どこがおかしいのか調べてみてください。
      4-5 Bee Nested Loops Rows:
        4-5_Bee_Nested_Loops_Rows_a: まずはまっすぐ前にすすんで、数回左に曲がって、またまっすぐ前にすすむようにして、パズルを完成させてみましょう。
      4-5 Maze 10:
        4-5_Maze_10_a: |-
          ループを使ってパズルをすぐにとく方法がわからない場合は、さいしょにどのようにループを使えばいいかを考えてから、パターンをさがしてください。

          コードを短くするために、何を「くりかえし」する必要がありますか？
      4-5 Maze 4:
        4-5_Maze_4_a: どこに「くりかえし」をおけばいいか わからなかったら、くりかえしを使わずにプログラムをかんがえて、パターンを見つけてください。
      4-5 Maze 5:
        4-5_Maze_5_a: 2ステップ以上「すすむ」必要があるときはいつでも、「くりかえし」ループを使ってみてください。
        4-5_Maze_5_b: あなたはパズルの中で1つ以上の「くりかえし」ループを使うことができます。
      4-5 Maze 6:
        4-5_Maze_6_a: 指で道をたどってみてください。それが最短の道でいいかな？
      4-5 Maze 7:
        4-5_Maze_7_a: |-
          **コードをできるだけ小さくしたい？**

          ブロックのパターンをさがしてください。くりかえしできるものがあれば、かわりにループをつけてみてください。
      4-5 Nested Loops 12:
        4-5_Nested_Loops_12_a: 360÷36＝？
      4-5 Nested Loops 6:
        4-5_Nested_Loops_6_a: |-
          三角形のループの後で まがる ことを忘れないでください。

          360度を6つの三角形でループします。

          **360÷6＝？**
      4-5 Nested Loops 7:
        4-5_Nested_Loops_7_a: |-
          このデザインを10回のくりかえしで、一周360度ぶん作ります。

          **360÷10＝?**
      4-5 Nested Loops 8:
        4-5_Nested_Loops_8_a: |-
          さいしょからある形を360度にわたって6回くりかえします。

          **360÷6＝？**
      4-5 While Loops 8:
        4-5_While_Loops_8_a: どちらも「以下の間くりかえし（while loop）」を使ってみてください。
      Course 4 Artist 11:
        Course_4_Artist_11_a: '前にうごく30ピクセル、右にまがる60度を使って、六角形の半分を書いてみてね。  '
        Course_4_Artist_11_b: '前にうごく80ピクセル、右にまがる80度を使って、三角形の3分の2を書いてみてね。 '
      Course 4 Artist 12:
        Course_4_Artist_12_b: 'それぞれの形は、前のパズルとほとんど同じですが、6角形を少し大きくします。 '
        Course_4_Artist_12_c: "1.  始めの3回は60ピクセルの長さで、60 度まがります\n2.  次の 2 回は 80 ピクセルの長さで、120
          度まがります "
      Course 4 Artist Functions challenge:
        Course_4_Artist_Functions_challenge_a: どの関数を使えばいいか考えて、ひとつ決めてください。
        Course_4_Artist_Functions_challenge_b: "「カウントする」ブロックを置いて、その中に「 `counter` 回くりかえす」ブロックを入れ、入れ子のループにします。"
        Course_4_Artist_Functions_challenge_c: ひとつ正方形を書いたら、20ピクセル前にジャンプします。
        Course_4_Artist_Functions_challenge_d: 正方形を `counter` 回かいたら、左に90度まがります。
      Course 4 SCF 1a:
        Course_4_SCF_1a_a: ステージ16で作った関数をおぼえていますか？
        Course_4_SCF_1a_c: "「もし左に道があるなら」「もし右にみちがあるなら」を使って、左右それぞれの花のミツをとります。花のミツは、いつも3つ先にあるはずです。花のミツの数は、`counter`
          の数と同じですね。"
      Course 4 SCF 1b:
        Course_4_SCF_1b_a: ハチミツの数は全て同じですね。
        Course_4_SCF_1b_c: |-
          ハチが動く回数を決めるために、「カウントする」ブロックを使います。
          2から４まで１ずつカウントしてみて下さい。
      Course 4 SCFL 1:
        Course_4_SCFL_1_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        Course_4_SCFL_1_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。 `counter`
          変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        Course_4_SCFL_1_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。 `counter`
          変数を上手く使って、ハチミツを作ろう。
      Course 4 SCFL 1a:
        Course_4_SCFL_1a_b: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
      Course 4 SCFL 1b:
        Course_4_SCFL_1b_b: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
      Course 4 SCFL 2:
        Course_4_SCFL_2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        Course_4_SCFL_2_b: |-
          「カウントする」くりかえしの中では、さいしょに「 'counter`」回、花のミツをとります。次に、「`counter`× 3」回、ハチミツを作ります。そして、「 2 ^`counter\` 」回、花のミツをとります。
          （ ^ は、べき乗を計算します）
        Course_4_SCFL_2_c: "`counter` 変数を上手く使ってね。"
      Course 4 SCFL 3:
        Course_4_SCFL_3_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        Course_4_SCFL_3_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        Course_4_SCFL_3_c: 四角形を一つ書いたら、後ろにジャンプします。
      Course 4 SCFL 4:
        Course_4_SCFL_4_a: ペンの太さは１です。色は、赤が `counter`、みどりが 255 - `counter`、青が 255 、これらをまぜた色にします。
        Course_4_SCFL_4_b: 図形は四角形の組み合わせです。一番小さい四角形の一辺は、5ピクセル、一番大きい四角形は200ピクセル、5ピクセルずつ大きくしていきます。
        Course_4_SCFL_4_c: 四角形を一つ書いたら、左に15度まがり、つぎの四角形を書くようにします。
      Course 4 SCFL 6:
        Course_4_SCFL_6_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter` で、これらをまぜた色にしてください。
        Course_4_SCFL_6_b: 色を かえたら、 `counter`ピクセルの線を引き、右に80度まがります。
        Course_4_SCFL_6_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
      Course 4 SCFL 7:
        Course_4_SCFL_7_a: |-
          「アルファ値は20」ブロックを、はじめに一度だけ実行するようにして下さい。
          色を かえる時は、赤が `counter`、みどりが 255 - `counter`、青が 255 、これらをまぜた色にします。
        Course_4_SCFL_7_b: "「カウントする」ブロックを2つ使います。一つは、5から200まで2ずつ、もう一つは、200から5まで2ずつ、として下さい。 "
        Course_4_SCFL_7_c: |-
          さいしょの くりかえしの中では、「太さは `counter`」とし、色を かえてから 5
           ピクセルの長さの線を引き、左に「360 ÷ `counter` 」度まがります。
          つぎの くりかえしの中では、「太さは `counter`」とし、色を かえてから 5 ピクセルの長さの線を引き、右に「360 ÷ `counter` 」度まがります。
        Course_4_SCFL_7_d: ２つのくりかえしの間では、左に 225 度まがります。
      Course 4 SCV 1:
        Course_4_SCV_1_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく 500
          ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        Course_4_SCV_1_b: 五角形を一つ書いたら、「左にまがる360 ÷ sides」で向きを変えよう。これを sides 回くりかえすと、五角形が五つ書けるはずだよ。
        Course_4_SCV_1_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
      Course 4 SCV 2:
        Course_4_SCV_2_b: "「くりかえす」ブロックを3回使います。くりかえす回数は sides 回で、全部同じです。 "
        Course_4_SCV_2_c: 十角形を一つ書いたら、左に「 360 ÷ sides 」度まがって、それから、次の十角形を書きます。
        Course_4_SCV_2_d: 十角形を10コ書いたら、「length ÷ sides」ピクセル ジャンプして、右に「360 ÷ sides」度まがります。
      Course 4 SCV 4:
        Course_4_SCV_4_c: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
      Course 4 SCV 6:
        Course_4_SCV_6_b: 出来るだけ、変数を使ってプログラムを書いて下さい。
        Course_4_SCV_6_c: ギザギザ線の色は、はじめは 赤 0、みどり 175、青 200を まぜた色です。次は 赤 100、みどり 50、青
          150を まぜた色です。
        Course_4_SCV_6_d: 'ジグザグの角度は、72度です。 '
      CourseD_Dance_Party_01:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   画面にダンサーが表示されていることをたしかめてください。

          _このレベルは4小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*
          \*他の曲を選んで再生してみましょう。
          \*ムースに似た別のものを選んでみましょう！
          \*ダンサーの名前を変更しましょう。
      CourseD_Dance_Party_02:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**
          _4小節後にダンサーを新しい動きに切り替える必要があります_

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_03:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*6小節後、ダンサーは4小節後とは違うダンスをする必要があります。

          _このレベルは12小節で終わります。_
      CourseD_Dance_Party_04:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*7小節目のどこかで、背景エフェクトを変更する必要があります。

          _このレベルは10小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"小節"</title></block></xml> イベントの下に新しいブロックをつないで、曲のあいだのいくつかのポイントで背景エフェクトを変更してみましょう。
      CourseD_Dance_Party_06:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも 2 人のダンサーがいなければなりません。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*3人めのダンサー（または好きなだけの人数！）を追加してください
          \*すべてのダンサーが、曲の中のそれぞれ違うポイントで、違う動きをするようにしてください。
      CourseD_Dance_Party_08:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*2人のダンサーのおおきさは100以外にしてください。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*その他のプロパティ（幅、高さ、回転など）を変えて実験してみましょう
      CourseD_Dance_Party_09:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも1人のダンサーの色合いを変更してください。

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_10:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   2人以上のダンサーのプロパティを変更しなければなりません。

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_11:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_11_5:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      CourseD_Dance_Party_11b:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*\`左矢印キーが押されたとき’のブロックを使って、左矢印キーを押したらロボットが踊るようにしましょう。

          _このレベルは8小節で終わります。_
      CourseE_HOC 2018 Level_10:
        voyage_aquatic_10a: "**海のランタン** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)
          が見えますか?海のランタンと条件をどう組み合わせれば、海底遺跡を通りぬけられるでしょうか?"
      CourseE_HOC 2018 Level_9b:
        voyage_aquatic_9a: 赤色と青色のサンゴブロックが見えますか？それぞれ左と右に曲がる道しるべにしてサンゴ礁を進みます。
      Dance_Party_01:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   画面にダンサーが表示されていることをたしかめてください。

          _このレベルは4小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*
          \*他の曲を選んで再生してみましょう。
          \*ムースに似た別のものを選んでみましょう！
          \*ダンサーの名前を変更しましょう。
      Dance_Party_02:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**
          _4小節後にダンサーを新しい動きに切り替える必要があります_

          _このレベルは8小節で終わります。_
      Dance_Party_03:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*6小節後、ダンサーは4小節後とは違うダンスをする必要があります。

          _このレベルは12小節で終わります。_
      Dance_Party_04:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*7小節目のどこかで、背景エフェクトを変更する必要があります。

          _このレベルは10小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">???</title><title name="UNIT">"小節"</title></block></xml> イベントの下に新しいブロックをつないで、曲のあいだのいくつかのポイントで背景エフェクトを変更してみましょう。
      Dance_Party_06:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも 2 人のダンサーがいなければなりません。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*3人めのダンサー（または好きなだけの人数！）を追加してください
          \*すべてのダンサーが、曲の中のそれぞれ違うポイントで、違う動きをするようにしてください。
      Dance_Party_08:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*2人のダンサーのおおきさは100以外にしてください。

          _このレベルは6小節で終わります。_
        challenges: |-
          \*\* 自由選択のチャレンジ \*\*

          \*その他のプロパティ（幅、高さ、回転など）を変えて実験してみましょう
      Dance_Party_09:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   少なくとも1人のダンサーの色合いを変更してください。

          _このレベルは8小節で終わります。_
      Dance_Party_10:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          -   2人以上のダンサーのプロパティを変更しなければなりません。

          _このレベルは8小節で終わります。_
      Dance_Party_11:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      Dance_Party_11_5:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*クリエイティブにやってみて！

          _このレベルは8小節で終わります。_
      Dance_Party_11b:
        validation: |-
          **どうしたらこのレベルをクリアできますか？**

          \*\`左矢印キーが押されたとき’のブロックを使って、左矢印キーを押したらロボットが踊るようにしましょう。

          _このレベルは8小節で終わります。_
      Function intro Ryan:
        Function_intro_Ryan_b: 関数を正しく呼び出すと、あなたはこの道を行くことになります...
        Function_intro_Ryan_a: 関数はプログラム内で繰り返し呼び出すことができます!  関数を 2 回呼び出して、このパズルをクリアしましょう。
      Function intro Ryan_2019:
        Function_intro_Ryan_b: 関数を正しく呼び出すと、あなたはこの道を行くことになります...
        Function_intro_Ryan_a: 関数はプログラム内で繰り返し呼び出すことができます!  関数を 2 回呼び出して、このパズルをクリアしましょう。
      HOC 2018 Level_10:
        voyage_aquatic_10a: "**海のランタン** ![](https://images.code.org/471b33234222ddffb463aeb65de6b371-image-1539183353423.net-resizeimage.png)
          が見えますか?海のランタンと条件をどう組み合わせれば、海底遺跡を通りぬけられるでしょうか?"
      HOC 2018 Level_9b:
        voyage_aquatic_9a: 赤色と青色のサンゴブロックが見えますか？それぞれ左と右に曲がる道しるべにしてサンゴ礁を進みます。
      MC_HOC_2017_01_RETRY:
        MC_HOC_2017_01_RETRY_a: ツールボックスの「前進」を 1 つだけワークスペースにドラッグして、「実行した時」ブロックの下に置きましょう。
        MC_HOC_2017_01_RETRY_b: Agent のコードを実行するには、「実行」をクリックする必要があります。
        MC_HOC_2017_01_RETRY_c: Agent がすべてのコードを実行したら、矢印キーでプレイヤーを動かせるようになります!
      MC_HOC_2017_01_RETRY_2019:
        MC_HOC_2017_01_RETRY_a: ツールボックスの「前進」を 1 つだけワークスペースにドラッグして、「実行した時」ブロックの下に置きましょう。
        MC_HOC_2017_01_RETRY_b: Agent のコードを実行するには、「実行」をクリックする必要があります。
        MC_HOC_2017_01_RETRY_c: Agent がすべてのコードを実行したら、矢印キーでプレイヤーを動かせるようになります!
      MC_HOC_2017_02_Cole:
        MC_HOC_2017_02_Cole_a: Agent を前に 2 マス進ませて重量感知板の上に立たせましょう。  それによってドアが開き、プレイヤーが通れるようになります。
        MC_HOC_2017_02_Cole_b: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_02_Cole_c: Agent がドアを開けたら、矢印キーでプレイヤーを外に出しましょう!
      MC_HOC_2017_02_Cole_2019:
        MC_HOC_2017_02_Cole_a: Agent を前に 2 マス進ませて重量感知板の上に立たせましょう。  それによってドアが開き、プレイヤーが通れるようになります。
        MC_HOC_2017_02_Cole_b: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_02_Cole_c: Agent がドアを開けたら、矢印キーでプレイヤーを外に出しましょう!
      MC_HOC_2017_03_Cole:
        MC_HOC_2017_03_Cole_a: Agent が重量感知板の上に立つと、矢印キーでプレイヤーをコンパスに向かって動かせるようになります!
        MC_HOC_2017_03_Cole_b: コードが少し長く感じますか?  「繰り返す」ループを使ってコードをもっと短くできないか調べてみましょう!
      MC_HOC_2017_03_Cole_2019:
        MC_HOC_2017_03_Cole_a: Agent が重量感知板の上に立つと、矢印キーでプレイヤーをコンパスに向かって動かせるようになります!
        MC_HOC_2017_03_Cole_b: コードが少し長く感じますか?  「繰り返す」ループを使ってコードをもっと短くできないか調べてみましょう!
      MC_HOC_2017_04POINT5_RYAN:
        MC_HOC_2017_04POINT5_RYAN_b: Agent の向きを変えるには「右を向く」ブロックを使います
        MC_HOC_2017_04POINT5_RYAN_a: Agent を 1 つ目の重量感知板に立たせれば、アレックス (スティーブ) が斧にたどり着けます。
      MC_HOC_2017_04POINT5_RYAN_2019:
        MC_HOC_2017_04POINT5_RYAN_b: Agent の向きを変えるには「右を向く」ブロックを使います
        MC_HOC_2017_04POINT5_RYAN_a: Agent を 1 つ目の重量感知板に立たせれば、アレックス (スティーブ) が斧にたどり着けます。
      MC_HOC_2017_04_Cole:
        MC_HOC_2017_04_Cole_a: Agent は 7 回 "前進する" 必要があります。こうするためには、「繰り返し」ループをどのように使えばよいでしょうか?
        MC_HOC_2017_04_Cole_c: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_04_Cole_b: Agent が重量感知板の上に立つとドアが開き、プレイヤーが通れるようになります。
      MC_HOC_2017_04_Cole_2019:
        MC_HOC_2017_04_Cole_a: Agent は 7 回 "前進する" 必要があります。こうするためには、「繰り返し」ループをどのように使えばよいでしょうか?
        MC_HOC_2017_04_Cole_c: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_04_Cole_b: Agent が重量感知板の上に立つとドアが開き、プレイヤーが通れるようになります。
      MC_HOC_2017_05_Cole:
        MC_HOC_2017_05_Cole_a: ループの中にコードをいくつも入れられるのは知っていましたか?  「繰り返す」の中に「木の板を置く」 **と**
          「前進」を入れて、このパズルをクリアしましょう。
        MC_HOC_2017_05_Cole_b: Agentに川を渡らせて、あなたが通れる橋をかけさせます。
      MC_HOC_2017_05_Cole_2019:
        MC_HOC_2017_05_Cole_a: ループの中にコードをいくつも入れられるのは知っていましたか?  「繰り返す」の中に「木の板を置く」 **と**
          「前進」を入れて、このパズルをクリアしましょう。
        MC_HOC_2017_05_Cole_b: Agentに川を渡らせて、あなたが通れる橋をかけさせます。
      MC_HOC_2017_06_Cole:
        MC_HOC_2017_06_Cole_a: このループを何回実行しますか?  何回実行する ”べき” ですか?
        MC_HOC_2017_06_Cole_b: Agentが水を上を渡りきる橋をかけられるよう手助けしてください！
      MC_HOC_2017_06_Cole_2019:
        MC_HOC_2017_06_Cole_a: このループを何回実行しますか?  何回実行する ”べき” ですか?
        MC_HOC_2017_06_Cole_b: Agentが水を上を渡りきる橋をかけられるよう手助けしてください！
      MC_HOC_2017_07_Cole:
        MC_HOC_2017_07_Cole_c: Agentにさせることは、トロッコまでの道を通れるようにすることです。
        MC_HOC_2017_07_Cole_a: このパズルをクリアするために、「通り道を作る」関数のしくみを学んで、ツールボックスにある緑色の小さな「通り道を作る」ブロックを使って、その関数を必要なだけ呼び出します。
        MC_HOC_2017_07_Cole_b: この関数ブロックをツールボックスにある他のブロックと組み合わせて、パズルをクリアしてみましょう。
      MC_HOC_2017_07_Cole_2019:
        MC_HOC_2017_07_Cole_c: Agentにさせることは、トロッコまでの道を通れるようにすることです。
        MC_HOC_2017_07_Cole_a: このパズルをクリアするために、「通り道を作る」関数のしくみを学んで、ツールボックスにある緑色の小さな「通り道を作る」ブロックを使って、その関数を必要なだけ呼び出します。
        MC_HOC_2017_07_Cole_b: この関数ブロックをツールボックスにある他のブロックと組み合わせて、パズルをクリアしてみましょう。
      MC_HOC_2017_10_RETRY:
        MC_HOC_2017_10_Cole_b: どこへ行ったらいいかわからない？点線を見つけられるかみてみて！
        MC_HOC_2017_10_Cole_a: 関数を使って、このパズルをもっと簡単にクリアしてみましょう!
      MC_HOC_2017_10_RETRY_2019:
        MC_HOC_2017_10_Cole_b: どこへ行ったらいいかわからない？点線を見つけられるかみてみて！
        MC_HOC_2017_10_Cole_a: 関数を使って、このパズルをもっと簡単にクリアしてみましょう!
      MC_HOC_2017_Ali:
        MC_HOC_2017_08_RY_a: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_08_RY_b: このパズルをクリアするやり方はいくつもあります。  いろいろトライしてみましょう!
        MC_HOC_2017_08_RY_c: 溶岩を超える下の点線の道を試してみてください。
      MC_HOC_2017_Ali_2019:
        MC_HOC_2017_08_RY_a: "「実行」を押しましょう! \nコードは間違いがあっても実行できます。何度もコードを実行/リセットして、間違っているところを見つけましょう。"
        MC_HOC_2017_08_RY_b: このパズルをクリアするやり方はいくつもあります。  いろいろトライしてみましょう!
        MC_HOC_2017_08_RY_c: 溶岩を超える下の点線の道を試してみてください。
      MC_HOC_2017_FP20x20:
        MC_HOC_2017_13_Cole_a: Agent に橋を作らせて、アレックス (スティーブ) がマップのはじを歩き回れるようにしましょう。
      MC_HOC_2017_FP20x20_2019:
        MC_HOC_2017_13_Cole_a: Agent に橋を作らせて、アレックス (スティーブ) がマップのはじを歩き回れるようにしましょう。
      NEW Course 4 Artist Functions 13:
        NEW_Course_4_Artist_Functions_13_a: "`draw a line of squares` 関数が、正方形を12コ書くように編集しましょう。"
        NEW_Course_4_Artist_Functions_13_c: 星を書くには、144度で曲がってみて下さい。
      NEW Course 4 Artist Params 14:
        NEW_Course_4_Artist_Params_14_a: 何回やっても、だいじょうぶ。いろいろとパラメータをかえて ためしてね。
      course1_artist_loops_challenge1:
        courseA_artist_loops_challenge1_a: |-
          「くりかえし」をつかうと、こうやって家が作れる。ほかのブロックをつかって「くりかえし」のしくみをかくにんしてみよう。

          ![](https://images.code.org/1581a2f599b501103064fc9864aa964d-image-1491863694560.png)

          じぶんの家を作ってみよう。![](https://images.code.org/53090194cea5dbf35ce9e35205156f5d-image-1491864793265.png) をおすと、いくつかのアイディアをあげます！
      course1_artist_loops_challenge2:
        harvey_tictactoe: "「ジャンプ」ブロックをつかうと、線をかかずに うごけるよ。"
      course1_artist_loops_challenge3:
        courseA_artist_loops_challenge2_a: <xml>  <block type="simple_move_up_left"/></xml>
          をつかうと、北西に線が引けるよ！
        courseA_artist_loops_challenge2_b: 1つめの家ができたら、ジャンプしてつぎの家を作ろう！
        courseA_artist_loops_challenge2_c: このもんだいをとくには、ループ内にたくさんのブロックがいるよ。
      course1_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: うまくうごかなかったところの「くりかえし」の数をかえてみよう！
        courseA_collector_loops_challenge1_b: １かいだけ やるときは、くりかえしは いりません。
        courseA_collector_loops_challenge1_c: どうくつの右はしには6つのジェムがあるけど、5回うごいてあつめるだけでいいよね。
          なんでかわかるかな？
      course1_collector_loops_challenge2:
        courseA_collector_loops_challenge2_b: 1つの ![](<https://images.code.org/803e9ee8b5bc9311a26edf955cd3c03f-image-1491001702274.07.34
          PM.png>) ブロックだけでクリアできるよ。
        courseA_collector_loops_challenge2_a: |-
          ジェムを手に入れた後、道をもどってから南に行くといいよ。

          \[] [0]
      course1_collector_loops_challenge3:
        courseB_collector_loops_challenge1_b: |-
          「南にうごく」「ジェムをとる」を「くりかえし」でループさせるところからはじめよう。

          <xml>
            <block type="maze_moveSouth"/><next>
            <block type="collector_collect"/></next>
            </xml>
        courseB_collector_loops_challenge1_a: |-
          北ブロックのパターンは、南ブロックのパターンと 少しちがうよ。

          <xml>
            <block type="collector_collect"/><next>
            <block type="maze_moveNorth"/></next>next>
            </xml>
        courseB_collector_loops_challenge1_c: "たてほうこうのジェムをぜんぶひろったら、東ブロックで2歩すすむ、をくりかえそう。\n\n<xml>\n
          \ <block type=\"maze_moveEast\"/><next>\n  <block type=\"maze_moveEast\"/></next>next>\n
          \ </xml>\n\nたった14ブロックでこれができます。 ヒントをクリックすると答えが見れます。 "
      course1_maze_debugging_challenge1:
        courseA_maze_seq_challenge1_a: 遠くまで歩きすぎると バクダンに ぶつかっちゃうよ。
      course1_maze_debugging_challenge2:
        courseB_maze_seq_challenge2_b: ブロックをならべかえて、まん中の道をすすんでください。
      course1_maze_seq_challenge1:
        courseA_maze_seq_challenge2_a: なんこ いけば いいか、ゆびを つかって かぞえて みよう！
      course1_maze_seq_challenge2:
        courseB_maze_seq_challenge1_b: まずは西へいこう。
      course1_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml> で とりをクリックしたとき、ペンギンを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_b: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml> で ペンギンをクリックしたとき、おばけを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_c: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml> で おばけをクリックしたとき、かいじゅうを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_d: "モンスターをクリックしたとき、スピッフ ロボットを表示させる!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n
          \ </block></xml>"
        courseA_playlab_events_challenge1_e: "一番さいごは、ロボットをクリックすると、まほうつかいが見つかります！\n\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n
          \ </block></xml>"
      course1_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml> で とりをしゃべらせることができます。"
        courseA_playlab_events_challenge2_b: |-
          おとをならすには、<xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                    <block type="studio_playSound">
                      <title name="SOUND">winpoint</title>
                    </block>
                  </next>

            </block></xml> をつかいます。
        courseA_playlab_events_challenge2_c: |-
          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml> をつかえば、かおをかえることができます。
      course2_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: 入れ子のループを作って、4つの八角形をかくことから始めましょう。
          八角形は45度回転してかきます。八角形をかいたら、ジャンプして、90度回転しましょう。
        courseD_artist_nestedLoops_challenge1_b: 入れ子のループの中に三角形をかくコードを追加しましょう。そして三角形に120度回転するコードを追加しましょう。
        courseD_artist_nestedLoops_challenge1_c: |-
          以下の入れ子のループを使ってみましょう。

          -   8回のくりかえし
              -   八角形をかく
              -   三角形をかく
              -   50ピクセル先にジャンプ
              -   90度まがる
      course2_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: 正八角形をかくには、45度まがるを８つ使います。
        courseD_artist_nestedLoops_challenge2_b: 正方形をかくには、90度まがるを4つ使います。
      course2_artist_prog_challenge1:
        courseC_artist_prog_challenge1_a: '長方形のはばは200ピクセル、高さは100ピクセルです。 '
      course2_artist_prog_challenge2:
        courseC_artist_prog_challenge2_a: "コマンドを「くりかえし」ブロックの中におくと、コマンドをくりかえし実行（じっこう）することができます。ためしてみよう！\n\n<xml>\n
          \ \n          <block type=\"controls_repeat\">\n            <title name=\"TIMES\">6</title>\n
          \           <statement name=\"DO\">\n              <block type=\"draw_move_by_constant_dropdown\">\n
          \               <title name=\"DIR\">moveForward</title>\n                <title
          name=\"VALUE\" config=\"25,50,100,150,200,300\">25</title>\n                <next>\n
          \                 <block type=\"jump_by_constant_dropdown\">\n                    <title
          name=\"DIR\">jumpForward</title>\n                    <title name=\"VALUE\"
          config=\"25,50,100,150,200,300\">25</title>\n                  </block>\n
          \               </next>\n              </block>\n              </statement></block></xml>"
      course2_bee_conditionals_challenge1:
        courseD_bee_conditionals_challenge1_a: |-
          木にぶつかることなくすべての花とハチのすを通る道を見つけることができるかな？ うずまきをイメージしてみて。

          ヒント：左に1回もまがらずにできるよ。
      course2_bee_conditionals_challenge2:
        courseD_bee_conditionals_challenge1_b: |-
          「花のミツが0より多い間」の中のコードは、「もし花で」ブロックと同じように、花にミツがある場合にのみ実行（じっこう）されます。ちがいは、花のミツがなくなるまで中のコードをくりかえし実行されることです。このパターンをためしてください：

          <xml>  <block type="bee_whileNectarAmount">
              <title name="ARG1">nectarRemaining</title>
              <title name="OP">></title>
              <title name="ARG2">0</title>                    <statement name="DO">
                                <block type="maze_nectar"/>
                              </statement>
            </block></xml>
      course2_collector_loops_challenge2:
        courseC_maze_loops_challenge2_a: オリジナルのコードはうまくいくでしょう・・・それぞれの山にジェムが1つだけなら！
        courseC_maze_loops_challenge2_b: くりかえしのなかに `あつめる`を 入れるのを わすれないでね。
      course2_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: "「あつめる」コマンドをたくさん使うと、たくさんジェムをあつめることができます。"
      course2_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: "「あつめる」コマンドをたくさん使うと、たくさんジェムをあつめることができます。"
      course2_harvester_loops_challenge1:
        courseC_harvester_loops_challenge1_a: "「くりかえし」をつかおうね！"
        courseC_harvester_loops_challenge1_b: 必要（ひつよう）なだけ「前にすすむ」と「ピック トウモロコシ」をくりかえしてから、それぞれのコーナーで「右に回転」しましょう。
        courseC_harvester_loops_challenge1_c: |-
          さいしょの4つのトウモロコシをあつめる一番いい方法（ほうほう）は、「くりかえし」ブロックの中に、さらに「くりかえし」ブロックをつかうことです。ほかのもんだいにも同じパターンがつかえるよ。

          <xml>
            <block type="when_run" deletable="false" movable="false">
              <next>
                <block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">2</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></next></block></xml>
      course2_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: ゆっくり考えて！ジグザグに 行く ほうほう や まわりから あつめていく
          ほうほう など、このパズルを クリアする ほうほうは ほかにも たくさん あります。
        courseC_harvester_loops_challenge2_b: "`前にすすむ` と `ピック レタス` をひつような回数くりかえして、角まで来たら
          まがります。"
        courseC_harvester_loops_challenge2_c: |-
          ジグザグに行くやり方は、赤い線の行き方を ２回 くりかせば 20ブロックで パズルを クリアできます。

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: まわりから あつめていく ほうほう だと、18ブロックですみます！
      course2_maze_loops_challenge1:
        courseC_maze_loops_challenge1_a: 3つのピースでできた道として考えてみましょう。それぞれのピースはくりかえしできるパターンをもってます。
        courseC_maze_loops_challenge1_b: それぞれの「くりかえし」ブロックの間では、「左にまがる」または「右にまがる」をつかって次のくりかえしのためのじゅんびが必要（ひつよう）です。
        courseC_maze_loops_challenge1_c: |-
          ここまで来たら、「左にまがって」、次に何回か「前にすすんで」ください。あきらめないで！

          ![](<https://images.code.org/7696c5c16b8ddf1d53436cdc7fb6346d-image-1494101728016.14.34 PM.png>)
      course2_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: 後ろに行くときは、まがる方向（ほうこう）に気をつけよう。
        courseC_maze_programming_challenge2_b: 最短（さいたん）ルートは5ブロックでクリアできます。「くりかえし」ブロックを使います！
      course3_artist_functions_challenge1:
        courseE_artist_functions_challenge1_a: 関数（かんすう）をよび出すと同じデザインをかけます。関数の中は自由に変えることができますし、よび出した後の動きも自由に変えることができます！
      course3_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      course3_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      course3_collector_debugging_challenge2:
        courseD_collector_debugging_challenge2_a: "まずは前にある2つの山から、2つジェムを集めてみよう。\n\n![](<https://images.code.org/8493c16a5b913b91e28b36eb2b280b8c-image-1494775939149.25.04
          AM copy.png>)\nこれらのブロックを使ってみましょう。\n\n<xml>\n<block type=\"collector_collect\"></block>\n<block
          type=\"controls_repeat\" limit=\"2\">\n    <title name=\"TIMES\">2</title>\n
          \ </block>\n<block type=\"maze_move\" x=\"175px\" y=\"17px\">\n                    <title
          name=\"DIR\">moveForward</title>\n                  </block>\n                  \n
          \n   <block type=\"controls_repeat\" limit=\"2\" x=\"175px\" y=\"56px\">\n
          \   <title name=\"TIMES\">2</title>\n  </block>\n\n</xml>"
      course3_farmer_condLoops_challenge1:
        courseD_farmer_condLoops_challenge1_a: このパズルでは「ステップ」ボタンが役立ちます。
      course3_farmer_condLoops_challenge2:
        courseD_farmer_condLoops_challenge2_a: "「？」のついた場所では、作物の数がちがいます。「以下の間くりかえし（while
          loop）」を使いましょう。"
      course3_maze_debugging_challenge1:
        courseC_maze_debugging_challenge1_b: 通り道は長方形です！ 毎回同じように まがる必要があります。
        courseC_maze_debugging_challenge1_c: うまくいかなかった場合は「最初からやりなおす」か、すべてのコードを消して、やりなおして見ましょう。
      course3_maze_debugging_challenge2:
        courseC_maze_debugging_challenge2_a: 回りすぎない方法の1つは、「まがる」ブロックの間にもっと「前にすすむ」ブロックを追加することです。
        courseC_maze_debugging_challenge2_b: うまくいかなかった場合は、最初からやりなおすか、すべてのコードを消して、やり直して見ましょう。
        courseC_maze_debugging_challenge2_c: |-
          「前にすすむ」を使ってたどり、4回だけまがる、2つのクリア方法があります。「くりかえし」ブロックを使うと、もっとたくさんの方法があります。

          ![](<https://images.code.org/8a4665671cda35fea1f629a5bcc39e26-image-1493502743154.48.05 PM.png>)
      courseA_artist_loops2:
        courseA_artist_loops2_a: どうやって せんを かくか わからない？ <xml><block type="when_run"/></xml>
          ブロックに ブロックをくっつけて、ためしてみてください。
        courseA_artist_loops2_b: この <xml><block type="simple_move_right"/></xml> ブロックを
          つかって、パズルをクリアします。
      courseA_artist_loops2_2018:
        courseA_artist_loops2_a: どうやって せんを かくか わからない？ <xml><block type="when_run"/></xml>
          ブロックに ブロックをくっつけて、ためしてみてください。
        courseA_artist_loops2_b: この <xml><block type="simple_move_right"/></xml> ブロックを
          つかって、パズルをクリアします。
      courseA_artist_loops2_2019:
        courseA_artist_loops2_a: どうやって せんを かくか わからない？ <xml><block type="when_run"/></xml>
          ブロックに ブロックをくっつけて、ためしてみてください。
        courseA_artist_loops2_b: この <xml><block type="simple_move_right"/></xml> ブロックを
          つかって、パズルをクリアします。
      courseA_artist_loops3:
        courseA_artist_loops3_a: ゆびで プログラムを ゆっくり なぞって、まちがいを さがしてください。
        courseA_artist_loops3_b: |-
          パズルをクリアするには、このブロックが ひつようかも。

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2018:
        courseA_artist_loops3_a: ゆびで プログラムを ゆっくり なぞって、まちがいを さがしてください。
        courseA_artist_loops3_b: |-
          パズルをクリアするには、このブロックが ひつようかも。

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops3_2019:
        courseA_artist_loops3_a: ゆびで プログラムを ゆっくり なぞって、まちがいを さがしてください。
        courseA_artist_loops3_b: |-
          パズルをクリアするには、このブロックが ひつようかも。

          ![](<https://images.code.org/16a3ab2e639eacee18ee5405ed9966dc-image-1498670745551.24.49 AM.png>)
      courseA_artist_loops4:
        courseA_artist_loops4_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops4_b: <xml><block type="simple_move_right"/></xml> ブロックを、
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="2-6">5</title></block></xml> のなかに いれて ください。
      courseA_artist_loops4_2018:
        courseA_artist_loops4_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops4_b: <xml><block type="simple_move_right"/></xml> ブロックを、
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="2-6">5</title></block></xml> のなかに いれて ください。
      courseA_artist_loops4_2019:
        courseA_artist_loops4_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops4_b: <xml><block type="simple_move_right"/></xml> ブロックを、
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES"
          config="2-6">5</title></block></xml> のなかに いれて ください。
      courseA_artist_loops5:
        courseA_artist_loops5_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> をつかって このパズルをクリアしよう！
        courseA_artist_loops5_b: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops5_c: <xml><block type="simple_move_right"/></xml> を<xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          の中に入れてみよう。
      courseA_artist_loops5_2018:
        courseA_artist_loops5_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> をつかって このパズルをクリアしよう！
        courseA_artist_loops5_b: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops5_c: <xml><block type="simple_move_right"/></xml> を<xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          の中に入れてみよう。
      courseA_artist_loops5_2019:
        courseA_artist_loops5_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> をつかって このパズルをクリアしよう！
        courseA_artist_loops5_b: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
        courseA_artist_loops5_c: <xml><block type="simple_move_right"/></xml> を<xml><block
          type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">???</title></block></xml>
          の中に入れてみよう。
      courseA_artist_loops6:
        courseA_artist_loops6_a: うまくいかないときは、どんなふうにかける ブロックをうごかして ためしてみよう。
        courseA_artist_loops6_b: ちがう ほうこうに うごくブロック を ２つ つかってみよう。
      courseA_artist_loops6_2018:
        courseA_artist_loops6_a: うまくいかないときは、どんなふうにかける ブロックをうごかして ためしてみよう。
        courseA_artist_loops6_b: ちがう ほうこうに うごくブロック を ２つ つかってみよう。
      courseA_artist_loops6_2019:
        courseA_artist_loops6_a: うまくいかないときは、どんなふうにかける ブロックをうごかして ためしてみよう。
        courseA_artist_loops6_b: ちがう ほうこうに うごくブロック を ２つ つかってみよう。
      courseA_artist_loops7:
        courseA_artist_loops7_a: 一本一本せんをかいて くりかえしのパターンを見つけよう。
        courseA_artist_loops7_b: １つなみをかいたら、それをくりかえして のこりの２つをかいてみよう
        courseA_artist_loops7_c: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックのなかにブロックを なにか いれてください。
      courseA_artist_loops7_2018:
        courseA_artist_loops7_a: 一本一本せんをかいて くりかえしのパターンを見つけよう。
        courseA_artist_loops7_b: １つなみをかいたら、それをくりかえして のこりの２つをかいてみよう
        courseA_artist_loops7_c: |-
          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> ブロックのなかにブロックを なにか いれてください。
      courseA_artist_loops7_2019:
        courseA_artist_loops7_a: 一本一本せんをかいて くりかえしのパターンを見つけよう。
        courseA_artist_loops7_b: １つなみをかいたら、それをくりかえして のこりの２つをかいてみよう
        courseA_artist_loops7_c: |-
          <xml><block type="controls_repeat_simplified_dropdown">
              <title name="TIMES" config="3-10">???</title>
            </block></xml> ブロックのなかにブロックを なにか いれてください。
      courseA_artist_loops8:
        courseA_artist_loops8_a: 実行して どうなるかみてみよう。
        courseA_artist_loops8_b: コードをどのように かえればよいか 考えてみよう
        courseA_artist_loops8_c: |-
          コードを実行（じっこう）して、どうなるかみてみよう。
          はじごをかんせいさせるには、あとなにをすればよいかよかんがえてみよう。
      courseA_artist_loops8_2018:
        courseA_artist_loops8_a: 実行して どうなるかみてみよう。
        courseA_artist_loops8_b: コードをどのように かえればよいか 考えてみよう
        courseA_artist_loops8_c: |-
          コードを実行（じっこう）して、どうなるかみてみよう。
          はじごをかんせいさせるには、あとなにをすればよいかよかんがえてみよう。
      courseA_artist_loops8_2019:
        courseA_artist_loops8_a: 実行して どうなるかみてみよう。
        courseA_artist_loops8_b: コードをどのように かえればよいか 考えてみよう
        courseA_artist_loops8_c: |-
          コードを実行（じっこう）して、どうなるかみてみよう。
          はじごをかんせいさせるには、あとなにをすればよいかよかんがえてみよう。
      courseA_artist_loops9:
        courseA_artist_loops9_a: 水へいなところをかくコードに もうひとつブロックをついかしてみよう。
        courseA_artist_loops9_b: |-
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml> の中に ブロックを入れてみよう。
        courseA_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseA_artist_loops9_2018:
        courseA_artist_loops9_a: 水へいなところをかくコードに もうひとつブロックをついかしてみよう。
        courseA_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseA_artist_loops9_2019:
        courseA_artist_loops9_a: 水へいなところをかくコードに もうひとつブロックをついかしてみよう。
        courseA_artist_loops9_b: |-
          <xml><block type="controls_repeat_simplified_dropdown"><title name="TIMES" config="3-10">5</title></block>
          </xml> の中に ブロックを入れてみよう。
        courseA_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseA_artist_loops_challenge2a:
        courseA_artist_loops_challenge2_a: <xml>  <block type="simple_move_up_left"/></xml>
          をつかうと ななめにすすむことができるよ！
        courseA_artist_loops_challenge2_b: テントを１つかいたら ’ジャンプする’ を２かい つかって つぎのテントをかいてね！
        courseA_artist_loops_challenge2_c: すべてのブロックをくりかえしの中にいれることで このパズルを クリアすることができるよ。
      courseA_artist_loops_challenge2a_2018:
        courseA_artist_loops_challenge2_a: <xml>  <block type="simple_move_up_left"/></xml>
          をつかうと ななめにすすむことができるよ！
        courseA_artist_loops_challenge2_b: テントを１つかいたら ’ジャンプする’ を２かい つかって つぎのテントをかいてね！
        courseA_artist_loops_challenge2_c: すべてのブロックをくりかえしの中にいれることで このパズルを クリアすることができるよ。
      courseA_artist_loops_challenge2a_2019:
        courseA_artist_loops_challenge2_a: <xml>  <block type="simple_move_up_left"/></xml>
          をつかうと ななめにすすむことができるよ！
        courseA_artist_loops_challenge2_b: テントを１つかいたら ’ジャンプする’ を２かい つかって つぎのテントをかいてね！
        courseA_artist_loops_challenge2_c: すべてのブロックをくりかえしの中にいれることで このパズルを クリアすることができるよ。
      courseA_collector_loops1:
        courseA_collector_loops1_a: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: ひがしに ２つ すすんで、たからものを とって ください。
      courseA_collector_loops1_2018:
        courseA_collector_loops1_a: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: ひがしに ２つ すすんで、たからものを とって ください。
      courseA_collector_loops1_2019:
        courseA_collector_loops1_a: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
        courseA_collector_loops1_b: ひがしに ２つ すすんで、たからものを とって ください。
      courseA_collector_loops2:
        courseA_collector_loops2_a: たからものを とるまえに うごいて ください。
        courseA_collector_loops2_b: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2018:
        courseA_collector_loops2_a: たからものを とるまえに うごいて ください。
        courseA_collector_loops2_b: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops2_2019:
        courseA_collector_loops2_a: たからものを とるまえに うごいて ください。
        courseA_collector_loops2_b: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
      courseA_collector_loops3:
        courseA_collector_loops3_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックをつかって、くりかえして！
        courseA_collector_loops3_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックのなかに ブロックを なにか
          いれてください。
      courseA_collector_loops3_2018:
        courseA_collector_loops3_a: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックをつかって、くりかえして！
        courseA_collector_loops3_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックのなかに ブロックを なにか
          いれてください。
      courseA_collector_loops3_2019:
        courseA_collector_loops3_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックのなかに ブロックを なにか
          いれてください。
      courseA_collector_loops4:
        courseA_collector_loops4_a: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
        courseA_collector_loops4_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックの くりかえしが おわったら、ローレルを
          したに うごかして、たからものを とってください！
      courseA_collector_loops4_2018:
        courseA_collector_loops4_a: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
        courseA_collector_loops4_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックの くりかえしが おわったら、ローレルを
          したに うごかして、たからものを とってください！
      courseA_collector_loops4_2019:
        courseA_collector_loops4_a: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
        courseA_collector_loops4_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックの くりかえしが おわったら、ローレルを
          したに うごかして、たからものを とってください！
      courseA_collector_loops5:
        courseA_collector_loops5_a: わからないときは、かみに かいて、パターンを みつけだそう。
        courseA_collector_loops5_b: よこに うごく と、したに うごく と、２つに わけて かんがえて みよう。
        courseA_collector_loops5_c: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえしから はじめよう。にしに うごいて
          たからものを とろう。
      courseA_collector_loops5_2018:
        courseA_collector_loops5_a: わからないときは、かみに かいて、パターンを みつけだそう。
        courseA_collector_loops5_b: よこに うごく と、したに うごく と、２つに わけて かんがえて みよう。
        courseA_collector_loops5_c: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえしから はじめよう。にしに うごいて
          たからものを とろう。
      courseA_collector_loops5_2019:
        courseA_collector_loops5_a: わからないときは、かみに かいて、パターンを みつけだそう。
        courseA_collector_loops5_b: よこに うごく と、したに うごく と、２つに わけて かんがえて みよう。
        courseA_collector_loops5_c: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえしから はじめよう。にしに うごいて
          たからものを とろう。
      courseA_collector_loops6:
        courseA_collector_loops6_a: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
        courseA_collector_loops6_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを、２かい つかいます。
      courseA_collector_loops6_2018:
        courseA_collector_loops6_a: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
        courseA_collector_loops6_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを、２かい つかいます。
      courseA_collector_loops6_2019:
        courseA_collector_loops6_a: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
        courseA_collector_loops6_b: <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを、２かい つかいます。
      courseA_collector_loops7:
        courseA_collector_loops7_a: ローレルが どこまで いくか ためして みてから、つぎを かんがえよう。
      courseA_collector_loops7_2018:
        courseA_collector_loops7_a: ローレルが どこまで いくか ためして みてから、つぎを かんがえよう。
      courseA_collector_loops7_2019:
        courseA_collector_loops7_a: ローレルが どこまで いくか ためして みてから、つぎを かんがえよう。
      courseA_collector_loops8:
        courseA_collector_loops8_a: わからない ときは、かみに かいて パターンを さがしてみよう。
        courseA_collector_loops8_b: もんだいを ３つに わけて、それぞれ くりかえしを つかって プログラムしよう。
        courseA_collector_loops8_c: すこし プログラムを かいたら、すぐに 実行（じっこう）してみよう。ちょっとづつ ためしながら
          プログラムを つくっていこう。
      courseA_collector_loops8_2018:
        courseA_collector_loops8_a: わからない ときは、かみに かいて パターンを さがしてみよう。
        courseA_collector_loops8_b: もんだいを ３つに わけて、それぞれ くりかえしを つかって プログラムしよう。
        courseA_collector_loops8_c: すこし プログラムを かいたら、すぐに 実行（じっこう）してみよう。ちょっとづつ ためしながら
          プログラムを つくっていこう。
      courseA_collector_loops8_2019:
        courseA_collector_loops8_a: わからない ときは、かみに かいて パターンを さがしてみよう。
        courseA_collector_loops8_b: もんだいを ３つに わけて、それぞれ くりかえしを つかって プログラムしよう。
        courseA_collector_loops8_c: すこし プログラムを かいたら、すぐに 実行（じっこう）してみよう。ちょっとづつ ためしながら
          プログラムを つくっていこう。
      courseA_collector_loops9:
        courseA_collector_loops9_a: 'どこでループするのがいいか わからないときは、いろいろ すこしずつ ためして、パターンをさがしてみてください。 '
        courseA_collector_loops9_b: くりかえし のなかに、２つの <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえし をいれると、プログラムが
          かんたんになるよ！
      courseA_collector_loops9_2018:
        courseA_collector_loops9_a: 'どこでループするのがいいか わからないときは、いろいろ すこしずつ ためして、パターンをさがしてみてください。 '
        courseA_collector_loops9_b: くりかえし のなかに、２つの <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえし をいれると、プログラムが
          かんたんになるよ！
      courseA_collector_loops9_2019:
        courseA_collector_loops9_a: 'どこでループするのがいいか わからないときは、いろいろ すこしずつ ためして、パターンをさがしてみてください。 '
        courseA_collector_loops9_b: くりかえし のなかに、２つの <xml><block type="controls_repeat_simplified_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> くりかえし をいれると、プログラムが
          かんたんになるよ！
      courseA_collector_loops_challenge1:
        courseA_collector_loops_challenge1_a: うまく うごかなかったら、「くりかえし」の かずを かえてみて。
        courseA_collector_loops_challenge1_b: １かいだけ やるときは、くりかえしは いりません。
        courseA_collector_loops_challenge1_c: どうくつの みぎには、6つの ほうせきが あるけど、5かい 南に うごけばいいよね。なぜだか
          わかるかな？
        courseA_collector_loops_challenge1_d: |-
          さいしょの プログラムは、さいごの 2つの ほうせきを とれません。さいごに このブロックを くわえて みて ください：

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2018:
        courseA_collector_loops_challenge1_a: うまく うごかなかったら、「くりかえし」の かずを かえてみて。
        courseA_collector_loops_challenge1_b: １かいだけ やるときは、くりかえしは いりません。
        courseA_collector_loops_challenge1_c: どうくつの みぎには、6つの ほうせきが あるけど、5かい 南に うごけばいいよね。なぜだか
          わかるかな？
        courseA_collector_loops_challenge1_d: |-
          さいしょの プログラムは、さいごの 2つの ほうせきを とれません。さいごに このブロックを くわえて みて ください：

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge1_2019:
        courseA_collector_loops_challenge1_a: うまく うごかなかったら、「くりかえし」の かずを かえてみて。
        courseA_collector_loops_challenge1_b: １かいだけ やるときは、くりかえしは いりません。
        courseA_collector_loops_challenge1_c: どうくつの みぎには、6つの ほうせきが あるけど、5かい 南に うごけばいいよね。なぜだか
          わかるかな？
        courseA_collector_loops_challenge1_d: |-
          さいしょの プログラムは、さいごの 2つの ほうせきを とれません。さいごに このブロックを くわえて みて ください：

          <xml><block type="maze_moveEast">
                                  <next>
                                    <block type="collector_collect_simplified">
                                      <next>
                                        <block type="maze_moveSouth">
                                          <next>
                                            <block type="collector_collect"/>
                                          </next>
                                        </block>
                                      </next>
                                    </block>
                                  </next>
                                </block></xml>
      courseA_collector_loops_challenge2kp:
        courseA_collector_loops_challenge2kp_b: この みちを ためしてみて。
        courseA_collector_loops_challenge2kp_a: くりかえしを つかって パズルを クリア できるかな？
      courseA_collector_loops_challenge2kp_2018:
        courseA_collector_loops_challenge2kp_b: この みちを ためしてみて。
        courseA_collector_loops_challenge2kp_a: くりかえしを つかって パズルを クリア できるかな？
      courseA_collector_loops_challenge2kp_2019:
        courseA_collector_loops_challenge2kp_b: この みちを ためしてみて。
        courseA_collector_loops_challenge2kp_a: くりかえしを つかって パズルを クリア できるかな？
      courseA_collector_preLoops7:
        courseA_collector_loops2_b: |-
          たからものの ところまで きたら、このブロックで たからものを ゲットします。

          <xml>  <block type="collector_collect"/></xml>
      courseA_harvester_loops5:
        courseA_harvester_loops5_a: うまくいかなかったら、コーナーの まえと、コーナーの あとと、２つにわけて かんがえて みよう。
      courseA_harvester_loops5_2019:
        courseA_harvester_loops5_a: うまくいかなかったら、コーナーの まえと、コーナーの あとと、２つにわけて かんがえて みよう。
      courseA_harvester_loops6:
        courseA_harvester_loops6_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
      courseA_harvester_loops6_2019:
        courseA_harvester_loops6_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
      courseA_harvester_seq2:
        courseA_harvester_seq2_b: かみに ステップを かいて かいけつ しよう！
      courseA_harvester_seq2_2019:
        courseA_harvester_seq2_b: かみに ステップを かいて かいけつ しよう！
      courseA_maze_seq1:
        courseA_maze_seq1_a: |-
          トリさんが うごかないときは、<xml>
            <block type="when_run"/>
          </xml> の したに ちゃんとブロックを くっつけてみて。
        courseA_maze_seq1_b: |-
          トリさんは、にしに ３つ うごきたいです。このブロックをつかって：

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq10:
        courseA_maze_seq10_a: うまくいかなかったら、ステップを かみに かいてみよう。
        courseA_maze_seq10_b: パズルをクリアするには ３つの ほうこうに うごきます。
      courseA_maze_seq10_2018:
        courseA_maze_seq10_a: うまくいかなかったら、ステップを かみに かいてみよう。
      courseA_maze_seq10_2019:
        courseA_maze_seq10_a: うまくいかなかったら、ステップを かみに かいてみよう。
      courseA_maze_seq13:
        courseA_maze_seq13_a: ゆびで みちを なぞって かんがえて みよう。
        courseA_maze_seq13_b: いろんなブロックを いれて、うごかしてみよう。まちがえても だいじょうぶ！
        courseA_maze_seq13_c: ブタさんの ところに いくには <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> ブロックを つかってね。
      courseA_maze_seq13_2018:
        courseA_maze_seq13_a: ゆびで みちを なぞって かんがえて みよう。
        courseA_maze_seq13_b: いろんなブロックを いれて、うごかしてみよう。まちがえても だいじょうぶ！
        courseA_maze_seq13_c: ブタさんの ところに いくには <xml><block type="maze_moveNorth"/></xml><xml><block
          type="maze_moveEast"/></xml> ブロックを つかってね。
      courseA_maze_seq13_2019:
        courseA_maze_seq13_a: ゆびで みちを なぞって かんがえて みよう。
        courseA_maze_seq13_b: いろんなブロックを いれて、うごかしてみよう。まちがえても だいじょうぶ！
      courseA_maze_seq1_2018:
        courseA_maze_seq1_a: |-
          トリさんが うごかないときは、<xml>
            <block type="when_run"/>
          </xml> の したに ちゃんとブロックを くっつけてみて。
        courseA_maze_seq1_b: |-
          トリさんは、にしに ３つ うごきたいです。このブロックをつかって：

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq1_2019:
        courseA_maze_seq1_a: |-
          トリさんが うごかないときは、<xml>
            <block type="when_run"/>
          </xml> の したに ちゃんとブロックを くっつけてみて。
        courseA_maze_seq1_b: |-
          トリさんは、にしに ３つ うごきたいです。このブロックをつかって：

          <xml><block type="maze_moveWest"/></xml>
      courseA_maze_seq2:
        courseA_maze_seq2_a: プログラムは ブロックが１つ たりません。どれかな？
        courseA_maze_seq2_b: トリさんが どこまでいくか プログラムを うごかして みよう。あと どれくらい いけば いいのかな？
      courseA_maze_seq3:
        courseA_maze_seq3_a: １つのブロックが トリさんを まちがったところに うごかしています。まちがいを みつけて、ただしいブロックに
          おきかえて ください。
        courseA_maze_seq3_b: ステップ ボタンをつかって、プログラムの まちがいを みつけよう。１ばんめ かな？２ばんめ かな？
        courseA_maze_seq3_c: この <xml><block type="maze_moveNorth"/></xml> ブロックは、トリさんを
          まちがった ところに つれていきます。ただしい ブロックに とりかえて ください。
      courseA_maze_seq4:
        courseA_maze_seq4_a: うまくいかなかったら、ただしい みちを さがして、それから いらないブロックを けしてね。
        courseA_maze_seq4_b: まずは、プログラムを うごかして みて。うまくいった？どれが いらないブロックかな？プログラムを なおして
          ください。
      courseA_maze_seq5:
        courseA_maze_seq5_a: かみに ステップを かいて かいけつ しよう！
        courseA_maze_seq5_b: ２つの ほうこうに、２つの ブロックが ひつようです。
      courseA_maze_seq5_2018:
        '1': かみに ステップを かいて かいけつ しよう！
      courseA_maze_seq5_2019:
        '1': かみに ステップを かいて かいけつ しよう！
      courseA_maze_seq6:
        courseA_maze_seq6_a: あと、３つ ブロックがひつようです。
        courseA_maze_seq6_b: うまくいかなかったら、コーナーの まえと、コーナーの あとと、２つにわけて かんがえて みよう。
      courseA_maze_seq6_2018:
        courseA_maze_seq6_a: あと、３つ ブロックがひつようです。
        courseA_maze_seq6_b: うまくいかなかったら、コーナーの まえと、コーナーの あとと、２つにわけて かんがえて みよう。
      courseA_maze_seq6_2019:
        courseA_maze_seq6_a: あと、３つ ブロックがひつようです。
        courseA_maze_seq6_b: うまくいかなかったら、コーナーの まえと、コーナーの あとと、２つにわけて かんがえて みよう。
      courseA_maze_seq7:
        courseA_maze_seq7_a: トリさんが ブタさんの ところに いけるよう、ブロックを ひとつ いれてください。
        courseA_maze_seq7_b: わからないときは、パズルを かみに かいて、ゆびを つかって かんがえて みよう。
      courseA_maze_seq8:
        courseA_maze_seq8_a: うまくいかない ときは、トリさんの うごきを かみに かいてみよう。
      courseA_maze_seq8_2018:
        courseA_maze_seq8_a: うまくいかない ときは、トリさんの うごきを かみに かいてみよう。
      courseA_maze_seq8_2019:
        courseA_maze_seq8_a: うまくいかない ときは、トリさんの うごきを かみに かいてみよう。
      courseA_maze_seq9:
        courseA_maze_seq9_a: あれれっ？トリの うごきを ゆびで なぞって みよう。
        courseA_maze_seq9_b: わからなくなったら、"最初からやりなおす" を おして、はじめから やりなおしてみよう。
        courseA_maze_seq9_c: パズルをクリアするには ３つの ほうこうに うごきます。
      courseA_maze_seq_challenge1:
        courseA_maze_seq_challenge1_a: このパズルの ときかたは ２とおり あるよ。
      courseA_maze_seq_challenge1_2018:
        courseA_maze_seq_challenge1_a: このパズルの ときかたは ２とおり あるよ。
      courseA_maze_seq_challenge1_2019:
        courseA_maze_seq_challenge1_a: このパズルの ときかたは ２とおり あるよ。
      courseA_maze_seq_challenge2:
        courseA_maze_seq_challenge2_a: なんこ いけば いいか、ゆびを つかって かぞえて みよう！
      courseA_maze_seq_challenge2_2018:
        courseA_maze_seq_challenge2_a: なんこ いけば いいか、ゆびを つかって かぞえて みよう！
      courseA_maze_seq_challenge2_2019:
        courseA_maze_seq_challenge2_a: なんこ いけば いいか、ゆびを つかって かぞえて みよう！
      courseA_playLab_events2:
        courseA_playLab_events2_a: 犬が”言う”ブロックをつかってみよう。
        courseA_playLab_events2_b: |-
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml> のようにブロックをならべてみよう。
      courseA_playLab_events2_2018:
        courseA_playLab_events2_a: 犬が”言う”ブロックをつかってみよう。
        courseA_playLab_events2_b: |-
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml> のようにブロックをならべてみよう。
      courseA_playLab_events2_2019:
        courseA_playLab_events2_a: 犬が”言う”ブロックをつかってみよう。
        courseA_playLab_events2_b: |-
          <xml>
          <block type="when_run" movable="false" deletable="false">
          <next>
          <block type="studio_saySpriteChoices">
              <title name="SPRITE">1</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </next>
          </block>
          </xml> のようにブロックをならべてみよう。
      courseA_playLab_events3:
        courseA_playLab_events3_a: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> の下に<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> をつけてみよう。
        courseA_playLab_events3_b: 左やじるしキーをおしたとき 犬が左に行くようにできたかな。犬が はたにさわれば、はたは みどりにかわるよ。
      courseA_playLab_events3_2018:
        courseA_playLab_events3_a: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> の下に<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> をつけてみよう。
        courseA_playLab_events3_b: 左やじるしキーをおしたとき 犬が左に行くようにできたかな。犬が はたにさわれば、はたは みどりにかわるよ。
      courseA_playLab_events3_2019:
        courseA_playLab_events3_a: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">left</title>
            </block></xml> の下に<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">8</title>
            </block></xml> をつけてみよう。
        courseA_playLab_events3_b: 左やじるしキーをおしたとき 犬が左に行くようにできたかな。犬が はたにさわれば、はたは みどりにかわるよ。
      courseA_playLab_events4:
        courseA_playLab_events4_a: |-
          犬を右に動かすには、<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml> をつかいます。
        courseA_playLab_events4_b: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml> をつかってみよう。
      courseA_playLab_events4_2018:
        courseA_playLab_events4_a: |-
          犬を右に動かすには、<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml> をつかいます。
        courseA_playLab_events4_b: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml> をつかってみよう。
      courseA_playLab_events4_2019:
        courseA_playLab_events4_a: |-
          犬を右に動かすには、<xml><block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></xml> をつかいます。
        courseA_playLab_events4_b: |-
          <xml><block type="studio_whenArrow">
              <title name="VALUE">right</title>
              <next>
            <block type="studio_move">
              <title name="SPRITE">1</title>
              <title name="DIR">2</title>
            </block></next></block></xml> をつかってみよう。
      courseA_playLab_events5:
        courseA_playLab_events5_a: "<xml><block type=\"studio_whenArrow\">\n    <title
          name=\"VALUE\">up</title>\n  </block></xml>\n\nと \n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">down</title>\n  </block></xml>\n\nで、犬を上や下にうごかしてみよう。"
        courseA_playLab_events5_b: |-
          ブロックのやじるしをおせば、やじるしのほうこうをかえることができます。

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2018:
        courseA_playLab_events5_a: "<xml><block type=\"studio_whenArrow\">\n    <title
          name=\"VALUE\">up</title>\n  </block></xml>\n\nと \n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">down</title>\n  </block></xml>\n\nで、犬を上や下にうごかしてみよう。"
        courseA_playLab_events5_b: |-
          ブロックのやじるしをおせば、やじるしのほうこうをかえることができます。

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events5_2019:
        courseA_playLab_events5_a: "<xml><block type=\"studio_whenArrow\">\n    <title
          name=\"VALUE\">up</title>\n  </block></xml>\n\nと \n\n<xml><block type=\"studio_whenArrow\">\n
          \   <title name=\"VALUE\">down</title>\n  </block></xml>\n\nで、犬を上や下にうごかしてみよう。"
        courseA_playLab_events5_b: |-
          ブロックのやじるしをおせば、やじるしのほうこうをかえることができます。

          ![](https://images.code.org/b010b6a8131689af53b33148753c15b4-image-1492639642316.gif)
      courseA_playLab_events6:
        courseA_playLab_events6_a: |-
          犬がクリックされたときは、<xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml> をつかいます。
        courseA_playLab_events6_b: |-
          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml> で はいけいをかえることができます。
        courseA_playLab_events6_c: |-
          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml> で ランダムに音をならすことをできます。
      courseA_playLab_events6_2018:
        courseA_playLab_events6_a: |-
          犬がクリックされたときは、<xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml> をつかいます。
        courseA_playLab_events6_b: |-
          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml> で はいけいをかえることができます。
        courseA_playLab_events6_c: |-
          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml> で ランダムに音をならすことをできます。
      courseA_playLab_events6_2019:
        courseA_playLab_events6_a: |-
          犬がクリックされたときは、<xml><block type="studio_whenSpriteClicked">
              <title name="SPRITE">1</title>
            </block></xml> をつかいます。
        courseA_playLab_events6_b: |-
          <xml><block type="studio_setBackground">
              <title name="VALUE">random</title>
            </block></xml> で はいけいをかえることができます。
        courseA_playLab_events6_c: |-
          <xml><block type="studio_playSound">
              <title name="SOUND">random</title>
            </block></xml> で ランダムに音をならすことをできます。
      courseA_playLab_events7:
        courseA_playLab_events7_a: |-
          ぶつかったしらべるには、<xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml> をつかいます。
      courseA_playLab_events7_2018:
        courseA_playLab_events7_a: |-
          ぶつかったしらべるには、<xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml> をつかいます。
      courseA_playLab_events7_2019:
        courseA_playLab_events7_a: |-
          ぶつかったしらべるには、<xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml> をつかいます。
      courseA_playlab_events_challenge1:
        courseA_playlab_events_challenge1_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml> で とりをクリックしたとき、ペンギンを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_b: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml> で ペンギンをクリックしたとき、おばけを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_c: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml> で おばけをクリックしたとき、かいじゅうを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_d: "モンスターをクリックしたとき、スピッフ ロボットを表示させる!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n
          \ </block></xml>"
        courseA_playlab_events_challenge1_e: "最後に、スピッフをクリックしたとき、ワイルズを表示する!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n
          \ </block></xml>"
      courseA_playlab_events_challenge1_2018:
        courseA_playlab_events_challenge1_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml> で とりをクリックしたとき、ペンギンを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_b: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml> で ペンギンをクリックしたとき、おばけを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_c: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml> で おばけをクリックしたとき、かいじゅうを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_d: "モンスターをクリックしたとき、スピッフ ロボットを表示させる!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n
          \ </block></xml>"
        courseA_playlab_events_challenge1_e: "最後に、スピッフをクリックしたとき、ワイルズを表示する!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n
          \ </block></xml>"
      courseA_playlab_events_challenge1_2019:
        courseA_playlab_events_challenge1_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">3</title>\n
          \     </block>\n    </next>\n  </block></xml> で とりをクリックしたとき、ペンギンを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_b: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">3</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">4</title>\n
          \     </block>\n    </next>\n  </block></xml> で ペンギンをクリックしたとき、おばけを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_c: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">4</title>\n    <next>\n      <block type=\"studio_setSprite\">\n
          \       <title name=\"VALUE\">\"visible\"</title>\n        <title name=\"SPRITE\">5</title>\n
          \     </block>\n    </next>\n  </block></xml> で おばけをクリックしたとき、かいじゅうを表示（ひょうじ）します。"
        courseA_playlab_events_challenge1_d: "モンスターをクリックしたとき、スピッフ ロボットを表示させる!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">5</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">6</title>\n      </block>\n    </next>\n
          \ </block></xml>"
        courseA_playlab_events_challenge1_e: "最後に、スピッフをクリックしたとき、ワイルズを表示する!\n<xml>
          \n  <block type=\"studio_whenSpriteClicked\">\n    <title name=\"SPRITE\">6</title>\n
          \   <next>\n      <block type=\"studio_setSprite\">\n        <title name=\"VALUE\">\"visible\"</title>\n
          \       <title name=\"SPRITE\">7</title>\n      </block>\n    </next>\n
          \ </block></xml>"
      courseA_playlab_events_challenge2:
        courseA_playlab_events_challenge2_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml> で とりをしゃべらせることができます。"
        courseA_playlab_events_challenge2_b: |-
          おとをならすには、<xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                    <block type="studio_playSound">
                      <title name="SOUND">winpoint</title>
                    </block>
                  </next>

            </block></xml> をつかいます。
        courseA_playlab_events_challenge2_c: |-
          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml> をつかえば、かおをかえることができます。
      courseA_playlab_events_challenge2_2018:
        courseA_playlab_events_challenge2_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml> で とりをしゃべらせることができます。"
        courseA_playlab_events_challenge2_b: |-
          おとをならすには、<xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                    <block type="studio_playSound">
                      <title name="SOUND">winpoint</title>
                    </block>
                  </next>

            </block></xml> をつかいます。
        courseA_playlab_events_challenge2_c: |-
          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml> をつかえば、かおをかえることができます。
      courseA_playlab_events_challenge2_2019:
        courseA_playlab_events_challenge2_a: "<xml> \n  <block type=\"studio_whenSpriteClicked\">\n
          \   <title name=\"SPRITE\">2</title>\n    <next>\n          <block type=\"studio_saySprite\">\n
          \           <title name=\"SPRITE\">2</title>\n            <title name=\"TEXT\">Tweet</title>\n
          \         </block>\n    </next>\n  </block></xml> で とりをしゃべらせることができます。"
        courseA_playlab_events_challenge2_b: |-
          おとをならすには、<xml>
            <block type="studio_whenSpriteClicked">
              <title name="SPRITE">6</title>
              <next>

                    <block type="studio_playSound">
                      <title name="SOUND">winpoint</title>
                    </block>
                  </next>

            </block></xml> をつかいます。
        courseA_playlab_events_challenge2_c: |-
          <xml>  <block type="studio_whenSpriteClicked">
              <title name="SPRITE">5</title>
              <next>
                <block type="studio_setSpriteEmotion">
                  <title name="SPRITE">5</title>
                  <title name="VALUE">2</title>
                  <next>
                    <block type="studio_saySprite">
                      <title name="SPRITE">5</title>
                      <title name="TEXT">Roar!</title>
                      <next>
                        <block type="studio_setSpriteEmotion">
                          <title name="SPRITE">5</title>
                          <title name="VALUE">0</title>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block></xml> をつかえば、かおをかえることができます。
      courseB_artist_loops2:
        courseB_artist_loops2_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
      courseB_artist_loops2_2018:
        courseB_artist_loops2_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
      courseB_artist_loops2_2019:
        courseB_artist_loops2_a: ４かい いじょう もっと くりかえしたい ときは、ブロックの うえにある すうじを かえます。
      courseB_artist_loops9:
        courseB_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseB_artist_loops9_2018:
        courseB_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseB_artist_loops9_2019:
        courseB_artist_loops9_c: 一本一本せんをかいて くりかえしのパターンを見つけよう。
      courseB_collector_loops2:
        courseB_collector_loops2_a: たからものを とるまえに うごいて ください。
      courseB_collector_loops2_2018:
        courseB_collector_loops2_a: たからものを とるまえに うごいて ください。
      courseB_collector_loops2_2019:
        courseB_collector_loops2_a: たからものを とるまえに うごいて ください。
      courseB_collector_loops4:
        courseB_collector_loops4_b: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
      courseB_collector_loops4_2018:
        courseB_collector_loops4_b: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
      courseB_collector_loops4_2019:
        courseB_collector_loops4_b: ローレルが いきすぎないよう、くりかえしの かいすうを なおします。
      courseB_collector_loops_challenge2a:
        courseB_collector_loops_challenge2a_a: うまくいかなかったら、デバッグしよう。あきらめないで！
        courseB_collector_loops_challenge2a_b: こんなふうに めいろを ぬけだそう。くりかえしの パターンを みつけて
          ください。
        courseB_collector_loops_challenge2a_c: ぜんぶの たからものを とるには、くりかえしの なかに ２つの <xml>
          <block type="collector_collect"/></xml> ブロックを いれてください。（くりかえしを つかっても よいです）
      courseB_collector_loops_challenge2a_2018:
        courseB_collector_loops_challenge2a_a: うまくいかなかったら、デバッグしよう。あきらめないで！
        courseB_collector_loops_challenge2a_b: こんなふうに めいろを ぬけだそう。くりかえしの パターンを みつけて
          ください。
        courseB_collector_loops_challenge2a_c: ぜんぶの たからものを とるには、くりかえしの なかに ２つの <xml>
          <block type="collector_collect"/></xml> ブロックを いれてください。（くりかえしを つかっても よいです）
      courseB_collector_loops_challenge2a_2019:
        courseB_collector_loops_challenge2a_a: うまくいかなかったら、デバッグしよう。あきらめないで！
        courseB_collector_loops_challenge2a_b: こんなふうに めいろを ぬけだそう。くりかえしの パターンを みつけて
          ください。
        courseB_collector_loops_challenge2a_c: ぜんぶの たからものを とるには、くりかえしの なかに ２つの <xml>
          <block type="collector_collect"/></xml> ブロックを いれてください。（くりかえしを つかっても よいです）
      courseB_maze_seq8:
        courseB_maze_seq8_b: このパズルの解き方は二通りあるよ。
      courseC_PlayLab_events1:
        courseC_PlayLab_events1_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events1_2018:
        courseC_PlayLab_events1_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events1_2019:
        courseC_PlayLab_events1_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
      courseC_PlayLab_events2:
        courseC_PlayLab_events2_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: "`キャラが言う`のことばは、２つ目の ドロップダウンメニューで かえることが できます。"
      courseC_PlayLab_events2_2018:
        courseC_PlayLab_events2_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: "`キャラが言う`のことばは、２つ目の ドロップダウンメニューで かえることが できます。"
      courseC_PlayLab_events2_2019:
        courseC_PlayLab_events2_a: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
            <block type="studio_saySpriteChoices">
              <title name="SPRITE">0</title>
              <title name="VALUE">Hi there.</title>
            </block>
          </xml>
        courseC_PlayLab_events2_b: "`キャラが言う`のことばは、２つ目の ドロップダウンメニューで かえることが できます。"
      courseC_PlayLab_events3:
        courseC_PlayLab_events3_a: 犬のジョージを 20ピクセル 右に うごかしてみよう。
        courseC_PlayLab_events3_b: ツールボックスの中に キャラを うごかす ブロックが あるのが わかるかな？
        courseC_PlayLab_events3_c: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events3_2018:
        courseC_PlayLab_events3_a: 犬のジョージを 20ピクセル 右に うごかしてみよう。
        courseC_PlayLab_events3_b: ツールボックスの中に キャラを うごかす ブロックが あるのが わかるかな？
        courseC_PlayLab_events3_c: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events3_2019:
        courseC_PlayLab_events3_a: 犬のジョージを 20ピクセル 右に うごかしてみよう。
        courseC_PlayLab_events3_b: ツールボックスの中に キャラを うごかす ブロックが あるのが わかるかな？
        courseC_PlayLab_events3_c: |-
          `実行（じっこう）したとき` のしたに、このブロックを ひっつけてみよう。

          <xml>
          <block type="studio_moveDistance">
              <title name="SPRITE">0</title>
              <title name="DIR">2</title>
              <title name="DISTANCE">25</title>
            </block>
          </xml>
      courseC_PlayLab_events4:
        courseC_PlayLab_events4_b: '"実行（じっこう）"ボタンが おされたら、ジョージを 右に 100ピクセル 行かせよう 。'
        courseC_PlayLab_events4_a: "`キャラ１が キャラ２に さわったら`の下に、`キャラ２がいう`を ひっつけてみよう。"
      courseC_PlayLab_events4_2018:
        courseC_PlayLab_events4_b: '"実行（じっこう）"ボタンが おされたら、ジョージを 右に 100ピクセル 行かせよう 。'
        courseC_PlayLab_events4_a: "`キャラ１が キャラ２に さわったら`の下に、`キャラ２がいう`を ひっつけてみよう。"
      courseC_PlayLab_events4_2019:
        courseC_PlayLab_events4_b: '"実行（じっこう）"ボタンが おされたら、ジョージを 右に 100ピクセル 行かせよう 。'
        courseC_PlayLab_events4_a: "`キャラ１が キャラ２に さわったら`の下に、`キャラ２がいう`を ひっつけてみよう。"
      courseC_PlayLab_events5:
        courseC_PlayLab_events5_a: '`キャラ１が言う`の ドロップダウンメニューから "こんにちわ"を 見つけよう。'
        courseC_PlayLab_events5_b: プログラムを実行（じっこう）したら、タコをクリックしてみよう！
      courseC_PlayLab_events5_2018:
        courseC_PlayLab_events5_a: '`キャラ１が言う`の ドロップダウンメニューから "こんにちわ"を 見つけよう。'
        courseC_PlayLab_events5_b: プログラムを実行（じっこう）したら、タコをクリックしてみよう！
      courseC_PlayLab_events5_2019:
        courseC_PlayLab_events5_a: '`キャラ１が言う`の ドロップダウンメニューから "こんにちわ"を 見つけよう。'
        courseC_PlayLab_events5_b: プログラムを実行（じっこう）したら、タコをクリックしてみよう！
      courseC_PlayLab_events6:
        courseC_PlayLab_events6_a: "`矢じるしのとき` の下に、そのキーが おされたときの うごきを 書きます。"
        courseC_PlayLab_events6_b: "`動かす キャラ１`の ドロップダウンメニューで ペンギンが うごく ほうこうを かえることがでるよ。"
        courseC_PlayLab_events6_c: プログラムが かんせいしたら、矢じるしキーを おして ペンギンを うごかしてみよう。
      courseC_PlayLab_events6_2018:
        courseC_PlayLab_events6_a: "`矢じるしのとき` の下に、そのキーが おされたときの うごきを 書きます。"
        courseC_PlayLab_events6_b: "`動かす キャラ１`の ドロップダウンメニューで ペンギンが うごく ほうこうを かえることがでるよ。"
        courseC_PlayLab_events6_c: プログラムが かんせいしたら、矢じるしキーを おして ペンギンを うごかしてみよう。
      courseC_PlayLab_events6_2019:
        courseC_PlayLab_events6_a: "`矢じるしのとき` の下に、そのキーが おされたときの うごきを 書きます。"
        courseC_PlayLab_events6_b: "`動かす キャラ１`の ドロップダウンメニューで ペンギンが うごく ほうこうを かえることがでるよ。"
        courseC_PlayLab_events6_c: プログラムが かんせいしたら、矢じるしキーを おして ペンギンを うごかしてみよう。
      courseC_PlayLab_events7:
        courseC_PlayLab_events7_a: "`ずっと やること` の中に `うごかす キャラ２ 上に 400 ピクセル` と `うごかす
          キャラ２ 下に 400 ピクセル` をいれてみよう。 "
        courseC_PlayLab_events7_b: "`ずっと やること` は、プログラムを実行（じっこう）したら ずっとうごいているので、ほかのイベントブロックに
          ひっつける ひつようはありません。"
      courseC_PlayLab_events7_2018:
        courseC_PlayLab_events7_a: "`ずっと やること` の中に `うごかす キャラ２ 上に 400 ピクセル` と `うごかす
          キャラ２ 下に 400 ピクセル` をいれてみよう。 "
        courseC_PlayLab_events7_b: "`ずっと やること` は、プログラムを実行（じっこう）したら ずっとうごいているので、ほかのイベントブロックに
          ひっつける ひつようはありません。"
      courseC_PlayLab_events7_2019:
        courseC_PlayLab_events7_a: "`ずっと やること` の中に `うごかす キャラ２ 上に 400 ピクセル` と `うごかす
          キャラ２ 下に 400 ピクセル` をいれてみよう。 "
        courseC_PlayLab_events7_b: "`ずっと やること` は、プログラムを実行（じっこう）したら ずっとうごいているので、ほかのイベントブロックに
          ひっつける ひつようはありません。"
      courseC_PlayLab_events8:
        courseC_PlayLab_events8_a: "`キャラ１がキャラ２にさわったら`のしたに ブロックを ひっつけてみよう。"
        courseC_PlayLab_events8_b: ツールボックスの中にある`キャラがいう` と `を鳴らす` を つかってみよう！
      courseC_PlayLab_events8_2018:
        courseC_PlayLab_events8_a: "`キャラ１がキャラ２にさわったら`のしたに ブロックを ひっつけてみよう。"
        courseC_PlayLab_events8_b: ツールボックスの中にある`キャラがいう` と `を鳴らす` を つかってみよう！
      courseC_PlayLab_events8_2019:
        courseC_PlayLab_events8_a: "`キャラ１がキャラ２にさわったら`のしたに ブロックを ひっつけてみよう。"
        courseC_PlayLab_events8_b: ツールボックスの中にある`キャラがいう` と `を鳴らす` を つかってみよう！
      courseC_PlayLab_events9:
        courseC_PlayLab_events9_a: "`ポイントをふやす`を つかってね。"
        courseC_PlayLab_events9_b: "`キャラ**1**がキャラ**3**にさわったら` を ついかしよう。"
        courseC_PlayLab_events9_c: "`キャラがさわったら`は、いくつでも 作ることが できます。さいしょからある `キャラがさわったら`は
          さくじょしなくていいよ。"
      courseC_PlayLab_events9_2018:
        courseC_PlayLab_events9_a: "`ポイントをふやす`を つかってね。"
        courseC_PlayLab_events9_b: "`キャラ**1**がキャラ**3**にさわったら` を ついかしよう。"
        courseC_PlayLab_events9_c: "`キャラがさわったら`は、いくつでも 作ることが できます。さいしょからある `キャラがさわったら`は
          さくじょしなくていいよ。"
      courseC_PlayLab_events9_2019:
        courseC_PlayLab_events9_a: "`ポイントをふやす`を つかってね。"
        courseC_PlayLab_events9_b: "`キャラ**1**がキャラ**3**にさわったら` を ついかしよう。"
        courseC_PlayLab_events9_c: "`キャラがさわったら`は、いくつでも 作ることが できます。さいしょからある `キャラがさわったら`は
          さくじょしなくていいよ。"
      courseC_PlayLab_eventsA:
        courseC_PlayLab_eventsA_a: "`はいけいを____にする` と `セット キャラ を ____ スピードにする` を つかってみよう。"
        courseC_PlayLab_eventsA_b: "`実行（じっこう）した時`は、ブロックエリアから ワークスペースに ドラックして もってきてね。"
      courseC_PlayLab_eventsA_2018:
        courseC_PlayLab_eventsA_a: "`はいけいを____にする` と `セット キャラ を ____ スピードにする` を つかってみよう。"
        courseC_PlayLab_eventsA_b: "`実行（じっこう）した時`は、ブロックエリアから ワークスペースに ドラックして もってきてね。"
      courseC_PlayLab_eventsA_2019:
        courseC_PlayLab_eventsA_a: "`はいけいを____にする` と `セット キャラ を ____ スピードにする` を つかってみよう。"
        courseC_PlayLab_eventsA_b: "`実行（じっこう）した時`は、ブロックエリアから ワークスペースに ドラックして もってきてね。"
      courseC_PlayLab_eventsA_embed_2019:
        courseC_PlayLab_eventsA_a: "`はいけいを____にする` と `セット キャラ を ____ スピードにする` を つかってみよう。"
        courseC_PlayLab_eventsA_b: "`実行（じっこう）した時`は、ブロックエリアから ワークスペースに ドラックして もってきてね。"
      courseC_PlayLab_eventsFP:
        idea1: |-
          _アイデアがひつよう？_

          **だれが、いますか？** とうじょうする キャラを ランダムに すれば、だれが でてくるか だれにも わからなくなるよ。

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _アイデアがひつよう？_

          **ぼうけんに出かけよう** - はいけいを かえて、キャラが いま どこに いるのか しゃべらせてみよう。

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _アイデアがひつよう？_

          **ピンボールl** - 矢じるしキーで キャラを うごかして、ほかの キャラに さわったら ランダムに 音を鳴らすというのは どうですか？
      courseC_PlayLab_eventsFP_2018:
        idea1: |-
          _アイデアがひつよう？_

          **だれが、いますか？** とうじょうする キャラを ランダムに すれば、だれが でてくるか だれにも わからなくなるよ。

          ![](https://images.code.org/a56e03479801995d93ad5a4e4384a79e-image-1475340154498.gif)
        idea2: |-
          _アイデアがひつよう？_

          **ぼうけんに出かけよう** - はいけいを かえて、キャラが いま どこに いるのか しゃべらせてみよう。

          ![](https://images.code.org/010c4d919f841d6049caf9211ab65ccc-image-1475340583052.gif)
        idea3: |-
          _アイデアがひつよう？_

          **ピンボールl** - 矢じるしキーで キャラを うごかして、ほかの キャラに さわったら ランダムに 音を鳴らすというのは どうですか？
      courseC_PlayLab_eventsFP_2019:
        idea3: |-
          _アイデアがひつよう？_

          **ピンボールl** - 矢じるしキーで キャラを うごかして、ほかの キャラに さわったら ランダムに 音を鳴らすというのは どうですか？
      courseC_PlayLab_events_challenge1:
        courseC_PlayLab_events_challenge_a: |-
          キャラを ほかの ばしょに いどうさせるには、このブロックを つかいます。

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: ペンギンがほかのキャラにさわったとき、`セット キャラ 1 左に` をつかってみよう。ペンギンを
          スタート地点に もどして、リトライすることが できます。！
        courseC_PlayLab_events_challenge_c: |-
          キャラがうごくスピードを かえることで、ゲームを むつかしくしたり かんたんにしたり することが できます！

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_PlayLab_events_challenge1_2018:
        courseC_PlayLab_events_challenge_a: |-
          キャラを ほかの ばしょに いどうさせるには、このブロックを つかいます。

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: ペンギンがほかのキャラにさわったとき、`セット キャラ 1 左に` をつかってみよう。ペンギンを
          スタート地点に もどして、リトライすることが できます。！
        courseC_PlayLab_events_challenge_c: |-
          キャラがうごくスピードを かえることで、ゲームを むつかしくしたり かんたんにしたり することが できます！

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_PlayLab_events_challenge1_2019:
        courseC_PlayLab_events_challenge_a: |-
          キャラを ほかの ばしょに いどうさせるには、このブロックを つかいます。

          <xml> <block type="studio_setSpritePosition">
              <title name="SPRITE">0</title>
              <title name="VALUE">12</title>
            </block></xml>
        courseC_PlayLab_events_challenge_b: ペンギンがほかのキャラにさわったとき、`セット キャラ 1 左に` をつかってみよう。ペンギンを
          スタート地点に もどして、リトライすることが できます。！
        courseC_PlayLab_events_challenge_c: |-
          キャラがうごくスピードを かえることで、ゲームを むつかしくしたり かんたんにしたり することが できます！

          <xml>  <block type="studio_setSpriteSpeed">
              <title name="SPRITE">0</title>
              <title name="VALUE">Studio.SpriteSpeed.FAST</title>
            </block></xml>
      courseC_artist_loop1:
        courseC_artist_loop1_a: くりかえしのなかは、変えなくても だいじょうぶ、くりかえしの前に ブロックを １つ 入れるだけ。
        courseC_artist_loop1_b: |-
          書く線のパターンをかえるには、このブロックを つかいます。

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          好きなパターンを ためしてみて。
      courseC_artist_loop1_2018:
        courseC_artist_loop1_a: くりかえしのなかは、変えなくても だいじょうぶ、くりかえしの前に ブロックを １つ 入れるだけ。
        courseC_artist_loop1_b: |-
          書く線のパターンをかえるには、このブロックを つかいます。

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          好きなパターンを ためしてみて。
      courseC_artist_loop1_2019:
        courseC_artist_loop1_a: くりかえしのなかは、変えなくても だいじょうぶ、くりかえしの前に ブロックを １つ 入れるだけ。
        courseC_artist_loop1_b: |-
          書く線のパターンをかえるには、このブロックを つかいます。

          <xml>
          <block type="draw_line_style_pattern">
              <title name="VALUE">DEFAULT</title>
            </block>
          </xml>

          好きなパターンを ためしてみて。
      courseC_artist_loops5a:
        courseC_artist_loops5a_a: "`スタンプ`の 小さな さんかくを おせば、キャラクターを かえることが できます。"
      courseC_artist_loops5a_2018:
        courseC_artist_loops5a_a: "`スタンプ`の 小さな さんかくを おせば、キャラクターを かえることが できます。"
      courseC_artist_loops5a_2019:
        courseC_artist_loops5a_a: "`スタンプ`の 小さな さんかくを おせば、キャラクターを かえることが できます。"
      courseC_artist_loops6a:
        courseC_artist_loops6a_a: 上のようにするには、スタンプとスタンプの間を 75ピクセルより 小さくします。
      courseC_artist_loops6a_2018:
        courseC_artist_loops6a_a: 上のようにするには、スタンプとスタンプの間を 75ピクセルより 小さくします。
      courseC_artist_loops6a_2019:
        courseC_artist_loops6a_a: 上のようにするには、スタンプとスタンプの間を 75ピクセルより 小さくします。
      courseC_artist_loops7a:
        courseC_artist_loops7a_a: |-
          360をまがる角度でわったものが、くりかえしの回数です。
          くりかえしの回数は、あってるかな？
      courseC_artist_loops7a_2018:
        courseC_artist_loops7a_a: |-
          360をまがる角度でわったものが、くりかえしの回数です。
          くりかえしの回数は、あってるかな？
      courseC_artist_loops7a_2019:
        courseC_artist_loops7a_a: |-
          360をまがる角度でわったものが、くりかえしの回数です。
          くりかえしの回数は、あってるかな？
      courseC_artist_loopsPre1a:
        courseC_artist_loopsPre1a_a: くりかえしの中に `まがる` ブロックを入れるのをわすれないで。
        courseC_artist_loopsPre1a_b: "`くりかえし` のなかに入れるのは、`200ピクセルジャンプして200ピクセル下に行く`、`前に50ピクセルすすむ`、`右に60度まがる`の３つです。"
      courseC_artist_loopsPre1a_2018:
        courseC_artist_loopsPre1a_a: くりかえしの中に `まがる` ブロックを入れるのをわすれないで。
        courseC_artist_loopsPre1a_b: "`くりかえし` のなかに入れるのは、`200ピクセルジャンプして200ピクセル下に行く`、`前に50ピクセルすすむ`、`右に60度まがる`の３つです。"
      courseC_artist_loopsPre1a_2019:
        courseC_artist_loopsPre1a_a: くりかえしの中に `まがる` ブロックを入れるのをわすれないで。
        courseC_artist_loopsPre1a_b: "`くりかえし` のなかに入れるのは、`200ピクセルジャンプして200ピクセル下に行く`、`前に50ピクセルすすむ`、`右に60度まがる`の３つです。"
      courseC_artist_loopsPrePre1a:
        courseC_artist_loopsPrePre1a_a: |-
          さいしょのブロックは、これ。

          ![](<https://images.code.org/60e3354a2e7dd37b64833eac1e8694be-image-1499710228373.08.14 AM.png>)
        courseC_artist_loopsPrePre1a_b: |-
          ![](<https://images.code.org/411fca4606a09641e6eedf5069ac4efa-image-1499710237929.08.27 AM.png>)

          で、５０ピクセル前に すすみます。
      courseC_artist_prog2:
        courseC_artist_prog2_a: ブロックを使って僕に「100ピクセル前に進む」ことを教えて。そうすれば自動的に線を引いてあげるよ。
        courseC_artist_prog2_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使ってみて。
      courseC_artist_prog2_2018:
        courseC_artist_prog2_a: ブロックを使って僕に「100ピクセル前に進む」ことを教えて。そうすれば自動的に線を引いてあげるよ。
        courseC_artist_prog2_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使ってみて。
      courseC_artist_prog2_2019:
        courseC_artist_prog2_a: ブロックを使って僕に「100ピクセル前に進む」ことを教えて。そうすれば自動的に線を引いてあげるよ。
        courseC_artist_prog2_b: カドをまがるのが、むずかしい？「90度まがる」ブロックを使ってみて。
      courseC_collector_loops_challenge2:
        courseC_maze_loops_challenge2_b: くりかえしのなかに `あつめる`を 入れるのを わすれないでね。
      courseC_collector_loops_challenge2_2018:
        courseC_maze_loops_challenge2_b: くりかえしのなかに `あつめる`を 入れるのを わすれないでね。
      courseC_collector_loops_challenge2_2019:
        courseC_maze_loops_challenge2_b: くりかえしのなかに `あつめる`を 入れるのを わすれないでね。
      courseC_collector_prog1:
        courseC_collector_prog1_a: たからもののあるばしょに 行ったら、<xml><block type="collector_collect"/></xml>
          を つかって たからものを あつめよう。
        courseC_collector_prog1_b: １ばんかんたんなこたえは、一歩前にすすんで、たからものをあつめるだけです。
      courseC_collector_prog1_2018:
        courseC_collector_prog1_a: たからもののあるばしょに 行ったら、<xml><block type="collector_collect"/></xml>
          を つかって たからものを あつめよう。
        courseC_collector_prog1_b: １ばんかんたんなこたえは、一歩前にすすんで、たからものをあつめるだけです。
      courseC_collector_prog1_2019:
        courseC_collector_prog1_a: たからもののあるばしょに 行ったら、<xml><block type="collector_collect"/></xml>
          を つかって たからものを あつめよう。
        courseC_collector_prog1_b: １ばんかんたんなこたえは、一歩前にすすんで、たからものをあつめるだけです。
      courseC_collector_prog2:
        courseC_collector_prog2_a: <xml><block type="maze_move"><title name="DIR">moveForward</title></block></xml>
          を４つならべてみましょう。<xml><block type="controls_repeat_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> をつかえば、プログラムをみじかくすることができます。
      courseC_collector_prog2_2018:
        courseC_collector_prog2_a: <xml><block type="maze_move"><title name="DIR">moveForward</title></block></xml>
          を４つならべてみましょう。<xml><block type="controls_repeat_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> をつかえば、プログラムをみじかくすることができます。
      courseC_collector_prog2_2019:
        courseC_collector_prog2_a: <xml><block type="maze_move"><title name="DIR">moveForward</title></block></xml>
          を４つならべてみましょう。<xml><block type="controls_repeat_dropdown"><title name="TIMES"
          config="3-10">???</title></block></xml> をつかえば、プログラムをみじかくすることができます。
      courseC_collector_prog3:
        courseC_collector_prog3_a: <xml><block type="when_run"/></xml> に ひっつけた じゅんばんに
          プログラムが実行（じっこう）されます。
        courseC_collector_prog3_b: '"ステップ"ボタンで プログラムを１行づつ うごかして まちがいをみつけよう。'
        courseC_collector_prog3_c: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_collector_prog3_2018:
        courseC_collector_prog3_a: <xml><block type="when_run"/></xml> に ひっつけた じゅんばんに
          プログラムが実行（じっこう）されます。
        courseC_collector_prog3_b: '"ステップ"ボタンで プログラムを１行づつ うごかして まちがいをみつけよう。'
        courseC_collector_prog3_c: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_collector_prog3_2019:
        courseC_collector_prog3_a: <xml><block type="when_run"/></xml> に ひっつけた じゅんばんに
          プログラムが実行（じっこう）されます。
        courseC_collector_prog3_b: '"ステップ"ボタンで プログラムを１行づつ うごかして まちがいをみつけよう。'
        courseC_collector_prog3_c: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_collector_prog4:
        courseC_collector_prog4_a: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog4_c: 赤い線のとおりに やってみよう。
      courseC_collector_prog4_2018:
        courseC_collector_prog4_a: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog4_c: 赤い線のとおりに やってみよう。
      courseC_collector_prog4_2019:
        courseC_collector_prog4_a: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog4_c: 赤い線のとおりに やってみよう。
      courseC_collector_prog5:
        courseC_collector_prog5_a: |-
          ”はじめに なにを する？
          そのつぎは？
          どこが まちがえているのか わかりましたか？”
        courseC_collector_prog5_b: まちがっているところは １つだけじゃないよ、ほかにもあるので 見つけてみよう。
        courseC_collector_prog5_c: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog5_d: 赤い線のとおりに動かしてみよう。
      courseC_collector_prog5_2018:
        courseC_collector_prog5_a: |-
          ”はじめに なにを する？
          そのつぎは？
          どこが まちがえているのか わかりましたか？”
        courseC_collector_prog5_b: まちがっているところは １つだけじゃないよ、ほかにもあるので 見つけてみよう。
        courseC_collector_prog5_c: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog5_d: 赤い線のとおりに動かしてみよう。
      courseC_collector_prog5_2019:
        courseC_collector_prog5_a: |-
          ”はじめに なにを する？
          そのつぎは？
          どこが まちがえているのか わかりましたか？”
        courseC_collector_prog5_b: まちがっているところは １つだけじゃないよ、ほかにもあるので 見つけてみよう。
        courseC_collector_prog5_c: こまったときは、紙に書いて考えてみよう。
        courseC_collector_prog5_d: 赤い線のとおりに動かしてみよう。
      courseC_collector_prog6:
        courseC_collector_prog6_a: |-
          どこが まちがえているか わかった？
          ”ステップ”ボタンで プログラムを 1行づつ うごかして どこがまちがっているのか みつけよう。
        courseC_collector_prog6_b: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog6_2018:
        courseC_collector_prog6_a: |-
          どこが まちがえているか わかった？
          ”ステップ”ボタンで プログラムを 1行づつ うごかして どこがまちがっているのか みつけよう。
        courseC_collector_prog6_b: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog6_2019:
        courseC_collector_prog6_a: |-
          どこが まちがえているか わかった？
          ”ステップ”ボタンで プログラムを 1行づつ うごかして どこがまちがっているのか みつけよう。
        courseC_collector_prog6_b: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog7:
        courseC_collector_prog7_a: 'はじめから プログラムしてある ブロックを けす ひつようはありません。  '
        courseC_collector_prog7_b: どこかで みぎにまわる ひつようが ないか 考えてみて。
        courseC_collector_prog7_c: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog7_2018:
        courseC_collector_prog7_a: 'はじめから プログラムしてある ブロックを けす ひつようはありません。  '
        courseC_collector_prog7_b: どこかで みぎにまわる ひつようが ないか 考えてみて。
        courseC_collector_prog7_c: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog7_2019:
        courseC_collector_prog7_a: 'はじめから プログラムしてある ブロックを けす ひつようはありません。  '
        courseC_collector_prog7_b: どこかで みぎにまわる ひつようが ないか 考えてみて。
        courseC_collector_prog7_c: わからないときは、赤い線のとおりに動かしてみよう。
      courseC_collector_prog_challenge1:
        courseC_collector_prog_challenge1_a: すべてのたからものを あつめるには １つの ばしょで 何回も ’あつめる’を
          つかいましょう。
      courseC_collector_prog_challenge1_2018:
        courseC_collector_prog_challenge1_a: すべてのたからものを あつめるには １つの ばしょで 何回も ’あつめる’を
          つかいましょう。
      courseC_collector_prog_challenge1_2019:
        courseC_collector_prog_challenge1_a: すべてのたからものを あつめるには １つの ばしょで 何回も ’あつめる’を
          つかいましょう。
      courseC_collector_prog_challenge2:
        courseC_collector_prog_challenge1_a: １つのばしょで 何回も 'あつめる'ブロックを つかってみよう。
        courseC_collector_prog_challenge1_b: わからないときは、赤い線にそって行ってみよう！
      courseC_collector_prog_challenge2_2018:
        courseC_collector_prog_challenge1_a: １つのばしょで 何回も 'あつめる'ブロックを つかってみよう。
        courseC_collector_prog_challenge1_b: わからないときは、赤い線にそって行ってみよう！
      courseC_collector_prog_challenge2_2019:
        courseC_collector_prog_challenge1_a: １つのばしょで 何回も 'あつめる'ブロックを つかってみよう。
        courseC_collector_prog_challenge1_b: わからないときは、赤い線にそって行ってみよう！
      courseC_data wizard:
        courseA_playLab_events7_a: |-
          ぶつかったしらべるには、<xml><block type="studio_whenSpriteCollided">
              <title name="SPRITE1">1</title>
              <title name="SPRITE2">0</title>
            </block></xml> をつかいます。
      courseC_flappy_events2:
        courseC_flappy_events2_a: "`スピードをセットする`が、ひつようです。 "
        courseC_flappy_events2_b: このパズルをクリアするのは、`実行（じっこう）した時` の下に`スピードをセットする`を ひっつけてください。
      courseC_flappy_events2_2018:
        courseC_flappy_events2_a: "`スピードをセットする`が、ひつようです。 "
        courseC_flappy_events2_b: このパズルをクリアするのは、`実行（じっこう）した時` の下に`スピードをセットする`を ひっつけてください。
      courseC_flappy_events2_2019:
        courseC_flappy_events2_a: "`スピードをセットする`が、ひつようです。 "
        courseC_flappy_events2_b: このパズルをクリアするのは、`実行（じっこう）した時` の下に`スピードをセットする`を ひっつけてください。
      courseC_flappy_events3:
        courseC_flappy_events3_a: うまく うごかないときは、ブロックを ひっつけたイベントが 正しいか かくにんしてみよう。
      courseC_flappy_events3_2018:
        courseC_flappy_events3_a: うまく うごかないときは、ブロックを ひっつけたイベントが 正しいか かくにんしてみよう。
      courseC_flappy_events3_2019:
        courseC_flappy_events3_a: うまく うごかないときは、ブロックを ひっつけたイベントが 正しいか かくにんしてみよう。
      courseC_flappy_events4:
        courseC_flappy_events4_a: "`しょうがいぶつに あたったとき` に `ゲームオーバー`をひっつけよう。"
      courseC_flappy_events4_2018:
        courseC_flappy_events4_a: "`しょうがいぶつに あたったとき` に `ゲームオーバー`をひっつけよう。"
      courseC_flappy_events4_2019:
        courseC_flappy_events4_a: "`しょうがいぶつに あたったとき` に `ゲームオーバー`をひっつけよう。"
      courseC_flappy_events5:
        courseC_flappy_events5_a: このパズルをクリアするには、`1ポイント ゲット` がひつようです。
      courseC_flappy_events5_2018:
        courseC_flappy_events5_a: このパズルをクリアするには、`1ポイント ゲット` がひつようです。
      courseC_flappy_events5_2019:
        courseC_flappy_events5_a: このパズルをクリアするには、`1ポイント ゲット` がひつようです。
      courseC_flappy_events6:
        courseC_flappy_events6_a: "`クリックしたとき` のなかにある `パタパタする` のスピードをかえてみよう。"
      courseC_flappy_events6_2018:
        courseC_flappy_events6_a: "`クリックしたとき` のなかにある `パタパタする` のスピードをかえてみよう。"
      courseC_flappy_events6_2019:
        courseC_flappy_events6_a: "`クリックしたとき` のなかにある `パタパタする` のスピードをかえてみよう。"
      courseC_flappy_events7:
        courseC_flappy_events7_a: "`はいけいをxxにする` で、はいけいをかえることができます。 "
      courseC_flappy_events7_2018:
        courseC_flappy_events7_a: "`はいけいをxxにする` で、はいけいをかえることができます。 "
      courseC_flappy_events7_2019:
        courseC_flappy_events7_a: "`はいけいをxxにする` で、はいけいをかえることができます。 "
      courseC_flappy_events8:
        courseC_flappy_events8_a: "`しょうがいぶつをとおりぬけたとき`に、 `はいけいをxxxにする` を ついかしてみよう。"
      courseC_flappy_events8_2018:
        courseC_flappy_events8_a: "`しょうがいぶつをとおりぬけたとき`に、 `はいけいをxxxにする` を ついかしてみよう。"
      courseC_flappy_events8_2019:
        courseC_flappy_events8_a: "`しょうがいぶつをとおりぬけたとき`に、 `はいけいをxxxにする` を ついかしてみよう。"
      courseC_flappy_events9:
        courseC_flappy_events9_a: "`しょうがいぶつに あたったとき` に `スコアは0` を ついか してみよう。"
      courseC_flappy_events9_2018:
        courseC_flappy_events9_a: "`しょうがいぶつに あたったとき` に `スコアは0` を ついか してみよう。"
      courseC_flappy_events9_2019:
        courseC_flappy_events9_a: "`しょうがいぶつに あたったとき` に `スコアは0` を ついか してみよう。"
      courseC_harvester_loops1:
        courseC_harvester_loops1_a: １回だけ前にすすんで、 <xml><block type="harvester_pumpkin"/></xml>
          でかぼちゃをあつめます。.
        courseC_harvester_loops1_b: くりかえしのなかに <xml><block type="harvester_pumpkin"/></xml>
          を入れて、かぼちゃの かずだけ くりかえそう。
      courseC_harvester_loops1_2018:
        courseC_harvester_loops1_a: １回だけ前にすすんで、 <xml><block type="harvester_pumpkin"/></xml>
          でかぼちゃをあつめます。.
        courseC_harvester_loops1_b: くりかえしのなかに <xml><block type="harvester_pumpkin"/></xml>
          を入れて、かぼちゃの かずだけ くりかえそう。
      courseC_harvester_loops1_2019:
        courseC_harvester_loops1_a: １回だけ前にすすんで、 <xml><block type="harvester_pumpkin"/></xml>
          でかぼちゃをあつめます。.
        courseC_harvester_loops1_b: くりかえしのなかに <xml><block type="harvester_pumpkin"/></xml>
          を入れて、かぼちゃの かずだけ くりかえそう。
      courseC_harvester_loops2:
        courseC_harvester_loops2_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops2_b: くりかえしのあとに、もう一回 `くりかえし` を つかいます。
        courseC_harvester_loops2_c: １つ目は、`前にすすむ`を くりかえします。もう一つは、 `ピック カボチャ`を かくかえします。
      courseC_harvester_loops2_2018:
        courseC_harvester_loops2_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops2_b: くりかえしのあとに、もう一回 `くりかえし` を つかいます。
        courseC_harvester_loops2_c: １つ目は、`前にすすむ`を くりかえします。もう一つは、 `ピック カボチャ`を かくかえします。
      courseC_harvester_loops2_2019:
        courseC_harvester_loops2_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops2_b: くりかえしのあとに、もう一回 `くりかえし` を つかいます。
        courseC_harvester_loops2_c: １つ目は、`前にすすむ`を くりかえします。もう一つは、 `ピック カボチャ`を かくかえします。
      courseC_harvester_loops3:
        courseC_harvester_loops3_b: 前のパズルと 同じ やり方で さいしょの かぼちゃを ゲットできます。そのあと、どっちに まがれば
          いいかな？
        courseC_harvester_loops3_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops3_2018:
        courseC_harvester_loops3_b: 前のパズルと 同じ やり方で さいしょの かぼちゃを ゲットできます。そのあと、どっちに まがれば
          いいかな？
        courseC_harvester_loops3_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops3_2019:
        courseC_harvester_loops3_b: 前のパズルと 同じ やり方で さいしょの かぼちゃを ゲットできます。そのあと、どっちに まがれば
          いいかな？
        courseC_harvester_loops3_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops4:
        courseC_harvester_loops4_a: とうもろこしをあつめるには、`ピック トウモロコシ` をつかいます。
        courseC_harvester_loops4_b: とうもろこし を あつめる くりかえし と かぼちゃ を あつめる くりかえし を プログラムします。
        courseC_harvester_loops4_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops4_2018:
        courseC_harvester_loops4_a: とうもろこしをあつめるには、`ピック トウモロコシ` をつかいます。
        courseC_harvester_loops4_b: とうもろこし を あつめる くりかえし と かぼちゃ を あつめる くりかえし を プログラムします。
        courseC_harvester_loops4_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops4_2019:
        courseC_harvester_loops4_a: とうもろこしをあつめるには、`ピック トウモロコシ` をつかいます。
        courseC_harvester_loops4_b: とうもろこし を あつめる くりかえし と かぼちゃ を あつめる くりかえし を プログラムします。
        courseC_harvester_loops4_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops5:
        courseC_harvester_loops5_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops5_b: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
      courseC_harvester_loops5_2018:
        courseC_harvester_loops5_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops5_b: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
      courseC_harvester_loops5_2019:
        courseC_harvester_loops5_a: わからなくなったら、すべての動きを紙に書いて くりかえしのパターンを見つけよう。
        courseC_harvester_loops5_b: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
      courseC_harvester_loops6:
        courseC_harvester_loops6_a: くりかえしの中に ふく数の ブロックを 入れられることを 思い出して。
        courseC_harvester_loops6_b: とうもろこしの れつを さいごまで 行ったら、ほうこう てんかん しよう。
      courseC_harvester_loops6_2018:
        courseC_harvester_loops6_a: くりかえしの中に ふく数の ブロックを 入れられることを 思い出して。
        courseC_harvester_loops6_b: とうもろこしの れつを さいごまで 行ったら、ほうこう てんかん しよう。
      courseC_harvester_loops6_2019:
        courseC_harvester_loops6_a: くりかえしの中に ふく数の ブロックを 入れられることを 思い出して。
        courseC_harvester_loops6_b: とうもろこしの れつを さいごまで 行ったら、ほうこう てんかん しよう。
      courseC_harvester_loops7:
        courseC_harvester_loops7_a: さいしょに とうもろこしを あつめる ほうほうと かぼちゃから あつめるほうほうが あります。
        courseC_harvester_loops7_b: このパズルをクリアするは、ふくすうの`くりかえし`をつかいます。
      courseC_harvester_loops7_2018:
        courseC_harvester_loops7_a: さいしょに とうもろこしを あつめる ほうほうと かぼちゃから あつめるほうほうが あります。
        courseC_harvester_loops7_b: このパズルをクリアするは、ふくすうの`くりかえし`をつかいます。
      courseC_harvester_loops7_2019:
        courseC_harvester_loops7_a: さいしょに とうもろこしを あつめる ほうほうと かぼちゃから あつめるほうほうが あります。
        courseC_harvester_loops7_b: このパズルをクリアするは、ふくすうの`くりかえし`をつかいます。
      courseC_harvester_loops8:
        courseC_harvester_loops8_a: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
        courseC_harvester_loops8_b: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops8_2018:
        courseC_harvester_loops8_a: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
        courseC_harvester_loops8_b: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops8_2019:
        courseC_harvester_loops8_a: ほかのパズルにあった かいだんのパターンに にてない？プログラムは にてるけど、さくもつを
          あつめるのを わすれないでね。
        courseC_harvester_loops8_b: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseC_harvester_loops_challenge1a:
        courseC_harvester_loops_challenge1_a: くりかえしを つかわないで クリアするのは、とても たいへん！
        courseC_harvester_loops_challenge1_b: "`前にすすむ` と `ピック トウモロコシ` をひつような回数くりかえして、角まで来たら、
          `みぎにまがる`でまがります。"
        courseC_harvester_loops_challenge1_c: |-
          一番いい方法は、`くりかえし` のなかで`くりかえし` を つかう やり方です。

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge1a_2018:
        courseC_harvester_loops_challenge1_a: くりかえしを つかわないで クリアするのは、とても たいへん！
        courseC_harvester_loops_challenge1_b: "`前にすすむ` と `ピック トウモロコシ` をひつような回数くりかえして、角まで来たら、
          `みぎにまがる`でまがります。"
        courseC_harvester_loops_challenge1_c: |-
          一番いい方法は、`くりかえし` のなかで`くりかえし` を つかう やり方です。

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge1a_2019:
        courseC_harvester_loops_challenge1_a: くりかえしを つかわないで クリアするのは、とても たいへん！
        courseC_harvester_loops_challenge1_b: "`前にすすむ` と `ピック トウモロコシ` をひつような回数くりかえして、角まで来たら、
          `みぎにまがる`でまがります。"
        courseC_harvester_loops_challenge1_c: |-
          一番いい方法は、`くりかえし` のなかで`くりかえし` を つかう やり方です。

          <xml><block type="controls_repeat">
                  <title name="TIMES">2</title>
                  <statement name="DO">
                    <block type="controls_repeat">
                      <title name="TIMES">4</title>
                      <statement name="DO">
                        <block type="maze_move">
                          <title name="DIR">moveForward</title>
                          <next>
                            <block type="harvester_corn"/>
                          </next>
                        </block>
                      </statement>
                      <next>
                        <block type="maze_turn">
                          <title name="DIR">turnRight</title>
                        </block>
                      </next>
                    </block>
                  </statement>
                  </block></xml>
      courseC_harvester_loops_challenge2:
        courseC_harvester_loops_challenge2_a: ゆっくり考えて！ジグザグに 行く ほうほう や まわりから あつめていく
          ほうほう など、このパズルを クリアする ほうほうは ほかにも たくさん あります。
        courseC_harvester_loops_challenge2_b: "`前にすすむ` と `ピック レタス` をひつような回数くりかえして、角まで来たら
          まがります。"
        courseC_harvester_loops_challenge2_c: |-
          ジグザグに行くやり方は、赤い線の行き方を ２回 くりかせば 20ブロックで パズルを クリアできます。

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: まわりから あつめていく ほうほう だと、18ブロックですみます！
      courseC_harvester_loops_challenge2_2018:
        courseC_harvester_loops_challenge2_a: ゆっくり考えて！ジグザグに 行く ほうほう や まわりから あつめていく
          ほうほう など、このパズルを クリアする ほうほうは ほかにも たくさん あります。
        courseC_harvester_loops_challenge2_b: "`前にすすむ` と `ピック レタス` をひつような回数くりかえして、角まで来たら
          まがります。"
        courseC_harvester_loops_challenge2_c: |-
          ジグザグに行くやり方は、赤い線の行き方を ２回 くりかせば 20ブロックで パズルを クリアできます。

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: まわりから あつめていく ほうほう だと、18ブロックですみます！
      courseC_harvester_loops_challenge2_2019:
        courseC_harvester_loops_challenge2_a: ゆっくり考えて！ジグザグに 行く ほうほう や まわりから あつめていく
          ほうほう など、このパズルを クリアする ほうほうは ほかにも たくさん あります。
        courseC_harvester_loops_challenge2_b: "`前にすすむ` と `ピック レタス` をひつような回数くりかえして、角まで来たら
          まがります。"
        courseC_harvester_loops_challenge2_c: |-
          ジグザグに行くやり方は、赤い線の行き方を ２回 くりかせば 20ブロックで パズルを クリアできます。

          ![](<https://images.code.org/26cfaf6fe4a275e266b51e9ef3711171-image-1493502306380.18.52 PM copy.png>)
        courseC_harvester_loops_challenge2_d: まわりから あつめていく ほうほう だと、18ブロックですみます！
      courseC_maze_debugging2:
        courseC_maze_debugging2_c: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging2_2018:
        courseC_maze_debugging2_c: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging2_2019:
        courseC_maze_debugging2_c: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging3:
        courseC_maze_debugging3_b: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging3_2018:
        courseC_maze_debugging3_b: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_debugging3_2019:
        courseC_maze_debugging3_b: どこが わるいか わからない？なんども プログラムを うごかして みてみよう。
      courseC_maze_loops_challenge1a:
        courseC_maze_loops_challenge1_a: ２つにわけて考えてみよう。それぞれに くりかえしの パターンが あります。
        courseC_maze_loops_challenge1_b: かいだんのパターンのとき、どんなふうにくりかえしをつかったか思い出して。
      courseC_maze_loops_challenge1a_2018:
        courseC_maze_loops_challenge1_a: ２つにわけて考えてみよう。それぞれに くりかえしの パターンが あります。
        courseC_maze_loops_challenge1_b: かいだんのパターンのとき、どんなふうにくりかえしをつかったか思い出して。
      courseC_maze_loops_challenge1a_2019:
        courseC_maze_loops_challenge1_a: ２つにわけて考えてみよう。それぞれに くりかえしの パターンが あります。
        courseC_maze_loops_challenge1_b: かいだんのパターンのとき、どんなふうにくりかえしをつかったか思い出して。
      courseC_maze_programming1:
        courseC_maze_programming1_0: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming1_2018:
        courseC_maze_programming1_0: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming1_2019:
        courseC_maze_programming1_0: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming2:
        courseC_maze_programming2_a: ツールボックスから<xml><block type="maze_moveForward"/></xml>
          をとり出して、 <xml><block type="when_run"/></xml> にくっつけてみよう。
        courseC_maze_programming2_b: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming2_2018:
        courseC_maze_programming2_a: ツールボックスから<xml><block type="maze_moveForward"/></xml>
          をとり出して、 <xml><block type="when_run"/></xml> にくっつけてみよう。
        courseC_maze_programming2_b: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming2_2019:
        courseC_maze_programming2_a: ツールボックスから<xml><block type="maze_moveForward"/></xml>
          をとり出して、 <xml><block type="when_run"/></xml> にくっつけてみよう。
        courseC_maze_programming2_b: すべてのブロックがきちんとつながっているかをかくにんして、もういちど「実行」をクリックしてみよう。
      courseC_maze_programming3:
        courseC_maze_programming3_a: さいしょにコードを実行して、追加する必要があるものを調べてみてください。
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          まん中にあるブロックをけすには、そのブロックから下にあるブロックごとをはずします。
          そこからいらないブロックをツールボックスにドラックして
          のこったブロックをもとにもどします。
      courseC_maze_programming3_2018:
        courseC_maze_programming3_a: さいしょにコードを実行して、追加する必要があるものを調べてみてください。
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          まん中にあるブロックをけすには、そのブロックから下にあるブロックごとをはずします。
          そこからいらないブロックをツールボックスにドラックして
          のこったブロックをもとにもどします。
      courseC_maze_programming3_2019:
        courseC_maze_programming3_a: さいしょにコードを実行して、追加する必要があるものを調べてみてください。
        courseC_maze_programming3_b: |-
          ![](https://images.code.org/afddde0e99d5d270c658de0c03dd6e2c-image-1481174000309.gif)
          まん中にあるブロックをけすには、そのブロックから下にあるブロックごとをはずします。
          そこからいらないブロックをツールボックスにドラックして
          のこったブロックをもとにもどします。
      courseC_maze_programming4:
        courseC_maze_programming4_a: |-
          トリさんがまがるほうこうは、トリさんがむいているほうこうできまります。
          右にまがるで、トリさんは下にうごきます。
        courseC_maze_programming4_b: |-
          下のようにブロックをおいてみよう。

          -   前にすすむ
          -   どちらかにまがる
          -   前にすすむ
          -   さっきとはべつのほうこうにまがる
          -   前にすすむ
      courseC_maze_programming4_2018:
        courseC_maze_programming4_a: |-
          トリさんがまがるほうこうは、トリさんがむいているほうこうできまります。
          右にまがるで、トリさんは下にうごきます。
        courseC_maze_programming4_b: |-
          下のようにブロックをおいてみよう。

          -   前にすすむ
          -   どちらかにまがる
          -   前にすすむ
          -   さっきとはべつのほうこうにまがる
          -   前にすすむ
      courseC_maze_programming4_2019:
        courseC_maze_programming4_a: |-
          トリさんがまがるほうこうは、トリさんがむいているほうこうできまります。
          右にまがるで、トリさんは下にうごきます。
        courseC_maze_programming4_b: |-
          下のようにブロックをおいてみよう。

          -   前にすすむ
          -   どちらかにまがる
          -   前にすすむ
          -   さっきとはべつのほうこうにまがる
          -   前にすすむ
      courseC_maze_programming5:
        courseC_maze_programming5_b: |-
          トリさんを一回だけまがらせて、このパズルをクリアしよう。
          どこでまがればいいかな？
        courseC_maze_programming5_c: ２回前に進んで、まがって。また２回前に進もう。
      courseC_maze_programming5_2018:
        courseC_maze_programming5_b: |-
          トリさんを一回だけまがらせて、このパズルをクリアしよう。
          どこでまがればいいかな？
        courseC_maze_programming5_c: ２回前に進んで、まがって。また２回前に進もう。
      courseC_maze_programming5_2019:
        courseC_maze_programming5_b: |-
          トリさんを一回だけまがらせて、このパズルをクリアしよう。
          どこでまがればいいかな？
        courseC_maze_programming5_c: ２回前に進んで、まがって。また２回前に進もう。
      courseC_maze_programming6:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
        courseC_maze_programming6_b: どんな行き方があるのか、ゆびでなぞってみよう。
        courseC_maze_programming6_c: かべの方をむいているので、さいしょにまがってみよう。
        courseC_maze_programming6_d: 赤い道を行ってみよう！
      courseC_maze_programming6_2018:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
        courseC_maze_programming6_b: どんな行き方があるのか、ゆびでなぞってみよう。
        courseC_maze_programming6_c: かべの方をむいているので、さいしょにまがってみよう。
        courseC_maze_programming6_d: 赤い道を行ってみよう！
      courseC_maze_programming6_2019:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
        courseC_maze_programming6_b: どんな行き方があるのか、ゆびでなぞってみよう。
        courseC_maze_programming6_c: かべの方をむいているので、さいしょにまがってみよう。
        courseC_maze_programming6_d: 赤い道を行ってみよう！
      courseC_maze_programming7:
        courseC_maze_programming7_a: "”ステップ”を使うと ブロックが １つづつ 実行（じっこう）されて どこがまちがっているのか
          すぐに見つけることができます。"
        courseC_maze_programming7_b: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_maze_programming7_2018:
        courseC_maze_programming7_a: "”ステップ”を使うと ブロックが １つづつ 実行（じっこう）されて どこがまちがっているのか
          すぐに見つけることができます。"
        courseC_maze_programming7_b: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_maze_programming7_2019:
        courseC_maze_programming7_a: "”ステップ”を使うと ブロックが １つづつ 実行（じっこう）されて どこがまちがっているのか
          すぐに見つけることができます。"
        courseC_maze_programming7_b: わからない ときは、かみに かいて パターンを さがしてみよう。
      courseC_maze_programming8:
        courseC_maze_programming8_a: わからなくなったら、"ステップ"ボタンで コードを １行づつ 実行（じっこう）させてみよう。
      courseC_maze_programming8_2018:
        courseC_maze_programming8_a: わからなくなったら、"ステップ"ボタンで コードを １行づつ 実行（じっこう）させてみよう。
      courseC_maze_programming8_2019:
        courseC_maze_programming8_a: わからなくなったら、"ステップ"ボタンで コードを １行づつ 実行（じっこう）させてみよう。
      courseC_maze_programming_challenge1:
        courseC_maze_programming_challenge1_a: ブタのところへ行く道をゆびでなぞって、それをプログラムしてみよう！
      courseC_maze_programming_challenge1_2018:
        courseC_maze_programming_challenge1_a: ブタのところへ行く道をゆびでなぞって、それをプログラムしてみよう！
      courseC_maze_programming_challenge1_2019:
        courseC_maze_programming_challenge1_a: ブタのところへ行く道をゆびでなぞって、それをプログラムしてみよう！
      courseC_maze_programming_challenge2:
        courseC_maze_programming_challenge2_a: 後ろに行くときは、まがる方向（ほうこう）に気をつけよう。
        courseC_maze_programming_challenge2_b: さいたんルートは5ブロックでクリアできます。<xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを使います！
      courseC_maze_programming_challenge2_2018:
        courseC_maze_programming_challenge2_a: 後ろに行くときは、まがる方向（ほうこう）に気をつけよう。
        courseC_maze_programming_challenge2_b: さいたんルートは5ブロックでクリアできます。<xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを使います！
      courseC_maze_programming_challenge2_2019:
        courseC_maze_programming_challenge2_a: 後ろに行くときは、まがる方向（ほうこう）に気をつけよう。
        courseC_maze_programming_challenge2_b: さいたんルートは5ブロックでクリアできます。<xml><block type="controls_repeat_dropdown"><title
          name="TIMES" config="3-10">???</title></block></xml> ブロックを使います！
      courseC_starWars_loops1:
        courseC_starWars_loops1_a: スクラップのうえを とおることで BB-8は スクラップを あつめます。
        courseC_starWars_loops1_c: このパズルをクリアするには、`前にすすむ` ブロックを ５こ つかいます。
      courseC_starWars_loops10:
        courseC_starWars_loops10_a: 大きなかいだんが 見えるかな？今まで やったなかで どのパターンが つかえるか 考えてみよう。
        courseC_starWars_loops10_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
      courseC_starWars_loops10_2018:
        courseC_starWars_loops10_a: 大きなかいだんが 見えるかな？今まで やったなかで どのパターンが つかえるか 考えてみよう。
        courseC_starWars_loops10_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
      courseC_starWars_loops10_2019:
        courseC_starWars_loops10_a: 大きなかいだんが 見えるかな？今まで やったなかで どのパターンが つかえるか 考えてみよう。
        courseC_starWars_loops10_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
      courseC_starWars_loops1_2018:
        courseC_starWars_loops1_a: スクラップのうえを とおることで BB-8は スクラップを あつめます。
        courseC_starWars_loops1_c: このパズルをクリアするには、`前にすすむ` ブロックを ５こ つかいます。
      courseC_starWars_loops1_2019:
        courseC_starWars_loops1_a: スクラップのうえを とおることで BB-8は スクラップを あつめます。
        courseC_starWars_loops1_c: このパズルをクリアするには、`前にすすむ` ブロックを ５こ つかいます。
      courseC_starWars_loops2:
        courseC_starWars_loops2_a: コードをくりかえすには、`くりかえし`ブロックの中に くりかえしたい ブロックを 入れます。
      courseC_starWars_loops2_2018:
        courseC_starWars_loops2_a: コードをくりかえすには、`くりかえし`ブロックの中に くりかえしたい ブロックを 入れます。
      courseC_starWars_loops2_2019:
        courseC_starWars_loops2_a: コードをくりかえすには、`くりかえし`ブロックの中に くりかえしたい ブロックを 入れます。
      courseC_starWars_loops4:
        courseC_starWars_loops4_c: ”ひだりに まがる”ブロックの中にある 小さな やじるしを おすと "みぎに まがる"に なります。
        courseC_starWars_loops4_a: "`くりかえし` ブロックを２つ つかいましょう。"
        courseC_starWars_loops4_b: "`くりかえし`ブロックの中に入れるのは、`前に すすむ` だけです。"
      courseC_starWars_loops4_2018:
        courseC_starWars_loops4_c: ”ひだりに まがる”ブロックの中にある 小さな やじるしを おすと "みぎに まがる"に なります。
        courseC_starWars_loops4_a: "`くりかえし` ブロックを２つ つかいましょう。"
        courseC_starWars_loops4_b: "`くりかえし`ブロックの中に入れるのは、`前に すすむ` だけです。"
      courseC_starWars_loops4_2019:
        courseC_starWars_loops4_c: ”ひだりに まがる”ブロックの中にある 小さな やじるしを おすと "みぎに まがる"に なります。
        courseC_starWars_loops4_a: "`くりかえし` ブロックを２つ つかいましょう。"
        courseC_starWars_loops4_b: "`くりかえし`ブロックの中に入れるのは、`前に すすむ` だけです。"
      courseC_starWars_loops5:
        courseC_starWars_loops5_b: 下に行って まがってから 前にすすもう。
        courseC_starWars_loops5_a: 向きをかえて １つ`前に すすむ`、また向きをかえて、こんどは、`くりかえし`をつかいます。
      courseC_starWars_loops6:
        courseC_starWars_loops6_a: すべてのうごきを紙にかいて、くりかえしのパターンを見つけよう。
        courseC_starWars_loops6_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
      courseC_starWars_loops6_2018:
        courseC_starWars_loops6_a: すべてのうごきを紙にかいて、くりかえしのパターンを見つけよう。
        courseC_starWars_loops6_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
      courseC_starWars_loops6_2019:
        courseC_starWars_loops6_a: すべてのうごきを紙にかいて、くりかえしのパターンを見つけよう。
        courseC_starWars_loops6_b: |-
          さらに短いプログラムにしたいときは、`くりかえし`のなかで`くりかえし`をつかってみよう。
          これを**入れ子にする**といいます。
      courseC_starWars_loops7:
        courseC_starWars_loops7_a: むつかしいかな？かいだん みたいに すすんでみよう。これで すべてのスクラップを あつめることが
          できるかな？
        courseC_starWars_loops7_b: わからなくなったら、すべての動きを紙に書いて、くりかえしのパターンをさがそう。
      courseC_starWars_loops7_2018:
        courseC_starWars_loops7_a: むつかしいかな？かいだん みたいに すすんでみよう。これで すべてのスクラップを あつめることが
          できるかな？
        courseC_starWars_loops7_b: わからなくなったら、すべての動きを紙に書いて、くりかえしのパターンをさがそう。
      courseC_starWars_loops7_2019:
        courseC_starWars_loops7_a: むつかしいかな？かいだん みたいに すすんでみよう。これで すべてのスクラップを あつめることが
          できるかな？
        courseC_starWars_loops7_b: わからなくなったら、すべての動きを紙に書いて、くりかえしのパターンをさがそう。
      courseC_starWars_loops8:
        course_starWars_loops8_a: 少しずつ 考えて やってみよう。ゆっくりやろうよ。いっぱつで クリアしなくて いいだよ。
        course_starWars_loops8_b: ぜんはんは、かいだんみたいに すすむことを 考えよう。そのあと、どうすれば いいかな？
        course_starWars_loops8_c: |-
          こんなふうに行ってみよう。

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2018:
        course_starWars_loops8_a: 少しずつ 考えて やってみよう。ゆっくりやろうよ。いっぱつで クリアしなくて いいだよ。
        course_starWars_loops8_b: ぜんはんは、かいだんみたいに すすむことを 考えよう。そのあと、どうすれば いいかな？
        course_starWars_loops8_c: |-
          こんなふうに行ってみよう。

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops8_2019:
        course_starWars_loops8_a: 少しずつ 考えて やってみよう。ゆっくりやろうよ。いっぱつで クリアしなくて いいだよ。
        course_starWars_loops8_b: ぜんはんは、かいだんみたいに すすむことを 考えよう。そのあと、どうすれば いいかな？
        course_starWars_loops8_c: |-
          こんなふうに行ってみよう。

          ![](https://images.code.org/7d696dd3b1e6984a1d6041f366d5c96b-image-1510198804955.37.04.png)
      courseC_starWars_loops9:
        course_starWars_loops9_b: "`くりかえし`の中には、１ついじょう ブロックを 入れることが できます。"
        course_starWars_loops9_c: |-
          このパズルをクリアするのに、ひだりにまがるはつかいません。みぎにまがるだけでOK。

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2018:
        course_starWars_loops9_b: "`くりかえし`の中には、１ついじょう ブロックを 入れることが できます。"
        course_starWars_loops9_c: |-
          このパズルをクリアするのに、ひだりにまがるはつかいません。みぎにまがるだけでOK。

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseC_starWars_loops9_2019:
        course_starWars_loops9_b: "`くりかえし`の中には、１ついじょう ブロックを 入れることが できます。"
        course_starWars_loops9_c: |-
          このパズルをクリアするのに、ひだりにまがるはつかいません。みぎにまがるだけでOK。

          ![](https://images.code.org/3dd00d424aa4112934053548b48bbb69-image-1510198997590.40.57.png)
      courseD_artist_nestedLoops1:
        courseD_artist_nestedLoops1_a: 前に進んで右に曲がれば、かんたんに三角形をかくことができます。
        courseD_artist_nestedLoops1_b: "`くりかえし`の中に ２つ ブロックを 入れて 三角形を かいてみよう。どのブロックを使う？"
        courseD_artist_nestedLoops1_c: すべてのステップを 紙に 書いてみて、くりかえしの中に 入れる パターンを 見つけよう。
      courseD_artist_nestedLoops1_2018:
        courseD_artist_nestedLoops1_a: 前に進んで右に曲がれば、かんたんに三角形をかくことができます。
        courseD_artist_nestedLoops1_b: "`くりかえし`の中に ２つ ブロックを 入れて 三角形を かいてみよう。どのブロックを使う？"
        courseD_artist_nestedLoops1_c: すべてのステップを 紙に 書いてみて、くりかえしの中に 入れる パターンを 見つけよう。
      courseD_artist_nestedLoops1_2019:
        courseD_artist_nestedLoops1_a: 前に進んで右に曲がれば、かんたんに三角形をかくことができます。
        courseD_artist_nestedLoops1_b: "`くりかえし`の中に ２つ ブロックを 入れて 三角形を かいてみよう。どのブロックを使う？"
        courseD_artist_nestedLoops1_c: すべてのステップを 紙に 書いてみて、くりかえしの中に 入れる パターンを 見つけよう。
      courseD_artist_nestedLoops1a:
        courseD_artist_nestedLoops1a_a: |-
          全部で ６つの三角形を かきます。１つ かき終わったら、60度 曲がって 次の三角形を かきます。

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: くりかえしを使って 三角形を かくと、スタートした じょうたいに もどります。60度曲がれば、どんどん三角形を
          かいていくことが できます。
        courseD_artist_nestedLoops1a_c: 色を変えたいときは、`色は`を使います。見本と 同じ色に しなくても だいじょうぶだよ。
      courseD_artist_nestedLoops1a_2018:
        courseD_artist_nestedLoops1a_b: くりかえしを使って 三角形を かくと、スタートした じょうたいに もどります。60度曲がれば、どんどん三角形を
          かいていくことが できます。
        courseD_artist_nestedLoops1a_c: 色を変えたいときは、`色は`を使います。見本と 同じ色に しなくても だいじょうぶだよ。
      courseD_artist_nestedLoops1a_2019:
        courseD_artist_nestedLoops1a_a: |-
          全部で ６つの三角形を かきます。１つ かき終わったら、60度 曲がって 次の三角形を かきます。

          ![](https://images.code.org/ad6c6d98298df9f4e3cea5bbe5ec776e-image-1497476332024.2_solution2.gif)
        courseD_artist_nestedLoops1a_b: くりかえしを使って 三角形を かくと、スタートした じょうたいに もどります。60度曲がれば、どんどん三角形を
          かいていくことが できます。
        courseD_artist_nestedLoops1a_c: 色を変えたいときは、`色は`を使います。見本と 同じ色に しなくても だいじょうぶだよ。
      courseD_artist_nestedLoops2:
        courseD_artist_nestedLoops2_a: 三角形をかく くりかえしを `くりかえし` の中に 入れてみよう。
        courseD_artist_nestedLoops2_b: くりかえしのなかで 三角形を １つかいた後 `曲がる`を 入れるのを わすれないで。
      courseD_artist_nestedLoops2_2018:
        courseD_artist_nestedLoops2_a: 三角形をかく くりかえしを `くりかえし` の中に 入れてみよう。
        courseD_artist_nestedLoops2_b: くりかえしのなかで 三角形を １つかいた後 `曲がる`を 入れるのを わすれないで。
      courseD_artist_nestedLoops2_2019:
        courseD_artist_nestedLoops2_a: 三角形をかく くりかえしを `くりかえし` の中に 入れてみよう。
        courseD_artist_nestedLoops2_b: くりかえしのなかで 三角形を １つかいた後 `曲がる`を 入れるのを わすれないで。
      courseD_artist_nestedLoops3:
        courseD_artist_nestedLoops3_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
        courseD_artist_nestedLoops3_b: '短いプログラムでパズルをクリアするのは、くりかえしの入れ子を使いましょう。 '
        courseD_artist_nestedLoops3_c: "`くりかえし` を使って 正方形を かいたら、40ピクセルジャンプして、また 正方形を
          かきます。これを８回 くりかします。 "
      courseD_artist_nestedLoops3_2018:
        courseD_artist_nestedLoops3_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
        courseD_artist_nestedLoops3_b: '短いプログラムでパズルをクリアするのは、くりかえしの入れ子を使いましょう。 '
        courseD_artist_nestedLoops3_c: "`くりかえし` を使って 正方形を かいたら、40ピクセルジャンプして、また 正方形を
          かきます。これを８回 くりかします。 "
      courseD_artist_nestedLoops3_2019:
        courseD_artist_nestedLoops3_a: |-
          「前にジャンプ」ブロックを使って、1つの四角形の上部から次に描き始めるところまで移動させてみてください。

          正方形の高さが20ピクセルでそれぞれが20ピクセル離れているとすると、どれだけジャンプすればよいでしょう？
        courseD_artist_nestedLoops3_b: '短いプログラムでパズルをクリアするのは、くりかえしの入れ子を使いましょう。 '
        courseD_artist_nestedLoops3_c: "`くりかえし` を使って 正方形を かいたら、40ピクセルジャンプして、また 正方形を
          かきます。これを８回 くりかします。 "
      courseD_artist_nestedLoops4:
        courseD_artist_nestedLoops4_d: まがる**前に**前に進むようにしてね。ぎゃくだと、びみょうに円が ずれてしまいます。
        courseD_artist_nestedLoops4_a: |-
          円をかく方法

          -   360 回 くりかえす
              -   前にすすむ 1 ピクセル
              -   まがる ひだりに 1 度
        courseD_artist_nestedLoops4_b: 次の円を かき始める前に 50ピクセル ジャンプするのを わすれないで。
        courseD_artist_nestedLoops4_c: くりかえしを 入れ子にして 円を ４つかいて。
      courseD_artist_nestedLoops4_2018:
        courseD_artist_nestedLoops4_d: まがる**前に**前に進むようにしてね。ぎゃくだと、びみょうに円が ずれてしまいます。
        courseD_artist_nestedLoops4_a: |-
          円をかく方法

          -   360 回 くりかえす
              -   前にすすむ 1 ピクセル
              -   まがる ひだりに 1 度
        courseD_artist_nestedLoops4_b: 次の円を かき始める前に 50ピクセル ジャンプするのを わすれないで。
        courseD_artist_nestedLoops4_c: くりかえしを 入れ子にして 円を ４つかいて。
      courseD_artist_nestedLoops4_2019:
        courseD_artist_nestedLoops4_d: まがる**前に**前に進むようにしてね。ぎゃくだと、びみょうに円が ずれてしまいます。
        courseD_artist_nestedLoops4_a: |-
          円をかく方法

          -   360 回 くりかえす
              -   前にすすむ 1 ピクセル
              -   まがる ひだりに 1 度
        courseD_artist_nestedLoops4_b: 次の円を かき始める前に 50ピクセル ジャンプするのを わすれないで。
        courseD_artist_nestedLoops4_c: くりかえしを 入れ子にして 円を ４つかいて。
      courseD_artist_nestedLoops5:
        courseD_artist_nestedLoops5_a: |-
          こんなふうにやってみよう

          -   くりかえし 4 回
              -   円をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 90 度
        courseD_artist_nestedLoops5_b: 円は１ピクセル進んで１度まがるのを360回くりかしてかきます。
      courseD_artist_nestedLoops5_2018:
        courseD_artist_nestedLoops5_a: |-
          こんなふうにやってみよう

          -   くりかえし 4 回
              -   円をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 90 度
        courseD_artist_nestedLoops5_b: 円は１ピクセル進んで１度まがるのを360回くりかしてかきます。
      courseD_artist_nestedLoops5_2019:
        courseD_artist_nestedLoops5_a: |-
          こんなふうにやってみよう

          -   くりかえし 4 回
              -   円をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 90 度
        courseD_artist_nestedLoops5_b: 円は１ピクセル進んで１度まがるのを360回くりかしてかきます。
      courseD_artist_nestedLoops7:
        courseD_artist_nestedLoops7_a: ここでも くりかえしの 入れ子を 使います。さいしょに 四角形を かく くりかえしを
          つくって、それを くりかえしの中に入れます。
        courseD_artist_nestedLoops7_b: |-
          くりかえしを入れ子にします。中に入れるのは、四角形をかく くりかえしです。.

          -   くりかえし 6 回
              -   四角形をかく
              -   前にジャンプする **50 ピクセル**
              -   まがる 右に **60 度**
      courseD_artist_nestedLoops7_2018:
        courseD_artist_nestedLoops7_a: ここでも くりかえしの 入れ子を 使います。さいしょに 四角形を かく くりかえしを
          つくって、それを くりかえしの中に入れます。
        courseD_artist_nestedLoops7_b: |-
          くりかえしを入れ子にします。中に入れるのは、四角形をかく くりかえしです。.

          -   くりかえし 6 回
              -   四角形をかく
              -   前にジャンプする **50 ピクセル**
              -   まがる 右に **60 度**
      courseD_artist_nestedLoops7_2019:
        courseD_artist_nestedLoops7_a: ここでも くりかえしの 入れ子を 使います。さいしょに 四角形を かく くりかえしを
          つくって、それを くりかえしの中に入れます。
        courseD_artist_nestedLoops7_b: |-
          くりかえしを入れ子にします。中に入れるのは、四角形をかく くりかえしです。.

          -   くりかえし 6 回
              -   四角形をかく
              -   前にジャンプする **50 ピクセル**
              -   まがる 右に **60 度**
      courseD_artist_nestedLoops8:
        courseD_artist_nestedLoops8_a: ８つの六角形をかくから、次の六角形をかく前に、**45 度** まがります。六角形を8つ
          かいて 一周するから 360÷8で 45度。
        courseD_artist_nestedLoops8_b: わからなくなったら、１つ前のパズルに もどって、どこを かえればいいか 考えてみよう。
        courseD_artist_nestedLoops8_c: |-
          くりかえしの入れ子を使おう

          -   くりかえし 8 回
              -   六角形をかく
              -   前に ジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoops8_2018:
        courseD_artist_nestedLoops8_a: ８つの六角形をかくから、次の六角形をかく前に、**45 度** まがります。六角形を8つ
          かいて 一周するから 360÷8で 45度。
        courseD_artist_nestedLoops8_b: わからなくなったら、１つ前のパズルに もどって、どこを かえればいいか 考えてみよう。
        courseD_artist_nestedLoops8_c: |-
          くりかえしの入れ子を使おう

          -   くりかえし 8 回
              -   六角形をかく
              -   前に ジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoops8_2019:
        courseD_artist_nestedLoops8_a: ８つの六角形をかくから、次の六角形をかく前に、**45 度** まがります。六角形を8つ
          かいて 一周するから 360÷8で 45度。
        courseD_artist_nestedLoops8_b: わからなくなったら、１つ前のパズルに もどって、どこを かえればいいか 考えてみよう。
        courseD_artist_nestedLoops8_c: |-
          くりかえしの入れ子を使おう

          -   くりかえし 8 回
              -   六角形をかく
              -   前に ジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoops9:
        courseD_artist_nestedLoops9_a: 前にやったように くりかえしの 入れ子を 使います。まずは、四角形を かいてみよう。
        courseD_artist_nestedLoops9_b: 四角形を かくループの後に、三角形を かくループを ついかします。
        courseD_artist_nestedLoops9_c: |-
          ２つのくりかえしの入れ子を使います

          -   くりかえし 8 回
              -   四角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
          -   くりかえし 8 回
              -   三角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoops9_2018:
        courseD_artist_nestedLoops9_a: 前にやったように くりかえしの 入れ子を 使います。まずは、四角形を かいてみよう。
        courseD_artist_nestedLoops9_b: 四角形を かくループの後に、三角形を かくループを ついかします。
        courseD_artist_nestedLoops9_c: |-
          ２つのくりかえしの入れ子を使います

          -   くりかえし 8 回
              -   四角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
          -   くりかえし 8 回
              -   三角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoops9_2019:
        courseD_artist_nestedLoops9_a: 前にやったように くりかえしの 入れ子を 使います。まずは、四角形を かいてみよう。
        courseD_artist_nestedLoops9_b: 四角形を かくループの後に、三角形を かくループを ついかします。
        courseD_artist_nestedLoops9_c: |-
          ２つのくりかえしの入れ子を使います

          -   くりかえし 8 回
              -   四角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
          -   くりかえし 8 回
              -   三角形をかく
              -   前にジャンプする 50 ピクセル
              -   まがる 右に 45 度
      courseD_artist_nestedLoopsFP:
        courseD_artist_nestedLoopsFP_a: くりかえしの入れ子を使って、一辺が50ピクセルの六角形を48度まがりながら15個かきます。
        courseD_artist_nestedLoopsFP_b: このパターンは、円（前に１ピクセルすすんで、１度まがるを360回くりかえす）を 使っていることを
          のぞくと、前に やったパターンと 同じです。
        courseD_artist_nestedLoopsFP_c: くりかえしの入れ子を使って、一辺が50ピクセルの五角形を48度まがりながら15個かきます。
      courseD_artist_nestedLoopsFP_2018:
        courseD_artist_nestedLoopsFP_a: くりかえしの入れ子を使って、一辺が50ピクセルの六角形を48度まがりながら15個かきます。
        courseD_artist_nestedLoopsFP_b: このパターンは、円（前に１ピクセルすすんで、１度まがるを360回くりかえす）を 使っていることを
          のぞくと、前に やったパターンと 同じです。
        courseD_artist_nestedLoopsFP_c: くりかえしの入れ子を使って、一辺が50ピクセルの五角形を48度まがりながら15個かきます。
      courseD_artist_nestedLoopsFP_2019:
        courseD_artist_nestedLoopsFP_a: くりかえしの入れ子を使って、一辺が50ピクセルの六角形を48度まがりながら15個かきます。
        courseD_artist_nestedLoopsFP_b: このパターンは、円（前に１ピクセルすすんで、１度まがるを360回くりかえす）を 使っていることを
          のぞくと、前に やったパターンと 同じです。
        courseD_artist_nestedLoopsFP_c: くりかえしの入れ子を使って、一辺が50ピクセルの五角形を48度まがりながら15個かきます。
      courseD_artist_nestedLoops_challenge1:
        courseD_artist_nestedLoops_challenge1_a: はじめに線の色を青にして、一辺が50ピクセルの八角形をかいたら、45度まがりましょう。
        courseD_artist_nestedLoops_challenge1_b: 次に線の色を緑にして、50ピクセル前にすすむと、120度左にまがるを
          使って 三角形をかきます。
        courseD_artist_nestedLoops_challenge1_c: ２つの図形を かいたら、90度まががる前に 50ピクセル前に ジャンプします。
        courseD_artist_nestedLoops_challenge1_d: それをくりかえしの中に入れて、4回繰くりかえすようにすれば かんせいです。
      courseD_artist_nestedLoops_challenge1_2018:
        courseD_artist_nestedLoops_challenge1_a: はじめに線の色を青にして、一辺が50ピクセルの八角形をかいたら、45度まがりましょう。
        courseD_artist_nestedLoops_challenge1_b: 次に線の色を緑にして、50ピクセル前にすすむと、120度左にまがるを
          使って 三角形をかきます。
        courseD_artist_nestedLoops_challenge1_c: ２つの図形を かいたら、90度まががる前に 50ピクセル前に ジャンプします。
        courseD_artist_nestedLoops_challenge1_d: それをくりかえしの中に入れて、4回繰くりかえすようにすれば かんせいです。
      courseD_artist_nestedLoops_challenge1_2019:
        courseD_artist_nestedLoops_challenge1_a: はじめに線の色を青にして、一辺が50ピクセルの八角形をかいたら、45度まがりましょう。
        courseD_artist_nestedLoops_challenge1_b: 次に線の色を緑にして、50ピクセル前にすすむと、120度左にまがるを
          使って 三角形をかきます。
        courseD_artist_nestedLoops_challenge1_c: ２つの図形を かいたら、90度まががる前に 50ピクセル前に ジャンプします。
        courseD_artist_nestedLoops_challenge1_d: それをくりかえしの中に入れて、4回繰くりかえすようにすれば かんせいです。
      courseD_artist_nestedLoops_challenge2:
        courseD_artist_nestedLoops_challenge2_a: 正八角形をかくには、45度まがるを８つ使います。
        courseD_artist_nestedLoops_challenge2_b: 正方形をかくには、90度まがるを4つ使います。
      courseD_artist_nestedLoops_challenge2_2018:
        courseD_artist_nestedLoops_challenge2_a: 正八角形をかくには、45度まがるを８つ使います。
        courseD_artist_nestedLoops_challenge2_b: 正方形をかくには、90度まがるを4つ使います。
      courseD_artist_nestedLoops_challenge2_2019:
        courseD_artist_nestedLoops_challenge2_a: 正八角形をかくには、45度まがるを８つ使います。
        courseD_artist_nestedLoops_challenge2_b: 正方形をかくには、90度まがるを4つ使います。
      courseD_artist_ramp11:
        courseD_artist_ramp11a: "`前にすすむ 100 ピクセル`の100を200にかえて、へんをかいてください。"
        courseD_artist_ramp11b: |-
          ４つのへんをかくには、`前にすすむ 200 ピクセル`を くりかえしのなかにいれます。くりかえしの回数は４だよ。

          まがるのをわすれないでね！
        courseD_artist_ramp11_c: くりかえしの中に`まがる`を入れてね！
      courseD_artist_ramp12:
        courseD_artist_ramp12_a: 四角形をかいてから三角形をかくか、三角形をかいてから四角形をかくか、やり方は２つ！
        courseD_artist_ramp12_b: ２つのパートに分けて、それぞれで くりかえしを 使おう。
      courseD_bee_debugging_challenge1a:
        courseD_bee_debugging_challenge1_b: 花のミツを集めて ハチミツを 作る くりかえしのパターンを見つけて、パズルをクリアしよう。
        courseD_bee_debugging_challenge1_c: |-
          さいごの列まで行ったら、下のパターンをくりかえしてみよう。

          <xml><block type="controls_repeat">
                              <title name="TIMES">2</title>
                              <statement name="DO">
                                <block type="maze_move">
                                  <title name="DIR">moveForward</title>
                                  <next>
                                    <block type="maze_honey"/>
                                  </next>
                                </block>
                              </statement>
                              <next>
                                <block type="maze_move">
                                  <title name="DIR">moveBackward</title>
                                </block>
                              </next>
                            </block></xml>
      courseD_collector_debugging1:
        courseD_collector_debugging1_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
        courseD_collector_debugging1_b: "`くりかえし`を 使えるところは、ほかに ありませんか？"
        courseD_collector_debugging1_c: たかもののある場所で `あつめる` を 使うことで でたからものを １つゲットできます。
      courseD_collector_debugging10_predict1:
        courseD_collector_debugging9_a: パズルをクリアする方法は いくつかあるけど、どのやり方でも 曲がるを 追加しないとね。
        courseD_collector_debugging9_b: １ステップ毎に動かして、思い通りに 動いているか たしかめよう。
      courseD_collector_debugging1a_2018:
        courseD_collector_debugging1_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
        courseD_collector_debugging1_c: たかもののある場所で `あつめる` を 使うことで でたからものを １つゲットできます。
      courseD_collector_debugging1a_2019:
        courseD_collector_debugging1_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
        courseD_collector_debugging1_c: たかもののある場所で `あつめる` を 使うことで でたからものを １つゲットできます。
      courseD_collector_debugging2:
        courseD_collector_debugging2_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
        courseD_collector_debugging2_b: "`くりかえし`を 使えるところは、ほかに ありませんか？"
        courseD_collector_debugging2_c: １つのへんにある たからものを 集めよう。それを ほかの ２つへんでも くりかえしすことが
          できるかな？
      courseD_collector_debugging2a_2018:
        courseD_collector_debugging2a_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
      courseD_collector_debugging2a_2019:
        courseD_collector_debugging2a_a: |-
          "ステップ" ボタンをおして、プログラムの １ステップ目が あっているか たしかめよう。

          ２ステップ目はどうかな？

          どこが、まちがっているか わかるかな？
      courseD_collector_debugging3:
        courseD_collector_debugging3_a: ローレルの動きに 足りない ところは ないかな？そこを かえたら どうなるかな？
        courseD_collector_debugging3_b: くりかえしを入れ子にして、プログラムを かんたんに してみよう。
      courseD_collector_debugging3a_2018:
        courseD_collector_debugging3_a: ローレルの動きに 足りない ところは ないかな？そこを かえたら どうなるかな？
      courseD_collector_debugging3a_2019:
        courseD_collector_debugging3_a: ローレルの動きに 足りない ところは ないかな？そこを かえたら どうなるかな？
      courseD_collector_debugging4:
        courseD_collector_debugging4_a: |-
          まずは、１列にならんだ たからものを あつめている ところを デバックしてみよう。

          どこが まちがっているかな？

          そこをなおしたら、今度はどうなるかな？
        courseD_collector_debugging4_b: |-
          階段みたいに進むのがむつかしいときは、実行するブロックを声に出しながら、指で画面をなぞってみよう。

          曲がるの場所があったことを わすれないでね！
        courseD_collector_debugging4_c: くりかえしの中のブロックが １つ 足りません。何が 足りないか わかるかな？
      courseD_collector_debugging4a_2018:
        courseD_collector_debugging4_a: |-
          まずは、１列にならんだ たからものを あつめている ところを デバックしてみよう。

          どこが まちがっているかな？

          そこをなおしたら、今度はどうなるかな？
        courseD_collector_debugging4_b: |-
          階段みたいに進むのがむつかしいときは、実行するブロックを声に出しながら、指で画面をなぞってみよう。

          曲がるの場所があったことを わすれないでね！
      courseD_collector_debugging4a_2019:
        courseD_collector_debugging4_a: |-
          まずは、１列にならんだ たからものを あつめている ところを デバックしてみよう。

          どこが まちがっているかな？

          そこをなおしたら、今度はどうなるかな？
        courseD_collector_debugging4_b: |-
          階段みたいに進むのがむつかしいときは、実行するブロックを声に出しながら、指で画面をなぞってみよう。

          曲がるの場所があったことを わすれないでね！
      courseD_collector_debugging5:
        courseD_collector_debugging5_a: |-
          プログラムをよく見て。

          実行したらどうなる？

          どうなると思った？

          話すことはできる?
        courseD_collector_debugging5_b: さいしょのくりかえしは思い通りに動くけど、その後、左に曲がるところは どうかな？
      courseD_collector_debugging6:
        courseD_collector_debugging6_a: |-
          "ステップ" ボタンをクリックしてプログラムを実行してみよう。さいしょの 動きはあってる？

          つぎの動きはどうかな？

          どこで まちがったのかな？
        courseD_collector_debugging6_b: さいしょを なおせば うまくいくように 見えるけど、ほかにも なおす ところが あるよ。
          `あつめる`を 何回も くりかしているところは あってるかな？
      courseD_collector_debugging6a_2018:
        courseD_collector_debugging6_a: |-
          "ステップ" ボタンをクリックしてプログラムを実行してみよう。さいしょの 動きはあってる？

          つぎの動きはどうかな？

          どこで まちがったのかな？
      courseD_collector_debugging6a_2019:
        courseD_collector_debugging6_a: |-
          "ステップ" ボタンをクリックしてプログラムを実行してみよう。さいしょの 動きはあってる？

          つぎの動きはどうかな？

          どこで まちがったのかな？
      courseD_collector_debugging8:
        courseD_collector_debugging8_a: くりかえしを使えば、かんたんにできるところが あるのが わかるかな？
        courseD_collector_debugging8_b: くりかえしの入れ子を使えば、プログラムを短くできるよ。
      courseD_collector_debugging9:
        courseD_collector_debugging9_a: パズルをクリアする方法は いくつかあるけど、どのやり方でも 曲がるを 追加しないとね。
        courseD_collector_debugging9_b: １ステップ毎に動かして、思い通りに 動いているか たしかめよう。
      courseD_collector_nested_loops_challenge2a:
        courseD_collector_nested_loops_challenge2a_b: たからものを ２つ 集めるプログラムに ブロックを つかいしないで、４つ
          全部 集めれるようにするには どうすればいいかな？
      courseD_collector_ramp10:
        courseD_artist_ramp10_a: |-
          １つのへんを進むとき、`前にすすむ` を４つ使うのではなく、こんなふうに、`くりかえし` のなかに`前にすすむ` を １つだけ 入れてみよう。

          <xml><block type="controls_repeat">
                                                      <title name="TIMES">4</title>
                                                      <statement name="DO">
                                                        <block type="maze_moveForward"/>
                                                      </statement>
                                                    </block></xml>
        courseD_artist_ramp10_b: 角をまがって前に進むとき、たからものを集めるをわすれないでね。
        courseD_artist_ramp10_c: プログラムをもっとシンプルにするには、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseD_collector_ramp8:
        courseD_collector_ramp8_a: たからもののあるマスに着いたら、 `あつめる`を使ってたからものを集めよう。`あつめる`を使うのは、１回だけじゃないよ。
        courseD_collector_ramp8_b: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseD_collector_ramp9:
        courseD_collector_ramp9_a: ローレルを １つ目の たからものの所まで 行かせて、たからものを 集めよう。もう一度 同じことを
          くり返して、２つ目の たからものを 集めることが できるかな？
        courseD_collector_ramp9_b: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseD_maze_ramp6:
        courseC_maze_programming6_a: このパズルの解き方は二通りあるよ。
        courseC_maze_programming6_b: トリさんはかべのほうを向いているので、方向をかえるのをわすれないでね。
        courseC_maze_programming6_c: すこし プログラムを かいたら、すぐに 実行（じっこう）してみよう。ちょっとづつ ためしながら
          プログラムを つくっていこう。
      courseD_maze_ramp7:
        courseD_maze_ramp7_b: "”ステップ”を使うと ブロックが １つづつ 実行（じっこう）されて どこがまちがっているのか すぐに見つけることができます。"
        courseD_maze_ramp7_a: くりかえしの中に入れったブロックは、ずっと実行されつづけます。
        courseD_maze_ramp7_c: プログラムをシンプルにするのは、くりかえしの中にくりかえしを入れます。これを**くりかえしの入れ子**といいます。
      courseD_scrat_ramp7:
        courseD_scrat_programming6_a: このパズルの解き方は二通りあるよ。
      courseD_scrat_ramp8:
        courseD_maze_ramp7_b: "”ステップ”を使うと ブロックが １つづつ 実行（じっこう）されて どこがまちがっているのか すぐに見つけることができます。"
        courseD_maze_ramp7_a: くりかえしの中に入れったブロックは、ずっと実行されつづけます。
      courseE_artist_concept_challenge1:
        courseE_artist_concept_challenge1_a: '前にうごく30ピクセル、右にまがる60度を使って、六角形の半分を書いてみてね。  '
        courseE_artist_concept_challenge1_b: '前にうごく80ピクセル、右にまがる80度を使って、三角形の3分の2を書いてみてね。 '
      courseE_artist_concept_challenge1_2018:
        courseE_artist_concept_challenge1_a: '前にうごく30ピクセル、右にまがる60度を使って、六角形の半分を書いてみてね。  '
        courseE_artist_concept_challenge1_b: '前にうごく80ピクセル、右にまがる80度を使って、三角形の3分の2を書いてみてね。 '
      courseE_artist_functions1:
        courseE_artist_functions1_a: その四角形にはそれぞれ100ピクセルの側面があります。これは、2番目の四角形を描く前に175ピクセル前に動かす必要があるという事です。
        courseE_artist_functions1_b: メガネを作るために、重なり合う線を描いても大丈夫です。
      courseE_artist_functions2:
        courseD_artist_functions2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      courseE_artist_functions2_2018:
        courseD_artist_functions2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      courseE_artist_functions2_2019:
        courseD_artist_functions2_a: |-
          プログラムの条件:

          -   関数を使う
          -   前に動くブロック 100 + 75 ピクセル
          -   関数を使う
      courseE_artist_ramp8:
        courseE_artist_ramp8_a: "`前にすすむ 100 ピクセル`の100を200にかえて、へんをかいてください。"
      courseE_artist_ramp8_2:
        courseE_artist_ramp8_a: "`前にすすむ 100 ピクセル`の100を200にかえて、へんをかいてください。"
      courseE_bee_functions6:
        courseE_bee_functions6_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！

          ![](https://images.code.org/3875224b35889000a0998ca25cfa4ecf-image-1467996493914.gif)
      courseE_bee_functions7:
        courseE_bee_functions7_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
        courseE_bee_functions7_b: |-
          緑の関数ブロックの中にコードを書くことを覚えておいてください。

          ![](https://images.code.org/8fe1fae5caf4ede3a9c9bd9f26940cde-image-1467996837459.gif)
      courseE_bee_functions_challenge1:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      courseE_bee_functions_challenge2:
        courseE_bee_functions_challenge1_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      courseF_artist_for_challenge1:
        courseF_artist_for_challenge1_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        courseF_artist_for_challenge1_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        courseF_artist_for_challenge1_c: 四角形を一つ書いたら、後ろにジャンプします。
        courseF_artist_for_challenge1_d: 答えは先生に聞いてくださいね。
      courseF_artist_for_challenge1_2018:
        courseF_artist_for_challenge1_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        courseF_artist_for_challenge1_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        courseF_artist_for_challenge1_c: 四角形を一つ書いたら、後ろにジャンプします。
      courseF_artist_for_challenge1_2019:
        courseF_artist_for_challenge1_a: |-
          ペンの太さは 1 です。
          一番小さい四角形は、一辺 50 ピクセルの長さで、50 ピクセルずつ大きくなっていきます。
        courseF_artist_for_challenge1_b: ペンのアルファ値（とうめいさ）は `counter` ÷ 2 です。
        courseF_artist_for_challenge1_c: 四角形を一つ書いたら、後ろにジャンプします。
      courseF_artist_for_challenge2:
        courseF_artist_for_challenge2_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        courseF_artist_for_challenge2_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter`
          で、これらをまぜた色にしてください。
      courseF_artist_for_challenge2_2018:
        courseF_artist_for_challenge2_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        courseF_artist_for_challenge2_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter`
          で、これらをまぜた色にしてください。
        courseF_artist_for_challenge2_d: 答えは先生に聞いてくださいね。
      courseF_artist_for_challenge2_2019:
        courseF_artist_for_challenge2_c: "「カウントする」ブロック使って、 5から250まで 2ずつカウントします。 "
        courseF_artist_for_challenge2_a: 色は、赤は 255、みどりは `counter` 、青は 255 -  `counter`
          で、これらをまぜた色にしてください。
      courseF_artist_fwp6:
        courseF_artist_fwp6_a: 何回やっても、だいじょうぶ。いろいろとパラメータをかえて ためしてね。
      courseF_artist_variables_challenge2:
        courseF_artist_variables_challenge2_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく
          500 ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        courseF_artist_variables_challenge2_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
        courseF_artist_variables_challenge2_d: 答えは、先生に聞いてね。
      courseF_artist_variables_challenge2_2018:
        courseF_artist_variables_challenge2_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく
          500 ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        courseF_artist_variables_challenge2_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
        courseF_artist_variables_challenge2_d: 答えは、先生に聞いてね。
      courseF_artist_variables_challenge2_2019:
        courseF_artist_variables_challenge2_a: "「セット sides は 5」ブロックで、`sides` 変数に5を入れて下さい。\nそして、「前にうごく
          500 ÷ sides ピクセル」と「左にまがる 360÷ sides 度」\nを sides 回くりかえすせば、五角形が書けるはずだよ。 "
        courseF_artist_variables_challenge2_c: |-
          五角形を五つ書き終わった後に、「セット sides は sides + 5」ブロックを追加しよう。そうすれば sidesは10になるはずだね。
          そして、全体を2回くりかえせば、五角形と十角形が書けるはずだよ。
        courseF_artist_variables_challenge2_d: 答えは、先生に聞いてね。
      courseF_bee_for_challenge2:
        courseF_bee_for_challenge2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        courseF_bee_for_challenge2_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。
          `counter` 変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        courseF_bee_for_challenge2_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。
          `counter` 変数を上手く使って、ハチミツを作ろう。
        courseF_bee_for_challenge2_d: 答えは先生に聞いてくださいね。
      courseF_bee_for_challenge2_2018:
        courseF_bee_for_challenge2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        courseF_bee_for_challenge2_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。
          `counter` 変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        courseF_bee_for_challenge2_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。
          `counter` 変数を上手く使って、ハチミツを作ろう。
      courseF_bee_for_challenge2_2019:
        courseF_bee_for_challenge2_a: まず、花のミツを全部あつめて、そのあと、ハチミツを作りながら帰って来ます。
        courseF_bee_for_challenge2_b: 花のミツをとるには、「カウントする」ブロックを使って、１から３まで１ずつカウントしてね。
          `counter` 変数を上手く使って、ハチをうごかして、花のミツを集めよう。
        courseF_bee_for_challenge2_c: ハチミツを作るには、「カウントする」ブロックを使って、2から10まで2ずつカウントしてね。
          `counter` 変数を上手く使って、ハチミツを作ろう。
      courseF_bee_functions8a:
        courseF_bee_functions8a_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
      courseF_bee_functionsPre7:
        courseF_bee_functions7_a: |-
          パズルが難しいと感じたら関数を一度に少しずつ作ってみてください。

          ブロックをいくつか追加したら試してみてください。更に追加して再度試してみると、やがて成功するでしょう！
