"sl":
  data:
    script:
      name:
        20-hour:
          desc: Uvodni tečaj v računalništvo za učence ameriških javnih osnovnih šol
          Unplug1: Stopnja 1
          Maze: Stopnja 2
          Unplug2: Stopnja 3
          Unplug3: Stopnja 4
          Artist: Stopnja 5
          Unplug4: Stopnja 6
          Artist2: Stopnja 7
          Unplug5: Stopnja 8
          Farmer: Stopnja 9
          Unplug6: Stopnja 10
          Artist3: Stopnja 11
          Unplug7: Stopnja 12
          Farmer2: Stopnja 13
          Unplug8: Stopnja  14
          Artist4: Stopnja 15
          Unplug9: Stopnja 16
          Farmer3: Stopnja 17
          Unplug10: Stopnja 18
          Artist5: Stopnja 19
          Unplug11: Stopnja 20
        Hour of Code:
          desc: Ura kode
          Maze: Stopnja 1
        Edit Code:
          desc: Uredite kodo (beta)
          MazeEC: Stopnja 1
        2014 Levels:
          desc: Skokica (beta)
          Bounce: Stopnja 1
        Builder Levels:
          desc: Ustvari uganko (beta)
          Custom: Stopnja 1
        Flappy Levels:
          desc: Plahutač (Flappy)
          Flappy: Stopnja 1
        Jigsaw Levels:
          desc: Sestavljanka (beta)
          Jigsaw: Stopnja 1
        Step Levels:
          desc: Labirint (beta)
          MazeStep: Nivo
        edit-code:
          desc: Uredite kodo (beta)
          MazeEC: Stopnja 1
          Webapp: Stopnja 2
          ArtistEC: Stopnja 3
          StudioEC: Stopnja 4
        events:
          desc: Skokica (beta)
          Bounce: Stopnja 1
          Studio: Stopnja 2
        builder:
          desc: Ustvari uganko (beta)
          Custom: Stopnja 1
        flappy:
          desc: Plahutač (Flappy)
          Flappy: Stopnja 1
        jigsaw:
          desc: Sestavljanka (beta)
          Jigsaw: Stopnja 1
        step:
          desc: Labirint (beta)
          MazeStep: Nivo
        wordsearch:
          desc: Čebelica črkuje besede (beta)
          WordSearch: Stopnja 1
    game:
      name:
        Unplug1: Uvod v računalništvo
        Maze: Labirint
        Multi: Možnih je več odgovorov
        Unplug2: Računalniško razmišljanje
        Unplug3: Obarvajmo kvadratke
        Artist: Umetnik
        Unplug4: Algoritmi
        Artist2: Umetnik 2
        Unplug5: Funkcije
        Farmer: Kmetovanje
        Unplug6: Pogoji
        Artist3: Umetnik 3
        Unplug7: Pisanje pesmi
        Farmer2: Kmetovanje 2
        Unplug8: Abstrakcija
        Artist4: Umetnik 4
        Unplug9: Relejsko programiranje
        Farmer3: Kmetovanje 3
        Unplug10: Internet
        Artist5: Umetnik 5
        Unplug11: Povzetek
        MazeEC: Labirint
        Bounce: Skokica
        Flappy: Plahutač (Flappy)
        Jigsaw: Sestavljanka
        MazeStep: Vključi labirint
        Wordsearch: Besedne igre
        Webapp: Spletna aplikacija
        ArtistEC: Umetnik
        TextMatch: Poveži besede
        StudioEC: Play Lab
    trophy:
      name:
        Bronze: Bronasta
        Silver: Srebrna
        Gold: Zlata
    concept:
      description:
        sequence: Zaporedje
        if: Če (if) blok
        if_else: Če- sicer pa blok
        loop_times: Ponovi
        loop_until: Ponavljaj dokler ne velja
        loop_while: Dokler velja
        loop_for: Števec
        function: Funkcije
        parameters: Funkcije s parametri
    level:
      instructions:
        maze_2_2: Mi pomagaš ujeti prašička? Poskusi z večimi ukazi "Premakni se",
          da me premakneš v smeri prašička in klikni "Poženi".
        maze_2_1: Ta prašiček mi kodra perje. Pomagaj mi ga najti!
        maze_2_2_5: Najdi pot do prašička in me popelji po njej. Izogni se TNTju ali
          pa bo perje frčalo!
        maze_2_3: Pelji me k tej zeleni zlobi! (Pazi se TNTja)
        maze_2_4: Ostani miren in mi pomagaj najti slabega prašička. Sicer se lahko
          zelo razjezim!
        maze_2_5: Obstaja način, ki me do neumnega prašička pripelje z uporabo zgolj
          dveh (2) blokov. Ti ga uspe najti?
        maze_2_6: Poizkusi me pripeljati do zelenega vsiljivca z uporabo zgolj treh
          blokov.
        maze_2_7: Uporabi čim manj ukazov, da me pripelješ do prašička. Pomagaj si
          tako, da uporabiš blok "Ponovi" in to večkrat.
        maze_2_8: 'Ko je blok siv, ga ne moreš izbrisati. Namig: uporabi število tri
          v bloku "Ponovi". Vnesi v sivi blok naslednje ukaze: premakni se, premakni
          se, obrni se.'
        maze_2_9: Ok, vidiš nov ukaz "Ponavljaj dokler"? Uporabljaj ta ukaz - dokler
          ne dosežem prašička.
        maze_2_10: Poskusi še zadnjič ali lahko to rešiš s samo štirimi bloki?
        maze_2_11: Draga oseba. Jaz zombi. Jaz lačen. Moram... najti... sončnico...
          Ti mene spraviti tja... s samo pet bloki?
        maze_2_12: Ja, skoraj ti je uspelo, a poskusi še malo drugače. Bi šlo le s
          petimi bloki?
        maze_2_13: 'Pomagaj mi ugotoviti kdaj naj zavijem. Vidiš blok, na katerem
          piše "če (if) blok"? Uporabi ga. Namig: dodaj še en blok. Naslednjič ti
          bo uspelo tudi brez namiga.'
        maze_2_14: Ok, podobno je prejšnji uganki. Se spomniš, kako si uporabil/a
          ukaz "če (if) blok" in ukaz "ponovi"...?
        maze_2_15: Jaz... sončnico... hočem! (Pomagaj si z uporabo ukaza "če (if)
          blok" in uporabi čim manj ukazov).
        maze_2_16: Pa še to, za vajo. Ne bo zelo drugače kot v prejšnji vaji. Le pazi
          se, da te Žvečko ne dobi!
        maze_2_17: 'Da spraviš zombija do sončnice, poskusi zdaj uporabiti nov ukaz:
          "Če- sicer pa" blok. Z njim lahko poveš zombiju kaj naj naredi, kadar prvi
          pogoj ni izpolnjen.'
        maze_2_18: 'Ti bo uspelo že v prvem poskusu? Uporabi še enkrat ukaz: "če-
          sicer pa" pa ti bo uspelo.'
        maze_2_19: Poskusi uporabiti še tri dodatne bloke in ta zapletenejši labirint
          ne bo več težava. Če jih prav sestaviš, lahko prehodim vse ovinke in vse
          razdalje.
        turtle_1_1: Živjo, sem umetnica in s pomočjo tvojih blokov lahko rišem zelo
          različne like. Vidiš sive črte po katerih se moram zadrsati? Uporabite nekaj
          blokov, da bom lahko drsala po črtah.
        turtle_1_2: 'Zdaj pa poskusi narisati kvadrat. Svojo najljubšo barvo lahko
          izbireš z ukazom: "izberi barvo pisala" (ang.: "pick color").'
        turtle_1_3: Nariši kvadrat z uporabo le treh blokov.
        turtle_1_4: 'Nariši trikotnik s stranicami različnih barv. Uporabi možnost
          izbire naključne barve. Pomoč: za koliko se obrniti na koncu stranice, boš
          izvedel/a s poskušanjem različnih številke v bloku: "Obrni se".'
        turtle_1_5: Zdaj, za vajo, nariši trikotnik in nato kvadrat za ovojnico.
        turtle_1_6: 'Ugotovi, kako narisati trikotnik in kvadrat. Pomoč: najprej nariši
          trikotnik, nato pa ugotovi za koliko se je treba obrniti (zasukati) preden
          narišeš kvadrat.'
        turtle_1_7: 'Ok, poskusimo nekaj zapletenejšega: ali lahko narišeš taka zelena
          očala? Kvadrata sta narazen za 50 pik in imata vsak po 100 pik dolge stranice.
          Barvo pisala nastavi na zeleno!'
        turtle_1_8: Če večkrat zaženeš ta program (klikni "Zaženi"), se zgodi nekaj
          zanimivega. Poskusi tolikokrat, da boš dokončal/a risbo. Barve bodo vsakič
          drugačne.
        turtle_1_9: Ali lahko ugotoviš s katerimi številkami namesto vprašajev bo
          program narisal krog?
        turtle_1_10: 'Uspelo ti je! Zdaj lahko narišeš, kar želiš. Nekaj idej: možic,
          snežinka ali spirala. Pri tem lahko uporabiš tudi blok "nastavi širino".
          Veliko zabave!'
        turtle_4_1: 'Izziv: ali lahko uporabiš le tri bloke, da z njimi narišeš trikotnik
          (z dolžino stranic 100 pik)? Namig: uporabi blok: "ponavljaj".'
        turtle_4_2: Če želiš narisati te trikotnike, dodaj blok "obrni se desno za
          90 stopinj" v svoj program.
        turtle_4_3: Ok, s tem programom je nastal en trikotnik. Kaj pa, če uporabiš
          bloka "ponavljaj" in  "obrni se" - ter tako narišeš ljubko cvetlico?
        turtle_4_4: 'Ta program je podoben kot v prejšnji nalogi, le da, ko nariše
          posamezen trikotnik, naredi obrat za 36 stopinj. Koliko ponovitev je potrebnih
          tokrat? (Namig: po 360 stopinjah si se obrnil kolikor je bilo potrebno za
          to nalogo)'
        turtle_4_5: 'Ta program je podoben kot v prejšnji nalogi, le da skupno naredi
          36 obratov. Koliko stopinj je torej dolg posamezen obrat? (Namig: po 360
          stopinjah si se obrnil kolikor je bilo potrebno za to nalogo)'
        turtle_4_6: Poskusi narisati kvadrat s stranicami po 20 pik z uporabo le 3
          blokov. Bo šlo?
        turtle_4_7: 'Tu je koda iz prejšnje naloge. Jo lahko ponoviš, da bo narisala
          10 kvadratov enega poleg drugega, da bo videti kot lestev? Namig: potrebuješ
          le dva dodatna bloka.'
        turtle_4_8: Tukaj je rešitev prejšnje uganke. Ali lahko dodaš dva bloka, da
          bo risba dokončana?
        turtle_4_9: Tukaj je rešitev prejšnje uganke. Za koliko stopinj se je treba
          obrniti, da je risba dokončana? (Najbrž boš moral/a nekajkrat ugibati)
        turtle_4_10: Tukaj je rešitev prejšnje uganke. Koliko ponovitev je potrebnih,
          da je risba dokončana?
        turtle_4_11: Poskusi spremeniti številke v blokih za obračanje in ponavljanje,
          da bodo nastali različni vzorci. Poskusi kaj nastane, če v kodi spremeniš
          še kaj drugega.
        maze_karel_1_1: Pozdravljeni! Sem kmetica, ki zate prideluje hrano in potrebujem
          tvojo pomoč. Polja na moji kmetiji je potrebno zravnati in pripraviti za
          sajenje. Premakni me, prosim, h kupu zemlje in uporabi blok "odstrani",
          da ga ne bo več.
        maze_karel_1_2: 'Nato me premakni k luknji in jo napolni z dvema lopatama
          zemlje. Namig: uporabi blok "zapolni".'
        maze_karel_1_3: Poskusi uporabiti čim manj blokov, da me najprej premakneš
          k kupu zemlje in narediš tako, da kupa ne bo več.
        maze_karel_1_4: 'Mi lahko pomagaš odstraniti vse štiri kupe umazanije? Namig:
          uporabi ponovitveni blok, če ga lahko.'
        maze_karel_1_5: 'Pomagaj mi zapolniti vse te luknje, v vsako luknjo stresi
          5 lopat zemlje. Namig: uporabi blok "dokler" in vanj povleci blok "ponavljaj".'
        maze_karel_1_6: 'Odstrani vse kupe zemlje z uporabo čim manj blokov. Pomoč:
          uporabi blok "dokler" in v spustnem seznamu izberi možnost, ki pove ali
          stojim na kupu ali na luknji.'
        maze_karel_1_7: Wow, kako globoka luknja! Ne vem, koliko lopat zemlje potrebujem
          zanjo. Lahko napišeš program, ki jo bo polnil dokler ne bo v višini tal?
        maze_karel_1_8: Pomagaj mi s čim manj bloki napolniti luknjo na koncu polja.
        maze_karel_1_9: 'Vse te kupe zemlje je treba poravnati. Poskusi uporabiti
          čim manj blokov. Namig: uporabi blok "dokler".'
        maze_karel_1_10: 'Pozno je in zunaj je že tema, zato ne vidim kako veliki
          so kupi zemlje. Ali ti bo uspelo rešiti uganko brez bloka "dokler"? Namig:
          premikaj me po polju, in če obstaja kup, ga odstrani.'
        maze_karel_1_11: 'Še vedno je mrak. Premikaj me po polju. Če naletim na kup,
          ga odstrani, in če naletim na luknjo, jo napolni. Namig: v bloku "če (if)"
          uporabi spustni seznam z možnostmi.'
        turtle_2_1: 'Živ''. Jaz zombi-umetnik. Jaz rad risati! Jaz narisati kvadrat
          s posebno barvo. Pomembna opomba: na voljo imaš iste bloke, le da so zdaj
          razvrščeni v kategorije.'
        turtle_2_2: Čakajo te funkcije, s katerimi lahko ustvariš čisto svoje bloke!
          V kategoriji "Funkcije" te čaka nov blok "nariši kvadrat", ki nariše zelen
          kvadrat s stranicami 50 x 50 pik.
        turtle_2_3: Use the "repeat" block (in the "Loops" category) to draw 3 squares
          of size 100, each 120 degrees apart. And do it in 3 different, random colors.
        turtle_2_4: 'Now we''re going to get fancy. Change the code to draw 36 squares,
          100 pixels wide, and each 10 degrees apart. Hint: you may want to use the
          slider to make me go faster.'
        turtle_2_5: Draw squares with sides of 50, 60, 70, 80, and 90 pixels.  You'll
          need to use the "draw a square" function five times.
        turtle_2_6: 'Ok, this program will use a counter, to draw the same squares
          as last time. You want the square to be the same size as the counter, so
          use the "counter" block. Hint: It''s in the Variables category.'
        turtle_2_7: Here's a program to draw a spiral, but the blocks are disabled
          so they won't run. Make a new program using a "count with" block (in the
          Loops category) and "counter" block (in the Variables category) to draw
          the same spiral.
        turtle_2_7_5: There's a new "draw a snowman" function (in the Functions category).
          Draw two snowmen, of height 250 and 100.
        turtle_2_8: This one's a bit tricky. Use the "draw a snowman" function and
          the new "jump forward" block (in the Actions category). Draw 3 snowmen in
          different colors, 100 pixels apart.
        turtle_2_9: Use a "count with" loop to draw a family of snowmen with heights
          of 110, 100, 90, 80, and 70. The snowmen should all be 60 pixels apart.
        turtle_2_10: Here's some code to try experimenting with different spirals.  What
          happens if you change the turn amount? Or set a random color in the loop?  Draw
          anything you like.
        maze_karel_2_1: 'Try using the blocks to help me remove all the piles and
          fill in all the holes on the ground. Try to use loops instead of using too
          many blocks. Hint: you can put a loop inside another loop.'
        maze_karel_2_2: We've defined our own block called "fill 5", which is now
          in the Functions category. Use it to help me fill in this hole.
        maze_karel_2_3: Use the new "fill 5" function block to make me fill in all
          the holes. You'll have to drag out the "fill 5" block out from the Functions
          category.
        maze_karel_2_4: Define a new function that removes 7 shovelfuls. Then use
          it to write a program that helps me remove all the piles.
        maze_karel_2_5: Create a new function that removes 6 shovelfuls from a pile,
          and use it to help me level out all the piles.
        maze_karel_2_6: Use two new functions, "fill 8" and "remove 8", to help me
          level out the pile and fill in the hole.
        maze_karel_2_7: There's a cow in my field! Write a new function that helps
          me avoid the cow and remove the pile. Put all your blocks inside the new
          function.
        maze_karel_2_8: Use this new function, "avoid the cow and remove 1", to help
          me remove all the piles.
        maze_karel_2_9: Ok, here's a function that removes 4 different piles of dirt
          in a vertical column. Try putting this function inside a loop, so that you
          remove all the piles of dirt using only a few new blocks.
        maze_karel_2_10: Move me across the field, and use these two functions to
          help me remove all the piles and fill all the holes.
        turtle_3_1: This puzzle shows you how the "draw a square" and "draw a circle"
          functions are defined.  Defining a function doesn't run its blocks.  You
          have to pull out the "draw a square" block to actually draw a square.
        turtle_3_2: Using the "draw a square" function as an example, create a "draw
          a triangle" function and use it.
        turtle_3_3: 'Draw triangular fences around the cats and a square fence around
          the cow.  Tip: test the program as you go along.'
        turtle_3_4: See if you can figure out how to use "draw a square" and "draw
          a triangle" (and some other blocks) to draw a house around the lion.
        turtle_3_5: 'Napiši še funkcijo "nariši hišo". Pomoč: ustvarite novo funkcijo
          z uporabo ukaza "Naredi nekaj" (angl.: "do something") in vnesite besedilo
          za ime novega bloka.'
        turtle_3_6: 'Zgleduj se po bloku "nariši kvadrat" in dodaj "dolžino" v ukaz
          "nariši trikotnik", da boš lahko risal/a trikotnike s stranicami različnih
          dolžin. Pomoč: če klikneš zvezdico, lahko dodaš vnos "dolžine" v funkcijo'
        turtle_3_7: V funkcijo "nariši hišo" dodaj "dolžino" in zgradi bivališče za
          slona (s stranicami dolžine 150 pik)
        turtle_3_8: Tukaj so vsi bloki iz prejšnje uganke. Funkcijo "nariši hišo"
          zdaj popravi tako, da bom risanje hiše zaključil v njenem spodnjem desnem
          kotu. Potem uporabi popravljeno funkcijo za to, da narišeš tri hiše.
        turtle_3_9: Can you re-create the "draw a house" function without help? Try
          it, and then draw a row of houses.
        turtle_3_10: You've learned a lot! Now use it to draw whatever you want. Try
          to draw a star, or a spiral, or a fancy snowflake.
        maze_karel_debug_seq_1: Welcome to debugging! My code doesn't work right.
          Can you spot the problem and fix it so that I can get my field flat and
          ready for planting?
        maze_karel_debug_seq_2: What's wrong with this program? How should you fix
          it so I can remove that pile?
        maze_karel_debug_repeat: De-bug this program for me so my field will be nice
          and flat.
        maze_karel_debug_while: How should you change this program to help me fill
          the hole?
        maze_karel_debug_if: Help! Fix the program so my field will be completely
          flat.
        maze_karel_debug_if_else: De-bug this program so I can fill in the holes and
          remove all the piles.
        maze_karel_debug_function_1: What should you change about this program to
          help me remove all the piles?
        maze_karel_debug_function_2: Can you de-bug this program for me so I can make
          my field flat?
        maze_karel_debug_function_3: 'Edit this program so I''ll remove all the piles
          on my field. '
        turtle_5_1: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        turtle_5_2: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        turtle_5_3: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        turtle_5_4: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        turtle_5_5: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        turtle_5_6: Try running this program, and make changes to see what happens.
          Can you figure out how it works? (Or delete it and replace it with something
          totally different)
        maze_3_1: I need to get to that pig! Type in a couple of calls to move();
          so I can get my eggs back.
        maze_3_2: Write me a program, so I can make it all the way to the pig.
        maze_3_3: How should I get to the pig? Make sure I don't run into the box
          of TNT!
        maze_3_4: Argh! Write me a program that gets me around the TNT and to the
          pig.
        bounce_1: Attach a block to the "when left arrow" block, then run and move
          the paddle with the left arrow key to the finish target.
        bounce_2: Attach a block to the "when right arrow" and "when left arrow" blocks,
          then run and move the paddle with the both arrow key to both finish targets.
        bounce_3: TBD
        bounce_4: TBD
        bounce_5: Attach a blocks to the "when right arrow", "when left arrow", "when
          ball hits wall", and "when ball hits paddle" blocks.
        bounce_6: Try again with more balls.
        bounce_7: Now it is getting crazy!
        bounce_10: There is a now a goal at the top. Attach "increment score" blocks
          to the the "when ball in goal" and "when ball misses paddle" blocks to make
          a game.
        bounce_11: You can now attach blocks to the "when run" block. Try changing
          the speed of the paddle and the ball and see how many points you can score
          before your opponent scores twice.
        bounce_12: Ustvarite svojo igrico Skokica. Spremenite lahko videz in pravila.
          Ko končate, kliknite Končano, da lahko prijatelji preizkusijo igrico na
          svojih telefonih.
        Custom_builder: Drag blocks from the toolbox to the workspace to draw the
          level you wish to create. Press "Run Program" when you are ready.
        flappy_1: Attach a block to the "when click" block, then press "Run Program"
          and click or tap to move Flappy to the target.
        flappy_2: Now we've added some ground.  Attach a block to the "when hit the
          ground" block, then press "Run Program". To pass this puzzle, your code
          needs to 'END GAME' when Flappy crashes into the ground.
        flappy_3: The "when Run is clicked" block allows you to run code when your
          game first starts.  Try setting the level speed and flapping to the target.
        flappy_4: Flappy will fly through obstacles unless you write code to make
          him crash. Attach a block to the "when hit an obstacle" block. To pass the
          puzzle, your code needs to 'END GAME' and make Flappy crash into the first
          pipe so he can reach the target.
        flappy_5: Let's add a scoreboard, and count points when Flappy makes it past
          obstacles. Add to the "when pass an obstacle" block, and then score a point
          by flying Flappy through the first set of pipes.
        flappy_6: See if you can still score a point after making Flappy flap either
          a smaller or larger amount.
        flappy_7: Next, try changing the scene by attaching another block to the "when
          Run is clicked".
        flappy_8: You can set visuals anytime, not just when the game starts. Try
          setting a RANDOM scene when other events happen, for example, when passing
          an obstacle.
        flappy_9: To mix things up, when hitting an obstacle or the ground, instead
          of ending the game try setting the score back to 0.
        flappy_11: Create your own Flappy game and share it. You can change the visuals,
          or even the rules. Try changing visuals each time Flappy passes an obstacle.
          Or make Flappy invincible so he never dies.
        flappy_k1_1: Zaigraj Plahutavčka
        flappy_k1_2: Attach a block to the "when click" block, then press "Run". Click
          or tap the screen to move Flappy to the target.
        flappy_k1_3: Now we've added some ground.  Attach a block to the "when hit
          the ground" block.  Your code needs to 'END GAME' when Flappy crashes.
        flappy_k1_4: The "when run" block allows you to run code when your game starts.  Try
          setting the level speed and flapping to the target.
        flappy_k1_5: Flappy will fly through obstacles unless you write code to make
          him crash. Attach a block to the "when hit an obstacle" block. Your code
          needs to 'END GAME' when Flappy crashes into the first set of pipes.
        flappy_k1_6: Let's add a scoreboard, and count points when Flappy makes it
          past obstacles. Add to the "when pass an obstacle" block, and then score
          a point by flying Flappy through the first set of pipes.
        flappy_k1_7: See if you can score multiple points for making it past an obstacle
        flappy_k1_8: Next, try changing the scene by attaching another block to the
          "when run" block.
        flappy_k1_9: Try changing the player by attaching a "set player" block to
          the "when run" block.
        jigsaw_1: Click the block
        jigsaw_2: Drag the block to the target
        jigsaw_3: Arrange the blocks to form the image
        jigsaw_4: Arrange the blocks to form the image
        jigsaw_5: Arrange the blocks to form the image
        jigsaw_6: Arrange the blocks to form the image
        jigsaw_7: Arrange the blocks to form the image
        jigsaw_8: Arrange the blocks to form the image
        jigsaw_9: Arrange the blocks to form the image
        jigsaw_10: Arrange the blocks to form the image
        jigsaw_11: Arrange the blocks to form the image
        jigsaw_12: Arrange the blocks to form the image
        jigsaw_13: Fix the puzzle!
        mazestep_1: Maze step description here
        mazestep_2: Maze step description here
        mazestep_3: Maze step description here
        mazestep_4: Maze step description here
        mazestep_5: Maze step description here
        studio_c2_1: Can you make this dog say "hello world"?
        studio_c2_2: Can you make the dog say something and then have the cat say
          something afterwards?
        studio_c2_3: Can you write a program to make this dog move to the cat?
        studio_c2_4: Can you write a program that makes the dog move to the cat, and
          have the cat say "hello" when the dog reaches him?
        studio_c2_5: Can you write a program to make the octopus say "hello" when
          it is clicked?
        studio_c2_6: Can you write a program to make this penguin move around using
          the up / down / left /right keys to hit all of the targets?
        studio_c2_7: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_c2_8: Can you have the penguin say "Ouch!" and play a "hit" sound if
          he runs into the dinosaur, and then move him with the arrows to make that
          happen?
        studio_c2_9: Can you add a block to score a point when the penguin runs into
          the octopus, and then move him with the arrows until you score?
        studio_c2_10: Can you add blocks to change the background and the speed of
          the penguin, and then move him with the arrows until you score?
        studio_c2_11: Create your own story. When you're done, click Finish to let
          friends try your story on their phones.
        studio_c3_story_1: Can you make this dog say "hello world"?
        studio_c3_story_2: Can you make the dog say something and then have the cat
          say something afterwards?
        studio_c3_story_3: Can you write a program to make this dog move to the cat?
        studio_c3_story_4: Can you write a program that makes the dog move to the
          cat, and have the cat say "hello" when the dog reaches him?
        studio_c3_story_5: Can you add a block to make the octopus happy?
        studio_c3_story_6: Create your own story. When you're done, click Finish to
          let friends try your story on their phones.
        studio_c3_game_1: Can you write a program to make the octopus say "hello"
          when it is clicked?
        studio_c3_game_2: Can you write a program to make this penguin move around
          using the up / down / left /right keys to hit all of the targets?
        studio_c3_game_3: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_c3_game_4: Can you have the penguin say "Ouch!" and play a "hit" sound
          if he runs into the dinosaur, and then move him with the arrows to make
          that happen?
        studio_c3_game_5: Can you add a block to score a point when the penguin runs
          into the octopus, and then move him with the arrows until you score?
        studio_c3_game_6: Can you add blocks to change the background and the speed
          of the penguin, and then move him with the arrows until you score?
        studio_c3_game_7: Create your own game. When you're done, click Finish to
          let friends try your story on their phones.
        studio_playlab_1: Can you make this dog say "hello world"?
        studio_playlab_2: Can you make the dog say something and then have the cat
          say something afterwards?
        studio_playlab_3: Can you write a program to make this dog move to the cat?
        studio_playlab_4: Can you write a program that makes the dog move to the cat,
          and have the cat say "hello" when the dog reaches him?
        studio_playlab_5: Can you write a program to make the octopus say "hello"
          when it is clicked?
        studio_playlab_6: Can you write a program to make this penguin move around
          using the up / down / left /right keys to hit all of the targets?
        studio_playlab_7: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_playlab_8: Can you add a block to score a point when the penguin runs
          into the octopus, and then move him with the arrows until you score?
        studio_playlab_9: Can you add blocks to change the background and the speed
          of the penguin, and then move him with the arrows until you score?
        studio_playlab_10: Create your own game. When you're done, click Finish to
          let friends try your story on their phones.
        studio_full_sandbox: Create your own game. When you're done, click Finish
          to let friends try your story on their phones.
        studio_k1_1: Can you make this dog say "hello world"?
        studio_k1_2: Can you make the dog say something and then have the cat say
          something afterwards?
        studio_k1_3: Can you write a program to make this dog move to the target?
        studio_k1_4: Make the dog move to the cat and the cat say "hello" when he
          gets there.
        studio_k1_5: Can you add a block to make the octopus happy?
        studio_k1_6: Can you write a program to make this penguin move around using
          the up / down / left /right keys to hit all of the targets?
        maze_wordsearch_k_1: Move me to spell the word EAST
        maze_wordsearch_k_2: Move me to spell the word SOUTH
        maze_wordsearch_k_3: Move me to spell the word WEST
        maze_wordsearch_k_4: Move me to spell the word NORTH
        maze_wordsearch_k_6: Move me East and then South to spell the word JUMP
        maze_wordsearch_k_9: Move me one way, then another to spell the word CODE
        maze_wordsearch_k_13: Move me one way, then another to spell the word DEBUG
        maze_wordsearch_k_15: Move me one way, then another to spell the word ABOVE
        maze_wordsearch_k_16: Move me one way, then another to spell the word BELOW
        maze_wordsearch_k_20: This is a test! Move me one way, then another to spell
          the word STORY
        webapp_ec_simple: Create your web app by using createHtmlBlock.
        turtle_ec_1_2: 'Now, draw a square. NOTE: use your favorite color by picking
          it in the new "penColour" block.'
        turtle_ec_1_10: 'You made it! Now, draw anything you want. Some fun ideas:
          a stick figure, snowflake, or spiral. Also try the new "penWidth" block.
          Have fun!'
        studio_ec_sandbox: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
    levelbuilder:
      frozen line:
        instructions: Živijo! Jaz sem Elsa Ardanelska. Pomagaj mi ustvariti eno črto.
      frozen perpendicular:
        instructions: Poglejmo sedaj, če lahko ustvarimo dve črti, ki sta pod kotom
          90 stopinj eno na drugo. Uporabiti boš moral blok "Obrat", kot tudi blok
          "Premik".
      frozen square iterative:
        instructions: Zdi se, da smo pol poti do kvadrata. Sestavimo 4 črte skupaj,
          ki ustvarijo kvadrat.
      frozen square loop:
        instructions: Živijo, jaz sem Ana Arendelska! Ustvarimo kvadratek z blokom
          "Ponovi" in tako porabimo manj blokov. Kolikokrat (???) mora blok "Ponovi"
          ponoviti bloke znotraj, da naredi kvadrat?
      frozen square loop 3x:
        instructions: Ustvarimo tri kvadrate, tako da se obrnemo po vsake kvadratu.
          Prepričaj se, da ste vklopili obrat za 120 stopinj pred vsakim novim kvadratom.
      frozen square snowflake:
        instructions: Ali znaš ustvariti snežinko s pomočjo bloka "Ponovi", tako da
          10-krat narišeš kvadrat in z blokom "Obrni" vrtiš za 36 stopinj med vsakim
          kvadratom v snežinki?
      frozen cross:
        instructions: Uporabi blok "Ponovi", da ustvarite znak plus. Ali si opazil,
          da se Elsa lahko premika naprej in nazaj?
      frozen cross rotate:
        instructions: Zdaj poskusi to ponoviti 10-krat. Za koliko stopinj se moraš
          zasukati med vsako črto?
      frozen cross rotate dense:
        instructions: 'Ponovimo 90-krat! Kolikokrat gre 90 v 360? Namig: To je res
          majhna številka.'
      frozen diamond:
        instructions: 'Ustvarimo paralelogram. To je podobno kot kvadrat, vendar z
          drugačnimi koti: 60 in 120 stopinj namesto 90 stopinj.'
      frozen diamond mini snowflake:
        instructions: Si vedel, da ima vsaka snežinka drugačno obliko? Ustvarimo novo
          snežinko, tako da z blokom "Ponovi" narišemo paralelogram 4-krat in se obrnemo
          v desno za 90 stopinj med vsakim paralelogramom.
      frozen diamond snowflake:
        instructions: Ustvarimo sedaj novo snežinko z blokom ponovi, tako da paralelogram
          ponovimo desetkrat in se med vsakim zasukamo desno za 36 stopinj.
      frozen circle:
        instructions: Krog je posebna oblika. Lahko ugotoviš, s katero številko moraš
          zamenjati vprašaje, da narišeš krog?
      frozen circle function:
        instructions: Uporabi nov blok "Ustvari krog" in ustvari 10 prekrivajočih
          se krogov. Ne pozabite na skok naprej med krogi.
      frozen circle function in circle:
        instructions: Ustvarimo sedaj 20 prekrivajočih se krogov, tako da se med vsakima
          zasukamo za 18 stopinj.
      frozen circle function with parameter:
        instructions: Tukaj je blok "Ustvari krog", ki lahko ustvari kroge različnih
          velikosti. Ga lahko uporabiš in narediš majhen krog velikosti 5 ter večji
          krog velikosti 10?
      frozen snowflower:
        instructions: Zapletene vzorce snežink je mogoče ustvariti z zelo preprostimi
          oblikami. Lahko ustvariš vzorec, tako da ponoviš 5 krogov velikosti 5 in
          5 krogov velikosti 10?
      frozen snowflake branch:
        instructions: Poskusi uporabiti blok "Ustvari vejo snežinke" in narisati tri
          veje, ki so videti kot snežinka.
      frozen snowflake full:
        instructions: Zdaj to ponovi 8 krat in naredi lepo snežinko!
      frozen freeplay:
        instructions: Uradno si postal mojster umetnik! Ustvari zimsko čudežno deželo.
      scrat 16:
        instructions: Želod! Želod! Želod! Uporabi "če" blok, da me spraviš tja s
          kar se da majhnim številom blokov.
      scrat 17:
        instructions: Ok, ponovimo še enkrat za vajo - ni zelo drugačno, a pazi na
          steno!
      scrat 18:
        instructions: Bloki "če-sicer" preverijo pogoj in nato naredi eno stvar ali
          drugo. Uporabi ta nov blok in me pripelji do želoda.
      scrat 19:
        instructions: 'Ti bo uspelo že v prvem poskusu? Uporabi še enkrat ukaz: "če-
          sicer pa" pa ti bo uspelo.'
      scrat 20:
        instructions: Lahko dodaš le 3 bloke in mi pomagaš rešiti bolj zapleten labirint?
          Če boš naredil prav, lahko hodim po poljubno zaviti poti, ne glede na dolžino.
          Pohiti! Led se topi!
      Standalone_Artist_1:
        instructions: Welcome to Artist! First off, let's try to make a simple square
          using the turn right block and move forward block. Each side should be 100
          pixels long.
      Standalone_Artist_2:
        instructions: Draw this diamond with 120 and 60 degree angles and 150 pixel
          long sides.
      Standalone_Artist_3:
        instructions: Can you draw this hexagon with 100 pixel sides and 60 degree
          turns?
      Standalone_Artist_4:
        instructions: Now you've got a new block to play with, the loop. This will
          repeat a set of commands. What happens if you loop these commands 6 times?
      Standalone_Artist_5:
        instructions: How many times do you need to loop this diamond to draw the
          flower?
      Standalone_Artist_5.5:
        instructions: 'Notice how we simplified the diamond code by turning it into
          a loop. You can loop that whole sequence 12 times to draw the flower. Hint:
          You''ll need to turn 30 degrees after your diamond loop so you don''t keep
          drawing over the same diamond.'
      Standalone_Artist_6:
        instructions: 'Loop this hexagon code 6 times to create the design. How many
          degrees will you need to turn each time? Hint: divide the number of degrees
          in a circle by the number of times you are looping.'
      Standalone_Artist_7:
        instructions: 'A function is another programming tool to help you avoid repeating
          yourself. This function draws a flower, so you can use it any time you want
          to draw a flower. Use this and the new jump block to draw these flowers.
          Hint: The flowers are 150 pixels apart'
      Standalone_Artist_8:
        instructions: Here's a function called "Draw a shape" that we've programmed
          to draw hexagons. Run the code to see what it does and then experiment with
          the function to see what happens. Can you make it draw a pattern of squares,
          triangles, or octagons?
      Standalone_Artist_9:
        instructions: Now go ahead and make whatever picture you'd like! You've even
          got an empty function that you can make do whatever you want!
    video:
      name:
        maze_intro: 'Labirint: uvod'
        artist_intro: 'Umetnik: uvod'
        farmer_intro: 'Kmetovanje: uvod'
        flappy_intro: Plahutavčkov uvod
        loop_times: Ponovi
        loop_until: Ponavljaj dokler ne velja
        if: '"Če" blok'
        if_else: '"Če- sicer pa" blok'
        if_else_scrat: '"Če- sicer pa" blok'
        function: Funkcije
        loop_while: Dokler velja
        loop_for: Števec
        parameters: Funkcije s parametri
        hoc_wrapup: Povzetek Ure kodiranja
        Unplug1: Kaj je računalništvo?
        Unplug2: Računalniško razmišljanje
        Unplug3: Obarvajmo kvadratke
        Unplug4: Algoritmi
        Unplug5: Funkcije
        Unplug6: Pogoji
        Unplug7: Napiši pesem
        Unplug8: Abstrakcija
        Unplug9: Relay programming
        Unplug10: Internet
        Unplug11: Povzetek
        C1_happy_maps_unplugged: Happy Maps
        C1_moveitmoveit_unplugged: Premakni se, premakni
        C1_bigevent_unplugged: The Big Event
        C1_getting_loopy: Getting Loopy
        C1_pair_programming: Programiranje parov
        C1_maze_intro_sequencing: Uvod v reševanje labirinta
        C1_maze_debugging: 'Labirint: odpravljanje napak'
        C1_bee_level_intro: 'Čebelica: uvodni nivo'
        C1_artist_intro: 'Umetnik: uvod'
        C1_spelling_bee_intro: 'Čebelica črkuje: uvod'
        C1_zuck_repeat_loop: Maze Loops
        C1_bee_loops: Bee Loops
        C1_maze_loops: Maze Loops
        C1_playlab_storytelling: 'Play Lab: ustvari zgodbo'
        C1_planting_seed: Posadi seme
        C1_building_foundation: Building a Foundation
        C1_going_places_safely: Going Places Safely
        C2_maze_intro: 'Labirint: uvod'
        C2_artist_intro: 'Umetnik: uvod'
        C2_zuck_repeat_loop: Maze Loops
        C2_artist_loops: Artist Loops
        C2_artist_debugging: Artist Debugging
        C2_bee_loops: Bee Loops
        C2_bee_debugging: Bee Debugging
        C2_bee_conditionals: Bee Conditionals
        C2_playlab_createstory: 'Play Lab: ustvari zgodbo'
        C2_graph_paper: Obarvajmo kvadratke
        C2_conditionals_with_cards: Pogoji
        C2_binary_bracelets: Binary Bracelets
        C2_relay_programming: Relejsko programiranje
        C2_paper_airplanes: Papirnata letala
        C2_digital_footprint: Your Digital Footprint
        C3_maze_level_4: Maze Loops
        C3_artist_intro: 'Umetnik: uvod'
        C3_artist_functions: Artist Functions
        C3_bee_functions: Bee Functions
        C3_bee_conditionals: Bee Conditionals
        C3_maze_conditionals: Maze Conditionals
        C3_artist_nested_loops: Gnezdenje zank
        C3_farmer_while: 'Zanka: dokler velja'
        C3_bee_nested_loops: Gnezdenje zank
        C3_bee_debugging: Bee Debugging
        C3_bounce: Skokica
        C3_playlab_create_game: Play Lab - ustvari igrico
        C3_computational_thinking: Računalniško razmišljanje
        C3_dice_race: Dice Race
        C3_internet: Internet
        C3_crowdsourcing: Crowdsourcing
        C3_functional_suncatchers: Functional Suncatchers
        C3_songwriting_with_parameters: Pisanje pesmi s parametri
        C4_artist_math: Upravljanje umetnika s pomočjo matematike
        C4_create_functions: Ustvarjanje funkcij
        C4_edit_functions: Urejanje funkcij
        C4_for_loops: For Loops
        C4_variables: Spremenljivke
        frozen_intro: Uvod v Uro kodiranja
        frozen_loops: Uvod v zanke
        frozen_functions: Uvod v funkcije
    callout:
      text:
        drag_blocks: Povleci blok "premakni se" in ga postavi pod drugi blok
        run: Klikni "Zaženi" in preizkusi
        watch_again: Klikni za ponoven ogled videa
        gray_block_explanation: Sivih blokov se ne da izbrisati. Lahko vseeno rešiš
          sestavljanko?
        show_code_explanation: Klikni za prikaz kode programa, ki ga izdeluješ
        instructions_repeat_explanation: Tukaj se ponavljajo navodila za vsako sestavljanko
        category_explanation: Bloki so isti, le da so zdaj razporejeni po kategorijah
        set_sprite_image: Pod blok "ko začneš zgodbo" povleci blok "določi igralcu
          sliko", da igralec dobi vlogo v zgodbi
        studio_say_text: Med narekovaje dodaj besede, ki jih bo igralec povedal
        jigsaw_click: Klikni ta blok!
        move_elsa_forward: Pod blok "Ko zaženeš" povleci blok "premakni naprej", da
          boš premaknil/a Elso
        turn_elsa: Uporabi blok "obrni se", da boš obrnil/a Elso. S številko povej
          še za koliko stopinj naj se obrne
        replace_questions: Namesto "???" vnesi številko iz spustnega menuja
        replace_questions_degree: V spustnem menuju nadomesti "???" z ustreznim številom
          stopinj
        repeat_blocks: Uporabi blok "Ponovi" in spravi vanj vse bloke, ki jih imaš
          v svojem delovnem prostoru
        repeat_blocks_1: (1) Use this block and put it around the grey blocks in the
          workspace
        repeat_blocks_2: (2) Move the "Repeat" block here, and place the gray blocks
          inside
        snowflake_dropdown: Uporabi ta spustni seznam za ustvarjanje različnih snežink!
        degrees_per_side: Če deliš 360 s številom stranic, je rezultat število stopinj
          za posamezen kot (obrat).
        set_sides: Uporabi ta blok za število "stranic", potrebnih za rešitev naloge.
        set_length: Uporabi ta blok in "dolžini" dodeli pravo količino.
        which_equation: Which equation makes each side shorter for shapes with more
          sides?  Try each equation!
        get_nectar: Uporabi nov blok "vzami nektar".
        actions_category: 'V galeriji pripomočkov je nekaj novega! Dodali smo bloke
          za "dejanja" (ang.: "Actions").'
        draw_square_hint: 'Namig: Uporabi zanko "kvadrat", ki si jo izdelal/a v prejšnji
          uganki.'
        edit_function: Use this button to edit the function.
        create_function: Klikni tukaj, če želiš delati s funkcijami; nato klikni na
          "ustvari funkcijo".
        house_hint: Čeprav risba še ni podobna hiši, smo z njo zadovoljni. V naslednji
          nalogi bo še bolj podobna hiši.
        edit_draw_square: Uporabi ta gumb za urejanje funkcije in dodaj zanko.
        edit_get_nectar: Če želiš spremeniti smer Čebelice zato,  da bo našla nektar,
          potem uporabi ta gumb za urejanje funkcije.
        logic_category: 'Odpri list "Logika" in poišči ukaz "če- sicer pa" (ang.:
          "if/else").'
        length_parameter: Znaš popraviti to funkcijo tako, da bo uporabljala parameter
          "dolžina"?
        frozen_diamond_repeat: Uporabi blok "ponovi", da boš ustvaril/a tako obliko.
        frozen_circle_function_in_circle_turn: Ne pozabi vsakič, ko narišeš krog,
          narediti še obrat.
        frozen_circle_function_with_parameter_circle: Uporabi blok "ustvari krog"
          in mu spremeni velikost.
        frozen_snowflake_branch: Uporabi blok "ustvari snežinkino vejo"
        frozen_create_square: Dodaj več blokov, da bo nastal kvadrat
        playlab_drag_say: Privleci še blok "reci (napiši)" in dodaj v blok besedo
          "zdravo"
        playlab_use_twice: Uporabi ta blok dvakrat in vsakič uporabi drugo številko
          igralca
        playlab_move_girl: Uporabi blok "premakni se desno", da premakneš Tenisačico
        playlab_play_sound: Dodaj blok "predvajaj zvok"
        playlab_arrow_keys: Ko zaženeš program, s puščicami premikaš čarovnico
        playlab_add_move: V blok "ponavljaj" dodaj bloke za premikanje
        playlab_add_score: Tukaj dodaj bloke za izpisovanje rezultatov
        playlab_add_blocks: Tukaj dodaj svoje bloke
        set_variable: Drag a number block here to set your variable
        place_variable: Drag your variable inside this block
        bee_for_loop: Drag the largest number of nectar you want the bee to collect
          here
        place_counter_variable: Drag your counter variable inside this block
        function_editor_draw_square: This is your function definition. These blocks
          run everytime you use the "draw a square" block
        change_here: Make your change here
        write_draw_square_function: Drag blocks from the toolbox into here that draw
          a square
