"lv":
  data:
    script:
      name:
        20-hour:
          desc: 8. klašu ievads datorzinātņu kursā
          Unplug1: Līmenis 1
          Maze: Līmenis 2
          Unplug2: Līmenis 3
          Unplug3: Līmenis 4
          Artist: Līmenis 5
          Unplug4: Līmenis 6
          Artist2: Līmenis 7
          Unplug5: Līmenis 8
          Farmer: Līmenis 9
          Unplug6: Līmenis 10
          Artist3: Līmenis 11
          Unplug7: Līmenis 12
          Farmer2: Līmenis 13
          Unplug8: Līmenis 14
          Artist4: Līmenis 15
          Unplug9: Līmenis 16
          Farmer3: Līmenis 17
          Unplug10: Līmenis 18
          Artist5: Līmenis 19
          Unplug11: Līmenis 20
        Hour of Code:
          desc: Programmēšanas stunda
          Maze: Līmenis 1
        Edit Code:
          desc: Labot kodu (beta)
          MazeEC: Līmenis 1
        2014 Levels:
          desc: Atlekt (beta)
          Bounce: Līmenis 1
        Builder Levels:
          desc: Lietotāju izveidotas puzles (beta)
          Custom: Līmenis 1
        Flappy Levels:
          desc: Flappy putns
          Flappy: Līmenis 1
        Jigsaw Levels:
          desc: Atjautības puzle (beta)
          Jigsaw: Līmenis 1
        Step Levels:
          desc: Labirints (beta)
          MazeStep: Posma solis
        edit-code:
          desc: Labot kodu (beta)
          MazeEC: Līmenis 1
          Webapp: Līmenis 2
          ArtistEC: Līmenis 3
          StudioEC: Līmenis 4
        events:
          desc: Atlekt (beta)
          Bounce: Līmenis 1
          Studio: Līmenis 2
        builder:
          desc: Lietotāju izveidotas puzles (beta)
          Custom: Līmenis 1
        flappy:
          desc: Flappy putns
          Flappy: Līmenis 1
        jigsaw:
          desc: Atjautības puzle (beta)
          Jigsaw: Līmenis 1
        step:
          desc: Labirints (beta)
          MazeStep: Posma solis
        wordsearch:
          desc: Burtošanas spēle (beta)
          WordSearch: Līmenis 1
    game:
      name:
        Unplug1: Ievads datorzinātnēs
        Maze: Labirints
        Multi: Atbilžu varianti
        Unplug2: Algoritmiska domāšana
        Unplug3: Rūtiņpapīra programmēšana
        Artist: Mākslinieks
        Unplug4: Algoritmi
        Artist2: Mākslinieks 2
        Unplug5: Funkcijas
        Farmer: Fermeris
        Unplug6: Kondicionālis
        Artist3: Mākslinieks 3
        Unplug7: Dziesmas rakstīšana
        Farmer2: Fermeris 2
        Unplug8: Abstrakcija
        Artist4: Mākslinieks 4
        Unplug9: Releju programmēšana
        Farmer3: Fermeris 3
        Unplug10: Internets
        Artist5: Mākslinieks 5
        Unplug11: Ietīt
        MazeEC: Labirints
        Bounce: Atlekt
        Flappy: Flappy putns
        Jigsaw: Puzle
        MazeStep: Labirinta soļa režīms
        Wordsearch: Vārdu meklēšana
        Webapp: Web lietotne
        ArtistEC: Mākslinieks
        TextMatch: Teksta atbilstība
        StudioEC: Spēles laboratorija
    trophy:
      name:
        Bronze: Bronzas
        Silver: Sudraba
        Gold: Zelta
    concept:
      description:
        sequence: Secība
        if: Ja bloks
        if_else: Ja-tad bloks
        loop_times: Atkārtot reizes bloks
        loop_until: Atkārtot kamēr bloks
        loop_while: Kamēr bloks
        loop_for: Skaitītāja bloks
        function: Funkcijas
        parameters: Funkcijas ar parametriem
    level:
      instructions:
        maze_2_2: 'Vai vari man palīdzēt notvert nerātno cūku? Saliec vairākus "kustēties
          uz priekšu" blokus kopā un spied "Skriet" lai palīdzēt man tur nonākt. '
        maze_2_1: "Šī cūka ir man traucē. Palīdzi man to atrast!"
        maze_2_2_5: Izseko ceļu un aizved mani līdz muļķīgajai cūkai. Izvairies no
          Dinamīta, savādāk spalvas lidos!
        maze_2_3: Aizved mani līdz zaļajam ļaunumam! (Izvairies no Dinamīta)
        maze_2_4: Saglabā mieru un palīdzi man atrast ļauno cūku. Savādāk es varu
          sadusmoties!
        maze_2_5: Eksistē veids kā es varu nonākt līdz cūkai, izmantojot tikai 2 blokus.
          Vai tu vari to izdomāt?
        maze_2_6: Mēģini nogādāt mani līdz traucētājam, izmantojot tikai trīs blokus.
        maze_2_7: Palīdzi man izdzīt ļauno cūciņu, izmantojot pēc iespējas mazāku
          bloku daudzumu. Mēģini izmantot vairāk par vienu "Atkārtot reizes" bloku.
        maze_2_8: 'Kad bloks ir pelēks, tas nozīmē, ka tu nevari to izdzēst. Atrisini
          puzli, izmantojot "atkārtot" bloku, kas atkārtojas 3 reizes. Mēģini izvietot
          šos 3 blokus iekšā pelēkajiem "atkārtot" blokiem: pārvietoties, pārvietoties,
          pagriesties.'
        maze_2_9: Tagad pamēģini jauno "atkārtot kamēr" bloku - tas atkārtosies tikmēr,
          kamēr es sasniegšu kaitinošo cūku.
        maze_2_10: Pēdēja prakses reize - vai vari atrisināt, izmantojot tikai 4 blokus?
        maze_2_11: Dārgais cilvēks. Es zombijs. Es izsalcis. Vajag... tikg... līdz
          saulespuķei... Vari mani tu nogādāt, izmantojot tikai 5 blokus?
        maze_2_12: "Šeit ir ļoti līdzīgi, bet nedaudz savādāk Vai vari atrisināt,
          izmantojot tikai 5 blokus?"
        maze_2_13: 'Izmanto jauno "Ja" bloku, lai ļautu man izlemt kad pagriezties.
          Padoms: tev jāizmanto tikai vēl viens bloks, bet iemācies kā to uzstādīt
          pašam nākamajā reizē.'
        maze_2_14: Šī ir gluži kā ieprēkšējā mīkla, taču tev ir jāatceras kā tu izmantoji
          "Ja" bloku un "atkārtot" bloku kopā.
        maze_2_15: Es gribēt saulespuķi! Izmanto "Ja" bloku, lai nogādāt mani tur
          ar pēc iespējas mazāku bloku skaitu.
        maze_2_16: Labi, izdarīsim to vēlreiz. Šis nav pārāk atšķirībi, bet uzmanies
          no Čomperiem!
        maze_2_17: '"Ja-tad" bloks pārbauda nosacījumu un tad izpilda vienu vai otru
          darbību. Lai nogādātu mani līdz saulespuķei, mēģini izmantot šo jauno bloku.'
        maze_2_18: Vēl viens uzdevums ar "if-else" bloku. Vai vari to atrisināt pareizi
          no pirmā mēģinājuma?
        maze_2_19: Vai vari pievienot tikai 3 blokus, lai palīdzētu man atrisināt
          sarežģītāku labirintu? Ja to izdarīsi pareizi, es varēšu noiet jebkuru līkločaino
          celiņu neatkarīgi no garuma.
        turtle_1_1: Sveiks, es esmu mākslinieks. Tu vari uzrakstīt kodu, kas liks
          uzzīmēt gandrīz jebko. Izmanto dažus blokus, lai liktu man zīmēt pa virsu
          pelēkajām līnijām bildē.
        turtle_1_2: 'Tagad uzzīmē kvadrātu. PIEZĪME: lai izmantotu savu mīļāko krāsu,
          izvēlies to jaunajā "noteikt krāsu" blokā.'
        turtle_1_3: Uztaisi kvadrātu izmantojot tikai 3 blokus.
        turtle_1_4: 'Uzzīmē trijstūri, kura visas malas ir dažādās krāsās, izmantojot
          "nejauša krāsa" izvēli, kura katru reizi paņem citu krāsu. Norādījums: Tev
          vajadzēs izdomāt cik tālu griesties, uzspiežot uz numura, griešanās blokā.'
        turtle_1_5: Tagad treniņam uzzīmē trījstūri un pēc tam kvadrātu, lai uzzīmētu
          aploksni.
        turtle_1_6: 'Vai Tu vari izdomāt kā uzzīmēt šo trijstūri un kvadrātu? Norādījums:
          Vispirms uzzīmē trijstūri, tad izdomā cik daudz tas ir jāpagriež, pirms
          uzzīmē kvadrātu.'
        turtle_1_7: 'Tagad mazliet grūtāks uzdevums: vai tu vari uzzīmēt šīs zaļās
          briles? Kvadrāti katr''[a pusē ir 100 pikseļu  lieli un 50 pikseļu attālumā
          viens no otra. Neaizmirsti izmantot zaļo krāsu!'
        turtle_1_8: Labi, izdomā, kas notiks, ja tu palaidīsi šo kodu (vai arī nospied
          "Palaist", lai izmēģinātu). Tad, atkārto to pietiekami daudz reizu, lai
          pabeigtu zīmējumu. Katru reizi krāsas būs citādākas.
        turtle_1_9: Vai vari izdomāt, ar kuru numuru aizstāt jautājumzīmes, lai uzzīmētu
          apli?
        turtle_1_10: 'Tu to esi paveicis! Tagad vari uzzīmēt jebko, ko vēlies. Dažas
          interesantas idejas: kociņ cilvēciņš, sniegpārsla vai spirāle. Pamēģini
          arī "Noteikt platumu" bloku. Izpriecājies!'
        turtle_4_1: 'Vai vari uzzīmēt trijstūri (kura malas ir 100 pikseļus garas)  ar
          tikai 3 blokiem? Norādījums: izmanto "atkārtot" bloku.'
        turtle_4_2: Pievienojiet "pagriezties 90 grādus pa labi" bloku kaut kur jau
          uz darba lauka esošajā programmā, lai uzzīmētu šos trīsstūrus.
        turtle_4_3: Šis ir kods, ko tu uzrakstīji, lai uzzīmētu vienu trijstūril.
          Vai vari pievienot "atkārtot" un "pagriezt" blokus lai izveidotu skaistu
          puķi?
        turtle_4_4: "Šis ir kods no iepriekšējās mīklas, bet pagriežot tikai 36 grādus
          pēc katra trijstūra uzzīmēšanas. Cik reizes ir jāatkārto šī darbība? (Padoms:
          pēc 360 grādu griešanas, zīmējums izveidos pilnu apli)"
        turtle_4_5: "Šis ir kods no iepriekšējās mīklas, atkārtojot pagriezienus 36
          reizes. Cik grādu lenķim vajadzētu būt katrā pagriezienā? (Padoms: pēc 360
          grādu pagriešanas, zīmējums izveidos pilnu apli)"
        turtle_4_6: Vai tu vari uzzīmēt kvadrātu ar malu garumu 20 pikseļi, izmantojot
          tikai 3 blokus?
        turtle_4_7: "Šis ir kods, lai uzzīmētu kvadrātu no iepriekšējās mīklas. Vai
          tu vari atkārtot to, lai uzzīmētu 10 blakus esošus kvadrātus kā pakāpienus?
          Padoms: Tev vajag izmantot tikai papildus 2 blokus."
        turtle_4_8: "Šis ir risinājums iepriekšējai mīklai. Vai vari pievienot klāt
          vēl tikai 2 blokus, lai pabeigtu zīmējumu?"
        turtle_4_9: "Šis ir risinājums iepriekšējai mīklai. Cik grādu leņķa pagriezienu
          jāizmanto, lai pabeigtu zīmējumu? (Iespējams vajadzēs minēt dažas reizes)"
        turtle_4_10: "Šis ir risinājums iepriekšējai mīklai. Cik daudz reizes nepieciešams
          atkārtot šo darbību, lai pabeigtu zīmējumu?"
        turtle_4_11: Mēģini izmainīt skaitļus "pagrieziens" un "atkārtot" blokos,
          lai veidot citus zīmējumus. Vai arī izmēģini mainīt citas koda daļas, lai
          zīmēt ko vien vēlies.
        maze_karel_1_1: Sveiks, esmu fermeris. Man vajadzīga tava palīdzība, lai nolīdzinātu
          lauku manā fermā un tas būtu gatavs stādīšanai. Pārvieto mani līdz dubļu
          kaudzei un izmanto "izdzēst" bloku, lai to izņemt.
        maze_karel_1_2: Tālāk, pārvieto mani pie cauruma un piepildi to ar divām lāpstām
          dubļu, izmantojot "aizpildīt" bloku.
        maze_karel_1_3: Pārvieto mani pie dubļu kaudzes un pasaki man cik daudz lāpstas
          vajag izņemt izmantojot pēc iespējas mazāk bloku.
        maze_karel_1_4: 'Vai vari palīdzēt izņemt visas četras kaudzes dubļu? Padoms:
          izmanto "atkārtot" bloku ja vari.'
        maze_karel_1_5: 'Palīdzi man aizpildīt visas bedres ar 5 lāpstām zemes. Padoms:
          tu vari ielikt "atkārtot" bloku iekšā "kamēr" blokā.'
        maze_karel_1_6: Izņem visas zemes kaudzes, izmantojot pēc iespējas mazāk bloku.
          Jaunās iespējas nolaižamajā izvēlnē "kamēr" blokā pateiks man priekšā vai
          es stāvu uz kaudzes vai bedres.
        maze_karel_1_7: Vau, es atradu riktīgi dziļu bedri! Es nezinu cik lāpstas
          zemes tai nepieciešams. Vai vari uzrakstīt programmu, kas aizpilda to, kamēr
          zeme ir līdzena?
        maze_karel_1_8: Palīdzi man aizpildīt bedri lauka galā, izmantojot pēc iespējas
          mazāk blokus.
        maze_karel_1_9: 'Liec man izņemt visas šīs zemes kaudzes. Mēģini izmantot
          pēc iespējams mazāk blokus. Padoms: mēģini izmantot "kamēr" bloku.'
        maze_karel_1_10: Es strādāju vēlu, tāpēc te ir tumšs un es nespēju pateikt,
          cik lielas ir kaudzes. Tagad man vairs nav visas iespējas, kādas bija iepriekš,
          "kamēr" blokam. Pārvieto mani pa lauku un, ja tur ir kaudze, noņem to.
        maze_karel_1_11: 'Vēljoprojām ir tumšs. Pārvieto mani pa lauku. Ja sastopies
          ar kaudzi, noņem to un ja tā ir bedre - piepildi to. Padoms: izmanto nolaižamo
          izvēlnes opciju "Ja" blokā.'
        turtle_2_1: 'Sveiks. Es zombij artists. Es mīlēt zīmēšanu! Paīdzi man uzzīmēt
          kvadrātu īpašā krāsā. Piezīme: Tev ir visi tie paši bloki, bet tagad tie
          ir sagrupēti kategorijās.'
        turtle_2_2: Esi sveicināts funkciju lietošanā, kas tev ļaus definēt jaunus
          blokus! Izmēģini jaunu "zīmēt kvadrātu" bloku, kas ir atrodams "Funkcijas"
          kategorijā, lai uzzīmētu mazu 50x50 zaļu kvadrātu.
        turtle_2_3: Izmanto "atkārtot" bloku ("Cilpas" kategorijā), lai uzzīmētu 3
          kvadrātus izmērā 100, katru 120 grādu leņķī. Un izdari to ar 3 dažādām,
          nejaušām krāsām.
        turtle_2_4: 'Tagad pamēģināsim kaut ko nedaudz sarežģītāku. Pamaini savu kodu,
          lai uzzīmētu 36 kvadrātus, 100 pikseļus platus, katru 10 grādu leņķī vienu
          no otra. Norādījums: Tu vari izmantot slīdni, lai liktu man strādāt ātrāk.'
        turtle_2_5: Uzzīmē 5 kvadrātus, vienu ar 50, 60, 70, 80 un 90 pikseļu garumu.
          Tev vajadzēs izmantot "Uzzīmēt kvadrātu" funkciju piecas reizes.
        turtle_2_6: 'Labi, šī programma izmantos skaitītāju, lai uzzīmētu tādus pašus
          kvadrātus kā iepriekš. Tev ir nepieciešams izdarīt tā, lai kvadrāta izmērs
          ir vienāds ar skaitītāju, tāpēc izmanto "Skaitītājs" bloku. Norādījums:
          Šis bloks ir kategorijā Mainīgie.'
        turtle_2_7: Šeit ir dota programma, kura zīmē spirāli, taču bloki ir izslēgti,
          tāpēc tie nestrādās. Uztaisi programmu izmantojot "skaitīt ar" bloku (cilpu
          kategorijā) un "skaitītājs" bloku (mainīgo kategorijā), lai uzzīmētu tādu
          pašu spirāli.
        turtle_2_7_5: Te ir jauna funkcija "Zīmēt sniegavīru" (Funkciju kategorijā).
          Uzzīmē divus sniegavīrus, vienu ar augstumu 250 un otru ar augstumu 100.
        turtle_2_8: Šis uzdevums ir drusku viltīgs. Izmanto "Uzzīmēt sniegavīru" funkciju
          un jauno "pāriet uz priekšu" bloku (kategorijā Darbības). Uzzīmē 3 sniegavīrus
          3 dažādās krāsās, 100 pikseļu attālumā vienu no otra.
        turtle_2_9: Izmanto "Skaitīt ar" cilpu, lai uzzīmētu sniegavīru ģimeni, kurā
          ģimenes locekļu augumi ir 110, 100, 90, 80 un 70. Visiem sniegavīriem vajadzētu
          būt 60 pikseļu attālumā vienam no otra.
        turtle_2_10: "Šeit ir kods eksperimentēšanai ar dažādām spirālēm. Kas notiek,
          ja Tu pamaini apgriezienu daudzumu? Vai arī ciklā uzliec nejaušu krāsu?
          \ Uzzīmē jebko, ko gribi."
        maze_karel_2_1: 'Pamēģini izmantot blokus, lai palīdzētu man noņemt visas
          čupiņas un aizpildīt visas bedres. Mēģini daudzo bloku vietā izmantot cilpas.
          Norādījums: Tu vari ielikt  vienu cilpa iekšā otrā cilpā.'
        maze_karel_2_2: Mēs esam nodefinējuši savu bloku ar nosaukumu "pildījums 5",
          kurš tagad ir Funkciju kategorijā. Izmanto to, lai palīdzētu man aizpildīt
          šo bedri.
        maze_karel_2_3: Izmanto jauno "pildījums 5" funkcijas bloku, lai liktu man
          aizpildīt visus caurumus. Tev nāksies izvilkt bloku "pildījums 5" ārā no
          Funkciju kategorijas.
        maze_karel_2_4: Izveido jaunu funkciju, kas noņem 7 lāpstas racienus. Tad
          izmanto to, lai uzrakstītu programmu, kas palīdz man noņemt visas čupas.
        maze_karel_2_5: Izveido jaunu funkciju, kas noņem 6 lāpstas racienus no čupas,
          un izmanto to, lai palīdzētu man izlīdzināt visas čupas.
        maze_karel_2_6: Izmanto divas jaunas funkcijas, "pildījums 8" un "noņemt 8",
          lai palīdzētu man izlīdzināt čupu un aizpildīt bedri.
        maze_karel_2_7: Mana laukā ir govs! Uzraksti jaunu funkciju, kas palīdz man
          izvairīties no govīm un aizvākt kaudzi. Ievieto visus savus blokus jaunajā
          funkcija.
        maze_karel_2_8: Izmanto šo jauno funkciju, "izvairies no govs un aizvāc 1",
          lai palīdzētu man  aizvākt visas čupas.
        maze_karel_2_9: Labi, šeit ir funkcija, kas aizvāc 4 dažādas dubļu čupas vertikālā
          kolonnā. Pamēģini ielikt šo funkciju iekš cilpas tā, ka Tu aizvāc visas
          dubļu čupas izmantojot tikai dažus jaunus blokus.
        maze_karel_2_10: Aizved mani pāri laukam un izmanto šīs divas funkcijas, lai
          palīdzēt man aizvākt visas kaudzes un piepildīt visas bedres.
        turtle_3_1: Šis uzdevums parāda tev, kā ir definētas "uzzīmēt kvadrātu" un
          "uzzīmēt apli" funkcijas. Funkcijas definēšana nepalaiž tās bloku. Tev vajag
          izvilkt "zīmēt kvadrātu" bloku, lai uzzīmēt kvadrātu.
        turtle_3_2: Izmantojot "zīmēt kvadrātu" funkciju kā piemēru, uztaisi "zīmēt
          trīsstūri" funkciju un pielietot to.
        turtle_3_3: 'Uzzīmē trīsstūrveida sētas apkārt kaķiem un kvadrātveida sētu
          apkārt govij. Padoms: izpēti programmu kamēr tu to izmanto.'
        turtle_3_4: Paskaties vai tu vari izdomāt kā izmantot "zīmēt kvadrātu" un
          "zīmēt trīsstūri" (Un pāris citus programmas blokus) lai uzzīmētu māju apkārt
          lauvai.
        turtle_3_5: 'Tagad izveido jaunu "zīmēt māju" funkciju un izmanto to lai izveidotu
          māju abiem kaķiem. Padoms: Izveido jaunu funkciju izmantojot "dari kaut
          ko" programmas bloku un ievadi pats savu tekstu lai nosauktu bloku.'
        turtle_3_6: 'Izmantojot "zīmēt kvadrātu" kā piemēru, pievieno ievadi ar nosaukumu
          "garums" pie "zīmē trīsstūri". Tad uzzīmē trīsstūrus ar dažādiem izmēriem.
          (Padoms: uzklikšķini uz zvaigznes, lai pievienotu ievadi funkcijai)'
        turtle_3_7: Add an input named "length" to "draw a house" and build a big
          house for the elephant (with edges 150 pixels long)
        turtle_3_8: Šeit ir visi bloki no iepriekšējā uzdevuma. Izmaini "zīmēt māju"
          tā, lai es atrastos apakšējajā labajā stūrī, kad tiks uzzīmēta jauna māja.
          Izmanto izmainīto funkciju, lai uzzīmētu rīs mājas.
        turtle_3_9: |
          Vai tu vari izveidot "uzzīmē māju " funkciju bez palīdzības? izmēģini to un tad uzzīmē veselu rindu ar mājām.
        turtle_3_10: Tu esi apguvis daudz! Tagad izmanto to lai zīmētu visu ko tu
          vēlies. Centies uzzīmēt zvaigzni vai spirāli vai daiļu sniegpārsliņu.
        maze_karel_debug_seq_1: Esi sveicināts atkļūdošanā! Mans kods nestrādā pareizi.
          Vai tu vari pamanīt problēmu un izlabot to, lai es varu nolīdzināt manu
          lauku un gatavoties stādīšanai?
        maze_karel_debug_seq_2: Kas nav pareizi šajā programmā? Kā to vajadzētu salabot
          tā, lai varu novākt šo kaudzi?
        maze_karel_debug_repeat: Atkļūdo šo programmu, lai mans lauks būtu līdzens.
        maze_karel_debug_while: Kā tev būtu jāmaina šī programma, lai palīdzētu man
          aizpildīt bedri?
        maze_karel_debug_if: Palīgā! Izlabo šo programmu, lai mans lauks būtu pilnīgi
          līdzens.
        maze_karel_debug_if_else: Atkļūdo šo programmu, lai es varu aizpildīt visas
          bedres un novākt visas kaudzes.
        maze_karel_debug_function_1: Ko tev vajadzētu mainīt šajā programmā, lai palīdzētu
          man novākt visas kaudzes?
        maze_karel_debug_function_2: Vai tu vari atkļūdot šo programmu, lai es varu
          nolīdzināt manu lauku?
        maze_karel_debug_function_3: 'Rediģē šo programmu, tādējādi es novākšu visas
          kaudzes no mana lauka. '
        turtle_5_1: Pamēģini palaist šo programmu, un veic izmaiņas, lai redzētu,
          kas notiek. Vai tu vari izdomāt, kā tā strādā? (Vai arī izdzēs to un aizvieto
          to ar kaut ko pavisam citādāku)
        turtle_5_2: Pamēģini palaist šo programmu, un veic izmaiņas, lai redzētu,
          kas notiek. Vai tu vari izdomāt, kā tā strādā? (Vai arī izdzēs to un aizvieto
          to ar kaut ko pavisam citādāku)
        turtle_5_3: Pamēģini palaist šo programmu, un veic izmaiņas, lai redzētu,
          kas notiek. Vai tu vari izdomāt, kā tā strādā? (Vai arī izdzēs to un aizvieto
          to ar kaut ko pavisam citādāku)
        turtle_5_4: Pamēģini palaist šo programmu, un veic izmaiņas, lai redzētu,
          kas notiek. Vai tu vari izdomāt, kā tā strādā? (Vai arī izdzēs to un aizvieto
          to ar kaut ko pavisam citādāku)
        turtle_5_5: Pamēģini palaist šo programmu, un veic izmaiņas, lai redzētu,
          kas notiek. Vai tu vari izdomāt, kā tā strādā? (Vai arī izdzēs to un aizvieto
          to ar kaut ko pavisam citādāku)
        turtle_5_6: Pamēģini palaist šo programmu, un veic izmaiņas, lai redzētu,
          kas notiek. Vai tu vari izdomāt, kā tā strādā? (Vai arī izdzēs to un aizvieto
          to ar kaut ko pavisam citādāku)
        maze_3_1: I need to get to that pig! Type in a couple of calls to move();
          so I can get my eggs back.
        maze_3_2: Uzraksti man programmu, lai es varu nokļūt līdz cūkai.
        maze_3_3: Kādā veidā man vajag tikt līdz cūkai? Pārliecinies, lai es neieskrienu
          dinamīta kastē!
        maze_3_4: Aahh! Uzraksti man programmu, kas aizved mani apkārt dinamītam un
          noved pie cūkas.
        bounce_1: Attach a block to the "when left arrow" block and press "Run". Move
          the paddle using the left arrow to reach the finish target.
        bounce_2: Attach a block to the "when right arrow" and "when left arrow" blocks.
          Move the paddle to reach both finish targets.
        bounce_3: Now try something similar with the "when up arrow" block. Move the
          paddle to the finish target at the top.
        bounce_4: "Šoreiz tev vajag pievienot četrus blokus. Pārvieto airi uz visiem
          četriem gala mērķiem, lai pabeigto šo puzli."
        bounce_5: We're going to send a ball flying down towards the paddle. Attach
          a block to the "when ball hits paddle" block to ensure the ball reaches
          the finish target.
        bounce_6: Tagad gala mērķis ir augšā. Tev vajag pievienot blokus abiem "kad
          bumba trāpa" blokiem, lai atrisinātu šo puzli.
        bounce_7: Attach blocks to each of the "when" blocks. Bounce the ball until
          it hits the finish target.
        bounce_10: There is a now a goal at the top. Attach the "score point" and
          "score opponent point" blocks to the "when ball in goal" and "when ball
          misses paddle" blocks to make a game. See how many points you can score
          before your opponent scores twice.
        bounce_11: You can now attach blocks to the "when run" block. You have to
          attach the new "launch new ball" block in more than one place. Also, try
          changing the scene or the speed of the paddle and the ball and see how many
          points you can score before your opponent scores twice.
        bounce_12: Create your own Bounce game. You can change all the visuals and
          the rules. When you're done, click Share to let friends try your game on
          their phones.
        Custom_builder: Drag blocks from the toolbox to the workspace to draw the
          level you wish to create. Press "Run" when you are ready.
        flappy_1: Attach a block to the "when click" block, then press "Run". Click
          or tap the screen to move Flappy to the target.
        flappy_2: Now we've added some ground.  Attach a block to the "when hit the
          ground" block.  Your code needs to 'END GAME' when Flappy crashes.
        flappy_3: The "when run" block allows you to run code when your game starts.  Try
          setting the level speed and flapping to the target.
        flappy_4: Flappy will fly through obstacles unless you write code to make
          him crash. Attach a block to the "when hit an obstacle" block. Your code
          needs to 'END GAME' when Flappy crashes into the first set of pipes.
        flappy_5: Let's add a scoreboard, and count points when Flappy makes it past
          obstacles. Add to the "when pass an obstacle" block, and then score a point
          by flying Flappy through the first set of pipes.
        flappy_6: See if you can still score a point after making Flappy flap either
          a smaller or larger amount.
        flappy_7: Next, try changing the scene by attaching another block to the "when
          game starts" block.
        flappy_8: You can set visuals anytime, not just when the game starts. Try
          setting a RANDOM scene when other events happen, for example, when passing
          an obstacle.
        flappy_9: To mix things up, when hitting an obstacle or the ground, instead
          of ending the game try setting the score back to 0.
        flappy_11: Create your own Flappy game. You can change all the visuals and
          all the rules, even the gravity. When you're done, click Share to let friends
          try your game on their phones.
        flappy_k1_1: Play Flappy
        flappy_k1_2: Attach a block to the "when click" block, then press "Run". Click
          or tap the screen to move Flappy to the target.
        flappy_k1_3: Now we've added some ground.  Attach a block to the "when hit
          the ground" block.  Your code needs to 'END GAME' when Flappy crashes.
        flappy_k1_4: The "when run" block allows you to run code when your game starts.  Try
          setting the level speed and flapping to the target.
        flappy_k1_5: Flappy will fly through obstacles unless you write code to make
          him crash. Attach a block to the "when hit an obstacle" block. Your code
          needs to 'END GAME' when Flappy crashes into the first set of pipes.
        flappy_k1_6: Let's add a scoreboard, and count points when Flappy makes it
          past obstacles. Add to the "when pass an obstacle" block, and then score
          a point by flying Flappy through the first set of pipes.
        flappy_k1_7: See if you can score multiple points for making it past an obstacle
        flappy_k1_8: Next, try changing the scene by attaching another block to the
          "when run" block.
        flappy_k1_9: Try changing the player by attaching a "set player" block to
          the "when run" block.
        jigsaw_1: Click the block
        jigsaw_2: Drag the block to the target
        jigsaw_3: Arrange the blocks to form the image
        jigsaw_4: Arrange the blocks to form the image
        jigsaw_5: Arrange the blocks to form the image
        jigsaw_6: Arrange the blocks to form the image
        jigsaw_7: Arrange the blocks to form the image
        jigsaw_8: Arrange the blocks to form the image
        jigsaw_9: Arrange the blocks to form the image
        jigsaw_10: Arrange the blocks to form the image
        jigsaw_11: Arrange the blocks to form the image
        jigsaw_12: Arrange the blocks to form the image
        jigsaw_13: Atrisini mīklu!
        mazestep_1: Maze step description here
        mazestep_2: Maze step description here
        mazestep_3: Maze step description here
        mazestep_4: Maze step description here
        mazestep_5: Maze step description here
        studio_c2_1: Can you make this dog say "hello world"?
        studio_c2_2: Can you make the dog say something and then have the cat say
          something afterwards?
        studio_c2_3: Vai tu vari uzrakstīt programmu lai liktu sunim pārvietot kaķi?
        studio_c2_4: Vai tu vari uzrakstīt programmu kas liek sunim pārvietoties pie
          kaķa un kaķim pateikt "sveiks" kad suni ir viņu  sasniedzis?
        studio_c2_5: Vai tu vari uzrakstīt programmu kas  liek astoņkājim pateikt
          "sveiks" kad uz tā uzklikšķina?
        studio_c2_6: Vai tu vari uzrakstīt programmu kas liek pingvīnam kustēties
          apkārt izmantojot augšā/lejā/pa kreisi/pa labi lai tas trāpītu visiem mērķiem?
        studio_c2_7: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_c2_8: Vai tu vari likt pingvīnam pateikt "Au!" un nospēlēt  "Trāpīts"
          skaņu ja viņš ieskrien dinozaurā un tad pārvietot viņu ar bultiņām lai tas
          notiktu?
        studio_c2_9: Vai vari pievienot programmas bloku lai pieskaitītu punktu kad
          pingvīns ieskrien astoņkājī un tad pārvietot viņu ar bultiņām lai gūtu punktu?
        studio_c2_10: Vai tu vari pievienot programmas blokus lai izmainītu fona attēlu
          un pingvīna ātrumu, un tad pārvietot viņu ar bultiņām līdz tu gūsti punktu?
        studio_c2_11: Izveido pats savu stāstu. Kad esi pabeidzis, klikšķini uz beigt
          un ļauj saviem draugiem izmēģināt tavu stāstu uz saviem telefoniem.
        studio_c3_story_1: Can you make this dog say "hello world"?
        studio_c3_story_2: Can you make the dog say something and then have the cat
          say something afterwards?
        studio_c3_story_3: Vai tu vari uzrakstīt programmu lai liktu sunim pārvietot
          kaķi?
        studio_c3_story_4: Vai tu vari uzrakstīt programmu kas liek sunim pārvietoties
          pie kaķa un kaķim pateikt "sveiks" kad suni ir viņu  sasniedzis?
        studio_c3_story_5: Vai tu vari pievienot programmas bloku lai padarītu astoņkāji
          laimīgu?
        studio_c3_story_6: Izveido pats savu stāstu. Kad esi pabeidzis, klikšķini
          uz beigt un ļauj saviem draugiem izmēģināt tavu stāstu uz saviem telefoniem.
        studio_c3_game_1: Vai tu vari uzrakstīt programmu kas  liek astoņkājim pateikt
          "sveiks" kad uz tā uzklikšķina?
        studio_c3_game_2: Vai tu vari uzrakstīt programmu kas liek pingvīnam kustēties
          apkārt izmantojot augšā/lejā/pa kreisi/pa labi lai tas trāpītu visiem mērķiem?
        studio_c3_game_3: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_c3_game_4: Vai tu vari likt pingvīnam pateikt "Au!" un nospēlēt  "Trāpīts"
          skaņu ja viņš ieskrien dinozaurā un tad pārvietot viņu ar bultiņām lai tas
          notiktu?
        studio_c3_game_5: Vai vari pievienot programmas bloku lai pieskaitītu punktu
          kad pingvīns ieskrien astoņkājī un tad pārvietot viņu ar bultiņām lai gūtu
          punktu?
        studio_c3_game_6: Vai tu vari pievienot programmas blokus lai izmainītu fona
          attēlu un pingvīna ātrumu, un tad pārvietot viņu ar bultiņām līdz tu gūsti
          punktu?
        studio_c3_game_7: Create your own game. When you're done, click Finish to
          let friends try your story on their phones.
        studio_playlab_1: Can you make this dog say "hello world"?
        studio_playlab_2: Can you make the dog say something and then have the cat
          say something afterwards?
        studio_playlab_3: Vai tu vari uzrakstīt programmu lai liktu sunim pārvietot
          kaķi?
        studio_playlab_4: Vai tu vari uzrakstīt programmu kas liek sunim pārvietoties
          pie kaķa un kaķim pateikt "sveiks" kad suni ir viņu  sasniedzis?
        studio_playlab_5: Vai tu vari uzrakstīt programmu kas  liek astoņkājim pateikt
          "sveiks" kad uz tā uzklikšķina?
        studio_playlab_6: Vai tu vari uzrakstīt programmu kas liek pingvīnam kustēties
          apkārt izmantojot augšā/lejā/pa kreisi/pa labi lai tas trāpītu visiem mērķiem?
        studio_playlab_7: The "repeat forever" block allows you to run code continuously.
          Can you attach blocks to move this dinosaur up and down repeatedly?
        studio_playlab_8: Vai vari pievienot programmas bloku lai pieskaitītu punktu
          kad pingvīns ieskrien astoņkājī un tad pārvietot viņu ar bultiņām lai gūtu
          punktu?
        studio_playlab_9: Vai tu vari pievienot programmas blokus lai izmainītu fona
          attēlu un pingvīna ātrumu, un tad pārvietot viņu ar bultiņām līdz tu gūsti
          punktu?
        studio_playlab_10: Create your own game. When you're done, click Finish to
          let friends try your story on their phones.
        studio_full_sandbox: Create your own game. When you're done, click Finish
          to let friends try your story on their phones.
        studio_k1_1: Can you make this dog say "hello world"?
        studio_k1_2: Can you make the dog say something and then have the cat say
          something afterwards?
        studio_k1_3: Vai tu vari uzrakstīt programmu lai liktu sunim pārvietot kaķi?
        studio_k1_4: Liec sunim pārvietoties pie kaķa un kaķim  teikt "sveiks" kad
          suns nonāk pie kaķa.
        studio_k1_5: Vai tu vari pievienot programmas bloku lai padarītu astoņkāji
          laimīgu?
        studio_k1_6: Can you write a program to make this penguin move around using
          the up / down / left /right keys to hit all of the targets?
        maze_wordsearch_k_1: Move me to spell the word EAST
        maze_wordsearch_k_2: Move me to spell the word SOUTH
        maze_wordsearch_k_3: Move me to spell the word WEST
        maze_wordsearch_k_4: Move me to spell the word NORTH
        maze_wordsearch_k_6: Move me East and then South to spell the word JUMP
        maze_wordsearch_k_9: Move me one way, then another to spell the word CODE
        maze_wordsearch_k_13: Move me one way, then another to spell the word DEBUG
        maze_wordsearch_k_15: Move me one way, then another to spell the word ABOVE
        maze_wordsearch_k_16: Move me one way, then another to spell the word BELOW
        maze_wordsearch_k_20: This is a test! Move me one way, then another to spell
          the word STORY
        webapp_ec_simple: Create your web app by using createHtmlBlock.
        turtle_ec_1_2: 'Now, draw a square. NOTE: use your favorite color by picking
          it in the new "penColour" block.'
        turtle_ec_1_10: 'You made it! Now, draw anything you want. Some fun ideas:
          a stick figure, snowflake, or spiral. Also try the new "penWidth" block.
          Have fun!'
        studio_ec_sandbox: Create your own game. When you're done, click Finish to
          let friends try your game on their phones.
    video:
      name:
        maze_intro: Maze Intro
        artist_intro: Artist Intro
        farmer_intro: Farmer Intro
        flappy_intro: Flappy Intro
        loop_times: Repeat Times Block
        loop_until: Repeat Until Block
        if: If Block
        if_else: If/else Block
        function: Funkcijas
        loop_while: While Block
        loop_for: Counter Block
        parameters: Functions with Parameters
        hoc_wrapup: Hour of Code Wrapup
        Unplug1: What is CS?
        Unplug2: Algoritmiska domāšana
        Unplug3: Rūtiņpapīra programmēšana
        Unplug4: Algoritmi
        Unplug5: Funkcijas
        Unplug6: Kondicionālis
        Unplug7: Songwriting
        Unplug8: Abstrakcija
        Unplug9: Releju programmēšana
        Unplug10: Internets
        Unplug11: Ietīt
        C1_happy_maps_unplugged: Laimīgās kartes
        C1_moveitmoveit_unplugged: Move It, Move It
        C1_bigevent_unplugged: Lielais notikums
        C1_getting_loopy: Kļūst ciklisks
        C1_pair_programming: Pair Programming
        C1_maze_intro_sequencing: Maze Sequencing Intro
        C1_maze_debugging: Maze Debugging
        C1_bee_level_intro: Bee Level - Intro
        C1_artist_intro: Artist Intro
        C1_spelling_bee_intro: Spelling Bee Intro
        C1_zuck_repeat_loop: Labirinta Cilpas
        C1_bee_loops: 'Bite: Cilpas'
        C1_maze_loops: Labirinta Cilpas
        C1_playlab_storytelling: Play Lab - Create a Story
        C1_planting_seed: Planting a Seed
        C1_building_foundation: Veidot pamatus
        C2_maze_intro: Maze Intro
        C2_artist_intro: Artist Intro
        C2_zuck_repeat_loop: Labirinta Cilpas
        C2_artist_loops: Mākslinieku cikli
        C2_artist_debugging: Mākslinieka atkļūdošana
        C2_bee_loops: 'Bite: Cilpas'
        C2_bee_debugging: Bites atkļūdošana
        C2_bee_conditionals: Bites nosacījumi
        C2_playlab_createstory: Play Lab - Create a Story
        C2_graph_paper: Rūtiņpapīra programmēšana
        C2_conditionals_with_cards: Kondicionālis
        C2_binary_bracelets: Binārās aproces
        C2_relay_programming: Releju programmēšana
        C2_paper_airplanes: Paper Airplanes
        C3_maze_level_4: Labirinta Cilpas
        C3_artist_intro: Artist Intro
        C3_artist_functions: Izpildītāja funkcijas
        C3_bee_functions: Bites funkcijas
        C3_bee_conditionals: Bites nosacījumi
        C3_maze_conditionals: Labirinta nosacījums
        C3_artist_nested_loops: Nested Loops
        C3_farmer_while: While Loops
        C3_bee_nested_loops: Nested Loops
        C3_bee_debugging: Bites atkļūdošana
        C3_bounce: Atlekt
        C3_playlab_create_game: Play Lab - Create a Game
        C3_computational_thinking: Algoritmiska domāšana
        C3_dice_race: kauliņu skrējiens
        C3_internet: Internets
        C3_crowdsourcing: Pūļa ieguve
        C3_functional_suncatchers: funkcionālie saulķērāji
        C3_songwriting_with_parameters: Dziesmu rakstīšana ar parametriem
        Frozen_intro: Hour of Code Intro
        Frozen_loops: Introduction to Loops
        Frozen_functions: Ievads funkcijās
    callout:
      text:
        drag_blocks: Drag a "move" block and snap it below the other block
        run: Nospied "Palaist", lai izmēģinātu programmu
        watch_again: Click here to watch the video again
        gray_block_explanation: Pelēkos blokus nevar izdzēst. Vai tu vari atrisināt
          uzdevumu neskatoties uz to?
        show_code_explanation: Click here to see the code for the program you're making
        instructions_repeat_explanation: Katra uzdevuma nosacījumi ir atkārtoti šeit
        category_explanation: You have all the same blocks but they've now been arranged
          in categories
        set_sprite_image: Attach a "set actor to image" block to the "when story starts"
          block to enable an actor for this story
        studio_say_text: Type what you want your actor to say within these quotes
        jigsaw_click: Click this block!
        move_elsa_forward: Drag a "Move Forward" block and snap it below the "When
          Run" block to make Elsa move forward
        turn_elsa: Use the "Turn" block to make Elsa turn. The number in the drop-down
          determines how much Elsa turns
        replace_questions: Use the drop-down to replace "???" with a number
        replace_questions_degree: Use the drop-down to replace "???" with the correct
          degree to turn
        repeat_blocks: Use the "Repeat" block and wrap it around the blocks in the
          workspace
        snowflake_dropdown: Use this drop-down to create different snowflakes!
        degrees_per_side: Divide 360 by the number of sides to get the size of each
          angle in degrees.
        set_sides: Izmanto šo bloku, lai iestatītu " malas"  uz vajadzīgo skaitli,
          lai pabeigt uzdevumu.
        set_length: Use this block to set "length" to the correct value.
        which_equation: Which equation makes each side shorter for shapes with more
          sides?  Try each equation!
        get_nectar: Izmanto jauno "savākt nektāru" bloku.
        actions_category: Rīku josla ir ieguvusi jaunu dizainu! Tagad tajā ir "Darbības"
          bloki.
        draw_square_hint: 'Padoms: Izmanto iepriekšējā uzdevumā izveidoto kvadrāta
          ciklu.'
        edit_function: Izmanto šo pogu, lai rediģētu funkciju.
        create_function: Spied šeit, lau atvērtu Funkciju paneli, tad nospied "Izveidot
          funkciju" pogu.
        house_hint: Tas nekas, ja bildes pagaidām neizskatās pēc mājas. Mēs to labosim
          nākamajā uzdevumā.
        edit_draw_square: Izmanto šo pogu, lai labotu funkciju un pievienotu ciklu.
        edit_get_nectar: Izmanto šo pogu, lai rediģētu funkciju un mainītu virzienu,
          kurā bite griezīsies, lai savāktu nektāru.
        logic_category: Atver paneli "Loģika", lai atrastu "if/else" bloku.
        length_parameter: Vai vari pārveidot šo funkciju tā, lai tā izmantotu "garums"
          parametru?
