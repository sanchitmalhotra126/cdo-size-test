---
ja-JP:
  data:
    dsls:
      2-3 Algorithms Multi 1:
        answers:
        - text: 正方形から始めます<br/>正方形の上に三角形を置きます<br/>正方形の下に三角形を置きます
        - correct: true
        - text: 正方形から始めます<br/>正方形の上に平行四辺形を置きます<br/>三角形を平行四辺形の右に置きます
        - text: 正方形から始めます<br/>三角形を正方形の下に置きます<br/>平行四辺形を三角形の右に置きます
        questions:
        - text: 与えられた画像のためのアルゴリズムを選びましょう
        title: 複数の選択肢
      2-3 Algorithms Multi 2:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        content1: 三角形から始めます<br/>正方形を三角形の下に置きます<br/>もう一つの三角形を正方形の下に置きます
        questions:
        - text: どの絵がこのアルゴリズムに従って<em>いない</em>でしょうか？
        title: 複数の選択肢
      2-3 Big Event Match 1:
        answers:
        - {}
        - {}
        - {}
        - {}
        content2: 一致するボタンの組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        - {}
        title: 一致
      2-3 Binary Match 1:
        answers:
        - {}
        - {}
        - {}
        - {}
        content2: キーを使って一致する文字の組み合わせをえらびましょう。
        questions:
        - text: "<strong>N</strong>"
        - text: "<strong>O</strong>"
        - text: "<strong>P</strong>"
        - text: "<strong>Q</strong>"
        title: 一致
      2-3 Conditionals Multi 1:
        answers:
        - {}
        - {}
        - correct: true
        - {}
        questions:
        - text: ゲームのルールによると、カードの組み合わせの点数が正しいのはどれでしょう？
        title: 複数の選択肢
      2-3 Getting Loopy Multi 1:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - text: この流れをループを使って簡単にする方法はないでしょうか？
        title: 複数の選択肢
      2-3 Graph Paper Match 1:
        answers:
        - {}
        - {}
        - {}
        content1: 一致するマス目のプログラムの組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        title: 一致
      2-3 Graph Paper Multi 1:
        answers:
        - {}
        - correct: true
        - {}
        questions:
        - text: この画像を描いたのはどのプログラムでしょうか？
        title: 複数の選択肢
      2-3 Maze Match 2:
        answers:
        - {}
        - {}
        - {}
        content1: 一致するパズルのブロックの組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        title: 迷路パズル
      2-3 Maze Multi 2:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - {}
        title: めいろ選択問題（せんたくもんだい）
      2-3 Relay Programming Multi 1:
        answers:
        - {}
        - {}
        - correct: true
        questions:
        - {}
        title: 複数の選択肢
      2-3 Relay Programming Multi 2:
        answers:
        - {}
        - {}
        - correct: true
        questions:
        - text: 正しい画像プログラムはどれですか？
        title: 複数の選択肢
      2-3 artist debug multi 1:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - {}
      2-3 artist functions multi 1:
        answers:
        - correct: true
        - {}
        - {}
        questions:
        - text: 与えられた関数を使ってこの画像を描くことができるように、正しいブロックをえらびましょう。
        title: アーティスト ファンクション選択問題（せんたくもんだい）
      2-3 artist loops match 1:
        answers:
        - {}
        - {}
        - {}
        - {}
        content2: 一致する組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        - {}
      2-3 artist loops multi 1:
        answers:
        - {}
        - {}
        - correct: true
        - {}
        questions:
        - text: このループではどんな形が描かれるでしょうか？
        title: アーティストループ 選択問題（せんたくもんだい）
      2-3 artist loops multi 2:
        answers:
        - {}
        - {}
        - {}
        - correct: true
        questions:
        - text: このプログラムで描いた図形はどれでしょう？
        title: アーティストループ 選択問題（せんたくもんだい）
      2-3 artist match 1:
        answers:
        - {}
        - {}
        - {}
        - {}
        content1: 一致する組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        - {}
        title: アーティストの一致
      2-3 bee conditionals multi 1:
        answers:
        - {}
        - {}
        - correct: true
        - {}
        questions:
        - text: 下のどっちの比較がtrueになるでしょうか？
      2-3 bee conditionals multi 3:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - text: 正しいブロックを選んでください。
      2-3 bee loops multi 1:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - text: すべての花のミツを集めるブロックはどれでしょう？
        title: みつばちループ選択問題（せんたくもんだい）
      2-3 maze match 1:
        answers:
        - {}
        - {}
        - {}
        content1: 一致するパズルのブロックの組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        title: 迷路はどれに一致するか
      2-3 maze multi 1:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - text: 正しいブロックの組み合わせはどれでしょう？
        title: めいろ選択問題（せんたくもんだい）
      4-5 Algorithms Match 1:
        answers:
        - text: "<h4>プレイヤー１の点数をゼロにします</h4>"
        - text: "<h4>プレイヤー１がサイコロを振ります</h4>"
        - text: "<h4>プレイヤー１の出た目を合計点数に加えます</h4>"
        - text: "<h4>プレイヤーの点数を比較して誰が勝ったか見てみましょう</h4>"
        content1: サイコロレースゲームの手順を一致させましょう。
        questions:
        - text: "<h4>1)</h4>"
        - text: "<h4>2)</h4>"
        - text: "<h4>3)</h4>"
        - text: "<h4>4)</h4>"
        title: 一致
      4-5 Algorithms Multi 1:
        answers:
        - text: 歯を磨く
        - text: クッキーを焼く
        - text: 食料品リストから買い物をする
        - text: バナナ
          correct: true
        questions:
        - text: どのアイテムがアルゴリズムを記述するのが最も難しいですか?
        title: 複数の選択肢
      4-5 Computational Thinking Match 1:
        answers:
        - {}
        - {}
        - {}
        - {}
        content1: これらの車両を分解しました。分解した部品リストを一致させましょう。
        questions:
        - text: "<h3>車輪/片面: 2<br/>窓/片面: 0</h3>"
        - text: "<h3>車輪/片面: 2<br/>窓/片面: 1</h3>"
        - text: "<h3>車輪/片面: 2<br/>窓/片面: 6</h3>"
        - text: "<h3>車輪/片面: 3<br/>窓/片面: 2</h3>"
        title: 一致
      4-5 Computational Thinking Multi 1:
        answers:
        - text: シアトル _____ _____ _____。
        - text: _____ は、_____ 都市です。
          correct: true
        - text: _____は_____ _____。
        - text: Eugene は _____ 都市です。
        questions:
        - text: シアトルは大きな町。<br/>ユージーンは中くらいの町<br/> ヒルビューは小さな町。
        title: 複数の選択肢
      4-5 Crowdsourcing Multi 1:
        answers:
        - {}
        - correct: true
        questions:
        - text: どの写真がクラウドソーシングを表していますか?
        title: 複数の選択肢
      4-5 Crowdsourcing Multi 2:
        answers:
        - text: 部屋の掃除
          correct: true
        - text: デザートを食べる
        - text: 髪をとかす
        - text: 顔を洗う
        questions:
        - text: クラウドソーシングの実践に適した活動はどれだろうと思いますか？
        title: 複数の選択肢
      4-5 Digital Footprint Multi 1:
        answers:
        - text: あなたの誕生日
        - text: あなたの好きな食べ物
          correct: true
        - text: あなたの住所
        - text: 親のクレジットカード番号
        questions:
        - text: インターネット上で公開や共有しても大丈夫なのは、次のうちどれでしょうか？
        title: 複数の選択肢
      4-5 Internet Multi 1:
        answers:
        - {}
        - {}
        - {}
        - correct: true
        questions:
        - text: Code.org にログオンする時、DNSはあなたを、どの IP アドレスに連れていくでしょうか？
        title: 複数の選択肢
      4-5 Internet Multi 2:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - text: もしDNSがIPアドレス100.42.50.110のページを送信したすると、どのウェブサイトが該当しますか?
        title: 複数の選択肢
      4-5 Songwriting Multi 1:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - {}
        title: 複数の選択肢
      4-5 Suncatchers Match 1:
        answers:
        - {}
        - {}
        - {}
        - {}
        content1: SKILL表を使い、PROGRAMとできる単語を一致させましょう
        questions:
        - {}
        - {}
        - {}
        - {}
        title: 一致
      4-5 Suncatchers Multi 1:
        answers:
        - {}
        - correct: true
        - {}
        questions:
        - text: プログラム 1 とまったく同じ順序 <em>では無い</em> のは、下のどのプログラムですか?
        title: 複数の選択肢
      4-5 artist loops multi 1:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - text: どのくみあわせでこの絵がかけますか？
        title: アーティストループ 選択問題（せんたくもんだい）
      4-5 artist multi 1:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - text: 一辺の長さが100の正方形を描くブロックはどれでしょうか？
        title: アーティスト選択問題（せんたくもんだい）
      4-5 artist multi 2:
        answers:
        - {}
        - {}
        - correct: true
        - {}
        questions:
        - text: 対称（たいしょう）な図形（ずけい）はどれですか？
        title: アーティスト選択問題（せんたくもんだい）
      4-5 bee conditionals multi 1:
        answers:
        - {}
        - {}
        - correct: true
        - {}
        questions:
        - text: 正しいブロックを選んでください。
        title: 正しいものを選ぼう
      4-5 bee debug multi 1:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - text: どのバージョンの関数をつかえばよいでしょうか？
        title: みつばちデバッグ選択問題（せんたくもんだい）
      4-5 bee loops multi 1:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - text: どのコードが正（ただ）しいくみあわせですか？
        title: みつばちループ選択問題（せんたくもんだい）
      4-5 maze conditionals multi 1:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - text: どのコードが正（ただ）しいですか？
        title: めいろ：条件文（じょうけんぶん）選択問題（せんたくもんだい）
      4-5 maze match 1:
        answers:
        - {}
        - {}
        - {}
        content1: 一致するパズルのブロックの組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        title: 迷路パズル
      4-5 maze multi 1:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - text: どのコードが正（ただ）しいですか？
        title: めいろ選択問題（せんたくもんだい）
      Begin planning your project:
        content1: 説明
        markdown: "# 設計のプロセス\nソフトウエアの設計とは、たくさんの小さな問題を解決することです。最も大きな問題は、最初に何を作るか決めることです。\n\nこのプロセスはソフトウエアの設計だけでなく、あるゆることに使うことができます。\n\n<!--
          Translate the terms \"Define\", \"Prepare\", \"Try\", \"Reflect\" and change
          font size and positioning as needed-->\n<div style=\"position: relative;
          text-align: center; font-size: 1em\">\n  <img src=\"https://images.code.org/a157e5f67444573e19e980a507db16fb-image-1563319667694.png\"
          alt=\"Design Process\" style=\"width: 50%;\">\n  <div style=\"position:
          absolute; top: 24%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">定義</div> \n  <div style=\"position: absolute; top: 52%; left: 61%;
          transform: translateX(-61%); font-weight: bold;\">準備</div>\n  <div style=\"position:
          absolute; top: 79%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">実行</div>\n  <div style=\"position: absolute; top: 52%; left: 39%;
          transform: translateX(-39%); font-weight: bold;\">振り返り</div>\n</div>\n\n*
          **定義**\n  * どのようなプログラムを作りますか？\n  * 制約条件はありますか？\n  * 完成したら どのように動きますか？\n*
          **準備**\n  * 意見を出しあう / どのようなことができるのか調べる\n  * いろいろ較べてみる\n  * 計画を作る\n* **実行**\n
          \ * 計画に従って実行する\n* **振り返り**\n  * 定義で決めた結果を得られたか？\n  * 何を学んだか、もっと良くするために何をすればいいか？\n
          \ * 新たな問題は見つかった？\n\n# コースの概要\nこれから、準備してあるゲームを利用してゲーム作りを体験します。つぎに、経験したことを活かしてオリジナルのゲームを作成して、作ったゲームをみんなの前で発表して、意見をもらいます。これはプログラムを作るうえで、とても重要なことです。
          これを経験することで よりよいプログラムを効率よく開発できるようになります。\n\nこのコースでは設計のプロセスについて、学びます。\n\n1.
          **定義と準備**\n   * 準備してあるゲームをプレイして、アイデアを考えたり、どのようなことができるかを理解します。\n   * 意見を出しあって、新しいプログラムを作る計画や準備されたプログラムを変更するする計画を立てます。\n1.
          **実行**\n   * 計画に従って、プログラムを作成します\n1. **振り返りと改善**\n   * ほかのグループが作ったプログラムを見て、自分たちのプログラムの改善ポイントを探します。\n1.
          **発表**\n   * できあがったプログラムをみんなの前で発表します！\n"
      Begin planning your project_2018:
        content1: 説明
        markdown: "# 設計のプロセス\nソフトウエアの設計とは、たくさんの小さな問題を解決することです。最も大きな問題は、最初に何を作るか決めることです。\n\nこのプロセスはソフトウエアの設計だけでなく、あるゆることに使うことができます。\n\n<!--
          Translate the terms \"Define\", \"Prepare\", \"Try\", \"Reflect\" and change
          font size and positioning as needed-->\n<div style=\"position: relative;
          text-align: center; font-size: 1em\">\n  <img src=\"https://images.code.org/a157e5f67444573e19e980a507db16fb-image-1563319667694.png\"
          alt=\"Design Process\" style=\"width: 50%;\">\n  <div style=\"position:
          absolute; top: 24%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">定義</div> \n  <div style=\"position: absolute; top: 52%; left: 61%;
          transform: translateX(-61%); font-weight: bold;\">準備</div>\n  <div style=\"position:
          absolute; top: 79%; left: 49.8%; transform: translateX(-49.8%); font-weight:
          bold;\">実行</div>\n  <div style=\"position: absolute; top: 52%; left: 39%;
          transform: translateX(-39%); font-weight: bold;\">振り返り</div>\n</div>\n\n*
          **定義**\n  * どのようなプログラムを作りますか？\n  * 制約条件はありますか？\n  * 完成したら どのように動きますか？\n*
          **準備**\n  * 意見を出しあう / どのようなことができるのか調べる\n  * いろいろ較べてみる\n  * 計画を作る\n* **実行**\n
          \ * 計画に従って実行する\n* **振り返り**\n  * 定義で決めた結果を得られたか？\n  * 何を学んだか、もっと良くするために何をすればいいか？\n
          \ * 新たな問題は見つかった？\n\n# コースの概要\nこれから、準備してあるゲームを利用してゲーム作りを体験します。つぎに、経験したことを活かしてオリジナルのゲームを作成して、作ったゲームをみんなの前で発表して、意見をもらいます。これはプログラムを作るうえで、とても重要なことです。
          これを経験することで よりよいプログラムを効率よく開発できるようになります。\n\nこのコースでは設計のプロセスについて、学びます。\n\n1.
          **定義と準備**\n   * 準備してあるゲームをプレイして、アイデアを考えたり、どのようなことができるかを理解します。\n   * 意見を出しあって、新しいプログラムを作る計画や準備されたプログラムを変更するする計画を立てます。\n1.
          **実行**\n   * 計画に従って、プログラムを作成します\n1. **振り返りと改善**\n   * ほかのグループが作ったプログラムを見て、自分たちのプログラムの改善ポイントを探します。\n1.
          **発表**\n   * できあがったプログラムをみんなの前で発表します！\n"
      Begin planning your project_2018_2019:
        content1: 説明
        markdown: |+
          # プロジェクトのれい

          さいごのプロジェクトを始めます。始める前に、いくつか れいを 見てみましょう。

          | Hungry Squirrel | Alien Story |
          |---|---|
          | [![Hungry Squirrel (Play Lab)](https://images.code.org/3fda61d18026d6661dccf4b09baea111-image-1565115158327.PNG "Hungry Squirrel (Play Lab")](https://studio.code.org/projects/playlab/HN1zAX4Om6zdsxVsBBug9Y8mlzKSWUAXhjzRl-64YRs/view) | [![Alien Story (Play Lab)](https://images.code.org/0bd5ed3674ac9fe3304e27e68974c35f-image-1565115240833.PNG "Alien Story (Play Lab")](https://studio.code.org/projects/playlab/I_8rcKtpLFRAn8flROC15Oc-KnDu-bkKBnSORoIDs0o/view) |
          | 音を ついかしよう！ | 別のシーンをついかしよう！|

      Begin planning your project_2018_2019_2020:
        content1: 説明
        markdown: |+
          # プロジェクトのれい

          さいごのプロジェクトを始めます。始める前に、いくつか れいを 見てみましょう。

          | Hungry Squirrel | Alien Story |
          |---|---|
          | [![Hungry Squirrel (Play Lab)](https://images.code.org/3fda61d18026d6661dccf4b09baea111-image-1565115158327.PNG "Hungry Squirrel (Play Lab")](https://studio.code.org/projects/playlab/HN1zAX4Om6zdsxVsBBug9Y8mlzKSWUAXhjzRl-64YRs/view) | [![Alien Story (Play Lab)](https://images.code.org/0bd5ed3674ac9fe3304e27e68974c35f-image-1565115240833.PNG "Alien Story (Play Lab")](https://studio.code.org/projects/playlab/I_8rcKtpLFRAn8flROC15Oc-KnDu-bkKBnSORoIDs0o/view) |
          | 音を ついかしよう！ | 別のシーンをついかしよう！|

      BigEvent-Unplugged:
        markdown: |
          # ビッグ イベント

          コンピューター の せかいでは、イベントは、コンピューターを うごかすときに つかう めいれいの 1つです。このレッスンでは、おしたボタンで ちがう うごきを させられることを まなびます。
      BigEvent-Unplugged_2020:
        markdown: |
          # ビッグ イベント

          コンピューター の せかいでは、イベントは、コンピューターを うごかすときに つかう めいれいの 1つです。このレッスンでは、おしたボタンで ちがう うごきを させられることを まなびます。
      BinaryBracelets-Unplugged:
        markdown: |
          # バイナリー形式

          コンピュータがわかる形式で あなたの名前を かいてみよう！

          ![](https://images.code.org/ed15a484276c0989e4adb5daf480f68a-image-1557870226222.png)
      BinaryBracelets-Unplugged_2020:
        markdown: |
          # バイナリー形式

          コンピュータがわかる形式で あなたの名前を かいてみよう！

          ![](https://images.code.org/ed15a484276c0989e4adb5daf480f68a-image-1557870226222.png)
      BinaryImages-Unplugged:
        markdown: |
          # バイナリー イメージ

          ２つの数字（0 と 1）だけで もようをかく方法を 伝えましょう。
      BinaryImages-Unplugged_2020:
        markdown: |
          # バイナリー イメージ

          ２つの数字（0 と 1）だけで もようをかく方法を 伝えましょう。
      CSD Header Size MC:
        answers:
        - {}
        - correct: true
        - {}
        - {}
      CSD Header Size MC_2018:
        answers:
        - {}
        - correct: true
        - {}
        - {}
      CSD Header Size MC_2018_2019:
        answers:
        - {}
        - correct: true
        - {}
        - {}
      CSD U2 Design Project:
        content1: 説明
      CSD U2 Design Project_2018:
        content1: 説明
      CSD U2 Design Project_2018_2019:
        content1: 説明
      CSD U2 L1 Overview:
        content1: 説明
      CSD U2 L2 Overview:
        content1: 説明
      CSD U2 L3 Overview:
        content1: 説明
      CSD U2 L4 Overview:
        content1: 説明
      CSD U2 L5 Overview:
        content1: 説明
      CSD U2 L6 Overview:
        content1: 説明
      CSD U2 Lesson 6 Overview:
        content1: 説明
      CSD U2 expand project:
        content1: 説明
      CSD U2 expand project_2018:
        content1: 説明
      CSD U2 expand project_2018_2019:
        content1: 説明
      CSD U2 image debug match:
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U2 lists match:
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U2 lists match_2018:
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U2 lists match_2018_2019:
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U2 project guide:
        content1: 説明
      CSD U2 project guide_2018:
        content1: 説明
      CSD U2 project guide_2018_2019:
        content1: 説明
      CSD U3 - conditionals - Matching:
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U3 - conditionals - Matching_2018:
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U3 - conditionals - Matching_2018_2019:
        answers:
        - {}
        - {}
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
        - {}
        - {}
      CSD U3 Boolean MC:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - {}
        title: タイトル
      CSD U3 Boolean MC_2018:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - {}
        title: タイトル
      CSD U3 Boolean MC_2018_2019:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - {}
        title: タイトル
      CSD U3 Card Examples_2018:
        content1: 説明
      CSD U3 Card Examples_2018_2019:
        content1: 説明
      CSD U3 Functions Prediction define first:
        answers:
        - {}
        - {}
        - correct: true
        - {}
      CSD U3 Functions Prediction define first_2018:
        answers:
        - {}
        - {}
        - correct: true
        - {}
      CSD U3 Functions Prediction define first_2018_2019:
        answers:
        - {}
        - {}
        - correct: true
        - {}
      CSD U3 Keypress Matching:
        answers:
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
      CSD U3 Keypress Matching_2018:
        answers:
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
      CSD U3 Keypress Matching_2018_2019:
        answers:
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
      CSD U3 Sprite Movement Predict Multi:
        answers:
        - {}
        - {}
        - correct: true
        - {}
        questions:
        - {}
      CSD U3 Sprite Movement Predict Multi_2018:
        answers:
        - {}
        - {}
        - correct: true
        - {}
        questions:
        - {}
      CSD U3 Sprite Movement Predict Multi_2018_2019:
        answers:
        - {}
        - {}
        - correct: true
        - {}
        questions:
        - {}
      CSD U3 Sprites intro predict multi:
        answers:
        - {}
        - {}
        - correct: true
        - {}
        questions:
        - {}
      CSD U3 Sprites intro predict multi_2018:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - {}
      CSD U3 Sprites intro predict multi_2018_2019:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - {}
      CSD U3 combining rep:
        content1: 説明
      CSD U3 combining rep_2018:
        content1: 説明
      CSD U3 combining rep_2018_2019:
        content1: 説明
      CSD U3 drawSprites placement match:
        answers:
        - {}
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
        - {}
      CSD U3 drawSprites placement match_2019:
        answers:
        - {}
        - {}
        - {}
        - {}
        questions:
        - {}
        - {}
        - {}
        - {}
      CSD U3 game intro:
        content1: 説明
      CSD U3 game intro_2018:
        content1: 説明
      CSD U3 game intro_2018_2019:
        content1: 説明
      CSD U3 platform intro:
        content1: 説明
      CSD U3 platform intro_2018:
        content1: 説明
      CSD U3 platform intro_2018_2019:
        content1: 説明
      CSD U5 Encryption 1:
        content1: 説明
      CSD U5 Encryption 1_2018:
        content1: 説明
      CSD U5 Encryption 1_2018_2019:
        content1: 説明
      CSD U5 Encryption 2:
        content1: 説明
      CSD U5 Encryption 2_2018:
        content1: 説明
      CSD U5 Encryption 2_2018_2019:
        content1: 説明
      CSD U5 L13 SFLP Interpreting Data:
        content1: 説明
      CSD U5 crosstab warmup:
        content1: 説明
      CSD U5 crosstab warmup_2018:
        content1: 説明
      CSD U5 crosstab warmup_2018_2019:
        content1: 説明
      CSD U5 data visualization:
        content1: 説明
      CSD U5 data visualization_2018:
        content1: 説明
      CSD U5 data visualization_2018_2019:
        content1: 説明
      CSD U5 student record:
        content1: 説明
      CSD U5 student record_2018:
        content1: 説明
      CSD U5 student record_2018_2019:
        content1: 説明
      CSD U6 LED create intro:
        content1: 説明
      CSD U6 LED create intro_2018:
        content1: 説明
      CSD U6 LED create intro_2018_2019:
        content1: 説明
      CSD U6 array multi:
        answers:
        - {}
        - {}
        - {}
        - correct: true
        questions:
        - {}
      CSD U6 array multi_2018:
        answers:
        - {}
        - {}
        - {}
        - correct: true
        questions:
        - {}
      CSD U6 array multi_2018_2019:
        answers:
        - {}
        - {}
        - {}
        - correct: true
        questions:
        - {}
      CSD U6 final intro:
        content1: 説明
      CSD U6 final intro_2018:
        content1: 説明
      CSD U6 final intro_2018_2019:
        content1: 説明
      CSD U6 setProperty predict multi:
        answers:
        - {}
        - {}
        - {}
        - correct: true
        questions:
        - {}
      CSD U6 setProperty predict multi_2018:
        answers:
        - {}
        - {}
        - {}
        - correct: true
        questions:
        - {}
      CSD U6 setProperty predict multi_2018_2019:
        answers:
        - {}
        - {}
        - {}
        - correct: true
        questions:
        - {}
      ConditionalsWithCards-Unplugged:
        markdown: |
          # 条件判定について

          トランプを使って、"もし 赤いカードなら、1ポイント ゲット" や "もし 黒いカードなら、1ポイント ゲット" といったルールを作ってみよう。
      ConditionalsWithCards-Unplugged_2020:
        markdown: |
          # 条件判定について

          トランプを使って、"もし 赤いカードなら、1ポイント ゲット" や "もし 黒いカードなら、1ポイント ゲット" といったルールを作ってみよう。
      Crowdsourcing-Unplugged:
        markdown: |
          # 助け合うこと

          助け合うこと とは、コンピュータ サイエンスの世界で 問題を解決しようとするとき、あなたが一人でがんばるよりも、クラスのみんなで協力したほうが、はやく解決できる ということを 意味します。
      Dance_Party_extras_intro:
        markdown: "＃ダンスを継続する！\n\nパート2では、独自のプロジェクトを創作します。ここにはパズルはありません-代わりに、より複雑なダンスパーティーを創作するさまざまな方法を示す多くのプロジェクトがあります。\n\nこれらのレベルは_あらゆる順序で_実行できます。前のレベルでどのように行われたかを確認したり、プロジェクト間でコンセプトを組み合わせたりしてください。それらをすべて試して、お気に入りを選んで、そのプロジェクトに自分のプロジェクトを追加する作業を行ってください。
          \n\n<a class=\"btn btn-large btn-primary next-stage submitButton pull-right\">継続する</a>
          <div class=\"clearfix\">\n\n</div> \n\n<div style=\"float: left; margin:
          10px\"> \n<a href=\"2\"> \n<h2>\nバック&フォース（行ったり来たり）\n</h2> \n\n<img src=\"https://images.code.org/2ecaa2dc4e7c6f672ced7e043d8ae0ff-image-1573667207373.gif\"></a>\n\n
          </div>\n\n <div style=\"float: left; margin: 10px\"> \n<a href=\"3\"> \n<h2>\n
          追加ボタン \n</h2> \n\n<img src=\"https://images.code.org/b25c6c68477a794c3086cf1169a5782f-image-1573666336377.gif\"></a>\n\n
          </div> \n\n<div style=\"float: left; margin: 10px\">\n <a href=\"4\">\n
          <h2> \nフォーメーションを入れる\n </h2> \n\n<img src=\"https://images.code.org/70ad4cbc12321f301d43161f847bdee4-image-1541746835274.gif\"></a>\n\n
          </div> \n\n<div style=\"float: left; margin: 10px\"> <a href=\"5\"> \n<h2>\n
          彼らはどこに行きましたか？\n</h2> \n\n<img src=\"https://images.code.org/524010de61c9af76e98bd2a5ccdba461-image-1541746855689.gif\"></a>\n\n
          </div> \n\n<div style=\"float: left; margin: 10px\">\n <a href=\"6\"> \n<h2>
          \nダンスクルー \n</h2>\n\n <img src=\"https://images.code.org/f4ccfd43f9a15d68a339b449be8e96c3-image-1541746870889.gif\"></a>
          \n\n</div>\n\n <div style=\"float: left; margin: 10px\"> \n<a href=\"7\">
          \n<h2> \n４分音符\n</h2>\n \n<img src=\"https://images.code.org/6b538efe77ea6e19f1428f7c0e45c621-image-1541746886875.gif\"></a>
          \n\n</div>\n\n <div style=\"float: left; margin: 10px\">\n <a href=\"8\">
          \n<h2>\nバス”（低域）、ミッド（中域）、トレブル”（高域） \n</h2> \n\n<img src=\"https://images.code.org/3825556a395fd31bc4f767ca7ea5c566-image-1541746894197.gif\"></a>
          \n\n</div> \n\n<div style=\"float: left; margin: 10px\">\n <a href=\"9\">
          \n<h2>\n スピードアップ、スローダウン \n</h2> \n\n<img src=\"https://images.code.org/d7f35c686ef0a9c5a6975889fd7c566b-image-1541746900730.gif\"></a>
          \n\n</div>\n"
      Dance_Party_extras_intro_2019:
        markdown: "\"＃踊りつづけて！\n\nパート2では、独自のプロジェクトを作成します。ここにはパズルはありません。代わりに、より複雑なダンスパーティーを作成するさまざまな方法を示す多数のプロジェクトがあります。\n\nレベルは_任意の順序で_実行できます。前のレベルで何かがどう行われたかを確認したり、プロジェクト間でコンセプトを組み合わせたりしてください。それらをすべて試して、お気に入りを選んで、時間を使ってそのプロジェクトに追加して、自分のものを作成してください。\n\n<html>
          <a class=\"\"btn btn-large btn-primary next-stage submitButton pull-right\"\">続行</a>
          \n\n<div class=\"\"clearfix\"\"></div>\n\n<div style=\"\"float: left; margin:
          10px\"\">\n<a href=\"\"2\"\">\n<h2>\n行ったり来たり\n</h2>\n\n<img src=\"\"https://images.code.org/2ecaa2dc4e7c6f672ced7e043d8ae0ff-image-1573667207373.gif\"\"></a>\n\n</div>\n\n<div
          style=\"\"float: left; margin: 10px\"\">\n<a href=\"\"3\"\">\n<h2>\nその他のボタン\n</h2>\n\n<img
          src=\"\"https://images.code.org/b25c6c68477a794c3086cf1169a5782f-image-1573666336377.gif\"\"></a>\n\n</div>\n<div
          style=\"\"float: left; margin: 10px\"\">\n<a href=\"\"4\"\">\n<h2>\nフォーメーションを作りましょう\n</h2>\n\n<img
          src=\"\"https://images.code.org/70ad4cbc12321f301d43161f847bdee4-image-1541746835274.gif\"\"></a>\n\n</div>\n\n<div
          style=\"\"float: left; margin: 10px\"\">\n<a href=\"\"5\"\">\n<h2>\nどこへ行った？\n</h2>\n\n<img
          src=\"\"https://images.code.org/524010de61c9af76e98bd2a5ccdba461-image-1541746855689.gif\"\"></a>\n\n</div>\n\n<div
          style=\"\"float: left; margin: 10px\"\">\n<a href=\"\"6\"\">\n<h2>\nダンスクルー\n</h2>\n\n<img
          src=\"\"https://images.code.org/f4ccfd43f9a15d68a339b449be8e96c3-image-1541746870889.gif\"\"></a>\n\n</div>\n\n<div
          style=\"\"float: left; margin: 10px\"\">\n<a href=\"\"7\"\">\n<h2>\n四分音符\n</h2>\n\n<img
          src=\"\"https://images.code.org/6b538efe77ea6e19f1428f7c0e45c621-image-1541746886875.gif\"\"></a>\n\n</div>\n\n<div
          style=\"\"float: left; margin: 10px\"\">\n<a href=\"\"8\"\">\n<h2>\nベース、ミドル、トレブル\n</h2>\n\n<img
          src=\"\"https://images.code.org/3825556a395fd31bc4f767ca7ea5c566-image-1541746894197.gif\"\"></a>\n\n</div>\n\n<div
          style=\"\"float: left; margin: 10px\"\">\n<a href=\"\"9\"\">\n<h2>\nスピードアップ、スローダウン\n</h2>\n\n<img
          src=\"\"https://images.code.org/d7f35c686ef0a9c5a6975889fd7c566b-image-1541746900730.gif\"\"></a>\n\n</div>\"\n"
      DesigningForAccessibilityMarkdownLevel_2019:
        markdown: |
          # 使いやすさの設計

          * コンピュータ サイエンスの世界で、**使いやすさ** とは、障害を持った人でも使える技術のことです。
          * 障害には、肉体的、聴覚,、視覚など さまざまなものが あります。
          * 障害は多様で、**スマートフォンのアプリ**をどのように使うかなど、様々な面に影響を与えます。
          * 障害を持った人にも 使いやすいアプリを設計することで、すべての人にとって 使いやすいものになります！

          ![](https://images.code.org/0c670d0d9078657a870df0ca799492cb-image-1557166420066.png)
      DesigningForAccessibilityMarkdownLevel_2019_2020:
        markdown: |
          # 使いやすさの設計

          * コンピュータ サイエンスの世界で、**使いやすさ** とは、障害を持った人でも使える技術のことです。
          * 障害には、肉体的、聴覚,、視覚など さまざまなものが あります。
          * 障害は多様で、**スマートフォンのアプリ**をどのように使うかなど、様々な面に影響を与えます。
          * 障害を持った人にも 使いやすいアプリを設計することで、すべての人にとって 使いやすいものになります！

          ![](https://images.code.org/0c670d0d9078657a870df0ca799492cb-image-1557166420066.png)
      DigitalCitizenship-Unplugged:
        markdown: |
          # デジタル市民権

          ネットで公開すると危険な情報があります。このレッスンでは、公開しても安全な情報とダメな情報について学びます。
      DigitalFootprint-Unplugged:
        markdown: |
          # インターネット上の 足あと

          インターネットで かきこみをすると 足あとが のこります。
      DigitalSharing-Unplugged:
        markdown: |
          # 共有

          とくに インタネットを世界で 所有権と著作権を尊重することの課題と利点について学びます。
      DigitalSharing-Unplugged_2020:
        markdown: |
          # 共有

          とくに インタネットを世界で 所有権と著作権を尊重することの課題と利点について学びます。
      EnvelopeVariables-Unplugged:
        markdown: |
          # 変数

          変数を使えば様々なことができるようになります。このレッスンでは、変数とは何か、どのように使うのかを説明します。
      EnvelopeVariables-Unplugged_2020:
        markdown: |
          # 変数

          変数を使えば様々なことができるようになります。このレッスンでは、変数とは何か、どのように使うのかを説明します。
      ForLoopFun-Unplugged:
        markdown: |
          # くり返し

          くり返しを使うことで、同じことを何回も実施することができます。これから、くり返しの使い方について、学んでいきます。
      ForLoopFun-Unplugged_2020:
        markdown: |
          # くり返し

          くり返しを使うことで、同じことを何回も実施することができます。これから、くり返しの使い方について、学んでいきます。
      GettingLoopy-Unplugged:
        markdown: |
          # くりかえし

          ダンスをれいに くりかえしについて まなびます。
      GettingLoopy-Unplugged_2020:
        markdown: |
          # くりかえし

          ダンスをれいに くりかえしについて まなびます。
      GoingPlacesSafely-unplugged:
        markdown: |
          # あんぜんな ばしょに 行こう

          インタネットは いろいろなことが できますが、きけんな ばしょでも あります。インタネットを あんぜんに つかいましょう！

          <p align=center>
      GraphPaperProgramming-Unplugged:
        markdown: |
          # グラフ用紙を使ったプログラミング

          友だちが同じもようをかけるように、アルゴリズム（もようのかき方）を書いてみよう。
      GraphPaperProgramming-Unplugged_2020:
        markdown: |
          # グラフ用紙を使ったプログラミング

          友だちが同じもようをかけるように、アルゴリズム（もようのかき方）を書いてみよう。
      HappyLoops-Unplugged:
        markdown: |
          # ハッピー ループ

          このレッスンでは、くりかえし について まなびます！

          ![](https://images.code.org/6aac7f675f0c69033f42ccac6a733f68-image-1557769673400.png)
      HappyLoops-Unplugged_2020:
        markdown: |
          # ハッピー ループ

          このレッスンでは、くりかえし について まなびます！

          ![](https://images.code.org/6aac7f675f0c69033f42ccac6a733f68-image-1557769673400.png)
      HappyMaps-Unplugged:
        markdown: |
          # ハッピー マップ

          キャラをうごかして めいろを クリアする ほうほうを かんがえよう。
      HappyMaps-Unplugged_2020:
        markdown: |
          # ハッピー マップ

          キャラをうごかして めいろを クリアする ほうほうを かんがえよう。
      Internet Simulator Setup:
        content1: 説明
      Internet Simulator Setup 2:
        content1: 説明
      Internet Simulator Setup 3:
        content1: 説明
      Internet-Unplugged:
        markdown: |
          # インターネット

          紙を使って、教室にインターネットを作ります。
      Internet-Unplugged_2020:
        markdown: |
          # インターネット

          紙を使って、教室にインターネットを作ります。
      K-1 Artist 1 Multi 1:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - text: どのブロックが正（ただ）しいくみあわせですか？
        title: 複数の選択肢
      K-1 Artist 1 Multi 2:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - text: しかくをかくくみあわせはどれですか？
        title: 複数の選択肢
      K-1 Artist 2 Match 2:
        answers:
        - {}
        - {}
        - {}
        - {}
        content2: 種類別に形を一致させてください。
        questions:
        - {}
        - {}
        - {}
        - {}
        title: 一致
      K-1 Bee 1 Multi 1:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - text: 左（ひだり）にある花（はな）のみつの数（かず）はいくつでしょうか？
        title: 複数の選択肢
      K-1 Bee 1 Multi 2:
        answers:
        - {}
        - {}
        - {}
        - correct: true
        questions:
        - text: 左（ひだり）にある花（はな）のみつの数（かず）はいくつでしょうか？
        title: 複数の選択肢
      K-1 Bee Loops Match 1:
        answers:
        - {}
        - {}
        - {}
        - {}
        content2: ブロックを一致させましょう。
        questions:
        - {}
        - {}
        - {}
        - {}
        title: 一致
      K-1 Big Event Match 1:
        answers:
        - {}
        - {}
        - {}
        content2: 一致するボタンの組み合わせをえらびましょう。
        questions:
        - {}
        - {}
        - {}
        title: 一致
      K-1 Digital Footprint Multi 1:
        answers:
        - {}
        - {}
        - correct: true
        questions:
        - text: どの動物が<strong> もっとも安全ではない </strong>デジタル足あとを、のこしますか？
        title: 複数の選択肢
      K-1 Getting Loopy Multi 1:
        answers:
        - correct: true
        - {}
        - {}
        questions:
        - text: この流れをループを使って簡単にする方法はないでしょうか？
        title: 複数の選択肢
      K-1 Happy Maps Multi 1:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - text: どの矢印を選べば、Flurbはお宝をゲットできますか？
        title: 複数の選択肢
      K-1 Keep it Private Multi 1:
        answers:
        - correct: true
        - {}
        - {}
        questions:
        - text: オンラインで<strong>共有すべきではない</strong>情報はどれでしょう？
        title: 複数の選択肢
      K-1 Maze Debugging Multi 1:
        answers:
        - correct: true
        - {}
        - {}
        - {}
        questions:
        - text: どのブロックがさいごになればいいでしょうか？
        title: 複数の選択肢
      K-1 Maze Loops Multi 1:
        answers:
        - correct: true
        - {}
        - {}
        questions:
        - text: 正しいリピートブロックをえらびましょう。
        title: 複数の選択肢
      K-1 Maze Loops Multi 2:
        answers:
        - {}
        - {}
        - correct: true
        questions:
        - text: 正しいリピートブロックをえらびましょう。
        title: 複数の選択肢
      K-1 Maze Match 1:
        answers:
        - {}
        - {}
        - {}
        - {}
        content2: ブロックとパズルを一致させましょう。
        questions:
        - {}
        - {}
        - {}
        - {}
        title: 一致
      K-1 Maze Multiple Choice 2:
        answers:
        - {}
        - {}
        - correct: true
        - {}
        questions:
        - text: 答えはどれでしょう？
        title: 迷路
      K-1 Move It Multi 1:
        answers:
        - {}
        - correct: true
        - {}
        - {}
        questions:
        - text: どのアルゴリズム（命令のセット）を選べば、Flurbは花をゲットできますか？
        title: 複数の選択肢
      K-1 Plant a Seed Multi 1:
        answers:
        - {}
        - {}
        - correct: true
        questions:
        - text: このアルゴリズムの？を埋めましょう。
        title: 複数の選択肢
      K-1 Plant a Seed Multi 2:
        answers:
        - {}
        - correct: true
        - {}
        questions:
        - text: このアルゴリズムの？を埋めましょう。
        title: 複数の選択肢
      K-1 Word Search Multi 1:
        answers:
        - {}
        - correct: true
        - {}
        questions:
        - text: '"MOVE"のつづりはどれでしょう？'
        title: 複数の選択肢
      K-1 Word Search Multi 3:
        answers:
        - {}
        - correct: true
        - text: 南
        questions:
        - text: このつづりはどの単語でしょう？
        title: 複数の選択肢
      MoveItMoveIt-Unplugged:
        markdown: |
          # うごかせ、うごかせ

          ちずを みながら コマンドをつかって ゴールにすすみましょう。
      MoveItMoveIt-Unplugged_2020:
        markdown: |
          # うごかせ、うごかせ

          ちずを みながら コマンドをつかって ゴールにすすみましょう。
      Multi-Screen Apps:
        content1: 説明
      MyLoopyRoboticFriends-Unplugged:
        markdown: |
          # ロボットに同じ動きをくり返させる

          くりかえしをつかえば、プログラムを 短くできます！
      MyLoopyRoboticFriends-Unplugged_2020:
        markdown: |
          # ロボットに同じ動きをくり返させる

          くりかえしをつかえば、プログラムを 短くできます！
      MyRoboticFriends-Unplugged:
        markdown: |
          # ロボットの友だち

          ロボットのためにプログラムを書くことで、プログラムについて学びます。
      MyRoboticFriends-Unplugged_2020:
        markdown: |
          # ロボットの友だち

          ロボットのためにプログラムを書くことで、プログラムについて学びます。
      New Challenge Introduction:
        content1: 説明
      OPD-K5 Reviewing Reflections:
        content1: 説明
      OPD-K5 Stage3aGo:
        content1: 説明
      OPD-K5 Stage3aGo_copy:
        content1: 説明
        markdown: "＃アンプラグドレッスン：ハッピーマップ\n\nまず、アンプラグドレッスンを用いて、コンピュータサイエンスのトピックを紹介します。次に、ブリッジアクティビティを用いて、オンラインレッスンに移行します。こうしたアンプラグドレッスンから始めることで、楽しく親しみやすい方法で概念を紹介します。これにより、生徒は、オンラインレッスンに行く前に、概念に慣れ親しみ、オンラインレッスンをアンプラグドアクティビティに関連付けられるようになります。\n\nこれらのプログラミングのステージでも、アンプラグドレッスンの例から始めます。以下のレッスンプランに目を通し、付属のビデオを見て、生徒と一緒に教室でこれをどのように実践するか考えましょう。\n\n***\nコンピュータサイエンス入門では、主にコンピュータプログラムの書き方を生徒に教えます。そのために、**シークエンス**から始めます。\n>
          **シークエンス**は、ステップを直線的に順序付ける簡単なプロセスを表します。\n\n例えば：\n- ステップ1：卵を茹でる \n- ステップ2：卵の殻をとる\n-
          ステップ3：卵を食べる\n\nシークエンスは**アルゴリズム**の基盤です。\n> **アルゴリズム**とは、タスクを完了するためのステップのリストのことです。したがって、プログラムは、コンピュータが実行すべきコードに書き表されたアルゴリズムだということになります。\n\n***\n##
          **1. コースAの <a href=\"https://curriculum.code.org/csf-20/coursea/3/\" target=\"blank\"
          rel=\"noopener noreferrer\">ハッピーマップ</a>>\" レッスンプランを見直します。**\n\nコースAは幼稚園児を対象としています。シークエンスは他のコースでも取り上げられています。このページの下部に、レッスンの例を載せています。\n\n##
          ** 2. 生徒向けのビデオ「ハッピーマップ」を見ます（レッスンプランにあります）**\nこれは、シークエンスの概念を紹介し、アンプラグドレッスンを開始する際に手助けとなるよう、生徒に見せるビデオです。\n\n***\n<a
          href=\"https://curriculum.code.org/csf-20/coursea/3/\" target=\"blank\"
          rel=\"noopener noreferrer\">![](https://images.code.org/8871ce7afb8fa81eb805d4640e1b9a95-image-1573079151706.25.15
          PM.png)</a>\n\n\n\n\n"
      OPD-K5 conditionals introduced:
        content1: 説明
        markdown: |-
          ＃条件文：どこで導入されますか？

          ここでは、コースA〜Fで条件文が導入される時の概観をつかんでもらいます。これらのレッスンをすべて見る必要はありません。オンラインコースの該当部分で詳しく説明しますが、必要に応じて自由に参照してください。

          ## <a href="https://curriculum.code.org/csf-19/coursec/" target="blank" rel="noopener noreferrer">コースC</a>
          - レッスン12：マインクラフトで将来について考える

          ## <a href="https://curriculum.code.org/csf-19/coursed/" target="blank" rel="noopener noreferrer">コースD</a>
          - レッスン10（アンプラグド）：トランプで学ぶ条件文
          - レッスン11：みつばちと学ぶIf/Else
          - レッスン12：ファーマーと学ぶ「while」ループ
          - レッスン13：迷路で学ぶ「Until」ループ
          - レッスン14：条件文を用いる収獲

          ## <a href="https://curriculum.code.org/csf-19/coursee/" target="blank" rel="noopener noreferrer">コースE</a>
          - レッスン3：マインクラフトで学ぶ条件文：ボヤージュアクアティック
          - レッスン4：ファーマーと学ぶ条件文
      OPD-K5 debugging:
        content1: 説明
        markdown: |-
          ＃指導実践：デバッグ

          誰もがバグを体験します！ですから、デバッグは、上で述べた練習を重ねることで、すべての生徒が開発する必要のある重要なスキルです。強力なデバッグスキルがないと、生徒はイライラすることになります。教室で自発的なデバッグ戦略とリフレクティブなデバッグ戦略の両方を実装することで、生徒が前進し続けられるようにしましょう。

          > **デバッグ**は、アルゴリズムまたはプログラムにある問題を見つけて修正することです

          ##自発的なデバッグ
          新米プログラマーは、途中で作成したものを読んだりテストしたりするために一時停止せずに、長いコードの塊を書く傾向があります。これでは、加速度的にデバッグするのが非常に難しいプログラムになる可能性があります。これを防ぐためには、一般的なコーディング哲学として、自発的なデバッグを実装することをお勧めします。

          自発的なデバッグとは、コーディング中にデバッグを行う習慣のことです。通常、コーディングのエクササイズ中に時間をとって、書いたばかりの短いコードを読み、処理し、テストすることを意味します。

          このデバッグガイドを使用して、自発的なデバッグに役立ててください。

          <img src="https://images.code.org/b17956e111a6ca4ec17ace55f7fdf69b-image-1571695775936.09.14 PM.png">

          ##リフレクティブなデバッグ
          リフレクティブなデバッグは、生徒がクラス全体としてデバッグに加わる方法です。 「バグトーク」および「バグトラッカー」の維持が、教室でリフレクティブなデバッグを行う際に使用できる戦略の2つの例です。これらについては、カリキュラムガイドの<a href="https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview" target="blank" rel="noopener noreferrer">23ページ</a>で詳細をご覧ください。

          デバッグのプロセス詳細については、デバッグに関するこちらのビデオをご覧ください。

          <a href="https://www.youtube.com/watch?v=auv10y-dN4s" target="blank" rel="noopener noreferrer">![](https://images.code.org/281fbcbd84d0df2491e0c4050e612b97-image-1571696135948.13.58 PM.png)</a>
      OPD-K5 diving deeper intro:
        content1: 説明
        markdown: |-
          #コースEとFを深く掘り下げる

          ##コースEとFを指導する予定ですか？

          コースEとFは、4年生と5年生向けに設計されています。これらのコースでは、いくつかの概念を深く掘り下げ、新しいコーディング環境を紹介します。

          これらのコースの指導を計画している場合は、次のレッスンを完了することをお勧めします。これらのコースを教える予定がない場合は、この概念グループをスキップして「次のステップ」に進んでください。

          ##この概念グループには何が含まれているのですか？
          この開眼グループでは、以下について説明しています。
          - より高度なコーディングの概念：関数、変数、およびループの高度な形式（入れ子ループとforループ）
          -「スプライト」とスプライトラボと呼ばれる新しいコーディング環境
          - コース最終プロジェクト
      OPD-K5 events introduced:
        content1: 説明
        markdown: |-
          ＃イベント：どこで導入されますか？

          ここでは、コースA〜Fでイベントが導入される時の概観をつかんでもらいます。これらのレッスンをすべて見る必要はありません。オンラインコースの該当部分で詳しく説明しますが、必要に応じて自由に参照してください。

          ##<a href="https://curriculum.code.org/csf-19/coursea/" target="blank" rel="noopener noreferrer">コースA </a>
          - レッスン11（アンプラグド）：ビッグイベント・ジュニア
          - レッスン12：イベントを使った移動

          ## <a href="https://curriculum.code.org/csf-19/courseb/" target="blank" rel="noopener noreferrer">コースB</a>
          - レッスン11（アンプラグド）：ビッグイベント・ジュニア
          - レッスン12：イベントを使ったロイヤルバトル

          ## <a href="https://curriculum.code.org/csf-19/coursec/" target="blank" rel="noopener noreferrer">コースC </a>
          - レッスン14 （アンプラグド）：ビッグイベント
          - レッスン15 ：フラッピーゲームを構築する
          - レッスン16：イベントを使った追跡ゲーム

          ## <a href="https://curriculum.code.org/csf-19/coursed/" target="blank" rel="noopener noreferrer">コースD </a>
          - レッスン5：バウンスのイベント
          - レッスン6：スター・ウォーズのゲームを構築する
      OPD-K5 for loops:
        content1: 説明
        markdown: |-
          ＃アンプラグドレッスン：Forループゲーム

          > **forループ**とは、開始、終了、増分（増分間隔）があらかじめ決定されたループのことです。

          ****

          ## **1. コースFの「<a href="https://curriculum.code.org/csf-19/coursef/11/" target="blank" rel="noopener noreferrer">Forループゲーム</a>」レッスンプランを確認します。**
          <br/>
          コースFは5年生を対象としています。これは、コースA〜Fでforループについて触れる唯一の箇所です。
          <br/><br/>

          ## **2. 「生徒用ビデオ：Forループゲーム」を視聴します（レッスンプランにあります）**
          <br/>
          これは、forループの概念を紹介し、アンプラグドレッスンを開始する際に役立つ生徒用のビデオです。

          ***

          <a href="https://curriculum.code.org/csf-19/coursef/11/" target="blank" rel="noopener noreferrer">![](https://images.code.org/73c0b6e95f2136d6ebcc03cbddee1be7-image-1573148733514.45.16 AM.png)</a>
      OPD-K5 for loops intro:
        content1: 説明
        markdown: |-
          # Forループの概要

          <img src="https://images.code.org/9d05ff62f3098c6143eff78553e05f06-image-1571780679511.jpg" class="level-image">

          ##高度なコーディングの概念：Forループ
          -  forループは、開始、終了、増分（増分間隔）があらかじめ決定されたループであることを理解します
          - forループの利用を練習します
      OPD-K5 for loops introduction:
        content1: 説明
        markdown: |-
          # Forループ：どこで導入されますか？

          ## <a href="https://curriculum.code.org/csf-19/coursef/" target="blank" rel="noopener noreferrer">コースF</a>
          - レッスン11（アンプラグド）：Forループゲーム
          - レッスン12： ミツバチと学ぶForループ
          - レッスン13：アーティストと学ぶForループ
      OPD-K5 functions introduced:
        content1: 説明
        markdown: |
          ＃関数：どこで導入されますか？

          ここでは、コースE〜Fで関数が導入される時の概観をつかんでもらいます。これらのレッスンをすべて見る必要はありません。オンラインコースの該当部分で詳しく説明しますが、必要に応じて自由に参照してください。

          ## <a href="https://curriculum.code.org/csf-19/coursee/" target="blank" rel="noopener noreferrer">コースE</a>
          - レッスン14（アンプラグド）：ソングライティング
          - レッスン15：マインクラフトで学ぶ関数
          - レッスン16: ファーマーと学ぶ関数
          - レッスン17: アーティストと学ぶ関数

          ## <a href="https://curriculum.code.org/csf-19/coursef/" target="blank" rel="noopener noreferrer">コースF</a>
          - レッスン1：マインクラフトで学ぶ関数
      OPD-K5 journaling:
        content1: 説明
        markdown: |-
          # 指導実践：ジャーナリング

          ## なぜ使うのですか？
          化学者が戦略や解決策を列挙するように、ここでは、新米のコンピュータサイエンティストに、実験と成果についてメモを取ってもらいます。ジャーナルは、構築、デバッグ、および戦略化のためのスクラッチペーパーとして役立ち、より複雑な問題に苦労する場合に、以前の回答を参照できる素晴らしいリソースとなります。

          ## どのように使用するのですか？
          - コーディングの際は、常にジャーナルを横に置いておくように生徒に勧めます
          - 答えを手書きで書き留め、パターンを丸で囲んで、ループや関数に最適な機会を見つけられることを覚えておいてもらいます
          - 今後学ぶレベルで必要になる可能性のあるパズルの答えを生徒に写してもらいます
          - ページの上部に絵文字を描いてもらい、概念についてどのように感じているかを特定できるようにします
          - その日の成長を振り返る方法として、文章で答えることができる考え方や質問を提示して、各レッスンを終了します

          レッスンプランには、ジャーナリングプロンプトも含まれています。
      OPD-K5 lesson implementation planning:
        content1: 説明
        markdown: |-
          ＃レッスン実施計画ガイド

          これら質問は、最良の指導実践を活用し、生徒をサポートできるようなレッスンを行う方法について考え、詳細な計画を立てる際に手助けとなります。このオンライン専門能力開発コース全体を通じて基本的なコーディングの概念と教育実践を引き続き学びながら、これらの質問に答えてみましょう。

          ##アンプラグドレッスン
          このリソースの印刷可能なバージョンは、<a href="https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview#heading=h.jhv35ofi4hkz" target="blank" rel="noopener noreferrer">カリキュラムガイド</a>の43ページにあります。

          | 今の状況は？ | これはレッスンのどこで行いますか？ |
          | ------------ | ----------------- |
          | **このレッスンで使用する指導アプローチ** <br/>このレッスンで必ず使用したい指導テクニックは何ですか？どこで使いたいですか？  |    |
          | **教師としての役割** <br/>レッスンのいつ/どこで、トピックについてクラス全体で話し合いたいですか？あなたはいつ、どのような役割を担う予定ですか？ |  |
          | **教室の環境と生徒間のインタラクション** <br/>このレッスンでは、いつ生徒に協力し合ってもらいますか？それはどのような形になりますか？|  |
          | **レッスンでの生徒の学習の評価** <br/>このレッスンで生徒が学習する必要のあることを学習したかどうか、どのように評価できますか？ |  |
          | **コンピュータサイエンスへのつながり** <br/>このアンプラグドアクティビティとコンピュータサイエンスのつながりを見るためには、どこで生徒を後押する必要があると思いますか？それをどのようにサポートする予定ですか？ |  |
          | **つながりを生み出す** <br/>このレッスンで、現実の世界/生徒が学校で学習するその他のことにつながりを生み出すスペースはどこにありますか？ |  |

          ## プラグドレッスン
          このリソースの印刷可能なバージョンは、<a href="https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview#heading=h.jhv35ofi4hkz" target="blank" rel="noopener noreferrer">カリキュラムガイド</a>の45ページにあります。

          | 今の状況は？ | これはレッスンのどこで行いますか？ |
          | ------------ | ----------------- |
          | **アンプラグドレッスンへのつながり** <br/>前のアンプラグドレッスンと今回のプラグドレッスンの関係を見るために、生徒にどのように足がかりを提供して、彼らをサポートしますか？  |    |
          | **このレッスンで使用する指導アプローチ** <br/>このレッスンで必ず使用したい指導テクニックはどのようなものですか？どこで使いたいですか？  |    |
          | **教師としての役割** <br/>レッスンのいつ/どこで、トピックについてクラス全体で話し合いたいですか？あなたはいつ、どのような役割を担う予定ですか？|  |
          | **教室の環境と生徒間のインタラクション** <br/>このレッスンでは、いつ生徒に協力し合ってもらいますか？それはどのような形になりますか？|  |
          | **レッスンでの生徒の学習の評価** <br/>このレッスンで生徒が学習する必要のあることを学習したかどうか、どのように評価できますか？ |  |
          | **デバッグのサポート** <br/>このレッスンでは、生徒はどこ（どのレベル/アクティビティ）でデバッグを行う必要があると思いますか？そのデバッグでどのよう生徒をサポートできますか？ |  |
          | **つながりを生み出す** <br/>このレッスンで、現実の世界/生徒が学校で学習するその他のことにつながりを生み出すスペースはどこにありますか？ |  |
      OPD-K5 lesson plans:
        content1: 説明
        markdown: |
          ＃レッスンプラン

          ##レッスンプランはどこにありますか？
          コンピュータサイエンス入門コースのすべてのレッスンプランは<a href="https://curriculum.code.org/csf-19/" target="blank" rel="noopener noreferrer">こちら</a>で見ることができます。

          ##アンプラグド***および***プラグドレッスンのレッスンプランはありますか？
          はい！

          ##レッスンプランはどのような構成ですか？

          すべてのレッスンプランは、必要なものを簡単に見つけられるようにデザインされた、共通の構成になっています。レッスンを計画するときは、概要から始めて、その後、コアアクティビティを確認し、レッスンで何を行い、どのくらいの時間がかかるかをさらに深く理解することをお勧めします。

          <img src="https://images.code.org/f5ada4cd79f47502741adc86ed6f4430-image-1571693286262.27.12 PM.png">

          ##レッスンプランの詳細はどこで確認できますか？
          レッスンプランについて、さらに多くの情報は、<a href="https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview" target="blank" rel="noopener noreferrer">カリキュラムガイド</a>でご覧ください！
      OPD-K5 loops introduced:
        content1: 説明
        markdown: |-
          ＃ループ：どこで導入されますか？

          ここでは、コースA〜Fでループが導入される時の概観をつかんでもらいます。これらのレッスンをすべて見る必要はありません。オンラインコースの該当部分で詳しく説明しますが、必要に応じて自由に参照してください。

          ##<a href="https://curriculum.code.org/csf-19/coursea/" target="blank" rel="noopener noreferrer">コースA </a>
          - レッスン7（アンプラグド）：ハッピーループ
          - レッスン8：スクラットと学ぶループ
          - レッスン9：ローレルと学ぶループ
          -レッスン10：ループを使った海のシーン

          ## <a href="https://curriculum.code.org/csf-19/courseb/" target="blank" rel="noopener noreferrer">コースB</a>
          - レッスン6（アンプラグド）：ルーピーをゲット
          - レッスン7：ハーベスターと学ぶループ
          - レッスン8：ローレルと学ぶループ
          - レッスン9：ループで庭を描く

          ## <a href="https://curriculum.code.org/csf-19/coursec/" target="blank" rel="noopener noreferrer">コースC </a>
          - レッスン9 （アンプラグド）：ループの達人 ロボットのお友だち・ジュニア
          - レッスン10：レイとBB-8と学ぶループ
          - レッスン11：ループで作物を収穫する
          - レッスン12：マインクラフトで将来について考える
          - レッスン13：ループを使ったステッカーアート

          ## <a href="https://curriculum.code.org/csf-19/coursed/" target="blank" rel="noopener noreferrer">コースD </a>
          - レッスン7：アイスエイジで学ぶループ
          - レッスン8：ループを使用して図形を描く
          - レッスン9：迷路で学ぶ入れ子のループ
      OPD-K5 project:
        content1: 説明
        markdown: |-
          # コース最終プロジェクトの概要

          <img src="https://images.code.org/0a5fca1b8c79ab8463d53ef7bde1a7a1-image-1573236230401.jpg" class="level-image">

          ##新しい指導実践：コース最終プロジェクト

          - 各コースでは、生徒が学習したことを取り入れて、自分の創造性を示す独自のプロジェクトにまとめる機会が影響されています。
          - 生徒には、自分のプロジェクトを計画、構築、修正、発表するよう推奨します。
          - プロジェクトの開始から引き渡しまでを追跡することで、ソフトウェア開発サイクルの仔細を見ることができます。これらのガイド付きプロジェクトは、生徒と教師の双方に土台となるルーブリックを提供します。
      OPD-K5 projects introduction:
        content1: 説明
        markdown: |-
          ＃コース最終プロジェクト：どこで導入されますか？

          ## <a href="https://curriculum.code.org/csf-19/coursea/" target="blank" rel="noopener noreferrer">コースA</a>
          - レッスン12：イベントを使った移動

          ## <a href="https://curriculum.code.org/csf-19/courseb/" target="blank" rel="noopener noreferrer">コースB</a>
          - レッスン12：イベントを使ったロイヤルバトル

          ## <a href="https://curriculum.code.org/csf-19/coursec/" target="blank" rel="noopener noreferrer">コースC</a>
          - レッスン18：コース最終プロジェクト

          ## <a href="https://curriculum.code.org/csf-19/coursed/" target="blank" rel="noopener noreferrer">コースD</a>
          -レッスン18：コース最終プロジェクト

          ## <a href="https://curriculum.code.org/csf-19/coursee/" target="blank" rel="noopener noreferrer">コースE</a>
          - レッスン18：コース最終プロジェクト

          ## <a href="https://curriculum.code.org/csf-19/coursef/" target="blank" rel="noopener noreferrer">コースF</a>
          -レッスン 20：コース最終プロジェクト
      OPD-K5 role_of_teacher:
        content1: 説明
        markdown: |-
          ＃教師の役割

          <img src="https://images.code.org/cd6529b3552a2911cb907aceb59932b1-image-1571688504066.JPG" class="level-image">

          私たちは、生徒が、能力のある教師の助けがあるときに最もよく学習できると信じています。コンピュータサイエンス入門コースA〜Fは、熱意のある先生が導く教室環境で最も効果を出せるようにデザインされています。

          多くの先生が、コンピュータサイエンスに不慣れであることは分かっています。そのため、教える側が学習者のリーダーとなることを考えて、このカリキュラムを設計しました。学習者のリーダーとして、先生の役割は、知識の源から知識を求めるリーダーになることへと変わります。

          学習者のリーダーのマントラは次のとおりです。**「答えがわからないかもしれないけれど、一緒に方法を探せるのは確か。」**

          学習者のリーダーになること、そして、私たちの価値観に対するその他の教育学的アプローチについての詳細は、<a href="https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview#" target="blank" rel="noopener noreferrer">カリキュラムガイド</a>をご覧ください。
      OPD-K5 sequencing introduced:
        content1: 説明
        markdown: |
          ＃シークエンス：どこで導入されますか？

          ここでは、コースA〜Fでシークエンスが導入される時の概観をつかんでもらいます。これらのレッスンをすべて見る必要はありません。オンラインコースの該当部分で詳しく説明しますが、必要に応じて自由に参照してください。

          ##<a href="https://curriculum.code.org/csf-19/coursea/" target="blank" rel="noopener noreferrer">コースA</a>
          - レッスン2：ドラッグアンドドロップを学ぶ
          - レッスン3（アンプラグド）：ハッピーマップ
          - レッスン4：スクラットと学ぶシーケンス
          - レッスン5（スクラットと学ぶプログラミング）
          - レッスン6：レイとBB-8と学ぶプログラミング

          ## <a href="https://curriculum.code.org/csf-19/courseb/" target="blank" rel="noopener noreferrer">コースB</a>
          - レッスン2（アンプラグド）：うごかせ、うごかせ
          - レッスン3：アングリーバードと学ぶシーケンス
          - レッスン4：アングリーバードと学ぶプログラミング
          - レッスン5：ハーベスターと学ぶプログラミング

          ## <a href="https://curriculum.code.org/csf-19/coursec/" target="blank" rel="noopener noreferrer">コースC</a>
          - レッスン3 ：（アンプラグド）ロボットのお友だち・ジュニア
          - レッスン4：アングリーバードと学ぶプログラミング
          - レッスン5：迷路で学ぶデバッグ
          - レッスン6：ローレルとたからものを集める
          - レッスン7：コードでアートを作成する

          ##<a href="https://curriculum.code.org/csf-19/coursed/" target="blank" rel="noopener noreferrer">コースD</a>
          - レッスン1（アンプラグド）：グラフ用紙プログラミング
          - レッスン2：オンラインパズル入門
          - レッスン3：リレープログラミング
          - レッスン4：ローレルと学ぶデバッグ

          ## <a href="https://curriculum.code.org/csf-19/coursee/" target="blank" rel="noopener noreferrer">コースE</a>
          -レッスン1：迷路で学ぶシークエンス
      OPD-K5 sprite lab:
        content1: 説明
        markdown: |-
          # スプライトラボの概要
          <img src="https://images.code.org/e9d343b93e7a23bdb0c8bdd800f0dae1-image-1571780815860.46.37 PM.png" class="level-image">

          ##高度なコーディングの概念：スプライトラボでのスプライトと動き
          - 新しいコーディング環境であるブライトラボに関する知識を習得する
          - スプライトの作成を練習する
          - さまざまなスプライトのコーディング動作を練習する

          ![]()
      OPD-K5 sprite lab introduction:
        content1: 説明
        markdown: |-
          # スプライトラボ：どこで導入されますか？

          ## <a href="https://curriculum.code.org/csf-19/coursee/" target="blank" rel="noopener noreferrer">コースE</a>
          - レッスン5 （アンプラグド）：サイモンの言うとおり
          - レッスン6：スプライトラボで学ぶ泳ぐ魚
          - レッスン7：スプライトラボで学ぶエイリアンダンスパーティー

          ## <a href="https://curriculum.code.org/csf-19/coursef/" target="blank" rel="noopener noreferrer">コースF</a>
          - レッスン2：スプライトラボで学ぶ泳ぐ魚
          - レッスン3：スプライトラボで学ぶエイリアンダンスパーティー
          - レッスン15：スプライトラボで学ぶ動き
          - レッスン16：スプライトラボで学ぶバーチャルペット
      OPD-K5 sprite lab unplugged:
        content1: 説明
      OPD-K5 sprite lab video:
        content1: 説明
      OPD-K5 types of lessons:
        content1: 説明
        markdown: |
          ＃コンピュータサイエンス入門コースの構成

          ##概念グループ

          各コンピュータサイエンス入門コースは、コースの柱となる大きなアイデア概念グループから構成されています。概念グループを使用することで、教師はコースの内容を一目で簡単に確認できます。** Code.orgは、コンピュータ上およびアンプラグドの両方で使用するカリキュラムの全レッスンについて<a href="http://curriculum.code.org/csf-19" target="blank"rel="noopenernoreferrer">レッスンプラン</a>を提供しています**。 各概念グループのさまざまな種類のレッスンについて、以下で詳述します。

          説明のため、コースCの「ループ」概念グループに含まれている5つのレッスンを、コース通りに記載しています。

          <img src="https://images.code.org/953ebc5b17a97ee7fc9ee9261b4ee132-image-1571689334077.png">

          ##アンプラグドレッスン
          **これらのレッスンはコンピュータから離れて行われるもので、多くの場合、実践的で具体的な方法で、新しい概念を紹介するために使用されます。**生徒は頻繁に、鉛筆と紙、または物理的な操作で作業することになります。これらは、生徒が自分の生活に関係する方法で、複雑な概念を消化するのを助けるために、意図的に準備された運動感覚を使った機会です。多くの場合、プラグを抜いたアンプラグドレッスンは、続きのスキル構築レッスンにおいて、コンピュータ上で同じ概念を調べる準備をする場となります。

          ##プラグドレッスン - スキル構築
          **これらのレッスンはコンピュータ上で行われ、新しいツールやプログラミングの概念を使用して、構造化された練習を生徒に提供するものです。**これらのパズルの進行は通常、一連の練習パズルから始まり、チャレンジパズルに到達するまで徐々に増強されます。チャレンジパズルの後では、しばしば、レッスンの終わりに当たり、効果を確かめ、自信を構築する手助けをするため、意図的に簡単に解ける追加のパズルが用意されます。

          ##プラグドレッスン - 応用
          **これらのレッスンはコンピュータ上で行われ、学習した概念を創造的な方法で応用するためのスペースになります。**これらのレッスンでは通常、生徒が創造的な決定に基づいて独自のミニプロジェクトを作成する方法について説明されています。ここでは正解も間違った答えもありません！

          ##コース最終プロジェクト
          各コースは、生徒がレッスンの最後に学んだことを取り入れて、自分の創造性を示す独自のプロジェクトにまとめる機会を提供します。これについては、このコースの後半で詳しく説明します。
      OPD-K5 using lesson plans:
        content1: 説明
        markdown: |-
          ##指導実践：レッスンプランの使用

          <img src="https://images.code.org/bf355a9cc76e248efa509ee0cea0b10c-image-1573174157169.48.54 PM.png" class="level-image">

          ##（プラグドレッスンの場合でも）レッスンプランに従うことのメリットは何ですか？

          プラグドレッスのプランには通常、アンプラグドレッスンのプランと同じ機能がたくさんあります。レッスンは、学習の動機付けと統合に役立つディスカッションやアクティビティで開始・終了します。生徒と一緒に確認すべき重要な瞬間が、レッスンプランに記載されています。生徒はコンピュータを使用しますが、生徒同士のやり取りの方法や、教師としてのあなたの役割が、依然として重要な考慮事項となります。

          レッスンプランは、概念を紹介し、生徒に学習内容を振り返ってもらい、協力する機会を提供します。
      OPD-K5 variables:
        content1: 説明
        markdown: |-
          # 変数の概要

          <img src="https://images.code.org/833108f29baf6f8633b1282aeb7d06e5-image-1571780548872.jpg" class="level-image">

          ## 高度なコーディングの概念：変数

          - 変更可能な情報のための可変プレースホルダーを理解します
          - 変数の利用を練習します
      OPD-K5 variables introduction:
        content1: 説明
        markdown: |-
          ＃変数：どこで導入されますか？

          ## <a href="https://curriculum.code.org/csf-19/coursef/" target="blank" rel="noopener noreferrer">コースF</a>
          - レッスン6（アンプラグド）：封筒の変数
          - レッスン7：アーティストと学ぶ変数
          - レッスン8：みつばちと学ぶ変数の変更
          - レッスン9：アーティストと学ぶ変数の変更
      OPD-K5 variables unplugged:
        content1: 説明
        markdown: |-
          ＃アンプラグドレッスン：封筒の変数

          > **変数**とは、変更可能な情報のプレースホルダーのことです。

          ****

          ## **1. コースFの「<a href="https://curriculum.code.org/csf-20/coursef/7/" target="blank" rel="noopener noreferrer">封筒の変数</a>」レッスンプランを確認します。**
          <br/>
          コースFは5年生を対象としています。これは、コースA〜Fで変数について触れる唯一の箇所です。
          <br/><br/>

          ## **2. 「生徒用ビデオ：封筒の変数」を視聴します（レッスンプランにあります）**
          <br/>
          これは、変数の概念を紹介し、アンプラグドレッスンを開始する際に役立つ生徒用のビデオです。

          ***
          <a href="https://curriculum.code.org/csf-20/coursef/7/" target="blank" rel="noopener noreferrer">![](https://images.code.org/ff686377c1ba9bcd153a01cbfb24af35-image-1573086630947.29.50 PM.png)</a>
      OPD-K5 where to next:
        content1: 説明
        markdown: |-
          ＃次は？

          おめでとうございます！ このオンライン専門能力開発コースの基本的なコーディング概念の学習が完了しました。では、次はどこへ進めば良いでしょう？

          ##コースEおよびFの指導を計画している場合
          コースEとFの指導を計画している場合（または、より高度なコーディングの概念をじっくり学びたい場合）は、<a href="https://studio.code.org/s/k5-onlinepd-2019/lessons/8/levels/1" target="blank" rel="noopener noreferrer">次の概念グループ</a>に進むことをお勧めします。これらのコースで紹介される概念を具体的に説明しています。

          ##コースEおよびFの指導予定がない場合
          コースEとFの指導を考えていない場合は、<a href="https://studio.code.org/s/k5-onlinepd-2019/lessons/12/levels/1" target="blank" rel="noopener noreferrer">「次のステップ」の概念グループ</a>にスキップしてください。
      OPD-K5-projects-1:
        content1: 説明
        markdown: |2-

          #プロジェクトの例

          ここでは最終プロジェクトを開始します。始める前に、いくつかプロジェクトの例を見てみましょう。

          | 腹ぺこのリス | エイリアンストーリー |
          |---|---|
          |<a href="https://studio.code.org/projects/playlab/HN1zAX4Om6zdsxVsBBug9Y8mlzKSWUAXhjzRl-64YRs/view" target="blank" rel="noopener noreferrer">!![腹ぺこのリス（プレイラボ）](https://images.code.org/3fda61d18026d6661dccf4b09baea111-image-1565115158327.PNG 「腹ぺこのリス（プレイラボ）」</a>| <a href="https://studio.code.org/projects/playlab/I_8rcKtpLFRAn8flROC15Oc-KnDu-bkKBnSORoIDs0o/view" target="blank" rel="noopener noreferrer">![エイリアンストーリー （プレイラボ）](https://images.code.org/0bd5ed3674ac9fe3304e27e68974c35f-image-1565115240833.PNG 「エイリアンストーリー（プレイラボ）」</a>|
          | このゲームに音を加えてみましょう！ | このストーリーに別のシーンを加えてみましょう！|
      'Overview: Design Mode':
        markdown: |
          # アプリラボのデザインモードにようこそ
          アプリラボのデザインモードでは、ドラッグ＆ドロップでユーザインターフェースのエレメントをアプリに追加できます。

          ### 用語
          * **ユーザインターフェース (UI)** - 人(ユーザー)がコンピューターまたはアプリを操作する方法。
          * **UIエレメント** または オブジェクト。ボタン、画像、テキストボックス、プルダウンメニュー、画面など。

          ## 例

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 100%">

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          アプリ領域の上に新しいスイッチセットが表示され、「デザインモード」と「コードモード」を切り替えることができます。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>エレメントの追加は、好きな場所にドラッグアンドドロップするだけで簡単に行えます。 アプリ画面に表示されたら、位置を変更したり、サイズを変更したり、他の多くのプロパティを変更したりできます</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>The <em>Properties</em>タブには、 UIエレメントのルックアンドフィール（見栄え）について変更できるすべてが表示されます。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span><strong>エレメントID</strong>は、コードからUIエレメントを参照する方法で、重要です。 エレメントIDについては後で説明します。</p>
          </div>

          ![](https://images.code.org/01a31ac3be66deb6d01a92a1edfffd21-image-1476726587662.png)


          <div style="column-count: 2; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 3; width: 66%; float: right">

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>ユーザーが見るボタン上に表示されるテキストを、自由に書き換えることができます。</p>

          <p style="break-after: always; -moz-column-break-after: always; -webkit-column-break-after: always;"><span style="font-weight: bold; color: #00adbc; font-size: 200%;">6.</span><strong>注意：</strong>下にスクロールして、隠れている他のUIエレメントを確認しましょう。</p>
          </div>

          <div style="clear: both"></div>
          <hr>

          **さぁ挑戦しましょう**
      'Overview: Images':
        markdown: "# 画像\n\n## ウェブにある画像のURLを入力します\n\n<img src=\"https://images.code.org/acf4542eda586e7b73bc27dd8746848c-image-1477675154724.png\"
          style=\"width: 250px; float: right\">\n\n画像のURLを取得する方法はいくつかあります。 \n\n一般的な方法(右図)は、Webページで好きな画像を見つけて右クリック(またはCtrlキーを押しながらクリック)し、「画像アドレスをコピー」などのオプションを選択してから、
          アプリラボのテキストボックスに貼り付けます。\n\nよくわからない場合は、「新しいタブで画像を開く」などのオプションを選択することもできます。このオプションは、画像を単独で表示し、URLをアドレスバーに表示するので、それをアプリラボにコピー/貼り付けすることができます。\n\n**よくある間違い**：画像自体のURLではなく、*画像検索のWebサイト*のURLを使用してしまう。\n\n*
          **.jpg **、**.gif **または**.png **で終わる実際の画像ファイルへのパスを取得してください。\n* 「`https://www.google.com/search?q=cat&espv=2&biw=1497....`」のように始まるURLはおそらく間違っています。\n\n\n##
          自分の画像をアップロードする\n\nコンピューターに画像を保存している場合は、アプリラボの**アセットマネージャー**にアップロードできます。
          **ファイルのアップロード**をクリックして、画面の説明に従ってください。\n\n画像は次のようなファイル形式である必要があります： **.jpg**,
          **.png**, or **.gif**\n\n画像をアップロードしたら、**選択**してそのファイルに画像を設定する必要があります。 複数の画像を追加すると、ファイルをアップロードするたびにすべての画像が一覧表示され、既にアップロードした*任意の*ファイルの中から使用する画像を選択できます。\n\n![](https://images.code.org/d64d7e3dadc882897e450b00a0fc6cb2-image-1476896824985.gif)\n\n###
          「次へ」をクリックして試してみましょう！\n\n\n"
      'Overview: onEvent':
        markdown: |
          # ユーザーの入力に応答する

          実際にユーザーの入力に応答させるには、コードモードに移動する必要があります。 アプリラボは、プログラムで発生する特定の**イベント**が発生するのを待ちます。 `onEvent`ブロックでは、イベントを待つUI要素を指定します。

          ## イベントが起こった時

          <br><br>

          <div style="column-count: 4; column-gap: 20px; column-rule: 0.5px solid #00adbc; -moz-column-count: 4; width: 100%">

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">1.</span>
          コードモードに切替える</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">2.</span>
          ツールボックスから<code>onEvent</code> ブロックをワークスペースにドラッグする。</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">3.</span>
          プルダウンメニューから、応答を設定したいUI要素の<em>ID</em>を選択します。IDはデザインモードで追加されたすべてのUI要素がリストされています。</p>
          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">4.</span>
          プルダウンメニューを使用して、応答するイベントの<em>Type</em>を選択します。(いまのところ「Click」を使用してください)。</p>

          <p><span style="font-weight: bold; color: #00adbc; font-size: 200%;">5.</span>
          ユーザーがイベントを発動させた<em>とき</em>に実行するコードを関数内に追加します。 この関数は、ユーザーが特定のイベントを発動させるたびに1回実行されます。</p>

          </div>

          ![](https://images.code.org/9b506faaaadf61338dc738a4eafb66b2-image-1476740205599.png)
      PicturingData-Unplugged:
        markdown: |
          # データをあつめる

          プレイラボのプロジェクトを使って、データをあつめて、よそく しましょう。

          ![](https://images.code.org/606a78c09a01133a1bbc1aa9c76f3320-image-1557334268558.png)
      PicturingData-Unplugged_2020:
        markdown: |
          # データをあつめる

          プレイラボのプロジェクトを使って、データをあつめて、よそく しましょう。

          ![](https://images.code.org/606a78c09a01133a1bbc1aa9c76f3320-image-1557334268558.png)
      PowerOfWords-Unplugged:
        markdown: |
          # ことばの力

          ネットで だれかに 意地悪を されたときのことについて、学びます。
      PowerfulPasswords-Unplugged:
        markdown: |
          # 強力なパスワード

          なぜ、パスワードを使うのか調べて、パスワードをつかうメリットについて学びます。強力で安全なパスワードを作る方法と それを いじする方法について学びます。

          ![](https://images.code.org/9e082a5564a289bccc8e2dd79a2cae9f-image-1557869939256.png)
      Prepare for your presentation:
        content1: 説明
        markdown: |
          # 作品発表

          作品発表の時間です！先生が、どのように発表すればいいのか くわしく説明してくれます。
      Prepare for your presentation_2018:
        markdown: |
          # 作品発表

          作品発表の時間です！先生が、どのように発表すればいいのか くわしく説明してくれます。
      PrivatePersonalInformation-Unplugged:
        markdown: |
          # 個人情報の保護

          ネットで 公開してもいい情報 と 公開してはいけない情報 の 違い について、学びます。

          ![](https://images.code.org/872576b170b9d8aec9b29f684a1ad94e-image-1557878406833.png)
      RelayProgramming-Unplugged:
        markdown: |
          # リレー プログラミング
          チームに分かれて、みんなで もようを かくプログラムを作ります。
      RelayProgramming-Unplugged_2020:
        markdown: |
          # リレー プログラミング
          チームに分かれて、みんなで もようを かくプログラムを作ります。
      ScreenOutTheMean-Unplugged:
        markdown: |
          # いじめられたとき

          ネットで だれかに いじめられたときのことについて、学びます。
      SimonSays-Unplugged:
        markdown: |
          # サイモンさんから

          ゲームをしたり、コマンドがどのように動作するか考えたりすることは、正しい答えをたどり着くのに必要なことです。
      SimonSays-Unplugged_2020:
        markdown: |
          # サイモンさんから

          ゲームをしたり、コマンドがどのように動作するか考えたりすることは、正しい答えをたどり着くのに必要なことです。
      Songwriting-Unplugged:
        markdown: |
          # 作曲

          歌のコーラスの例に、関数の定義と使い方について学ぼう。
      Songwriting-Unplugged_2020:
        markdown: |
          # 作曲

          歌のコーラスの例に、関数の定義と使い方について学ぼう。
      'Technique: Frequency Analysis':
        content1: 説明
      Terminology Recap:
        content1: 説明
      TheRightAppMarkdownLevel_2019:
        markdown: |
          # 正しい アプリ

          * みんなが、コンピューターをつかいます。とくに、スマートフォンは。
          * スマートフォンのアプリで ともだちと はなしたり、おんがくを きいたり、かいものをしたり、ネットをしたりすることができます。
          * どのようなことをしたいのか、すべてのひとが つかいやすいのか かんがえることは、プログラマーにとって たいせつなことです！

          ![](https://images.code.org/fb17eeb9238d2f26c6ab40c9841517a7-image-1555611687284.png)
      TheRightAppMarkdownLevel_2019_2020:
        markdown: |
          # 正しい アプリ

          * みんなが、コンピューターをつかいます。とくに、スマートフォンは。
          * スマートフォンのアプリで ともだちと はなしたり、おんがくを きいたり、かいものをしたり、ネットをしたりすることができます。
          * どのようなことをしたいのか、すべてのひとが つかいやすいのか かんがえることは、プログラマーにとって たいせつなことです！

          ![](https://images.code.org/fb17eeb9238d2f26c6ab40c9841517a7-image-1555611687284.png)
      behaviors 1 predict:
        answers:
        - text: スプライトはクルクル回る
          feedback: ふせいかい
        - text: スプライトは小さくなる
          correct: true
          feedback: せいかい！
        - text: スプライトは動く
          feedback: ふせいかい
        - text: スプライトの色が変わる
          feedback: 不正解
        questions:
        - text: '`mystery behavior`がどのように動くか、 "編集"ボタンを押して見てみよう。中を見て、どのように動くか 予測してみよう。'
      behaviors 1 predict_2020:
        answers:
        - text: スプライトはクルクル回る
          feedback: ふせいかい
        - text: スプライトは小さくなる
          correct: true
          feedback: せいかい！
        - text: スプライトは動く
          feedback: ふせいかい
        - text: スプライトの色が変わる
          feedback: 不正解
        questions:
        - text: '`mystery behavior`がどのように動くか、 "編集"ボタンを押して見てみよう。中を見て、どのように動くか 予測してみよう。'
      behaviors 4 predict:
        answers:
        - text: 西に行ってから、南に行く
          feedback: ふせいかい
        - text: ななめに進む
          correct: true
          feedback: せいかい！
        - text: ジグザグに行く
          feedback: '不正解 '
        - text: 南に行ってから、西に行く
          feedback: 不正解
        questions:
        - text: 予測してみよう！衛星は銀河まで、どのように進みますか？
      behaviors 4 predict_2020:
        answers:
        - text: 西に行ってから、南に行く
          feedback: ふせいかい
        - text: ななめに進む
          correct: true
          feedback: せいかい！
        - text: ジグザグに行く
          feedback: '不正解 '
        - text: 南に行ってから、西に行く
          feedback: 不正解
        questions:
        - text: 予測してみよう！衛星は銀河まで、どのように進みますか？
      courseC_multi_artist_prog6_predict1:
        answers:
        - text: 正三角形。
          feedback: ふせいかい。正方形でした。
        - text: まっすぐな線。
          feedback: ふせいかい。正方形でした。
        - text: 正方形。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 正方形。
        questions:
        - text: プログラムを実行（じっこう）したら、どんな図形が書けますか？
      courseC_multi_artist_prog6_predict1_2018:
        answers:
        - text: 正三角形。
          feedback: ふせいかい。正方形でした。
        - text: まっすぐな線。
          feedback: ふせいかい。正方形でした。
        - text: 正方形
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 正方形。
        questions:
        - text: プログラムを実行（じっこう）したら、どんな図形が書けますか？
      courseC_multi_artist_prog6_predict1_2018_2019:
        answers:
        - text: 正三角形。
          feedback: ふせいかい。正方形でした。
        - text: まっすぐな線。
          feedback: ふせいかい。正方形でした。
        - text: 正方形
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 正方形。
        questions:
        - text: プログラムを実行（じっこう）したら、どんな図形が書けますか？
      courseC_multi_artist_prog6_predict1_2018_2019_2020:
        answers:
        - text: 正三角形。
          feedback: ふせいかい。正方形でした。
        - text: まっすぐな線。
          feedback: ふせいかい。正方形でした。
        - text: 正方形
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 正方形。
        questions:
        - text: プログラムを実行（じっこう）したら、どんな図形が書けますか？
      courseC_multi_harvester_loops11_predict1:
        answers:
        - text: '4'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: '12'
          correct: true
          feedback: せいかい！
        - text: '15'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: わかりません
          feedback: ３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        questions:
        - text: プログラムを実行（じっこう）したら、いくつ カボチャを あつめることが できますか？
      courseC_multi_harvester_loops11_predict1_2018:
        answers:
        - text: '4'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: '12'
          correct: true
          feedback: せいかい！
        - text: '15'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: わかりません
          feedback: ３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        questions:
        - text: プログラムを実行（じっこう）したら、いくつ カボチャを あつめることが できますか？
      courseC_multi_harvester_loops11_predict1_2018_2019:
        answers:
        - text: '4'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: '12'
          correct: true
          feedback: せいかい！
        - text: '15'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: わかりません
          feedback: ３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        questions:
        - text: プログラムを実行（じっこう）したら、いくつ カボチャを あつめることが できますか？
      courseC_multi_harvester_loops11_predict1_2018_2019_2020:
        answers:
        - text: '4'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: '12'
          correct: true
          feedback: せいかい！
        - text: '15'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: わかりません
          feedback: ３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        questions:
        - text: プログラムを実行（じっこう）したら、いくつ カボチャを あつめることが できますか？
      courseC_multi_maze_debugging8_predict1:
        answers:
        - text: プログラムは まちがっていない。スクラットは、ドングリに たどりつける。
          feedback: ふせいかい。スクラットが さいごに まがる ほうこうが、まちがっています。
        - text: スクラットが さいごに まがる ほうこうが、まちがっています。
          correct: true
          feedback: せいかい！
        - text: スクラットは ドングリの 手前までしか いけません。
          feedback: ふせいかい。スクラットは、まちがった ほうこうに まがってしまいます。
        - text: わかりません
          feedback: 'まちがっているのは、スクラットがさいごに まがる ほうこうです。 '
        questions:
        - text: '下のプログラムをじっくり見て、どこがまちがっているのか考えてみよう。 '
      courseC_multi_maze_debugging8_predict1_2018:
        answers:
        - text: プログラムは まちがっていない。スクラットは、ドングリに たどりつける。
          feedback: ふせいかい。スクラットが さいごに まがる ほうこうが、まちがっています。
        - text: スクラットが さいごに まがる ほうこうが、まちがっています。
          correct: true
          feedback: せいかい！
        - text: スクラットは ドングリの 手前までしか いけません。
          feedback: ふせいかい。スクラットは、まちがった ほうこうに まがってしまいます。
        - text: わかりません
          feedback: 'まちがっているのは、スクラットがさいごに まがる ほうこうです。 '
        questions:
        - text: '下のプログラムをじっくり見て、どこがまちがっているのか考えてみよう。 '
      courseC_multi_maze_debugging8_predict1_2018_2019:
        answers:
        - text: プログラムは まちがっていない。スクラットは、ドングリに たどりつける。
          feedback: ふせいかい。スクラットが さいごに まがる ほうこうが、まちがっています。
        - text: スクラットが さいごに まがる ほうこうが、まちがっています。
          correct: true
          feedback: せいかい！
        - text: スクラットは ドングリの 手前までしか いけません。
          feedback: ふせいかい。スクラットは、まちがった ほうこうに まがってしまいます。
        - text: わかりません
          feedback: 'まちがっているのは、スクラットがさいごに まがる ほうこうです。 '
        questions:
        - text: '下のプログラムをじっくり見て、どこがまちがっているのか考えてみよう。 '
      courseC_multi_maze_debugging8_predict1_2018_2019_2020:
        answers:
        - {}
        - correct: true
        - correct: true
        - text: わかりません
        questions:
        - {}
      courseC_multi_maze_programming8_predict1:
        answers:
        - text: トリさんは ブタの一歩手前まで行くことができる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: トリさんは ブタのところへ 行くことができる。
          correct: true
          feedback: せいかい！
        - text: トリさんは TNTにぶつかる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: わかりません
          feedback: このプログラムで トリさんは ブタのところに 行くことができます。
        questions:
        - text: "”実行（じっこう）”ボタンをおしたら どうなるか考えてみよう。"
      courseC_multi_maze_programming8_predict1_2018:
        answers:
        - text: トリさんは ブタの一歩手前まで行くことができる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: トリさんは ブタのところへ 行くことができる。
          correct: true
          feedback: せいかい！
        - text: トリさんは TNTにぶつかる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: わかりません
          feedback: このプログラムで トリさんは ブタのところに 行くことができます。
        questions:
        - text: "”実行（じっこう）”ボタンをおしたら どうなるか考えてみよう。"
      courseC_multi_maze_programming8_predict1_2018_2019:
        answers:
        - text: トリさんは ブタの一歩手前まで行くことができる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: トリさんは ブタのところへ 行くことができる。
          correct: true
          feedback: せいかい！
        - text: トリさんは TNTにぶつかる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: わかりません
          feedback: このプログラムで トリさんは ブタのところに 行くことができます。
        questions:
        - text: "”実行（じっこう）”ボタンをおしたら どうなるか考えてみよう。"
      courseC_multi_maze_programming8_predict1_2018_2019_2020:
        answers:
        - text: トリさんは ブタの一歩手前まで行くことができる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: トリさんは ブタのところへ 行くことができる。
          correct: true
          feedback: せいかい！
        - text: トリさんは TNTにぶつかる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: わかりません
          feedback: このプログラムで トリさんは ブタのところに 行くことができます。
        questions:
        - text: "”実行（じっこう）”ボタンをおしたら どうなるか考えてみよう。"
      courseC_multi_starWars_predict1:
        answers:
        - text: BB-8は、じっとしている。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: １つ前にすすむ。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: ５回前にすすんで、すべてのスクラップをあつめる。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: くりかえしブロックにより、BB-8は５回前にすすみます。
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseC_multi_starWars_predict1_2018:
        answers:
        - text: BB-8は、じっとしている。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: １つ前にすすむ。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: ５回前にすすんで、すべてのスクラップをあつめる。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: くりかえしブロックにより、BB-8は５回前にすすみます。
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseC_multi_starWars_predict1_2018_2019:
        answers:
        - text: BB-8は、じっとしている。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: １つ前にすすむ。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: ５回前にすすんで、すべてのスクラップをあつめる。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: くりかえしブロックにより、BB-8は５回前にすすみます。
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseC_multi_starWars_predict1_2018_2019_2020:
        answers:
        - text: BB-8は、じっとしている。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: １つ前にすすむ。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: ５回前にすすんで、すべてのスクラップをあつめる。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: くりかえしブロックにより、BB-8は５回前にすすみます。
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseC_multi_starWars_predict2:
        answers:
        - text: さいしょの くりかえしで 行きすぎてしまう。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: さいしょの くりかえしの かずが たりなくて、スクラップを ぜんぶ あつめられない。
          correct: true
          feedback: せいかい！
        - text: BB-8は、すべてのスクラップを あつめることが できる。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: わかりません
          feedback: さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseC_multi_starWars_predict2_2018:
        answers:
        - text: さいしょの くりかえしで 行きすぎてしまう。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: さいしょの くりかえしの かずが たりなくて、スクラップを ぜんぶ あつめられない。
          correct: true
          feedback: せいかい！
        - text: BB-8は、すべてのスクラップを あつめることが できる。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: わかりません
          feedback: さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseC_multi_starWars_predict2_2018_2019:
        answers:
        - text: さいしょの くりかえしで 行きすぎてしまう。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: さいしょの くりかえしの かずが たりなくて、スクラップを ぜんぶ あつめられない。
          correct: true
          feedback: せいかい！
        - text: BB-8は、すべてのスクラップを あつめることが できる。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: わかりません
          feedback: さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseC_multi_starWars_predict2_2018_2019_2020:
        answers:
        - text: さいしょの くりかえしで 行きすぎてしまう。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: さいしょの くりかえしの かずが たりなくて、スクラップを ぜんぶ あつめられない。
          correct: true
          feedback: せいかい！
        - text: BB-8は、すべてのスクラップを あつめることが できる。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: わかりません
          feedback: さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseD_multi_artist_binary8_predict1:
        answers:
        - text: A
          feedback: ふせいかい
        - text: B
          feedback: ふせいかい
        - text: C
          feedback: ふせいかい
        - text: D
          correct: true
          feedback: せいかい！
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どのパターンが かかれるかな？'
      courseD_multi_artist_binary8_predict1_2018:
        answers:
        - text: A
          feedback: ふせいかい
        - text: B
          feedback: ふせいかい
        - text: C
          feedback: ふせいかい
        - text: D
          correct: true
          feedback: せいかい！
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どのパターンが かかれるかな？'
      courseD_multi_artist_binary8_predict1_2018_2019:
        answers:
        - text: A
          feedback: ふせいかい
        - text: B
          feedback: ふせいかい
        - text: C
          feedback: ふせいかい
        - text: D
          correct: true
          feedback: せいかい！
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どのパターンが かかれるかな？'
      courseD_multi_artist_binary8_predict1_2018_2019_2020:
        answers:
        - text: A
          feedback: ふせいかい
        - text: B
          feedback: ふせいかい
        - text: C
          feedback: ふせいかい
        - text: D
          correct: true
          feedback: せいかい！
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どのパターンが かかれるかな？'
      courseD_multi_artist_nestedLoops9_predict1:
        answers:
        - text: A
          correct: true
          feedback: せいかい！
        - text: B
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: C
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: わかりません
          feedback: 五角形を かく くりかえしを ４回 くりかえして 一周しています。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: "”実行（じっこう）”をクリックしたら、どの図形がかけますか？"
      courseD_multi_artist_nestedLoops9_predict1_2018:
        answers:
        - text: A
          correct: true
          feedback: せいかい！
        - text: B
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: C
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: わかりません
          feedback: 五角形を かく くりかえしを ４回 くりかえして 一周しています。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: "”実行（じっこう）”をクリックしたら、どの図形がかけますか？"
      courseD_multi_artist_nestedLoops9_predict1_2018_2019:
        answers:
        - text: A
          correct: true
          feedback: せいかい！
        - text: B
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: C
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: わかりません
          feedback: 五角形を かく くりかえしを ４回 くりかえして 一周しています。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: "”実行（じっこう）”をクリックしたら、どの図形がかけますか？"
      courseD_multi_artist_nestedLoops9_predict1_2018_2019_2020:
        answers:
        - text: A
          correct: true
          feedback: せいかい！
        - text: B
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: C
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: わかりません
          feedback: 五角形を かく くりかえしを ４回 くりかえして 一周しています。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: "”実行（じっこう）”をクリックしたら、どの図形がかけますか？"
      courseD_multi_bee_conditionals1_predict1:
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          correct: true
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        questions:
        - text: くもの下は見えないけど、花があるはず。もし 花があれば、ミツを集めよう。花じゃなかったら、何もしなくていいよ。 "実行（じっこう）"をクリックしたら、どうなるか考えてみよう。
      courseD_multi_bee_conditionals1_predict1_2018:
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          correct: true
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        questions:
        - text: くもの下は見えないけど、花があるはず。もし 花があれば、ミツを集めよう。花じゃなかったら、何もしなくていいよ。 "実行（じっこう）"をクリックしたら、どうなるか考えてみよう。
      courseD_multi_bee_conditionals1_predict1_2018_2019:
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          correct: true
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        questions:
        - text: くもの下は見えないけど、花があるはず。もし 花があれば、ミツを集めよう。花じゃなかったら、何もしなくていいよ。 "実行（じっこう）"をクリックしたら、どうなるか考えてみよう。
      courseD_multi_bee_conditionals1_predict1_2018_2019_2020:
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          correct: true
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        questions:
        - text: くもの下は見えないけど、花があるはず。もし 花があれば、ミツを集めよう。花じゃなかったら、何もしなくていいよ。 "実行（じっこう）"をクリックしたら、どうなるか考えてみよう。
      courseD_multi_bee_conditionals1_predict1_copy:
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          correct: true
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        questions:
        - text: くもの下は見えないけど、花があるはず。もし 花があれば、ミツを集めよう。花じゃなかったら、何もしなくていいよ。 "実行（じっこう）"をクリックしたら、どうなるか考えてみよう。
      courseD_multi_bee_conditionals7_predict2:
        answers:
        - text: ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
          correct: true
          feedback: せいかい！
        - text: ハチは花でもハチの巣でもミツをとろうとする。
          feedback: ふせいかい、`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
        - text: ハチは花でもハチの巣でもハチミツを作ろうとする。
          feedback: ふせいかい、`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
        - text: わかりません
          feedback: "`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。"
        questions:
        - text: このプログラムを動かしたら、どうなるかな？ちゅうい：くもにかくれているのは、花が_一つ_ か、ハチの巣が_一つ_だよ。
      courseD_multi_bee_conditionals7_predict2_2018:
        answers:
        - text: ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
          correct: true
          feedback: せいかい！
        - text: ハチは花でもハチの巣でもミツをとろうとする。
          feedback: ふせいかい、`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
        - text: ハチは花でもハチの巣でもハチミツを作ろうとする。
          feedback: ふせいかい、`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。
        - text: わかりません
          feedback: "`もし 花で` があるので、ハチは花ではミツをとり、ハチの巣ではハチミツを作ります。"
        questions:
        - text: このプログラムを動かしたら、どうなるかな？ちゅうい：くもにかくれているのは、花が_一つ_ か、ハチの巣が_一つ_だよ。
      courseD_multi_bee_conditionals7_predict2_2018_2019:
        answers:
        - text: ハチは花でミツをとって、ハチの巣でハチミツを作ろうとする。
          correct: true
          feedback: せいかい！
        - text: ハチは花でもハチの巣でもミツをとろうとする。
          feedback: ふせいかい。`もし 花で` ブロックで ハチは花でミツをとって、ハチの巣でハチミツを作るようにしています。
        - text: ハチは花でもハチの巣でもハチミツを作ろうとする。
          feedback: ふせいかい。`もし 花で` ブロックで ハチは花でミツをとって、ハチの巣でハチミツを作るようにしています。
        - text: わかりません
          feedback: "`もし 花で` ブロックで ハチは花でミツをとって、ハチの巣でハチミツを作るようにしています。"
        questions:
        - text: '"実行（じっこう）" をクリックしたら、どうなりますか？ただし、くもの下にかくれているのは、ハチの巣が*1つ* か 花が *1つ*
            です。'
      courseD_multi_bee_conditionals7_predict2_2018_2019_2020:
        answers:
        - text: ハチは花でミツをとって、ハチの巣でハチミツを作ろうとする。
          correct: true
          feedback: せいかい！
        - text: ハチは花でもハチの巣でもミツをとろうとする。
          feedback: ふせいかい。`もし 花で` ブロックで ハチは花でミツをとって、ハチの巣でハチミツを作るようにしています。
        - text: ハチは花でもハチの巣でもハチミツを作ろうとする。
          feedback: ふせいかい。`もし 花で` ブロックで ハチは花でミツをとって、ハチの巣でハチミツを作るようにしています。
        - text: わかりません
          feedback: "`もし 花で` ブロックで ハチは花でミツをとって、ハチの巣でハチミツを作るようにしています。"
        questions:
        - text: '"実行（じっこう）" をクリックしたら、どうなりますか？ただし、くもの下にかくれているのは、ハチの巣が*1つ* か 花が *1つ*
            です。'
      courseD_multi_bee_nestedLoops2_predict1:
        answers:
        - text: ハチは、１回だけ 前に 進んで ミツを ゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは ミツを ２つゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは すべてのミツを ゲットする。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        questions:
        - text: '"実行（じっこう）"をクリックしたら どうなりますか？プログラムは くりかえしが 入れ子に なっているよ。'
      courseD_multi_bee_nestedLoops2_predict1_2018:
        answers:
        - text: ハチは、１回だけ 前に 進んで ミツを ゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは ミツを ２つゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは すべてのミツを ゲットする。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        questions:
        - text: '"実行（じっこう）"をクリックしたら どうなりますか？プログラムは くりかえしが 入れ子に なっているよ。'
      courseD_multi_bee_nestedLoops2_predict1_2018_2019:
        answers:
        - text: ハチは、１回だけ 前に 進んで ミツを ゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは ミツを ２つゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは すべてのミツを ゲットする。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        questions:
        - text: '"実行（じっこう）"をクリックしたら どうなりますか？プログラムは くりかえしが 入れ子に なっているよ。'
      courseD_multi_bee_nestedLoops2_predict1_2018_2019_2020:
        answers:
        - text: ハチは、１回だけ 前に 進んで ミツを ゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは ミツを ２つゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは すべてのミツを ゲットする。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        questions:
        - text: '"実行（じっこう）"をクリックしたら どうなりますか？プログラムは くりかえしが 入れ子に なっているよ。'
      courseD_multi_bee_nestedLoops9_predict2:
        answers:
        - text: '4'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: '8'
          correct: true
          feedback: せいかい！
        - text: '12'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: わかりません
          feedback: ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回 くりかえすので、８つ
            ミツを 集めることができます。
        questions:
        - text: '"実行（じっこう）"をクリックしたら ハチは いくつミツを 集めることが できますか？'
      courseD_multi_bee_nestedLoops9_predict2_2018:
        answers:
        - text: '4'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: '8'
          correct: true
          feedback: せいかい！
        - text: '12'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: わかりません
          feedback: ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回 くりかえすので、８つ
            ミツを 集めることができます。
        questions:
        - text: '"実行（じっこう）"をクリックしたら ハチは いくつミツを 集めることが できますか？'
      courseD_multi_bee_nestedLoops9_predict2_2018_2019:
        answers:
        - text: '4'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: '8'
          correct: true
          feedback: せいかい！
        - text: '12'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: わかりません
          feedback: ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回 くりかえすので、８つ
            ミツを 集めることができます。
        questions:
        - text: '"実行（じっこう）"をクリックしたら ハチは いくつミツを 集めることが できますか？'
      courseD_multi_bee_nestedLoops9_predict2_2018_2019_2020:
        answers:
        - text: '4'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: '8'
          correct: true
          feedback: せいかい！
        - text: '12'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: わかりません
          feedback: ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回 くりかえすので、８つ
            ミツを 集めることができます。
        questions:
        - text: '"実行（じっこう）"をクリックしたら ハチは いくつミツを 集めることが できますか？'
      courseD_multi_collector_debugging10_predict1:
        answers:
        - text: 曲がる方向がまちがえているから。
          feedback: ふせいかい、まちがっているのは、そこだけじゃないよ。くりかえしの回数も足りないよ。
        - text: 'たからものを全部集めるには、くりかえしの回数が足りないから。 '
          feedback: ふせいかい、まちがっているのは、そこだけじゃないよ。曲がる方向もまちがえてるよ。
        - text: 曲がる方向*と*くりかえしの回数が まちがっているから。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 曲がる方向*と*くりかえしの回数が まちがっているから。
        questions:
        - text: '"実行（じっこう）"ボタンをクリックしても、たからものを 全部 集めることができないのは どうして？答えをよくみて、回答してね。'
      courseD_multi_farmer_condLoops9_predict1:
        answers:
        - text: 全部の作物をしゅうかくできる。
          feedback: ふせいかい、カボチャを しゅうかくする めいれいは ありません。
        - text: さくもつを ひとつも しゅうかく できない。
          feedback: ふせいかい、かいだんじょうに進んで、そこにあるトウモロコシやレタスを しゅかく しますが、カボチャだけは しゅうかく しません。
        - text: カボチャ以外のものは、しゅうかくできる。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: かいだんじょうに進んで、そこにあるトウモロコシやレタスを しゅかく しますが、カボチャだけは しゅうかく しません。
        markdown: |
          葉っぱは、トウモロコシとレタスになります。
          <br/>
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_farmer_condLoops9_predict1_2018:
        answers:
        - text: 全部の作物をしゅうかくできる。
          feedback: ふせいかい、カボチャをとる命令はありません。
        - text: 通った道にある作物を ひとつも 収かくしません。
          feedback: ふせいかい、農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくしますが、カボチャは収かくしません。
        - text: カボチャ以外の作物は、全部収かくする。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくするが、カボチャは収かくしない。
        markdown: |
          葉っぱは、トウモロコシとレタスになります。
          <br/>
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_farmer_condLoops9_predict1_2018_2019:
        answers:
        - text: 全部の作物をしゅうかくできる。
          feedback: ふせいかい、カボチャをとる命令はありません。
        - text: 通った道にある作物を ひとつも 収かくしません。
          feedback: ふせいかい、農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくしますが、カボチャは収かくしません。
        - text: カボチャ以外の作物は、全部収かくする。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくするが、カボチャは収かくしない。
        markdown: |
          葉っぱは、トウモロコシとレタスになります。
          <br/>
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_farmer_condLoops9_predict1_2018_2019_2020:
        answers:
        - text: 全部の作物をしゅうかくできる。
          feedback: ふせいかい、カボチャをとる命令はありません。
        - text: 通った道にある作物を ひとつも 収かくしません。
          feedback: ふせいかい、農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくしますが、カボチャは収かくしません。
        - text: カボチャ以外の作物は、全部収かくする。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくするが、カボチャは収かくしない。
        markdown: |
          葉っぱは、トウモロコシとレタスになります。
          <br/>
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_farmer_ramp13:
        answers:
        - text: 農夫は道を歩いて行って、カボチャをしゅうかくします。
          feedback: ふせいかい、`ピック カボチャ`がくりかえしの中にあるで、農夫は、さいごに カボチャを しゅうかくするのではなく、前に進むごとに
            カボチャを しゅうかくします。
        - text: 農夫は前に進むごとにカボチャをしゅうかくするが、カボチャをゲットすることはできない。
          correct: true
          feedback: せいかい！
        - text: 農夫や４回前に進んで、カボチャをゲットする。
          feedback: ふせいかい、`ピック カボチャ`がくりかえしの中にあるで、農夫は、さいごに カボチャを しゅうかくするのではなく、前に進むごとに
            カボチャを しゅうかくします。
        - text: わかりません
          feedback: "`ピック カボチャ`がくりかえしの中にあるで、農夫は、さいごに カボチャを しゅうかくするのではなく、前に進むごとに カボチャを
            しゅうかくします。"
        markdown: |+
          見たことのあるブロックで書かれたプログラムがあります。このプログラムを実行したら、どうなるかわかりますか？


        questions:
        - {}
      courseD_multi_farmer_while10_predict2:
        answers:
        - text: 山もあなもなくなって、まっ平になる。
          feedback: ふせいかい、土をかたづけて 山を平らにする めいれいは 入っていません。
        - text: 山が、平らになる。
          correct: true
          feedback: せいかい！
        - text: あなが なくなる。
          feedback: ふせいかい、`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。
        - text: わかりません
          feedback: "`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。"
        questions:
        - text: このプログラムを動かしたら、どうなるかな？
      courseD_multi_farmer_while10_predict2_2018:
        answers:
        - text: 山もあなもなくなって、まっ平になる。
          feedback: ふせいかい、土をかたづけて 山を平らにする めいれいは 入っていません。
        - text: 山が、平らになる。
          correct: true
          feedback: せいかい！
        - text: あなが なくなる。
          feedback: ふせいかい、`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。
        - text: わかりません
          feedback: "`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。"
        questions:
        - text: このプログラムを動かしたら、どうなるかな？
      courseD_multi_farmer_while10_predict2_2018_2019:
        answers:
        - text: 山もあなもなくなって、まっ平になる。
          feedback: ふせいかい、土をかたづけて 山を平らにする めいれいは 入っていません。
        - text: 山が、平らになる。
          correct: true
          feedback: せいかい！
        - text: あなが なくなる。
          feedback: ふせいかい、`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。
        - text: わかりません
          feedback: "`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。"
        questions:
        - text: このプログラムを動かしたら、どうなるかな？
      courseD_multi_farmer_while10_predict2_2018_2019_2020:
        answers:
        - text: 山もあなもなくなって、まっ平になる。
          feedback: ふせいかい、土をかたづけて 山を平らにする めいれいは 入っていません。
        - text: 山が、平らになる。
          correct: true
          feedback: せいかい！
        - text: あなが なくなる。
          feedback: ふせいかい、`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。
        - text: わかりません
          feedback: "`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。"
        questions:
        - text: このプログラムを動かしたら、どうなるかな？
      courseD_multi_farmer_while4_predict1:
        answers:
        - text: なにも起こらない。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫はずっと土を かたづけ つづける。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫は山がなくなるまで、土をかたづけつづける。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は山がなくなるまで、土をかたづけつづけます。
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_farmer_while4_predict1_2018:
        answers:
        - text: なにも起こらない。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫はずっと土を かたづけ つづける。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫は山がなくなるまで、土をかたづけつづける。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は山がなくなるまで、土をかたづけつづけます。
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_farmer_while4_predict1_2018_2019:
        answers:
        - text: なにも起こらない。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫はずっと土を かたづけ つづける。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫は山がなくなるまで、土をかたづけつづける。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は山がなくなるまで、土をかたづけつづけます。
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_farmer_while4_predict1_2018_2019_2020:
        answers:
        - text: なにも起こらない。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫はずっと土を かたづけ つづける。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫は山がなくなるまで、土をかたづけつづける。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 農夫は山がなくなるまで、土をかたづけつづけます。
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_maze_until10_predict2:
        answers:
        - text: ゾンビは すぐに 右に曲がって、動けなくなる。
          correct: true
          feedback: せいかい！
        - text: ゾンビは、ひまわりに たどり着ける。
          feedback: ふせいかい、まっすぐ 行けるかどうか 調べるより *前に* 右に道があるか 調べるので、まちがった方向に行ってしまいます。
        - text: ゾンビは、右に曲がったら、その一角を回りつづける。
          feedback: ふせいかい、ゾンビは、まっすぐか 右に曲がる しかできません。左に曲がれないので、すぐに動けなくなってしまいます。
        - text: わかりません
          feedback: まっすぐ 行けるかどうか 調べるより *前に* 右に道があるか 調べるので、まちがった方向に行ってしまいます。
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_maze_until10_predict2_2018:
        answers:
        - text: ゾンビは行ったり来たりをくり返します。
          correct: true
          feedback: せいかい！
        - text: ゾンビは、ひまわりに たどり着ける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返します。
        - text: ゾンビは、右に曲がったら、その一角を回りつづける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返します。
        - text: わかりません
          feedback: このプログラムでは、ゾンビは行ったり来たりをくり返します。
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_maze_until10_predict2_2018_2019:
        answers:
        - text: ゾンビは行ったり来たりをくり返します。
          correct: true
          feedback: せいかい！
        - text: ゾンビは、ひまわりに たどり着ける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返します。
        - text: ゾンビは、右に曲がったら、その一角を回りつづける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返します。
        - text: わかりません
          feedback: このプログラムでは、ゾンビは行ったり来たりをくり返します。
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_maze_until10_predict2_2018_2019_2020:
        answers:
        - text: ゾンビは行ったり来たりをくり返します。
          correct: true
          feedback: せいかい！
        - text: ゾンビは、ひまわりに たどり着ける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返します。
        - text: ゾンビは、右に曲がったら、その一角を回りつづける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返します。
        - text: わかりません
          feedback: このプログラムでは、ゾンビは行ったり来たりをくり返します。
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_maze_until2_predict1:
        answers:
        - text: トリさんは、まったく動かない。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: トリさんは ブタのところへ 行くことができる。
          correct: true
          feedback: せいかい！
        - text: 道をまっすぐ進んで、TNTに ぶつかる。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: わかりません
          feedback: 道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseD_multi_maze_until2_predict1_2018:
        answers:
        - text: トリさんは、まったく動かない。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: トリさんは ブタのところへ 行くことができる。
          correct: true
          feedback: せいかい！
        - text: 道をまっすぐ進んで、TNTに ぶつかる。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: わかりません
          feedback: 道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseD_multi_maze_until2_predict1_2018_2019:
        answers:
        - text: トリさんは、まったく動かない。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: トリさんは ブタのところへ 行くことができる。
          correct: true
          feedback: せいかい！
        - text: 道をまっすぐ進んで、TNTに ぶつかる。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: わかりません
          feedback: 道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseD_multi_maze_until2_predict1_2018_2019_2020:
        answers:
        - text: トリさんは、まったく動かない。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: トリさんは ブタのところへ 行くことができる。
          correct: true
          feedback: せいかい！
        - text: 道をまっすぐ進んで、TNTに ぶつかる。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: わかりません
          feedback: 道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseD_multi_scrat_predict1:
        answers:
        - text: スクラットは、まったく動かない。
          feedback: 不正解、 'くりかえし' の中に'前に すすむ'が入っているので、スクラットは前に3回進みます。
        - text: スクラットは前に3回進んで、曲がって、また、前に3回進んでドングリをゲットする！
          correct: true
          feedback: せいかい！
        - text: スクラットは前に進んで、曲がって、海に落ちてしまう。
          feedback: 不正解、 'くりかえし' の中に'前に すすむ'が入っているので、スクラットは前に3回進みます。
        - text: わかりません
          feedback: "‘くりかえし'の中に '前に すすむ'があるので、スクラットは3回前に進みます。曲がって、さらに前に3回進んでドングリをゲットします。"
        questions:
        - text: このコードは新しいブロックを使っています。”実行 (じっこう) ”ボタンを押したら、どうなりますか？
      courseD_project_exemplars_2020_2021:
        content1: Test Markdown Textbook Page
      courseE_multi_bee_functions_predict1:
        answers:
        - text: 同じプログラムで このパズルも クリアできるよ。
          correct: true
          feedback: 正解、作るハチミツの量が変わっても だいじょうぶ。関数は量が変わっても うまくいくように 作られています。
        - text: ハチミツを全部作ることはできない。
          feedback: 不正解、関数は 0になるまで ハチミツを作るように 作られています。
        - text: ハチミツをたくさん作ろうとする。
          feedback: 不正解、関数は 0になるまで ハチミツを作るように 作られています。
        - text: わかりません
          feedback: このプログラムでパズルをクリアできます。プログラムは 0になるまで ハチミツを作るように 作られています。
        questions:
        - text: さっきのパズルと まったく同じプログラムがあります。今回は つくるハチミツの量が ちがっています。"実行（じっこう）"をクリックしたら
            どうなるかな？
      courseE_multi_farmer_functions11_predict:
        answers:
        - text: カボチャを２つしゅうかくする。
          feedback: 不正解、農夫はトウモロコシをしゅうかくした後、関数 "調べて しゅうかくする"を呼ばない。
        - text: カボチャを全部しゅうかくする。
          feedback: 不正解、農夫はトウモロコシをしゅうかくした後、関数 "調べて しゅうかくする"を呼ばない。
        - text: レタスをしゅうかくする。
          feedback: 不正解、農夫は1回曲がって、トウモロコシのとこまで行って終わります。
        - text: トウモロコシをしゅうかくする。
          correct: true
          feedback: せいかい！
        questions:
        - text: 農夫は何をしゅうかくするかな？
      courseE_multi_farmer_functions11_predict_2018:
        answers:
        - text: カボチャを２つしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: カボチャを全部しゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: レタスをしゅうかくする。
          correct: true
          feedback: せいかい！
        - text: トウモロコシをしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        questions:
        - text: 農夫は何をしゅうかくするかな？
      courseE_multi_farmer_functions11_predict_2018_2019:
        answers:
        - text: カボチャを２つしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: カボチャを全部しゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: レタスをしゅうかくする。
          correct: true
          feedback: せいかい！
        - text: トウモロコシをしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        questions:
        - text: 農夫は何をしゅうかくするかな？
      courseE_multi_farmer_functions11_predict_2018_2019_2020:
        answers:
        - text: カボチャを２つしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: カボチャを全部しゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: レタスをしゅうかくする。
          correct: true
          feedback: せいかい！
        - text: トウモロコシをしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        questions:
        - text: 農夫は何をしゅうかくするかな？
      courseE_prediction_artistFunction1:
        answers:
        - text: 何もかかれない。関数が呼び出されない。
          feedback: 不正解、関数は２度呼び出されます。
        - text: 正方形を１つかく。
          feedback: 不正解、関数は２度呼び出されます。
        - text: ２つの正方形が重なった絵をかく。
          feedback: 不正解、正方形の辺の長さは100ピクセルで、次の正方形をかく前に 175ピクセル ジャンプしています。
        - text: すき間を開けて 正方形を ２つかく。
          correct: true
          feedback: 正解、関数は２回呼び出されて、関数と関数の間でジャンプして移動しています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      courseE_prediction_artistFunction1_2018:
        answers:
        - text: 何もかかれない。関数が呼び出されない。
          feedback: 不正解、関数は２度呼び出されます。
        - text: 正方形を１つかく。
          feedback: 不正解、関数は２度呼び出されます。
        - text: ２つの正方形が重なった絵をかく。
          feedback: 不正解、正方形の辺の長さは100ピクセルで、次の正方形をかく前に 175ピクセル ジャンプしています。
        - text: すき間を開けて 正方形を ２つかく。
          correct: true
          feedback: 正解、関数は２回呼び出されて、関数と関数の間でジャンプして移動しています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      courseE_prediction_artistFunction1_2018_2019:
        answers:
        - text: 何もかかれない。関数が呼び出されない。
          feedback: 不正解、関数は２度呼び出されます。
        - text: 正方形を１つかく。
          feedback: 不正解、関数は２度呼び出されます。
        - text: ２つの正方形が重なった絵をかく。
          feedback: 不正解、正方形の辺の長さは100ピクセルで、次の正方形をかく前に 175ピクセル ジャンプしています。
        - text: すき間を開けて 正方形を ２つかく。
          correct: true
          feedback: 正解、関数は２回呼び出されて、関数と関数の間でジャンプして移動しています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      courseE_prediction_artistFunction1_2018_2019_2020:
        answers:
        - text: 何もかかれない。関数が呼び出されない。
          feedback: 不正解、関数は２度呼び出されます。
        - text: 正方形を１つかく。
          feedback: 不正解、関数は２度呼び出されます。
        - text: ２つの正方形が重なった絵をかく。
          feedback: 不正解、正方形の辺の長さは100ピクセルで、次の正方形をかく前に 175ピクセル ジャンプしています。
        - text: すき間を開けて 正方形を ２つかく。
          correct: true
          feedback: 正解、関数は２回呼び出されて、関数と関数の間でジャンプして移動しています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      courseE_prediction_artistFunction1_copy:
        answers:
        - text: 何もかかれない。関数が呼び出されない。
          feedback: 不正解、関数は２度呼び出されます。
        - text: 正方形を１つかく。
          feedback: 不正解、関数は２度呼び出されます。
        - text: ２つの正方形が重なった絵をかく。
          feedback: 不正解、正方形の辺の長さは100ピクセルで、次の正方形をかく前に 175ピクセル ジャンプしています。
        - text: すき間を開けて 正方形を ２つかく。
          correct: true
          feedback: 正解、関数は２回呼び出されて、関数と関数の間でジャンプして移動しています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      courseE_project_exemplars_2019:
        content1: Test Markdown Textbook Page
        markdown: |+
          # プロジェクトの例

          最後のプロジェクトをはじめます。始める前に、他のプロジェクトを見てみましょう。

          ## スプライト ラボ

          | モンスター ダンス (スプライト ラボ) | カップケーキ ゲーム (スプライト ラボ) |
          |---|---|
          | [![Monster Dance (Sprite Lab)](https://images.code.org/85838ca11b728dce3e1513515c4510e3-image-1556826303297.png "Monster Dance (Sprite Lab")](https://studio.code.org/projects/spritelab/S2l_b6LHSmSULTBF7CibJm1rTsngztJyu5pgORe7GBs/view) | [![Cupcake Game (Sprite Lab)](https://images.code.org/c90080aaf05349fb6e1fbb6861e815df-image-1556809855136.png "Cupcake Game (Sprite Lab")](https://studio.code.org/projects/spritelab/gXM_YU_qL_QWo1o5Wkam96oiFrYY5VUp27m2xKlp7EQ/view) |
          | ゲームに文字やスコアを追加しよう！ | ゲームに文字やスコアを追加しよう！ |

          ## アーティスト

          | パターン (アーティスト) | 花もよう (アーティスト) |
          |---|---|
          | [![Pattern (Artist)](https://images.code.org/2432878706891dda080b69428ddc4a20-image-1556822714214.png "Pattern (Artist)")](https://studio.code.org/projects/artist/TznMeJRa4SnHWJvUBEoNUw/view) | [![Function Flowers (Artist)](https://images.code.org/1e6da38baf996dace44581572895a4b8-image-1556822184973.png "Function Flowers (Artist)")](https://studio.code.org/projects/artist/4uGqFaTnc7V9B6IqCqj21Q/view) |
          | かり返しの入れ子を使ってみよう！ | 関数を使ってみよう！ |

      courseE_project_exemplars_2019_2020:
        content1: Test Markdown Textbook Page
      courseExpress_project_exemplars_2019_2020:
        content1: Test Markdown Textbook Page
      courseF_bee_variables_8a_2018:
        answers:
        - text: 0、変数"花のミツをとる"を使っていないから。
          feedback: 不正解、変数の名前はプログラムの動きに関係ありません。
        - text: 2つ
          correct: true
          feedback: せいかい！
        - text: 全部
          feedback: 不正解、最後に関数を2回呼ぶ前に、変数を0にしています。
        - text: わかりません
          feedback: 関数を1回呼べば変数は1増えますが、最後に関数を2回呼ぶ前に、変数を0にしています。なので、ハチはミツを2つ集めます。
        questions:
        - text: 終点まで行ったとき、ハチは いくつ ミツを 集めますか？
        title: ハチと変数
      courseF_bee_variables_8a_2018_2019:
        answers:
        - text: 0、変数"花のミツをとる"を使っていないから。
          feedback: 不正解、変数の名前はプログラムの動きに関係ありません。
        - text: 2つ
          correct: true
          feedback: せいかい！
        - text: 全部
          feedback: 不正解、最後に関数を2回呼ぶ前に、変数を0にしています。
        - text: わかりません
          feedback: 関数を1回呼べば変数は1増えますが、最後に関数を2回呼ぶ前に、変数を0にしています。なので、ハチはミツを2つ集めます。
        questions:
        - text: 終点まで行ったとき、ハチは いくつ ミツを 集めますか？
        title: ハチと変数
      courseF_bee_variables_8a_2018_2019_2020:
        answers:
        - text: 0、変数"花のミツをとる"を使っていないから。
          feedback: 不正解、変数の名前はプログラムの動きに関係ありません。
        - text: 2つ
          correct: true
          feedback: せいかい！
        - text: 全部
          feedback: 不正解、最後に関数を2回呼ぶ前に、変数を0にしています。
        - text: わかりません
          feedback: 関数を1回呼べば変数は1増えますが、最後に関数を2回呼ぶ前に、変数を0にしています。なので、ハチはミツを2つ集めます。
        questions:
        - text: 終点まで行ったとき、ハチは いくつ ミツを 集めますか？
        title: ハチと変数
      courseF_external_variableConstant:
        markdown: |+
          <h2>変数について</h2>

          <img src="https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png" style="padding-left: 30px; width:300px; float:right;"/>
          <h3>決まった値を入れておくための変数の学習は順調に進んでいます！
          決まった値を入れておくために変数を使うのであれば、値を入れるのは1回です。変数を使えば、"実行"して値を変えたくなった時、1か所変えるだけでプログラムの中で**同じ**値を使うことができます。</h3>
          <br/><hr/>
          <h3>次のパートでは、プログラムの中で値が*変わる*変数をプログラムしてみましょう。</h3>

      courseF_external_variableConstant_2018:
        markdown: "<h2>変数について</h2>\n\n\n<img src=\"https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png\"
          style=\"padding-left: 30px; width:300px; float:right;\"/>\n<h3>決まった値を入れておくための変数の学習は順調に進んでいます！
          \n決まった値を入れておくために変数を使うのであれば、値を入れるのは1回です。変数を使えば、\"実行\"して値を変えたくなった時、1か所変えるだけでプログラムの中で**同じ**値を使うことができます。</h3>\n<br/><hr/>\n<h3>次のパートでは、プログラムの中で値が*変わる*変数をプログラムしてみましょう。</h3>\n\n"
      courseF_external_variableConstant_2018_2019:
        markdown: "<h2>変数について</h2>\n\n\n<img src=\"https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png\"
          style=\"padding-left: 30px; width:300px; float:right;\"/>\n<h3>決まった値を入れておくための変数の学習は順調に進んでいます！
          \n決まった値を入れておくために変数を使うのであれば、値を入れるのは1回です。変数を使えば、\"実行\"して値を変えたくなった時、1か所変えるだけでプログラムの中で**同じ**値を使うことができます。</h3>\n<br/><hr/>\n<h3>次のパートでは、プログラムの中で値が*変わる*変数をプログラムしてみましょう。</h3>\n\n"
      courseF_external_variableConstant_2018_2019_2020:
        markdown: "<h2>変数について</h2>\n\n\n<img src=\"https://images.code.org/082c757f5c939bd353eacda9589ca54f-image-1477349401281.35.08.png\"
          style=\"padding-left: 30px; width:300px; float:right;\"/>\n<h3>決まった値を入れておくための変数の学習は順調に進んでいます！
          \n決まった値を入れておくために変数を使うのであれば、値を入れるのは1回です。変数を使えば、\"実行\"して値を変えたくなった時、1か所変えるだけでプログラムの中で**同じ**値を使うことができます。</h3>\n<br/><hr/>\n<h3>次のパートでは、プログラムの中で値が*変わる*変数をプログラムしてみましょう。</h3>\n\n"
      courseF_markdown_algorithms_end:
        content1: Test Markdown Textbook Page
        markdown: "# **\"アルゴリズム\"について 学びましょう！**  \n\n\n\n### **アルゴリズムは、目的を達成するために必要な仕事を書いたリストです**。アルゴリズムのおもしろいところは、1つ1つ仕事を実行したら、どうなるのか考えなければならないところです。\n\n###
          コンピュータ用のアルゴリズムを書くことが、**プログラミング**です。  \n\n---\n\n## **用語**\n\n* ### **アルゴリズム**
          -目的を達成するために必要な仕事を書いたリスト\n\n* ### **プログラミング** - コンピュータで実行できる言語で書かれたアルゴリズム\n"
      courseF_markdown_algorithms_intro:
        content1: Test Markdown Textbook Page
        markdown: |
          # **レッスンの内容**

          ### だれかにしてほしいことを くわしく説明して たのんだことはある？たのんだ人は、ちゃんと聞いてくれた？

          ### 今日は、コンピュータに 何を してほしいか 1つ1つ たのみましょう。そうすれば、ちゃんと 言うことを 聞いてくれます。

          ---

          ## **使うブロック**

          ![](https://images.code.org/b2376dc67948e29247931dec5e9fef8f-image-1524678585868.png)

          ![](https://images.code.org/bd2de01f2c3b86109329b10eb544a6e6-image-1524678600994.png)

          ![](https://images.code.org/db76d28bb3dbabdb78edb2cf54c6cb11-image-1524678618646.png)
      courseF_markdown_conditionals_end:
        content1: Test Markdown Textbook Page
        markdown: "# **\"条件文\"について 学びましょう！**\n\n### 条件文は、コンピュータの世界では とてもよく使います。ウエブサイトにログインしようとパスワードを入力するときを思い出して。
          ウエブサイトでは条件文を使って、入力されたパスワードが*あっているかどうか*チェックします。\n\n### `もし` パスワードがあっていれば、ログイン！
          \n\n### `そうでなければ`、エラーメッセージを出す。\n\n---\n\n## **用語**\n\n* ### **条件** - 命令を実行するかどうか決めるためのもの\n\n*
          ### **条件文** - ある条件のときだけ、実行されるもの\n\n"
      courseF_markdown_conditionals_intro:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### **条件** とは、真または偽になる事がらです。

          ### プログラムで`～の間`、 `～まで` や `もし`を使って、条件を判定してプログラムの動きを変える方法を学びます。
          ---

          ## **使うブロック**

          ![](https://images.code.org/8c6cc9ffa31c916fc970c67382d83b8d-image-1524770260439.png)

          ![](https://images.code.org/c2fbbaf80b348d47ba2dac4497ae2624-image-1524770272898.png)

          ![](https://images.code.org/6b90e2dfb025609f8762014ff0ba51dc-image-1524770241058.png)


      courseF_markdown_debugging_end:
        content1: Test Markdown Textbook Page
        markdown: |
          # **"デバッグ"について勉強しよう！**

          ### **バグとは、まちがいにつながるものです。** バグは、プログラムの間違いです。間違いを見つけて修正することを、**デバッグする** と言います。

          ### バグを見つけて修正するには、**しんぼう強く**やることが必要です、べつの言葉でいうと あきらめるな です。

          ---

          ## **用語**

          * ### **バグ** - プログラムの正しく動かないところ

          * ### **デバッグ** - プログラムやアルゴリズムの問題を見つけて、修正すること

          * ### **しんぼう強く** - あきらめないこと
      courseF_markdown_debugging_intro:
        content1: Test Markdown Textbook Page
        markdown: |
          #レッスンの内容

          ### バグって聞いたことある？

          ### ほとんどの人は虫を思い出して、気持ち悪いと思ったり、ムズムズしたりするよね。コンピュータの世界では、バグは生き物の虫のことではありませんが、あまりうれしくないものです。

          ### すでにいくつかのパズルをクリアしてきました！ プログラムは、すぐには、ちゃんと動くように見えなかったよね。そのとき、バグが かくれていなかった？

          ---

          ## 使うブロック

          ![](https://images.code.org/b2376dc67948e29247931dec5e9fef8f-image-1524678585868.png)

          ![](https://images.code.org/bd2de01f2c3b86109329b10eb544a6e6-image-1524678600994.png)

          ![](https://images.code.org/db76d28bb3dbabdb78edb2cf54c6cb11-image-1524678618646.png)
      courseF_markdown_forloops_end:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **"まつ"について、学習します！**

          ### **”まつ”は、始めと終わりと、変分を指定するくり返しです。**

          ### 新しい種類の`くりかえし` は、始めの値と終わりの値と一回くり返したときに変更する値lでコントロールすることができます。

          ### コントロールすることで、より早くパズルをクリアできるようになります。

          ---

          ## **用語**

          ### **まつ ループ** - ”まつ”は、あらかじめ決めた始めの値、終わりの値、インクリメント（値を変更する間隔）をもつループです。

      courseF_markdown_forloops_end_2019:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **"まつ"について、学習します！**

          ### **”まつ”は、始めと終わりと、変分を指定するくり返しです。**

          ### 新しい種類の`くりかえし` は、始めの値と終わりの値と一回くり返したときに変更する値lでコントロールすることができます。

          ### コントロールすることで、より早くパズルをクリアできるようになります。

          ---

          ## **用語**

          ### **まつ ループ** - ”まつ”は、あらかじめ決めた始めの値、終わりの値、インクリメント（値を変更する間隔）をもつループです。

      courseF_markdown_forloops_end_2019_2020:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **"まつ"について、学習します！**

          ### **”まつ”は、始めと終わりと、変分を指定するくり返しです。**

          ### 新しい種類の`くりかえし` は、始めの値と終わりの値と一回くり返したときに変更する値lでコントロールすることができます。

          ### コントロールすることで、より早くパズルをクリアできるようになります。

          ---

          ## **用語**

          ### **まつ ループ** - ”まつ”は、あらかじめ決めた始めの値、終わりの値、インクリメント（値を変更する間隔）をもつループです。

      courseF_markdown_forloops_intro:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### 新しい種類の`くり返し`について学びます。これから使うブロックです。

          ![](https://images.code.org/d9cb4b829fe4e688b10c19e879cf4a4b-image-1531938148965.png)

          ### *まつ*のくり返しを使うと、このようなパズルを かんたんに クリアすることが できます！

          ![](https://images.code.org/072230b389feb9c6c6998619a245b8af-image-1524773190948.png)

      courseF_markdown_forloops_intro_2019:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### 新しい種類の`くり返し`について学びます。これから使うブロックです。

          ![](https://images.code.org/d9cb4b829fe4e688b10c19e879cf4a4b-image-1531938148965.png)

          ### *まつ*のくり返しを使うと、このようなパズルを かんたんに クリアすることが できます！

          ![](https://images.code.org/072230b389feb9c6c6998619a245b8af-image-1524773190948.png)

      courseF_markdown_forloops_intro_2019_2020:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### 新しい種類の`くり返し`について学びます。これから使うブロックです。

          ![](https://images.code.org/d9cb4b829fe4e688b10c19e879cf4a4b-image-1531938148965.png)

          ### *まつ*のくり返しを使うと、このようなパズルを かんたんに クリアすることが できます！

          ![](https://images.code.org/072230b389feb9c6c6998619a245b8af-image-1524773190948.png)

      courseF_markdown_loops_end:
        content1: Test Markdown Textbook Page
        markdown: "# **\"ループ\"について 学びましょう！**  \n\n### **ループとは、何回も何回も 同じことを 行うことです。**
          別の言葉で、もう一度行うことをくり返しといいます。\n\n### ループは、あるパターンをくり返すのにとても便利です。はじめに ループを 使わずにプログラムを書いて、それから、パターンを見つけます。\n\n###
          パターンが見つかったら、それを`くりかえし`ブロックの中に入れます！\n\n---\n\n## **用語**\n\n* ### **ループ**
          - あることを何回も何回も行うこと\n\n* ### **くり返し** - もう一度行うこと\n"
      courseF_markdown_loops_intro:
        content1: Test Markdown Textbook Page
        markdown: "# レッスンの内容...\n\n### 前に進むの**5**回実施するときを考えてみて。前にすすむのブロックを**5**回 ドラックして持ってくるだけだから
          かんたん だよね。でも**5,000**回の時は、どうかな？ \n\n### **5,000** ブロック、ドラックして持ってくるのに何時間かかる？\n\n###
          もっと かんたんな方法を 知りたくない？ここに あるよ!\n\n---\n\n## 使うブロック\n\n![](https://images.code.org/2d949be303e653f4ea203cc00f0b06c3-image-1524697677509.png)\n"
      courseF_markdown_nestedloops_end:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **"ループの入れ子"について 学びましょう！**

          ### **入れ子のループとは、ループの中にあるループことです。** ループが中に入っている外側のループとその中に入っている入れ子にされたループを考えてみて。

          ### 入れ子のループは、パターンの中にあるパターンをくり返すときに役立ちます。使いこなすことができれば、とても強力です！

          ---

          ## **用語**

          ### __入れ子のループ__ - ループの中にあるループ

      courseF_markdown_nestedloops_intro:
        content1: Test Markdown Textbook Page
        markdown: |
          # レッスンの内容...

          ### *ループの中に*ループを入れたらどうなるか考えたことがある？

          ### 今度はそれをやってみよう！

          ### ループは あるパターンを くり返すのが得意ですが、 ループの中にループを使うのはどんなとき？考えてみよう！
          ---

          ## **使うブロック**

          ![](https://images.code.org/cecea12a6973648b56512ff0990da6fb-image-1524759116715.gif)
      courseF_markdown_variables_end:
        content1: Test Markdown Textbook Page
        markdown: "# **\"変数\"について、学習しました！**\n\n### 変数を使うには、名前と値が必要です。名前は後から変えることはできませんが、値はいつでも変えることができます。プログラムで値を入れた箱の中身は、変数の名前を使って
          見たり 変更したりすることが できます！ \n\n---\n\n## **用語**\n\n### **変数** - 変更可能な情報を入れておくための箱\n\n"
      courseF_markdown_variables_end_2019:
        content1: Test Markdown Textbook Page
        markdown: "# **\"変数\"について、学習しました！**\n\n### 変数を使うには、名前と値が必要です。名前は後から変えることはできませんが、値はいつでも変えることができます。プログラムで値を入れた箱の中身は、変数の名前を使って
          見たり 変更したりすることが できます！ \n\n---\n\n## **用語**\n\n### **変数** - 変更可能な情報を入れておくための箱\n\n"
      courseF_markdown_variables_end_2019_2020:
        content1: Test Markdown Textbook Page
        markdown: "# **\"変数\"について、学習しました！**\n\n### 変数を使うには、名前と値が必要です。名前は後から変えることはできませんが、値はいつでも変えることができます。プログラムで値を入れた箱の中身は、変数の名前を使って
          見たり 変更したりすることが できます！ \n\n---\n\n## **用語**\n\n### **変数** - 変更可能な情報を入れておくための箱\n\n"
      courseF_markdown_variables_intro:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### *変数* とは、情報を入れておくための箱で中身を変えることができます。箱の中にプログラムで情報を入れておけば、いちいち値を覚えておく必要はありません！


          ---

          ## **使うブロック**

          ![](https://images.code.org/2e5804ee6783390a6b86b7b2d7153594-image-1524772405748.png)


      courseF_markdown_variables_intro_2019:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### *変数* とは、情報を入れておくための箱で中身を変えることができます。箱の中にプログラムで情報を入れておけば、いちいち値を覚えておく必要はありません！


          ---

          ## **使うブロック**

          ![](https://images.code.org/2e5804ee6783390a6b86b7b2d7153594-image-1524772405748.png)


      courseF_markdown_variables_intro_2019_2020:
        content1: Test Markdown Textbook Page
        markdown: |+
          # **レッスンの内容...**

          ### *変数* とは、情報を入れておくための箱で中身を変えることができます。箱の中にプログラムで情報を入れておけば、いちいち値を覚えておく必要はありません！


          ---

          ## **使うブロック**

          ![](https://images.code.org/2e5804ee6783390a6b86b7b2d7153594-image-1524772405748.png)


      courseF_multi_artist_for10_predict1:
        answers:
        - text: アーティストは だんだん太くなっていく 真っすぐな 線を かく。
          feedback: 不正解、 `まつ`のくり返しのなかで 曲がっています。
        - text: 'だんだん長くて細くなっていく うずまき模様を かく '
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        - text: だんだん長くて 太くなっていく うずまき模様を かく 。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        markdown: |+
          `まつ`のcounterは、線の幅に使われています。


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_artist_for10_predict1_2018:
        answers:
        - text: アーティストは だんだん太くなっていく 真っすぐな 線を かく。
          feedback: 不正解、 `まつ`のくり返しのなかで 曲がっています。
        - text: 'だんだん長くて細くなっていく うずまき模様を かく '
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        - text: だんだん長くて 太くなっていく うずまき模様を かく 。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        markdown: |+
          `まつ`のcounterは、線の幅に使われています。


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_artist_for10_predict1_2018_2019:
        answers:
        - text: アーティストは だんだん太くなっていく 真っすぐな 線を かく。
          feedback: 不正解、 `まつ`のくり返しのなかで 曲がっています。
        - text: 'だんだん長くて細くなっていく うずまき模様を かく '
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        - text: だんだん長くて 太くなっていく うずまき模様を かく 。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        markdown: |+
          `まつ`のcounterは、線の幅に使われています。


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_artist_for10_predict1_2018_2019_2020:
        answers:
        - text: アーティストは だんだん太くなっていく 真っすぐな 線を かく。
          feedback: 不正解、 `まつ`のくり返しのなかで 曲がっています。
        - text: 'だんだん長くて細くなっていく うずまき模様を かく '
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        - text: だんだん長くて 太くなっていく うずまき模様を かく 。
          correct: true
          feedback: せいかい！
        - text: わかりません
          feedback: 不正解、 `まつ`のくり返しのなかでだんだん長くて 太くなっていく 線をかきます。
        markdown: |+
          `まつ`のcounterは、線の幅に使われています。


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_artist_fwp2_predict1:
        answers:
        - text: アーティストは同じ関数を使って、ちがう大きさの正方形を2つかく。
          correct: true
          feedback: せいかい！
        - text: アーティストは別々の関数を使って、ちがう大きさの正方形を2つかく。
          feedback: 不正解、パラメータを変えることで 1つの関数で ちがう大きさの正方形をかいています。
        - text: アーティストは別々の関数を使って、同じ大きさの正方形を2つかく。
          feedback: 不正解、パラメータを変えることで 1つの関数で ちがう大きさの正方形をかいています。
        - text: わかりません
          feedback: パラメータを変えることで 1つの関数で ちがう大きさの正方形を2つ かいています。
        markdown: |+
          関数 '正方形をかく'にパラメータが追加されました。 "編集" をクリックして、関数の中身を見てみよう。


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_artist_variables3a_predict1:
        answers:
        - text: 一辺が50ピクセルの三角形をかく。
          correct: true
          feedback: せいかい！
        - text: 一辺が3ピクセルの50角形をかく。
          feedback: 不正解、変数`length`は、`くりかえし`の回数ではありません。
        - text: 50度曲がった線を3本かく
          feedback: 不正解、変数`length`は、`まがる`角度ではありません。
        - text: わかりません
          feedback: "`動く 前に`の前で 変数`length`に50をセットしているので、アーティストは 一辺が 50ピクセルの三角形をかきます。"
        questions:
        - text: 変数 "length"に50をセットしました。"実行（じっこう）"をクリックしたら どうなるかな？
      courseF_multi_artist_variables3a_predict1_2018:
        answers:
        - text: 一辺が50ピクセルの三角形をかく。
          correct: true
          feedback: せいかい！
        - text: 一辺が3ピクセルの50角形をかく。
          feedback: 不正解、変数`length`は、`くりかえし`の回数ではありません。
        - text: 50度曲がった線を3本かく
          feedback: 不正解、変数`length`は、`まがる`角度ではありません。
        - text: わかりません
          feedback: "`動く 前に`の前で 変数`length`に50をセットしているので、アーティストは 一辺が 50ピクセルの三角形をかきます。"
        questions:
        - text: 変数 "length"に50をセットしました。"実行（じっこう）"をクリックしたら どうなるかな？
      courseF_multi_artist_variables3a_predict1_2018_2019:
        answers:
        - text: 一辺が50ピクセルの三角形をかく。
          correct: true
          feedback: せいかい！
        - text: 一辺が3ピクセルの50角形をかく。
          feedback: 不正解、変数`length`は、`くりかえし`の回数ではありません。
        - text: 50度曲がった線を3本かく
          feedback: 不正解、変数`length`は、`まがる`角度ではありません。
        - text: わかりません
          feedback: "`動く 前に`の前で 変数`length`に50をセットしているので、アーティストは 一辺が 50ピクセルの三角形をかきます。"
        questions:
        - text: 変数 "length"に50をセットしました。"実行（じっこう）"をクリックしたら どうなるかな？
      courseF_multi_artist_variables3a_predict1_2018_2019_2020:
        answers:
        - text: 一辺が50ピクセルの三角形をかく。
          correct: true
          feedback: せいかい！
        - text: 一辺が3ピクセルの50角形をかく。
          feedback: 不正解、変数`length`は、`くりかえし`の回数ではありません。
        - text: 50度曲がった線を3本かく
          feedback: 不正解、変数`length`は、`まがる`角度ではありません。
        - text: わかりません
          feedback: "`動く 前に`の前で 変数`length`に50をセットしているので、アーティストは 一辺が 50ピクセルの三角形をかきます。"
        questions:
        - text: 変数 "length"に50をセットしました。"実行（じっこう）"をクリックしたら どうなるかな？
      courseF_multi_bee_conditionals1_predict1:
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          correct: true
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        markdown: 'くもで下に何があるか見えません。くもの下には、花があるかもしれません。花があれば、**一度だけ**ミツを集めましょう。

'
        questions:
        - text: 花がなければハチは何もしません。プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_bee_conditionals7_predict2:
        answers:
        - text: ハチは花からミツは集めるが、ハチミツは作らない。
          correct: true
          feedback: せいかい！
        - text: ハチは花でもハチの巣でもミツをとろうとする。
          feedback: 不正解、`もし 花で` で、ハチは花からミツを集め、花でなかったら（ハチの巣だったら）ハチミツを作ります。
        - text: ハチは花でもハチの巣でもハチミツを作ろうとする。
          feedback: 不正解、`もし 花で` で、ハチは花からミツを集め、ハチの巣でハチミツを作ります。
        - text: わかりません
          feedback: "`もし 花で` で、ハチは花からミツを集め、ハチの巣でハチミツを作ります。"
        markdown: 'くもの下には花があることもあるし、ハチの巣があることもあります！ どちらであっても、くもの下にあるのは、花が**1つ**か、ハチの巣が**1つ**です。

'
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseF_multi_bee_for3_predict1:
        answers:
        - text: 'ハチはすべての花からミツを集めることができる。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 1つの花を除いて、ハチはすべての花からミツを集めることができる。
          correct: true
          feedback: せいかい！
        - text: 'ハチはすべての花からミツを1つづつ集める。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 'ハチは花にあるよりも たくさんのミツを 集めようとする。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        markdown: |+
          うーん！  このパズルは、`まつ` を使えば かんたんにクリアすることができる！


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_bee_for3_predict1_2018:
        answers:
        - text: 'ハチはすべての花からミツを集めることができる。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 1つの花を除いて、ハチはすべての花からミツを集めることができる。
          correct: true
          feedback: せいかい！
        - text: 'ハチはすべての花からミツを1つづつ集める。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 'わかりません '
          feedback: "`回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。"
        markdown: |+
          うーん！  このパズルは、`まつ` を使えば かんたんにクリアすることができる！


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_bee_for3_predict1_2018_2019:
        answers:
        - text: 'ハチはすべての花からミツを集めることができる。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 1つの花を除いて、ハチはすべての花からミツを集めることができる。
          correct: true
          feedback: せいかい！
        - text: 'ハチはすべての花からミツを1つづつ集める。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 'わかりません '
          feedback: "`回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。"
        markdown: |+
          うーん！  このパズルは、`まつ` を使えば かんたんにクリアすることができる！


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_bee_for3_predict1_2018_2019_2020:
        answers:
        - text: 'ハチはすべての花からミツを集めることができる。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 1つの花を除いて、ハチはすべての花からミツを集めることができる。
          correct: true
          feedback: せいかい！
        - text: 'ハチはすべての花からミツを1つづつ集める。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 'わかりません '
          feedback: "`回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。"
        markdown: |+
          うーん！  このパズルは、`まつ` を使えば かんたんにクリアすることができる！


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_bee_fwp9_predict1:
        answers:
        - text: ハチは、ミツもハチミツも集めない。
          feedback: 不正解、関数はパラメータにセットした数だけ、ミツかハチミツを集めます。
        - text: 'ハチは階段状に動いて、最初に3つ、次に2つのミツかハチミツを集める。 '
          correct: true
          feedback: 不正解、関数はパラメータにセットした数だけ、ミツかハチミツを集めます。
        - text: '1回のくり返しでミツかハチミツを1つ集める。 '
          feedback: 不正解、関数はパラメータにセットした数だけ、ミツかハチミツを集めます。
        - text: わかりません
          feedback: クリックして関数の中を見れば、パラメータにセットされた数だけ、ミツかハチミツを集めているのがわかります。
        markdown: |+
          くもの下には、花が1つか、ハチの巣が1つあります。下の質問に答える前に、関数ブロックの”編集”をクリックして、中を見てみよう。


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_multi_playlab_variables4c_predictive1:
        answers:
        - text: かいぞくは、"Pleasure to meet you, Ali." と言う。
          correct: true
          feedback: '正解 '
        - text: かいぞくは"Pleasure to meet you." と言う。
          feedback: 不正解、 `つなげる`を使えば、かいぞくのことばと質問の答えをつなげることができます。
        - text: かいぞくは、"Ali"と言う。
          feedback: 不正解、 `つなげる`を使えば、かいぞくのことばと質問の答えをつなげることができます。
        - text: わかりません
          feedback: '不正解、`つなげる`を使えば、かいぞくのことばに質問の答え（Ali）をつなげることができます。 '
        markdown: |
          **このパズルでは、新たなブロック`しつもん` を使います。**

          `しつもん` ブロックはプログラムを停止させて、答えを入れるためのウインドを開きます。

          入力した答えは、`しつもん`の後ろに指定した変数にセットされます。今回は、変数`name`にセットされます。
        questions:
        - text: 質問に "Ali"と答えたら どうなりますか？
      courseF_project_exemplars_2019:
        content1: Test Markdown Textbook Page
        markdown: |+
          # プロジェクトの例

          最後のプロジェクトを始めます。始める前に、プロジェクトの例を見てみましょう。

          ## Sprite Lab

          | Cupcake Game (Sprite Lab) | Helicopter Game (Sprite Lab) |
          |---|---|
          | [![#Bunny Game (Sprite Lab)](https://images.code.org/c90080aaf05349fb6e1fbb6861e815df-image-1556809855136.png)](https://studio.code.org/projects/spritelab/gXM_YU_qL_QWo1o5Wkam96oiFrYY5VUp27m2xKlp7EQ/view) | [![#Helicopter Game (Sprite Lab)](https://images.code.org/1a273fd447b952367792423a70c5087a-image-1556812149075.png)](https://studio.code.org/projects/spritelab/QeROTy1pNyjNPC-ZZdBN1mcpkmTEMUc2FYwXX0SOFAY/view) |
          | ゲームに言葉やスコアを追加してみましょう！ | ゲームに言葉やスコアを追加してみましょう！ |

          ## アーティスト

          | フラワー (アーティスト) | スパイラル (アーティスト) |
          |---|---|
          | [![Flowers (Artist)](https://images.code.org/0f5adf63c318eab8c8acb397d9db7f2a-image-1556821537577.png)](https://studio.code.org/projects/artist/MIMh2pV2IiLm1ZzaiA6N7kKvg534lFck3abLXTsvZU8/view) | [![Spiral (Artist)](https://images.code.org/06514571a8cf2f8b0346006ac1adc219-image-1556819399386.png)](https://studio.code.org/projects/artist/66scPDPWa8RNNHkcXDaXdA/view) |
          | 変数を使って創作してみましょう！ | くり返しを使って創作してみましょう！|

      courseF_project_exemplars_2019_2020:
        content1: Test Markdown Textbook Page
      coursee_prediction_artistfunction2:
        answers:
        - text: アーティストは、ちゃんと絵をかいて、パズルをクリアする。
          feedback: 不正解、くり返しの中で呼ばれているのは、関数"多角形の列をかく"ではなく 関数"多角形をかく" です。
        - text: アーティストは４つの正方形でできた まど をかく。
          correct: true
          feedback: せいかい！
        - text: アーティストは、一番上の列だけかく。
          feedback: 不正解、プログラムの中で関数"多角形の列をかく"を呼んでいません。
        - text: アーティストは、枠のなかに４つ四角形をかく。
          feedback: 不正解、くり返しのなかで関数"多角形をかく"を呼んだら90度曲がっています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      coursee_prediction_artistfunction2_2018:
        answers:
        - text: アーティストは、ちゃんと絵をかいて、パズルをクリアする。
          feedback: 不正解、くり返しの中で呼ばれているのは、関数"多角形の列をかく"ではなく 関数"多角形をかく" です。
        - text: アーティストは４つの正方形でできた まど をかく。
          correct: true
          feedback: せいかい！
        - text: アーティストは、一番上の列だけかく。
          feedback: 不正解、プログラムの中で関数"多角形の列をかく"を呼んでいません。
        - text: アーティストは、枠のなかに４つ四角形をかく。
          feedback: 不正解、くり返しのなかで関数"多角形をかく"を呼んだら90度曲がっています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      coursee_prediction_artistfunction2_2018_2019:
        answers:
        - text: アーティストは、ちゃんと絵をかいて、パズルをクリアする。
          feedback: 不正解、くり返しの中で呼ばれているのは、関数"多角形の列をかく"ではなく 関数"多角形をかく" です。
        - text: アーティストは４つの正方形でできた まど をかく。
          correct: true
          feedback: せいかい！
        - text: アーティストは、一番上の列だけかく。
          feedback: 不正解、プログラムの中で関数"多角形の列をかく"を呼んでいません。
        - text: アーティストは、枠のなかに４つ四角形をかく。
          feedback: 不正解、くり返しのなかで関数"多角形をかく"を呼んだら90度曲がっています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      coursee_prediction_artistfunction2_2018_2019_2020:
        answers:
        - text: アーティストは、ちゃんと絵をかいて、パズルをクリアする。
          feedback: 不正解、くり返しの中で呼ばれているのは、関数"多角形の列をかく"ではなく 関数"多角形をかく" です。
        - text: アーティストは４つの正方形でできた まど をかく。
          correct: true
          feedback: せいかい！
        - text: アーティストは、一番上の列だけかく。
          feedback: 不正解、プログラムの中で関数"多角形の列をかく"を呼んでいません。
        - text: アーティストは、枠のなかに４つ四角形をかく。
          feedback: 不正解、くり返しのなかで関数"多角形をかく"を呼んだら90度曲がっています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      csf_be_a_super_digital_citizen:
        content1: 説明
      csf_password_power-up:
        content1: 説明
      csf_putting_a_stop_to_online_meanness:
        content1: 説明
      grade2_multi_collector_A_predict1:
        answers:
        - text: ４つ
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: ローレルは、たからものが ないところで たからものを あつめようとします。
          correct: true
          feedback: せいかい！
        - text: ローレルは すべての たからものを あつめることができる。
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: わかりません
          feedback: ローレルは たからものが ないところで たからものを あつめようとする。
        questions:
        - text: 下のプログラムを実行（じっこう）したら、ローレルは たからものを いくつ あつめますか？
      grade2_multi_collector_A_predict1_2018:
        answers:
        - text: ４つ
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: ローレルは、たからものが ないところで たからものを あつめようとします。
          correct: true
          feedback: せいかい！
        - text: ローレルは すべての たからものを あつめることができる。
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: わかりません
          feedback: ローレルは たからものが ないところで たからものを あつめようとする。
        questions:
        - text: プログラムを 実行したら どうなりますか？
      grade2_multi_collector_A_predict1_2018_2019:
        answers:
        - text: ４つ
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: ローレルは、たからものが ないところで たからものを あつめようとします。
          correct: true
          feedback: せいかい！
        - text: ローレルは すべての たからものを あつめることができる。
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: わかりません
          feedback: ローレルは たからものが ないところで たからものを あつめようとする。
        questions:
        - text: プログラムを 実行したら どうなりますか？
      grade2_multi_collector_A_predict1_2018_2019_2020:
        answers:
        - text: ４つ
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: ローレルは、たからものが ないところで たからものを あつめようとします。
          correct: true
          feedback: せいかい！
        - text: ローレルは すべての たからものを あつめることができる。
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: わかりません
          feedback: ローレルは たからものが ないところで たからものを あつめようとする。
        questions:
        - text: プログラムを 実行したら どうなりますか？
      gradek1_activity_beNice:
        markdown: "# Behaving in the Computer Lab\n  \n<br/><br/>    \n    \n<a href=\"https://docs.google.com/document/d/18KHX5NNlmXX1Eqt8u6LFRzto7PK4dIFNv-tr1F1joUQ/edit?usp=sharing\"
          target=\"_new\">\n<button>\nレッスンプランへ行く\n</button> \n</a>\n\n<br/><br/>\n<a
          class=\"btn btn-large btn-primary next-stage submitButton\">続行</a>"
      outbreak_story:
        content1: 説明
      outbreak_story2:
        content1: 説明
      courseD_EOC_2020:
        display_name: コース最後のプロジェクト
      courseE_EOC_2020:
        display_name: コース最後のプロジェクト
      courseExpress_EOC_2020:
        display_name: コース最後のプロジェクト
      courseF_EOC_2020:
        display_name: コース最後のプロジェクト
      BigEvent-Unplugged_2021:
        markdown: |
          # ビッグ イベント

          コンピューター の せかいでは、イベントは、コンピューターを うごかすときに つかう めいれいの 1つです。このレッスンでは、おしたボタンで ちがう うごきを させられることを まなびます。
      BinaryBracelets-Unplugged_2021:
        markdown: |
          # バイナリー形式

          コンピュータがわかる形式で あなたの名前を かいてみよう！

          ![](https://images.code.org/ed15a484276c0989e4adb5daf480f68a-image-1557870226222.png)
      ConditionalsWithCards-Unplugged_2021:
        markdown: |
          # 条件判定について

          トランプを使って、"もし 赤いカードなら、1ポイント ゲット" や "もし 黒いカードなら、1ポイント ゲット" といったルールを作ってみよう。
      CourseF_outbreak_story:
        content1: 説明
        markdown: |-
          # 大流行：自分だけのシミュレーションを作ってみましょう

          ## モンスタータウンへようこそ！
          モンスタータウンは、いつもはハッピーで元気いっぱいの場所でした。 モンスタータウンのモンスターたちは、あちこちのお友だちの家に行くのが大好きでした。

          <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%">

          ある日、モンスターの1人が病気になりました。このモンスターは**ウイルス**にかかったのです！ ウイルスというのは、みんなを病気にする小さなバイキンのことです。 他のモンスターはあまり心配しないで、お友だちの所にいつもどおり遊びに行きました。

          <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%">

          その後すぐに、さらに2人のモンスターが病気になりました。 同じウイルスでした！ 2人はお友だちからウイルスをもらったようです。

          <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png" style="width:8%"> <img src="https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png" style="width:8%"> <img src="https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%">

          ウイルスはゆっくりと近所の他のモンスターにも広がりました。 元気なモンスターは、全員が病気になるのではないかと心配し始めました。病気のモンスターは、他のみんなにウイルスをうつすのではないかと心配し始めました。

          <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png" style="width:8%"> <img src="https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png" style="width:8%"> <img src="https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png" style="width:8%"> <img src="https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png" style="width:8%"> <img src="https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%"> <img src="https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png" style="width:8%">


          <div style="display: inline-block">
          <img src="https://images.code.org/89376b9ebd5fcee77545f13a7a444430-image-1603135356392.png" style="float:right; width:30%">

          ## 広がるのを止める
          うれしいことに、モンスタータウンのみんながウイルスをじっくり調べると、大切なことが分かりました。口にマスクをかけると、ウイルスが広がりにくいことに気づいたのです。 マスクをかけると、病気のモンスターが元気なモンスターにウイルスをうつすことも少なくなります。

          <img src="https://images.code.org/c98f28f9bf6a027143592109d59ee484-image-1603134766360.png" style="width:8%"> <img src="https://images.code.org/bac9dbfaf1815c6627fc24e8e6db396d-image-1603134760456.png" style="width:8%">

          </div>

          <img src="https://images.code.org/ef7499758496b39bcccc24aabd2af5d7-image-1603137920037.2020-10-19 16_04_58.gif" style="float:left; width:25%; padding-right:25px">

          ## 次の手順は？

          今日はコードを書いて、モンスタータウンのウイルス大流行の**シミュレーション**を作成して実行します。 シミュレーションとは、プロセスまたはシステムのコンピュータモデルのことです。 コーディングをして、モンスタータウンのみんなに何が起きるか予測する方法を学びましょう。

          <img src="https://images.code.org/fcbfd250d58652bdfd6393ec4f2fe2dd-image-1603134705074.png" style="float:right; width:15%">

          * *ウイルスはどのくらいの速さで広がりますか？*

          * *だれもが病気になりますか？*

          * *フェイスマスクはどのように役立ちますか？*


          終わったら、シミュレーションをお友だちと共有しましょう。自分の町にウイルスがやってきたときに、他の人たちの健康を守るためにできると思うことについて、意見を出し合いましょう。
      CourseF_outbreak_story2:
        content1: 説明
        markdown: |
          # 大流行：科学者のように考える

          <img src="https://images.code.org/89376b9ebd5fcee77545f13a7a444430-image-1603135356392.png" style="float:right; width:30%">

          シミュレーションは、現実の世界で観察しづらいことについて知るための最高の方法です。科学者が問題を解いて、新しいアイデアを安全に、そして効率よくテストするのを手助けします。 このシミュレーションは、モンスタータウンで、ウイルスの大流行がどのように広がるのかを見せてくれる1つの方法です。

          ## リセットしてもう一度！
          自分でコードを書いたとしても、「実行」をクリックするまでは、何が起こるか正確に知ることはできません。モンスターは自由に動き回っているので、ウイルスが素早く広がるのか、ゆっくり広がるのか分からないのです。コードを変更するときはいつでも、数回はシミュレーションを実行しましょう。なにごとも2度、同じように起きることはありません！

          ## データを集める
          シミュレーションを実行したら、観察したことを書きとめましょう。病気になったモンスターの数を数えたり、タイマーを使って、色々なことがどれほど速く起こるかチェックしましょう。たとえば、マスクをかけていないモンスター全員が病気になるまで、たいてい、どのくらいの時間がかかりますか？

          ## 予測する
          自分のモデルを理解していれば、それを使って予測もできます。 シミュレーションを実行する方法を変更して、どういった違いが出るか予測したりもできます。例えば：
          * モンスターの数が2倍になると、どうなりますか？
          *モンスターが半分のスピードで動くと、どうなりますか？

          <img src="https://images.code.org/2e83373ffd346ce3f42917a0624d441c-image-1603749526420.png" style="float:right">

          ## モンスタータウンは現実の世界に似ていますか？
          どれほど現実的に見えるモデルでも、それには限界があります。
          * シミュレーションは、実際のウイルスの大流行とどのような点で同じですか？
          * どのような違いがありますか？
          このアクティビティが終わったら、これらの質問について先生や家族と話し合いましょう！

          ## 他にはどのようなものをモデル化できますか？
          ここでは、モンスタータウンのウイルス大流行について、実用的なモデルを作成しました。 シミュレーションでできないこと、または、できれば良いと思うことは何ですか？ 「続ける」をクリックして、モデル化のやり方をもっと学びましょう。
          * シミュレーションでモンスターの数を増やす
          * モンスターがウイルスから回復するのを助ける
          * 確率、免疫、ワクチンなど！

          また、シミュレーションモデルをお友だちと共有したり、ウイルスが自分の町で広がったときに、みんなの健康を守るためにできると思うことについて、意見を出し合ったりしましょう。
      DesigningForAccessibilityMarkdownLevel_2021:
        markdown: |
          # 使いやすさの設計

          * コンピュータ サイエンスの世界で、**使いやすさ** とは、障害を持った人でも使える技術のことです。
          * 障害には、肉体的、聴覚,、視覚など さまざまなものが あります。
          * 障害は多様で、**スマートフォンのアプリ**をどのように使うかなど、様々な面に影響を与えます。
          * 障害を持った人にも 使いやすいアプリを設計することで、すべての人にとって 使いやすいものになります！

          ![](https://images.code.org/0c670d0d9078657a870df0ca799492cb-image-1557166420066.png)
      DigitalSharing-Unplugged_2021:
        markdown: |
          # 共有

          とくに インタネットを世界で 所有権と著作権を尊重することの課題と利点について学びます。
      ForLoopFun-Unplugged_2021:
        markdown: |
          # くり返し

          くり返しを使うことで、同じことを何回も実施することができます。これから、くり返しの使い方について、学んでいきます。
      GettingLoopy-Unplugged_2021:
        markdown: |
          # くりかえし

          ダンスをれいに くりかえしについて まなびます。
      GraphPaperProgramming-Unplugged_2021:
        markdown: |
          # グラフ用紙を使ったプログラミング

          友だちが同じもようをかけるように、アルゴリズム（もようのかき方）を書いてみよう。
      HappyMaps-Unplugged_2021:
        markdown: |
          # ハッピー マップ

          キャラをうごかして めいろを クリアする ほうほうを かんがえよう。
      Internet-Unplugged_2021:
        markdown: |
          # インターネット

          紙を使って、教室にインターネットを作ります。
      MoveItMoveIt-Unplugged_2021:
        markdown: |
          # うごかせ、うごかせ

          ちずを みながら コマンドをつかって ゴールにすすみましょう。
      MyLoopyRoboticFriends-Unplugged_2021:
        markdown: |
          # ロボットに同じ動きをくり返させる

          くりかえしをつかえば、プログラムを 短くできます！
      MyRoboticFriends-Unplugged_2021:
        markdown: |
          # ロボットの友だち

          ロボットのためにプログラムを書くことで、プログラムについて学びます。
      OPD-K5 Stage3aGo_dani:
        content1: 説明
      RelayProgramming-Unplugged_2021:
        markdown: |
          # リレー プログラミング
          チームに分かれて、みんなで もようを かくプログラムを作ります。
      Songwriting-Unplugged_2021:
        markdown: |
          # 作曲

          歌のコーラスの例に、関数の定義と使い方について学ぼう。
      TheRightAppMarkdownLevel_2021:
        markdown: |
          # 正しい アプリ

          * みんなが、コンピューターをつかいます。とくに、スマートフォンは。
          * スマートフォンのアプリで ともだちと はなしたり、おんがくを きいたり、かいものをしたり、ネットをしたりすることができます。
          * どのようなことをしたいのか、すべてのひとが つかいやすいのか かんがえることは、プログラマーにとって たいせつなことです！

          ![](https://images.code.org/fb17eeb9238d2f26c6ab40c9841517a7-image-1555611687284.png)
      courseAB_EOC_2021:
        display_name: コース最後のプロジェクト
        description: さいごのレッスンになりました！ 作成するプロジェクトを選びましょう。
      courseB_EOC_2021:
        display_name: コース最後のプロジェクト
        description: さいごのレッスンになりました！ 作成するプロジェクトを選びましょう。
      courseC_multi_artist_prog6_predict1_2021:
        answers:
        - text: 正三角形。
          feedback: ふせいかい。正方形でした。
        - text: まっすぐな線。
          feedback: ふせいかい。正方形でした。
        - text: 正方形
          correct: true
          feedback: せいかい！
        - text: アーティストは五角形をかく
          feedback: ふせいかい。正方形でした。
        questions:
        - text: プログラムを実行（じっこう）したら、どんな図形が書けますか？
      courseC_multi_harvester_loops11_predict1_2021:
        answers:
        - text: '4'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: '12'
          correct: true
          feedback: せいかい！
        - text: '15'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        - text: '20'
          feedback: ふせいかい。３つの くりかえしの なかで それぞれ ４つのかぼちゃを あつめるので ぜんぶで１２こ！
        questions:
        - text: プログラムを実行（じっこう）したら、いくつ カボチャを あつめることが できますか？
      courseC_multi_maze_debugging8_predict1_2021:
        answers:
        - text: スクラットはどんぐりにとうちゃくする。コードにバグはない。
          feedback: ふせいかい。 まず、スクラットはまちがった方に曲がるので、じゅうぶんな回数、前に進めないため、ドングリにとうちゃくしません。
        - text: スクラットはまちがった方に曲がるため、ドングリにとうちゃくしない。
          correct: true
          feedback: せいかい！まず、スクラットはまちがった方に曲がるので、じゅうぶんな回数、前に進めないため、ドングリにとうちゃくしません。
        - text: "「まえにすすむ」ブロックが十分でないため、スクラットはドングリにとうちゃくしません。"
          correct: true
          feedback: せいかい！まず、スクラットはまちがった方に曲がるので、じゅうぶんな回数、前に進めないため、ドングリにとうちゃくしません。
        - text: スクラットはさいしょのブロックから動かない。
          feedback: このコードには2つのバグがあります。まず、スクラットはまちがった方に曲がるので、じゅうぶんな回数、前に進めないため、ドングリにとうちゃくしません。
        questions:
        - text: このコードにあるバグを見つけましょう。スクラットはドングリにとうちゃくしますか、それとも、まだ問題がありますか？
      courseC_multi_maze_programming8_predict1_2021:
        answers:
        - text: トリさんは ブタの一歩手前まで行くことができる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: トリさんは ブタのところへ 行くことができる。
          correct: true
          feedback: せいかい！
        - text: トリさんは TNTにぶつかる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        - text: トリさんは壁にぶつかる。
          feedback: ふせいかい。このプログラムで トリさんは ブタのところまで 行くことができます。
        questions:
        - text: "”実行（じっこう）”ボタンをおしたら どうなるか考えてみよう。"
      courseC_multi_starWars_predict1_2021:
        answers:
        - text: BB-8は、じっとしている。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: １つ前にすすむ。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        - text: ５回前にすすんで、すべてのスクラップをあつめる。
          correct: true
          feedback: せいかい！
        - text: BB-8は3つだけ前に進む。
          feedback: ふせいかい。くりかえしブロックにより、５回前にすすみます。
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseC_multi_starWars_predict2_2021:
        answers:
        - text: さいしょの くりかえしで 行きすぎてしまう。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: さいしょの くりかえしの かずが たりなくて、スクラップを ぜんぶ あつめられない。
          correct: true
          feedback: せいかい！
        - text: BB-8は、すべてのスクラップを あつめることが できる。
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        - text: BB-8はさいしょのくり返しの後、まちがった方に曲がる
          feedback: ふせいかい。さいしょのくりかえしで ３回前にすすむべきところ、２回しかすすんでいません。
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseD_EOC_2021:
        display_name: コース最後のプロジェクト
        description: コースDのさいごのレッスンになりました！ 作成するプロジェクトを選びましょう。
      courseD_multi_artist_nestedLoops9_predict1_2021:
        answers:
        - text: A
          correct: true
          feedback: せいかい！
        - text: B
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: C
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        - text: 上の回答のどれでもない
          feedback: 不正解、五角形を かく くりかえしを ４回 くりかえして 一周しています。
        markdown: |+
          <table>
          <tr><td>A</td><td><img src="https://images.code.org/cfc3f8206438a60afe3be9afe7fc0a22-image-1489118742610.10.15.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>B</td><td><img src="https://images.code.org/975b027684d2f5411b960bf82987663e-image-1489119999013.11.13.png" width="100px" style="mix-blend-mode: multiply;"/></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td><td>C</td><td><img src="https://images.code.org/635ac54ed7cb2e2d24eb341b3ec4eecb-image-1489120024059.12.00.png" width="80px" style="mix-blend-mode: multiply; clip: rect(0px,0px,0px,40px);"/></td></tr>
          </table>

          <br/><br/>

        questions:
        - text: "”実行（じっこう）”をクリックしたら、どの図形がかけますか？"
      courseD_multi_bee_conditionals1_predict1_2021:
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          correct: true
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: みつばちは雲まで行けない。
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        questions:
        - text: くもの下は見えないけど、花があるはず。もし 花があれば、ミツを集めよう。花じゃなかったら、何もしなくていいよ。 "実行（じっこう）"をクリックしたら、どうなるか考えてみよう。
      courseD_multi_bee_conditionals1_predict1_dani:
        answers:
        - text: 'ハチはくものところまで行って、むじょうけんにミツを集めようとする。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: ハチはくものところまで行って、くもの下に花があれば ミツを 集めます。
          correct: true
          feedback: せいかい！
        - text: 'ハチはくものところまで行くけど、その後は何もしない。 '
          feedback: ふせいかい、くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        - text: わかりません
          feedback: くもの下に花があるか `もし 花で` で調べて、花が あればミツを 集めます。
        questions:
        - text: くもの下は見えないけど、花があるはず。もし 花があれば、ミツを集めよう。花じゃなかったら、何もしなくていいよ。 "実行（じっこう）"をクリックしたら、どうなるか考えてみよう。
      courseD_multi_bee_conditionals7_predict2_2021:
        answers:
        - text: ハチは花でミツをとって、ハチの巣でハチミツを作ろうとする。
          correct: true
          feedback: せいかい！
        - text: ハチは花でもハチの巣でもミツをとろうとする。
          feedback: ふせいかい。`もし 花で` ブロックで ハチは花でミツをとって、ハチの巣でハチミツを作るようにしています。
        - text: ハチは花でもハチの巣でもハチミツを作ろうとする。
          feedback: ふせいかい。`もし 花で` ブロックで ハチは花でミツをとって、ハチの巣でハチミツを作るようにしています。
        - text: みつばちは花とハチの巣の両方で、ハチミツやミツをあつめようとする。
          feedback: ふせいかい。`もし 花で` ブロックで ハチは花でミツをとって、ハチの巣でハチミツを作るようにしています。
        questions:
        - text: '"実行（じっこう）" をクリックしたら、どうなりますか？ただし、くもの下にかくれているのは、ハチの巣が*1つ* か 花が *1つ*
            です。'
      courseD_multi_bee_nestedLoops2_predict1_2021:
        answers:
        - text: ハチは、１回だけ 前に 進んで ミツを ゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは ミツを ２つゲットする。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        - text: ハチは すべてのミツを ゲットする。
          correct: true
          feedback: せいかい！
        - text: みつばちはまちがった方にまがる。
          feedback: ふせいかい、ハチは前に進むのと ミツをとるのを くりかえして、すべてのミツをゲットします。
        questions:
        - text: '"実行（じっこう）"をクリックしたら どうなりますか？プログラムは くりかえしが 入れ子に なっているよ。'
      courseD_multi_bee_nestedLoops9_predict2_2021:
        answers:
        - text: '4'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: '8'
          correct: true
          feedback: せいかい！
        - text: '10'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        - text: '12'
          feedback: ふせいかい、ハチはくりかえしの中にある さいしょのくりかえしで ２つ、後ろのくりかえしで ２つ ミツを 集めます。それを２回
            くりかえすので、８つ ミツを 集めることができます。
        questions:
        - text: '"実行（じっこう）"をクリックしたら ハチは いくつミツを 集めることが できますか？'
      courseD_multi_farmer_condLoops9_predict1_2021:
        answers:
        - text: 全部の作物をしゅうかくできる。
          feedback: ふせいかい、カボチャをとる命令はありません。
        - text: 通った道にある作物を ひとつも 収かくしません。
          feedback: ふせいかい、農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくしますが、カボチャは収かくしません。
        - text: カボチャ以外の作物は、全部収かくする。
          correct: true
          feedback: せいかい！
        - text: カボチャを２つだけ2しゅうかくする。
          feedback: ふせいかい、農夫は階だんみたいに進んですすんで、そこにあるトウモロコシやレタスを収かくしますが、カボチャは収かくしません。
        markdown: |
          葉っぱは、トウモロコシとレタスになります。
          <br/>
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_farmer_while10_predict2_2021:
        answers:
        - text: 山もあなもなくなって、まっ平になる。
          feedback: ふせいかい、土をかたづけて 山を平らにする めいれいは 入っていません。
        - text: 山が、平らになる。
          correct: true
          feedback: せいかい！
        - text: あなが なくなる。
          feedback: ふせいかい、`～の間`は、じょうけんを みたす間 くりかえしますが、その中に 土をかたづけて 山を平らにする めいれいは ありません。
        - text: さいごの穴はそのままになる。
          feedback: ふせいかい、土をかたづけて 山を平らにする めいれいは 入っていません。
        questions:
        - text: このプログラムを動かしたら、どうなるかな？
      courseD_multi_farmer_while4_predict1_2021:
        answers:
        - text: なにも起こらない。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫はずっと土を かたづけ つづける。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        - text: 農夫は山がなくなるまで、土をかたづけつづける。
          correct: true
          feedback: せいかい！
        - text: 農夫は一度だけ土をかたづける。
          feedback: ふせいかい、農夫は山がなくなるまで、土をかたづけつづけます。
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_maze_until10_predict2_2021:
        answers:
        - text: ゾンビは行ったり来たりをくり返します。
          correct: true
          feedback: せいかい！
        - text: ゾンビは、ひまわりに たどり着ける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返します。
        - text: ゾンビは、右に曲がったら、その一角を回りつづける。
          feedback: 不正解、ゾンビは行ったり来たりをくり返します。
        - text: ゾンビは道のおわりから前に進めなくなる。
          feedback: このプログラムでは、ゾンビは行ったり来たりをくり返します。
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseD_multi_maze_until2_predict1_2021:
        answers:
        - text: トリさんは、まったく動かない。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: トリさんは ブタのところへ 行くことができる。
          correct: true
          feedback: せいかい！
        - text: 道をまっすぐ進んで、TNTに ぶつかる。
          feedback: ふせいかい、道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        - text: トリさんはまちがった方にまがる。
          feedback: 道を進んで つきあたったら 左に曲がる を くりかえして ブタにたどり着きます！
        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseE_EOC_2021:
        display_name: コース最後のプロジェクト
        description: コースEのさいごのレッスンになりました！ 作成するプロジェクトを選びましょう。
      courseE_EOC_examples_2021:
        display_name: コース最後のプロジェクト
        description: コースEのさいごのレッスンになりました！ 作成するプロジェクトを選びましょう。
      courseE_multi_dance_events_predict1_2021:
        answers:
        - text: なにも起こらない。
          feedback: ふせいかい。エイリアンは画面を上下に動きはじめます。
        - text: エイリアンが右から左へパトロールを始めます。
          feedback: ふせいかい。エイリアンは画面を上下に動きはじめます。
        - text: エイリアンは画面を上下に動きはじめます。
          correct: true
          feedback: せいかい！
        - text: エイリアンは画面の上部からすがたを消します。
          feedback: ふせいかい。青いエイリアンが画面上を上下に動きはじめます。
        questions:
        - text: 下のコードをよく見てください。 エイリアンをクリックするとどうなるでしょう？
      courseE_multi_farmer_functions11_predict_2021:
        answers:
        - text: カボチャを２つしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: カボチャを全部しゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        - text: レタスをしゅうかくする。
          correct: true
          feedback: せいかい！
        - text: トウモロコシをしゅうかくする。
          feedback: 不正解、農夫は道を最後まで行って、曲がって、もと来た道をもどって レタスを しゅうかくします。
        questions:
        - text: 農夫は何をしゅうかくするかな？
      courseE_prediction_artistFunction1_2021:
        answers:
        - text: 何もかかれない。関数が呼び出されない。
          feedback: 不正解、関数は２度呼び出されます。
        - text: 正方形を１つかく。
          feedback: 不正解、関数は２度呼び出されます。
        - text: ２つの正方形が重なった絵をかく。
          feedback: 不正解、正方形の辺の長さは100ピクセルで、次の正方形をかく前に 175ピクセル ジャンプしています。
        - text: すき間を開けて 正方形を ２つかく。
          correct: true
          feedback: 正解、関数は２回呼び出されて、関数と関数の間でジャンプして移動しています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      courseE_prediction_artistFunction1_dani:
        answers:
        - text: 何もかかれない。関数が呼び出されない。
          feedback: 不正解、関数は２度呼び出されます。
        - text: 正方形を１つかく。
          feedback: 不正解、関数は２度呼び出されます。
        - text: ２つの正方形が重なった絵をかく。
          feedback: 不正解、正方形の辺の長さは100ピクセルで、次の正方形をかく前に 175ピクセル ジャンプしています。
        - text: すき間を開けて 正方形を ２つかく。
          correct: true
          feedback: 正解、関数は２回呼び出されて、関数と関数の間でジャンプして移動しています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      courseE_swim_fish_behavior_predict1_2021:
        answers:
        - text: なにも起こらない。
          feedback: ふせいかい。タンブルウィードはころがり始めます
        - text: タンブルウィードは画面の上まで浮かびあがる
          feedback: ふせいかい。タンブルウィードはころがり始めます
        - text: タンブルウィードはころがり始める
          correct: true
          feedback: せいかい！
        - text: タンブルウィードはチカチカし始める
          feedback: ふせいかい。タンブルウィードはころがり始めます
        questions:
        - text: "”実行（じっこう）”をクリックしたら、どうなるかな？"
      courseF_EOC_2021:
        display_name: コース最後のプロジェクト
        description: コースFのさいごのレッスンになりました！ 作成するプロジェクトを選びましょう。
      courseF_EOC_examples_2021:
        display_name: コース最後のプロジェクト
        description: コースFのさいごのレッスンになりました！ 作成するプロジェクトを選びましょう。
      courseF_EOC_samples_2021:
        display_name: コース最後のプロジェクト
        description: これで、さいごのプロジェクトになります。始める前に、サンプルのプロジェクトを見てみましょう。
      courseF_events_predict_multi:
        answers:
        - text: スプライトは右に回るだけ。
          feedback: ふせいかい。スプライトは東に進みもします。
        - text: スプライトは東に進むだけ。
          feedback: ふせいかい。スプライトは回転をとめないので、どちらもどうじにおこなわれます。
        - text: スプライトは回りながら進む。
          correct: true
          feedback: 'せいかい！ '
        - text: スプライトはまず回って、そのあと、進む。
          feedback: ふせいかい。スプライトロボでは、つなげられたブロックは、そのまえのブロックのすぐあとに起きるので、両方の動きはどうじにはっせいします。
        questions:
        - text: コードを読んで、予測しましょう。
      courseF_labels_predict_multi:
        answers:
        - text: "「ピザを1枚、すぐお持ちします！」"
          feedback: ふせいかい。変数ラベルが一致していません。
        - text: "「1皿、すぐお持ちします！」"
          feedback: ふせいかい。変数ラベルがプリントされていません。
        - text: "「お一人分、すぐお持ちします！」"
          feedback: ふせいかい。変数ラベルがプリントされていません。
        - text: "「1つ、すごお持ちします！」"
          correct: true
          feedback: せいかい！変数ラベルが一致しています。
        - text: 何もプリントされない。
          feedback: ふせいかい。イベントとプリントブロックはまだ動いています。
        questions:
        - text: このコードは見覚えがあるかもしれませんが、じっくり読んでみましょう。 ユーザーが「ピザ」と入力すると何がプリントされますか？
      courseF_multi_artist_variables3a_predict1_2021:
        answers:
        - text: 一辺が50ピクセルの三角形をかく。
          correct: true
          feedback: せいかい！
        - text: 一辺が3ピクセルの50角形をかく。
          feedback: 不正解、変数`length`は、`くりかえし`の回数ではありません。
        - text: 50度曲がった線を3本かく
          feedback: 不正解、変数`length`は、`まがる`角度ではありません。
        - text: ユーザーにプロンプトして数字のインプットを求めます。
          feedback: "`動く 前に`の前で 変数`length`に50をセットしているので、アーティストは 一辺が 50ピクセルの三角形をかきます。"
        questions:
        - text: 変数 "length"に50をセットしました。"実行（じっこう）"をクリックしたら どうなるかな？
      courseF_multi_bee_for3_predict1_2021:
        answers:
        - text: 'ハチはすべての花からミツを集めることができる。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: 1つの花を除いて、ハチはすべての花からミツを集めることができる。
          correct: true
          feedback: せいかい！
        - text: 'ハチはすべての花からミツを1つづつ集める。 '
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        - text: みつばちは前に進んで、花の1と4から1回分のミツを集める。
          feedback: 不正解、 `回くりかえす`でハチはミツを集めるけど、4つの花からしかミツを集めません。
        markdown: |+
          うーん！  このパズルは、`まつ` を使えば かんたんにクリアすることができる！


        questions:
        - text: プログラムを実行（じっこう）したら、どうなりますか？
      courseF_sprites_predict_multi:
        answers:
        - text: どちらの飛行機も、グリッドに沿って1つのスペースを移動して、その後、止まります。
          feedback: ふせいかい。これらのスプライトには、止まるように言われるまですすみつづける「動き」があります。
        - text: どちらの飛行機も移動し始めると、止まることはありません。
          correct: true
          feedback: せいかい！ひこうきに動きはじめて、そのままつづけるように伝えます。
        - text: 片方の飛行機がまず動いて、もう片方が次に動きます。
          feedback: ふせいかい。スプライトラボのコードの、それぞれのブロックは、次のブロックのすぐあとで動きます。
        - text: 飛行機は墜落します。
          feedback: ふせいかい。ひこうきはせっしょくするような位置にはありません。
        questions:
        - text: コードを読んで、予測しましょう。
      courseF_variables_predict_multi:
        answers:
        - text: プログラムが「こんにちは、～さん！」とプリントします。
          feedback: ふせいかい。名前ブロックは、タイプしたものにとりかえられます。
        - text: プログラムが、あなたが入力した名前で歓迎してくれます。
          correct: true
          feedback: せいかい！名前ブロックの代わりに、入力したものが使われます。
        - text: スプライトのサイズが変わる。
          feedback: ふせいかい。テキストが画面にプリントされます。
        - text: コンピュータが別の質問をする。
          feedback: ふせいかい。プログラムが始まったときに、1問だけ質問されます。
        questions:
        - text: このプログラムでは、キーボードで入力して質問に答えられます。「プリント」ブロックが画面にテキストを表示します。 ここで予測してみましょう。質問に答えた後はどうなるでしょうか？
      courseF_variables_stop:
        content1: 説明
        markdown: |
          # ちょっと待って！

          ## 次に進む準備はできていますか？


          次のレベルでは、プロジェクトのコードを書き始めます。すでに計画がある人にぴったりです。

          完成した計画には、次のものが入っていなくてはなりません。

          <img src="https://images.code.org/b476ac330f2b66e44e02208fee386a56-image-1614802439867.png" style="float:left; height:70px; padding:10px"/>

          * 作っているプロジェクトの種類。 たとえば、グリーティングカード、チャットボット、ブランクスペースストーリーなどです。
          * ユーザーに尋ねる質問のリスト。
          * 画面に表示するその他のテキスト。
          * 必要なスプライト（とその動作）の説明または図。

          次に進む準備ができているかどうかわからない場合は、先生に確認してください！
      coursee_prediction_artistfunction2_2021:
        answers:
        - text: アーティストは、ちゃんと絵をかいて、パズルをクリアする。
          feedback: 不正解、くり返しの中で呼ばれているのは、関数"多角形の列をかく"ではなく 関数"多角形をかく" です。
        - text: アーティストは４つの正方形でできた まど をかく。
          correct: true
          feedback: せいかい！
        - text: アーティストは、一番上の列だけかく。
          feedback: 不正解、プログラムの中で関数"多角形の列をかく"を呼んでいません。
        - text: アーティストは、枠のなかに４つ四角形をかく。
          feedback: 不正解、くり返しのなかで関数"多角形をかく"を呼んだら90度曲がっています。
        questions:
        - text: '"実行（じっこう）"をクリックしたら、どんな絵が かかれますか？'
      csf_be_a_super_digital_citizen_2021:
        content1: 説明
        markdown: |-
          # スーパーデジタルシティズン

          ##  ネットいじめを見たときには、いじめられている人を助けてあげられるでしょう？
      csf_password_power-up_2021:
        content1: 説明
        markdown: |-
          # パスワードをパワーアップしましょう

          ## おぼえておきたいパスワードのヒント

          * おぼえやすい**フレーズ**から始めます。
          * **お父さんかお母さん**だけにパスワードを知らせます。
          * パスワードには**こじんてきな** ID情報をぜったいに使ってはいけません。
          * さいてい** 8 **文字のパスワードを作成しましょう。
          * パスワードには文字、数字、そして**記号**を使います。

          ![](https://images.code.org/bfa69295fbf33c77ecdeb79b5498d8f7-image-1584751340896.png)
      csf_putting_a_stop_to_online_meanness_2021:
        content1: 説明
        markdown: |-
          # 意地悪はやめましょう

          ## ネットで誰かに意地悪をされたらどうすればよいですか？

          そこから離れましょう。
          しんらいできる大人にそのことを伝えましょう。
          だいじょうぶだと言われたサイトをまず使いましょう。
          ネット上でも立ち止まって、よく考えましょう。

          ![](https://images.code.org/f3e4987a130b27f7b589d7829b753aac-image-1584750971069.png)
      express_EOC_2021:
        display_name: コース最後のプロジェクト
        description: コースEのさいごのレッスンになりました！ 作成するプロジェクトを選びましょう。
      grade2_multi_collector_A_predict1_2021:
        answers:
        - text: ４つ
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: ローレルは、たからものが ないところで たからものを あつめようとします。
          correct: true
          feedback: せいかい！
        - text: ローレルは すべての たからものを あつめることができる。
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        - text: このコードを使うと、ローレルはたからものを1つあつめる。
          feedback: ふせいかい。ローレルは たからものが ないところで たからものを あつめようとします。
        questions:
        - text: プログラムを 実行したら どうなりますか？
      courseF_intro_apps:
        description: "「コンピュータサイエンスの基礎」へようこそ！ ここにあるプロジェクトはすべて、スプライトラボで作成されました。 今すぐ、何ができるのか試してみましょう。このコースの終わりまでに、このような自分だけのプロジェクト…そして、さらに沢山のことができるようになります！"
        display_name: スプライトラボアプリ
        teacher_markdown: |-
          ＃選択レベルの概要
          選択レベルには、生徒が追加で完了できるレベルのメニューが用意されています。ここでは少なくとも1つのサブレベルを完了する必要がありますが、生徒（または先生）の希望に合わせて取り組むことができます。

          ここにある選択肢から、生徒はサンプルのアプリを探索できます。このアクティビティは、[レッスンプラン](.././) にあるアプリ探索ワークシートに対応するよう作られています。
      csd-post-survey-levelgroup-2018:
        title: CS発見期末アンケート
      csf_safety_in_my_online_neighborhood_2021:
        markdown: |-
          # ネットのご近所さん

          ## ネットで安全なおつきあいをするにはどうすれば良いでしょう？
      csf_digital_trails_2021:
        markdown: |-
          # デジタル証跡（しょうせき）をたどる

          ## デジタル証跡（しょうせき）には、どのような情報が含まれていてもOKでしょうか？
      courseD_EOC_examples_2021:
        description: これで、さいごのプロジェクトになります。始める前に、サンプルのプロジェクトを見てみましょう。
        display_name: サンプルのプロジェクト
      express_EOC_examples_2021:
        description: これで、さいごのプロジェクトになります。始める前に、サンプルのプロジェクトを見てみましょう。
        display_name: サンプルのプロジェクト
      SimonSays-Unplugged_2021:
        markdown: |-
          # アルゴリズムに従う

          ゲームをして、正しい結果を出すのに必要なコマンドについて考えましょう。
      PrivatePersonalInformation-Unplugged_2021:
        markdown: |-
          # プライベート情報と個人情報

          ## オンラインで共有しても良い、あなたについての情報はどのようなものですか？
      courseF_sprites_practice:
        description: ここまでよくできました！次のアクティビティを選んでください。できるだけたくさんやってみましょう。スプライトと動作を使ってれんしゅうをつづけましょう！
        display_name: スプライト練習
        teacher_markdown: |-
          # 選択レベルのまとめ
          選択レベルは、生徒が完了できるレベルのメニューを追加で提供するものです。 生徒はここで少なくとも1つのサブレベルを完了する必要がありますが、生徒（または先生）が好きなだけ練習できます。

          下にある説明を使用して、生徒が自分で選択するのを手伝ったり、完了する必要のあるサブレベルの数を設定したりできます。

          |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |さばくのシーン|フルーツのサイズを変える|船をアニメにする|さわやかな日|
          |-|-|-|-|-|
          | ***タイプ*** |**レビュー**|**Review**|**レビュー**|**レビュー**|
          | ***コンセプト***|*sprites, locations*|*スプライト、プロパティ*|*sprites, locations, behaviors*|*行動*|
      csf_safety_in_my_online_neighborhood:
        markdown: |-
          # ネットのご近所さん

          ## ネットで安全なおつきあいをするにはどうすれば良いでしょう？
      courseF_events_freeplay:
        display_name: イベント - じゆうあそび
        description: これで、学んだことを使ってプロジェクトをもっと良いものにできます！プログラムにもっとつけ足しをしたり、新しいことを始めたりしましょう！
      courseF_sprites_freeplay:
        description: ここでは、あたながすきなものを作りましょう！どんなプロジェクトを作りたいですか？
        display_name: スプライト - じゆうあそび
      courseF_text_practice:
        teacher_markdown: |-
          # 選択レベルのまとめ
          選択レベルは、生徒が完了できるレベルのメニューを追加で提供するものです。 生徒はここで少なくとも1つのサブレベルを完了する必要がありますが、生徒（または先生）が好きなだけ練習できます。

          下にある説明を使用して、生徒が自分で選択するのを手伝ったり、完了する必要のあるサブレベルの数を設定したりできます。

          |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |テキスト用スピーチの利用|プロンプト用テキスト|ロボットに名前をつけましょう！|変数ラベル|ビッグテキスト|色のプロンプト|ゼロから始める|
          |-|-|-|-|-|-|-|-|
          | ***｜*** |**レビュー**|**Debug**|**デバッグ**|**Debug**|**optionalコンテンツ**|**Optional Content**|**じゆうあそび**
          | ***コンセプト***|*print block, events*|*プロンプト、イベント*|*adding spaces*|*変数ラベルの一致*|*title screen blocks*|*色の保存* | *新しいコンテンツなし*
        display_name: テキストとプロンプトの練習
        description: ここまでよくできました！次のアクティビティを選んでください。できるだけたくさんやってみましょう。テキストとプロンプトを使って練習をつづけましょう！
      courseF_variables_projects:
        teacher_markdown: |-
          # 選択レベルのまとめ
          選択レベルは、生徒が完了できるレベルのメニューを追加で提供するものです。 生徒はここで少なくとも1つのサブレベルを完了する必要がありますが、同じプロジェクトの**2**つのレベルを完了することを推奨します。

          ここにある選択肢のナビゲート方法を生徒に理解してもらうため、かなり明確な指示が必要な場合があります。プロジェクトの選択肢ごとに、ここには2つのサブレベルがあります。まず、「パート1」と記されたレベルの1つを選んでもらいます。そのレベルを終えたら、ここに戻って、*同じ*プロジェクトの「パート2」を選んでもらいます。各選択肢の最初のレベルで、生徒がプロジェクトの基本的な要素を作ったら、フィードバックを提供します。2つ目のレベルは、生徒が好きなようにコードに変更を加えることを狙いとした「じゆうあそび」です。
        description: グリーティングカード、チャットボット、またはブランクスペースストーリーのいずれかを作成します。プロジェクトの「パート1」がもう終わっていれば、「パート2」に進んでください。
        display_name: プロジェクトを選択する
      csd-post-survey-2017-levelgroup-2018-2nd-semester:
        title: CS発見期末アンケート
      courseF_artist_practice:
        display_name: アーティスト練習
        description: ここまでよくできました！次のアクティビティを選んでください。できるだけたくさんやってみましょう。ループとアーティストを使って練習をつづけましょう！
      courseF_beeFor_practice:
        display_name: みつばちの練習
        description: ここまでよくできました！次のアクティビティを選んでください。できるだけたくさんやってみましょう。ループとみつばちを使って練習をつづけましょう！
      courseF_beeVar_practice:
        display_name: みつばちの練習
        description: ここまでよくできました！次のアクティビティを選んでください。できるだけたくさんやってみましょう。変数とみつばちを使って練習をつづけましょう！
      courseF_bee_practice:
        display_name: みつばちの練習
        description: ここまでよくできました！次のアクティビティを選んでください。できるだけたくさんやってみましょう。ループとみつばちを使って練習をつづけましょう！
      courseF_events_practice:
        description: ここまでよくできました！次のアクティビティを選んでください。できるだけたくさんやってみましょう。スプライトと動きを使って練習をつづけましょう！
        display_name: イベント練習
        teacher_markdown: |
          # 選択レベルのまとめ
          選択レベルは、生徒が完了できるレベルのメニューを追加で提供するものです。 生徒はここで少なくとも1つのサブレベルを完了する必要がありますが、生徒（または先生）が好きなだけ練習できます。

          下にある説明を使用して、生徒が自分で選択するのを手伝ったり、完了する必要のあるサブレベルの数を設定したりできます。

          |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |発射!|飛ぶ練習|一回転|小さくしたり大きくしたり|魚をぷっくり！|ペンギンはいどう中|
          |-|-|-|-|-|-|-|
          | ***タイプ*** |**レビュー**|**Debug**|**デバッグ**|**Debug**|**オプショナルコンテンツ**|**オプショナルコンテンツ**
          | ***コンセプト***|*events, behaviors*|*イベント、行動*|*events, behaviors*|*イベント、行動*|*when/while events*|*とき/あいだのイベント*|
      EnvelopeVariables-Unplugged_2021_2:
        markdown: |-
          # ストーリーじゆうちょう

          このレッスンでは、ストーリーじゆうちょうのストーリーの使い方と書き方を学びます。このビデオを見て、これがコンピュータサイエンスにどうつながるか学びましょう。
      PowerOfWords-Unplugged_2021:
        markdown: |-
          ＃言葉の力

          ## 誰かがインターネット上で意地悪な、または人を傷つけるような言葉を使っていたら、あなたはどうしたらよいでしょう？
      courseF_variables_samples:
        description: グリーティングカード、チャットボット、またはブランクスペースストーリーのいずれかを作成します。始める前に、下のサンプルプロジェクトをじっくり見て、作りたいものを決めましょう。自分だけのプログラムを計画する準備ができたら、「おわり」を押します。
        display_name: 探索 - プログラムのサンプル
        teacher_markdown: |+
          ＃選択レベルの概要
          選択レベルには、生徒が追加で完了できるレベルのメニューが用意されています。ここでは少なくとも1つのサブレベルを完了する必要がありますが、生徒（または先生）の希望に合わせて取り組むことができます。

          生徒は、作成するものを決める前に、これらのプロジェクトをじっくりと検討する必要があります。クラス全体で一緒に見たり、生徒に自分で探求させたりすることができます。

      OPD-K5 About_copy:
        markdown: |
          #「教師向けコンピュータサイエンス入門」へようこそ

          <img src="https://images.code.org/80a1fa04481359759d2b86ddca9b33a4-image-1433972662378.png" class="level-image">

          ##このオンラインコースについて
          このオンラインコースでは、Code.org「コンピュータサイエンス入門」のカリキュラムと教師向けのリソースの紹介を目的としています。文字で読んだり、ビデオを見たり、インタラクティブなパズルを完成させたり、学習を振り返ったりすることで、教室でコンピュータサイエンスの基礎を教える方法について、自分なりに理解を深めることができます。

          ##このオンラインコースの対象者
          このオンラインコースは、**コンピュータサイエンスの基礎を生徒に教えることに関心のある小学校の教育関係者**を対象としています。教室で教える先生からSTEM（科学・技術・工学・数学）の先生、図書館員、その間の範疇のすべての人にまで及ぶ可能性があります。

          <a href="https://code.org/educate/csd" target="blank" rel="noopener noreferrer">中学校</a>または<a href="https://code.org/educate/csp" target="blank" rel="noopener noreferrer">高校</a>の先生で、中学校までは高校のコース指導に関心のある方は、<a href="https://code.org/educate/professional-learning/middle-high" target="blank" rel="noopener noreferrer">で、継続的な専門能力開発の機会について、さらに詳細をご覧いただくことをお勧めします</a>。

          ##このオンラインコースでは、コンピュータサイエンスを学ぶのでしょうか？
          基本的なコーディングの概念を学び、実践し、カリキュラムでそれを生徒にどう提示するか確認する機会となりますが、ここでは、大人のためのコンピュータサイエンスの包括的なイントロダクションは行っていません。コースの最後に、コンピュータサイエンスの概念をより深く理解するのに役立つその他のリソースを提供しています。

          ##このオンラインコースを受講するには、経験が必要ですか？
          コーディングまたはコンピュータサイエンス教育の経験は想定されていません。

          ##このオンラインコースにはどのくらい時間がかかりますか？
          このオンラインコースを完了するには、4〜6時間かかります。

          ##このコースのテキストのフォントサイズを変更できますか？
          このプラットフォームのテキストが小さく表示される可能性があることは承知しています。

          フォントサイズを大きくするには：
          - Macの場合は、[Command]と[+]をクリックしてください
          - Windowsの場合は、[Control]と[+]をクリックしてください

          サイズを小さくするには：
          - Macの場合は、[Command]と[-]をクリックしてください
          - Windowsの場合は、[Control]と[-]をクリックしてください
      OPD-K5 CS Courses_copy:
        markdown: "＃Code.org入門\n\n\n##ステップ1：コースの選択\n就学前の児童から高校生までのための全コースが** <a href=\"https://studio.code.org/courses\"
          target=\"blank\" rel=\"noopener noreferrer\">コースカタログ</a>にリストに挙げられています。すべてのコースは無料でご利用いただけます。学内の同僚と話し合って、さまざまな科目にコースのカリキュラムを統合する方法を決定しましょう。\n\n<table
          style=\"width:100%; border-style:none;\">\n  <tr>\n    <th style=\"background-color:#ff9900;
          text-align:center; border-style:none; font-weight:bold;\"\"\">\n      <b>コースA</b><br/>\n
          \     <i>幼稚園</i>\n    </th>\n    <th style=\"background-color:#f1c232; text-align:center;
          border-style:none;\"\"\">\n        コースB<br/>\n        <i>1年生</i>\n    </th>\n
          \   <th style=\"background-color:#b8bf0d; text-align:center; border-style:none;\"\"\">\n
          \       コースC<br/>\n        <i>2年生</i>\n    </th>\n    <th style=\"background-color:#53bac2;
          text-align:center; border-style:none;\"\"\">\n        コースD<br/>\n        <i>3年生</i>\n
          \   </th>\n    <th style=\"background-color:#0094ca; text-align:center;
          border-style:none;\"\"\">\n        コースE<br/>\n        <i>4年生</i>\n    </th>\n
          \   <th style=\"background-color:#7664a0; text-align:center; border-style:none;\"\"\">\n
          \       コースF<br/>\n        <i>5年生</i>\n    </th>\n  </tr>\n  <tr>\n    <td
          style=\"background-color:#f9cb9c; color:black; border-style:none; vertical-align:
          text-top;\"\">12レッスン、12時間以内で完了</td>\n    <td style=\"background-color:#ffe599;
          color:black; border-style:none; vertical-align: text-top;\"\">12レッスン、12時間以内で完了</td>\n
          \   <td style=\"background-color:#d2da0e; color:black; border-style:none;
          vertical-align: text-top;\"\">18レッスン、18時間以内で完了</td>\n    <td style=\"background-color:#68ebf5;
          color:black; border-style:none; vertical-align: text-top;\"\">18レッスン、18時間以内で完了</td>\n
          \   <td style=\"background-color:#9ed7ed; color:black; border-style:none;
          vertical-align: text-top;\"\">18レッスン、18～20時間以内で完了</td>\n    <td style=\"background-color:#c9c1e9;
          color:black; border-style:none; vertical-align: text-top;\"\">18レッスン、20~22時間以内で完了</td>\n
          \ </tr>\n  <tr>\n    <td colspan=\"6\" style=\"text-align:center;width:96%;background-color:#d9d9d9;color:black;
          border-style:none;\">概念</td>\n  </tr>\n  <tr>\n    <td style=\"background-color:#f9cb9c;
          color:black; border-style:none; vertical-align: text-top;\"\">\n      <ul
          style=\"font-style:italic;\">\n        <li>デジタルシティズンシップ</li>\n        <li>シークエンス</li>\n
          \       <li>ループ</li>\n        <li>イベント</li>\n      </ul>\n    </td>\n    <td
          style=\"background-color:#ffe599; color:black; border-style:none; vertical-align:
          text-top;\"\">\n      <ul style=\"font-style:italic;\">\n        <li>デジタルシティズンシップ</li>\n
          \       <li>シークエンス</li>\n        <li>ループ</li>\n        <li>コンピューティングの影響</li>\n
          \       <li>イベント</li>\n      </ul>\n    </td>\n    <td style=\"background-color:#d2da0e;
          color:black; border-style:none; vertical-align: text-top;\"\">\n      <ul
          style=\"font-style:italic;\">\n         <li>デジタルシティズンシップ</li>\n        <li>シークエンス</li>\n
          \       <li>バイナリ</li>\n        <li>ループ</li>\n        <li>イベント</li>\n        <li>データ</li>\n
          \     </ul>\n    </td>\n    <td style=\"background-color:#68ebf5; color:black;
          border-style:none; vertical-align: text-top;\"\">\n      <ul style=\"font-style:italic;\">\n
          \       <li>シークエンス</li>\n        <li>イベント</li>\n        <li>ループ</li>\n        <li>条件文</li>\n
          \       <li>バイナリ</li>\n        <li>デジタルシティズンシップ</li>\n      </ul>\n    </td>\n
          \   <td style=\"background-color:#9ed7ed; color:black; border-style:none;
          vertical-align: text-top;\"\">\n      <ul style=\"font-style:italic;\">\n
          \       <li>スプライト</li>\n        <li>デジタルシティズンコンピューティングの影響</li>\n        <li>入れ子のループ</li>\n
          \       <li>関数</li>\n      </ul>\n    </td>\n    <td style=\"background-color:#c9c1e9;
          color:black; border-style:none; vertical-align: text-top;\"\">\n      <ul
          style=\"font-style:italic;\">\n        <li>変数</li>\n        <li>データ</li>\n
          \       <li>Forループ</li>\n        <li>インターネット</li>\n        <li>スプライト</li>\n
          \       <li>デジタル シティズンシップ</li>\n        </ul>\n    </td>\n  <tr>\n  \t<td
          style=\"background-color:#f9cb9c\">\n     <a href=\"https://studio.code.org/s/coursea\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>コースを見る</button><br/>\n
          \     </a>\n      <a href=\"https://curriculum.code.org/csf/coursea\" target=\"_blank\"
          style='text-decoration:none'>\n          <button>レッスンプラン</button>\n      </a>\n
          \   </td>\n    <td style=\"background-color:#ffe599\">\n    <a href=\"https://studio.code.org/s/courseb\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>コースを見る</button><br/>\n
          \     </a>\n      <a href=\"https://curriculum.code.org/csf/courseb\" target=\"_blank\"
          style='text-decoration:none'>\n        <button>レッスンプラン</button>\n      </a>\n
          \   </td>   \n   \t<td style=\"background-color:#d2da0e\">\n    <a href=\"https://studio.code.org/s/coursec\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>コースを見る</button><br/>\n
          \     </a>\n      <a href=\"https://curriculum.code.org/csf/coursec\" target=\"_blank\"
          style='text-decoration:none'>\n        <button>レッスンプラン</button>\n      </a>\n
          \   </td>   \n    <td style=\"background-color:#68ebf5\">\n    <a href=\"https://studio.code.org/s/coursed\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>コースを見る</button><br/>\n
          \     </a>\n      <a href=\"https://curriculum.code.org/csf/coursed\" target=\"_blank\"
          style='text-decoration:none'>\n        <button>レッスンプラン</button>\n      </a>\n
          \   </td>  \n    <td style=\"background-color:#9ed7ed\">\n    <a href=\"https://studio.code.org/s/coursee\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>コースを見る</button><br/>\n
          \     </a>\n      <a href=\"https://curriculum.code.org/csf/coursee\" target=\"_blank\"
          style='text-decoration:none'>\n        <button>レッスンプラン</button>\n      </a>\n
          \   </td>  \n     <td style=\"background-color:#c9c1e9\">\n    <a href=\"https://studio.code.org/s/coursee\"
          target=\"_blank\" style='text-decoration:none'>\n        <button>コースを見る</button><br/>\n
          \     </a>\n      <a href=\"https://curriculum.code.org/csf/coursee\" target=\"_blank\"
          style='text-decoration:none'>\n        <button>レッスンプラン</button>\n      </a>\n
          \   </td>  \n  </tr>\n</table>\n<br/>\n\n\n***\n##ステップ2：クラスルームセクションを設定する\nクラスルームセクションを設定して、生徒の進捗状況を確認したり、生徒のログインカードを印刷したり、アカウントを管理したり、コース終了時に持ち帰ることができる証明書を印刷したりします。
          **このリンクをクリックして**<a href=\"https://code.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=56d32934-3f67-48db-98db-e66e9152df7b\"
          target=\"blank\" rel=\"noopener noreferrer\">短いビデオ</a> **で、Code.orgの初めてのコンピュータサイエンスクラスを設定する方法をご覧ください。
          **<a href=\"https://support.code.org/hc/en-us/articles/115000488132-Creating-a-classroom-section\"
          target=\"blank\" rel=\"noopener noreferrer\">このサポート記事</a>**にも手順が記載されています。\n\n***\n##ステップ3：コースをセクションに割り当てる\n教えるコースをクリックしてください。
          次に、「コースの割り当て」をクリックして、そのコースをセクションの1つに割り当てます。\n***\n##ステップ4：教え始めましょう！\n必要となるのは、コンピュータサイエンスの概念を教室に取り入れるための1つのレッスンです。生徒がコンピュータサイエンスに熱心に取り組むのを確認したら、毎日のレッスンプランで生徒を導き、コンピュータなしで行えるアンプラグドアクティビティに進み、フォーラムで他の先生たちとつながりましょう。"
      OPD-K5 CS Tips_copy:
        markdown: |+
          ＃このオンラインコースの利用について

          このコースを完了すると、「コンピュータサイエンス入門」で提供されているすべての事柄に慣れ親しむことができます。

          オンラインコースを進めていく際に難しいと感じた場合には、以下の情報を参考にすると、このスペースを活用して専門的な学習を進められます。いつでもこのレベルに戻ってください！

          ---

          ##概念グループ
          このオンラインコースのメインページを以下に示しています。このページは、4つの**概念グループ**に分かれています。これは、「コンピュータサイエンス入門」コースの展開に沿っています。

          ![](https://images.code.org/5227343bf74975b4678e42b50fdcd085-image-1573235429162.50.02 AM.png)
          ##レッスン
          各セクションは、さまざまなトピックやアイデアを示す**レッスン**で構成されています。

          ##レベル（バブル）
          各ステージは、バブルのような形状のレベルで構成されています。**ひし形**は、このレベルに、単一のビデオ、読み物、あるいは質問が含まれていることを指しています。**円**にはオンラインパズルが用意されている場合があり、これを完了すると、コーディングの概念を練習できます。その他の**円**は、無料の応答型質問で、回答を送信して、後日、再検討できます。バブルの色は、進捗状況に応じて変化します。 このオンライン専門能力開発コースでは、次の種類のバブルが表示されます：
          <br/>

          <img src ="https://images.code.org/8b3fcfcf0120bed0dc34c014f1f81071-image-1548976153188.png" />

          <br/>


      OPD-K5 Outline_copy:
        markdown: |-
          ＃コース概要

          コースは4つの**概念グループに分かれており、それぞれにレッスンが入っています。 レッスンはさまざまな「レベル」で構成されており、これを生徒や教師は口語的にバブル、ステージ、またはパズルと呼んでいます。コース全体を完了する場合に学べる内容の概要は、次のとおりです。

          ##入門

          ###レッスン1：「教師向けコンピュータサイエンス入門」へようこそ（15分）
          - コースの詳細を確認します
          - コンピュータサイエンスとは何かを理解し、「コーディング」とコンピュータサイエンスを区別します
          - コンピュータサイエンスを教え、学ぶことの利点を明確にします
          - このコースへの参加を計画します

          ###レッスン2：「コンピュータサイエンス入門コース」について知る（15〜20分）
          - 「コンピュータサイエンス入門コース」の内容と構成についての理解を深めます
          - どのコースが生徒に最も適しているかを特定します
          - 「コンピュータサイエンス入門」における教師の重要性を明確にします
          - さまざまな種類の「コンピュータサイエンス入門」のレッスンを理解します

          ##基本的なコーディングの概念と教育実践

          ###レッスン3：シークエンス（15〜45分）
          -「プログラム」と「アルゴリズム」を定義します
          - 「コンピュータサイエンス入門」コースでシーケンスが導入されている場所を探します
          - Code.orgビジュアルプログラミングエンジンを使用して、簡単なプログラムを作成します
          - シーケンスに関するアンプラグドレッスンを探索して、教室での適用について考察します
          - レッスンプランの利用方法を考えます

          ###レッスン4：ループ（15〜45分）
          -「ループ」を定義し、その重要性を説明します
          - 「コンピュータサイエンス入門」コースでループが紹介されている場所を明確にします
          - ループに関するアンプラグドレッスンを探索して、教室での適用について考察します
          - 単純なループのコーディングを練習します
          - ペアプログラミングの利点を理解します

          ###レッスン5：イベント（15〜45分）
          -「イベント」を定義し、その重要性を説明します
          -「コンピュータサイエンス入門」コースでイベントが紹介されている場所を探します
          - イベントに関するアンプラグドレッスンを探索して、教室での適用について考察します
          - 簡単なイベントのコーディングを練習します
          - デバッグのプロセスを理解します

          ###レッスン6：条件文（15〜45分）
          -「条件文」を定義し、その重要性を説明します
          -「コンピュータサイエンス入門」コースで条件文が紹介されている場所を探します
          - 条件文に関するアンプラグドレッスンを探索して、教室での適用について考察します
          - 単純な条件文のコーディングを練習します
          - ジャーナリングの教育実践を理解します

          ###レッスン7：コース最終プロジェクト（15〜45分）
          - コース最終プロジェクトのメリットを理解します
          -「コンピュータサイエンス入門」コースでコース最終プロジェクトが紹介されている場所を探します
          - プロジェクトのコーディングを練習します

          ## [Optional] より深く探る：コースEとF
          コースEまたはFを教えている場合は、このセクションを完了することをお勧めします。このセクションでは、これらのコースでカバーされている高学年向けのより難しい概念のいくつかを詳しく説明しています。

          ###レッスン8：関数（30〜45分）
          - コースEまたはFを生徒に教えるかどうかを決めます
          -「関数」を定義し、その重要性を説明します
          -「コンピュータサイエンス入門」コースで関数が紹介されている場所を探します
          - 関数に関するアンプラグドレッスンを探索して、教室での適用について考察します
          - 単純な関数のコーディングを練習します

          ###レッスン9：変数（30〜45分）
          -「変数」を定義し、その重要性を説明します
          -「コンピュータサイエンス入門」コースで変数が紹介されている場所を探します
          - 変数に関するアンプラグドレッスンを探索して、教室での適用について考察します
          - 変数を使用したコーディングを練習します

          ###レッスン10：Forループ（30〜45分）
          -「forループ」を定義し、その重要性を説明します
          - コンピュータサイエンス入門」コースで「forループ」が導入されている場所を探します
          - 「forループ」に関するアンプラグドレッスンを探索して、教室での適用について考察します
          - 「forループ」を使用したコーディングを練習します

          ###レッスン11：スプライトラボ（15〜45分）
          -「スプライト」と「動き」を定義します
          - コンピュータサイエンス入門」コースでスプライトと動きが導入されている場所を探します
          - コーディング環境のスプライトラボを探索します

          ## 次のステップ

          ###レッスン12：リフレクションの確認（15分）
          - これまでのコース全体で行ったリフレクションを確認します

          ###レッスン13：次のステップ（15分）
          - 教師向けリソースを探索します
          - 学習を継続するために実行できる次のステップを計画します
          - コンピュータサイエンス教育に関心のある教育者仲間のグローバルなコミュニティと繋がります
          - このコースで学んだことや感想を共有します

          > **注**：以上が、学習計画を立てるのに役立つ推奨時間です。事前の知識、興味、能力により、特定の段階で費やす時間を調整することが望まれますので、その点にご留意ください。このコースは、完全に自分のペースで進めることが可能です。いつでもコースを離れたり、コースに戻ったり、任意のステージやレベルを再訪問したりすることができます。
      OPD-K5 Pair_copy:
        markdown: |+
          ＃指導実践：ペアプログラミング

          多くの教育者が用いる大切な教室管理戦略の1つが、戦略的なグループ分けです。Code.orgでは、トップテクノロジー企業の実際のオフィスで使用されている戦略的なグループ分け戦略のペアプログラミングを試すことを勧めています。

          > **ペアプログラミング**とは、2人の生徒が1台のコンピューターを使用して一緒にプログラムを作成することです。

          リサーチでは、ペアプログラミングに次のような効果を認めています。

          - ペアを組まないプログラムと比較して、より質の高い生徒向けのプログラムにつながります
          - 女子生徒と男子生徒の間のいわゆる「自信のギャップ」を減らし、全生徒のプログラミングへの自信を高めます

          全米女性情報技術センター（NCWIT）が<a href="http://www.ncwit.org/sites/default/files/resources/pairprogramming_retainingwomencollaborativelearning_practice.pdf" target="blank" rel="noopener noreferrer">ペアプログラミングの利点に関する優れたリソース</a>を揃えています。

          このビデオを見て、ペアプログラミングがどのように機能するかを理解し、それが学習をどう強化するか、生徒の生の声を聞きましょう。

          <a href="https://www.youtube.com/watch?v=vgkahOzFH2Q" target="blank" rel="noopener noreferrer">![](https://images.code.org/2c721ff31fbd06f527d99965d3460fa8-image-1571172758005.52.13 PM.png)</a>

          [ビデオを見ることができませんか？ ここをクリックしてください](http://videos.code.org/2014/C1-pair-programming.mp4)
          <br/><br/>
          ペアプログラミングは生徒にとって有益であるだけでなく、プロのコンピュータプログラマーでも実践するものです。このビデオを見て、ペアプログラミングを生徒に紹介する方法を学びましょう。

          <a href="https://www.youtube.com/watch?v=sxToW3ixrwo" target="blank" rel="noopener noreferrer">![](https://images.code.org/01da36dbe56da7986c3652991d4828e8-image-1571172869229.54.16 PM.png)</a>

          [ビデオを見ることができませんか？ ここをクリックしてください]
          （https://videos.code.org/levelbuilder/06pairprogramming_small-mp4.mp4）
          <br/>


      OPD-K5 Participation_copy:
        markdown: |
          ＃参加の計画

          開始する前に、オンラインの自習型環境における学習のニーズ、目標、および、これまでの自分の学習経験について、少し時間を取って考えましょう。特に、これが初めてのオンラインコースの場合はそうしてください。

          ##事前アンケートに答える
          私たちは、この専門能力開発から可能な限り多くのことを引き出していただきたいと考えています。そのために、<a href="https://form.jotform.com/93175711692159?user_id=<user_id/>" target="blank" rel="noopener noreferrer">この短い事前アンケート</a>にお答えください。アンケートでは、このコースの目標について考えていただきます。また、あなたについて、そして、私たちがどのようにサポートできるか少し教えてください。

          <a class="btn btn-large btn-primary" href="https://form.jotform.com/93175711692159?user_id=<user_id/>" target="blank" rel="noopener noreferrer">事前アンケートに答える</a>

          ##自分のペースで行う

          自分のペースで進められるこのオンラインコースは、あなたが主体となって、自分の学習をコントロールできるように設計されています。**十分に時間を取って、このコースを自分のペースで進めてください。各ステージに費やす推奨時間が示されています。**特定のステージで費やす時間が長かったり短かったりすると思った場合でも、心配する必要はありません。中心目標としているのは、楽しみながら基本を学び、どのようなものであれ、ご自分に最適な方法で、学んだことを教室で適用していただくことです。

          ##必要なときにヘルプを求める

          コース中に行き詰まった場合はいつでも、<a href="http://support.code.org" target="blank" rel="noopener noreferrer">support.code.org</a>に行って、<a href="https://forum.code.org/" target="blank" rel="noopener noreferrer">コミュニティフォーラム</a>をチェックして下さい。おそらく、ここであなたの疑問に対する答えが見つかるでしょう。答えが見つからない場合や、まだ困ったことがある場合は、<a href="mailto:support@code.org" target="blank" rel="noopener noreferrer">support@code.org</a>までメールでご連絡ください。Code.orgのスタッフが出来る限り迅速にお答えします。

          サポートを得るもう1つの方法は、パートナーや同僚のグループと一緒に、このオンラインコースを受講することです！

          ##自分に合った学習体験を見つける

          最後に、オンライン学習は誰もにぴったりというわけではありません。このコースには、インストラクターがおらず、同僚とリアルタイムでコミュニケーションをとるビルトインの仕組みもありません。1対1の対応が必要な場合、またはコラボレーションやエンゲージメントの機会が多い、実際の教室でのほうがより学習できると分かっている場合は、<a href="http://code.org/professional-development-workshops" target="blank" rel="noopener noreferrer">対面による専門能力開発の機会</a>の1つをご利用ください。
      OPD-K5 Stage2Go_copy:
        markdown: |
          #振り返り

          <img src="https://images.code.org/14c402555ec4a61bf86f8ce9e9f61667-image-1571692551306.jpg" class="level-image">

          ##一時停止して振り返る
          ここまで、このコースを通じて、コンピュータサイエンスとは何か、なぜそれが重要なのか、そして、「コンピュータサイエンス入門」が小学生にコンピュータサイエンスの基本概念を教えるためにどのような構成になっているのかを理解していただければ幸いです。 ここで少し時間を取って、このコースからこれまでに学んだと感じていることを振り返り、疑問があれば、その箇所にに戻りましょう。

          いつでも<a href="https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview" target="blank" rel="noopener noreferrer">コンピュータサイエンス入門カリキュラムガイド</a>を参照して、さらなる情報をご覧ください。

          ##覚えておきたいこと
          このコースを進める際には、次の点に注意してください。
          - 他の分野と同様、コンピュータサイエンスの習得への道は無限です。初心者からベテランまで、**誰もが学ぶべきことがあります。**
          - プログラミングは、学習に戻るたびに、より快適なものになります。**初回でエキスパートになれる人はいません。**
          - 継続する以外に方法はありません。プログラミング自体にも**プログラミングの学習にも時間がかかりますが、誰でもできるようになります！**

          <br/>

          > **重要なポイント：**次のいくつかのレッスンでの目標は、コンピューターサイエンティストになることではなく、ワクワクしながら知識を生徒と共有するためのコア概念に十分に慣れることです。
      OPD-K5 Stage3Start_copy:
        markdown: |-
          # 概要：シークエンス

          <img src="https://images.code.org/06b4f5c946f2a47176706352d9dbbb56-image-1434152393531.JPG" width="450px" style="border-radius:10px; float:right; margin: 0 0 40px 40px;">

          次のレベルでは、アンプラグドレッスンやオンラインパズルを通じて、コーディングの概念について学びます。パズルを完成させるには、ブロックリーコードブロックを使用してコードを書く必要があります。また、中心となる指導実践についても学びます。

          ##コーディングの概念：シーケンス
          -「アルゴリズム」と「プログラム」を定義できるようになります

          ##指導実践：レッスンプランの使用
          - アンプラグドとプラグドのレッスンプランを利用することの重要性を理解します
          - 「レッスン実施計画ガイド」を見て練習する機会があります
      OPD-K5 Stage4Go_copy:
        markdown: |-
          ＃アンプラグドレッスン：ルーピーをゲット

          > **ループ**とは、何かを何度も繰り返すアクションです。
          ****

          ## **1. コースBの「<a href="https://curriculum.code.org/csf-19/courseb/6/" target="blank" rel="noopener noreferrer">ルーピーをゲット</a>」レッスンプランを確認します。**
          コースBは1年生を対象としています。ループは他のコースでも登場します。これらのレッスンの例は、このページの下部にあります。

          ## **2. 「生徒用ビデオ：ルーピーをゲット」を視聴します（レッスンプランにあります）**
          これは、ループの概念を紹介し、アンプラグドレッスンを開始する際に役立つ生徒用のビデオです。

          ***
          <a href="https://curriculum.code.org/csf-19/courseb/6/" target="blank" rel="noopener noreferrer">![](https://images.code.org/74f963b452dbba7eb260d6b9e1fa2b4c-image-1573079606451.33.05 PM.png)</a>
      OPD-K5 Stage4Start_copy:
        markdown: |-
          # ループの概要

          <img src="https://images.code.org/ec2f0877ef2c14cf64d611f47a11daa7-image-1573236152060.jpg" class="level-image">

          ##コーディングの概念
          - 単純なループのコーディングを練習します

          ##指導実践：ペアプログラミング
          - ペアプログラミングの利点と、それが実際の世界でどのように使用されているかを理解します
      OPD-K5 Stage5Go_copy:
        markdown: |+
          ＃アンプラグドレッスン：トランプで学ぶ条件文

          > **条件文**とは「If」ステートメント（文）のことです。

          ***

          ## **1. コースDの「<a href="https://curriculum.code.org/csf-19/coursed/10/" target="blank" rel="noopener noreferrer">トランプで学ぶ条件文</a>」のレッスンプランを確認します。**コースDは3年生を対象としています。条件文は、コースA、B、またはCでは触れられていません。
          <br/>

          ## **2.  「生徒用ビデオ：トランプで学ぶ条件」を視聴します（レッスンプランにあります）** <br/>
          これは、条件文の概念を紹介し、アンプラグドレッスンを開始する際に役立つ生徒用のビデオです。

          ## **3. ある教師がこのレッスン「トランプで学ぶ条件文」（レッスンプランにあります）を手本とする様子を視聴します。** <br/>
          このビデオは、このレッスンの実行方法に関するヒントを求める先生へのサポートを目的としています。

          ***
          <a href="https://curriculum.code.org/csf-19/coursed/10/" target="blank" rel="noopener noreferrer">![](https://images.code.org/d4959eca61f272b9416ff4e65a259bd2-image-1573080208870.43.14 PM.png)</a>

      OPD-K5 Stage5Start_copy:
        markdown: |
          # 条件文の概要

          <img src="https://images.code.org/d2c2e06ce0bef52ae173a1de35b92af7-image-1470945682161.png" width="450px"  style="border-radius:10px; float:right; margin: 0 0 40px 40px;"/>

          ここまで、いくつかのプログラムを作成し、効率を上げるためにループを追加し、プログラムをインタラクティブにするためにイベントを追加しました。このステージでは**条件文**（ifステートメント）について説明して、プログラムにロジックを追加することにします。

          ## コーディングの概念
          - 単純な条件文（ifステートメント）のコーディングの練習

          ## 指導実践：ジャーナリング
          - ジャーナルプロンプトを使用して、生徒が学んだことを検討し、振り返り、さらに問題を解決するのを支援します
      OPD-K5 Stage6Go_copy:
        markdown: |+
          ＃アンプラグドレッスン：ソングライティング

          > **関数**とは何度も何度も呼び出すことができるコードの一部のことです。

          プログラマーは常にコードをより効率的にする方法を探しています。そのための1つの方法として、コードのセグメントを再利用できる**関数**を使用する方法があります。

          ## **1. コースEの「<a href="https://curriculum.code.org/csf-19/coursee/14/" target="blank" rel="noopener noreferrer">関数：ソングライティング</a>」のレッスンプランを確認します。
          コースEは4年生を対象としています。関数は、コースA～Dでは触れられていません。
          <br/>

          ## **2.  「生徒用ビデオ 関数：ソングライティング」を視聴します（レッスンプランにあります）** <br/>
          これは、関数の概念を紹介し、アンプラグドレッスンを開始する際に役立つ生徒用のビデオです。

          ## **3. ある教師がこのレッスン「関数：ソングライティング」（レッスンプランにあります）を手本とする様子を視聴します。** <br/>
          このビデオは、このレッスンの実行方法に関するヒントを求める先生へのサポートを目的としています。

          ***
          <a href="https://curriculum.code.org/csf-19/coursee/14/" target="blank" rel="noopener noreferrer">![](https://images.code.org/c961585a0e79fc2934530d251dd84f53-image-1573080971047.55.58 PM.png)</a>

      OPD-K5 Stage6Start_copy:
        markdown: |-
          # 関数の概要

          <img src="https://images.code.org/6ac5cc9f26b87a62b0558947d4cfd457-image-1501267730981.jpg" width="450px" style="border-radius:10px; float:right; margin: 0 0 40px 40px;">

          ## コーディングの概要：関数
          - 単純な関数のコーディングを練習します
      OPD-K5 Stage7Go_copy:
        markdown: |-
          ＃アンプラグドレッスン：ビッグイベント

          > **イベント**とは、何かが起こるのを「聞いて」からアクションを実行するようにコンピュータに指示するコードの行です。たとえば、ウェブページでは、マウスでナビゲーションバーをロールオーバーすると、ドロップダウンメニューが表示されることがよくあります。「マウスロールオーバー」は、アクションをトリガーするイベントです。

          ***
          ## **1. コースCの「<a href="https://curriculum.code.org/csf-19/coursec/14/" target="blank" rel="noopener noreferrer">ビッグイベント</a>」のレッスンプランを確認します。**
          <br/>
          コースCは、2年生を対象としています。イベントは、AからFまでのすべてのコンピュータサイエンス入門コースで出てきます。
          <br/><br/>

          ## **2. 「生徒用ビデオ：イベント」を視聴します（レッスンプランにあります）**
          これは、イベントの概念を紹介し、アンプラグドレッスンを開始する際に役立つ生徒用のビデオです。

          ***
          <a href="https://curriculum.code.org/csf-19/coursec/14/" target="blank" rel="noopener noreferrer">![](https://images.code.org/37ab92bffc396c3b60f83123b44a0552-image-1573080011247.39.43 PM.png)</a>
      OPD-K5 Stage7Start_copy:
        markdown: |-
          # イベントの概要

          <img src="https://images.code.org/319df539d56b2795d659a56e9334a5fb-image-1434397946590.JPG" width="450px" style="border-radius: 10px; float: right; margin: 0 0 40px 40px;">

          ##コーディングの概念：イベント
          - プログラムをインタラクティブにします

          ##指導実践：デバッグ
          - アルゴリズムまたはプログラムの問題を見つけて修正します
      OPD-K5 Welcome 2_copy:
        markdown: |
          # コンピュータサイエンス入門コース

          Code.orgの専門能力開発が目標としているのは、あなたのような先生が、コンピュータサイエンスを授業に統合し、教師として生徒の成長をサポートする準備を整えられるようにすることです。このオンラインコースを完了すると、教室で以下のCode.orgによるコンピュータサイエンス入門コースの1つ以上を教える準備が整います。

          **下の表を見て、どのコースがあなたの生徒に最も適しているか考えてください**。

          <table style="width:100%; border-style:none;">
            <tr>
              <th style="background-color:#ff9900; text-align:center; border-style:none; font-weight:bold;""">
                <b><a href="https://curriculum.code.org/csf-19/coursea/" target="blank" rel="noopener noreferrer" style="color: white">コースA</a></b><br/>
                <i>幼稚園</i>
              </th>
              <th style="background-color:#f1c232; text-align:center; border-style:none;""">
                  <a href="https://curriculum.code.org/csf-19/courseb/" target="blank" rel="noopener noreferrer" style="color: white">コースB</a><br/>
                  <i>1年生</i>
              </th>
              <th style="background-color:#b8bf0d; text-align:center; border-style:none;""">
                  <a href="https://curriculum.code.org/csf-19/coursec/" target="blank" rel="noopener noreferrer" style="color: white">コースC</a><br/>
                  <i>2年生</i>
              </th>
              <th style="background-color:#53bac2; text-align:center; border-style:none;""">
                  <a href="https://curriculum.code.org/csf-19/coursed/" target="blank" rel="noopener noreferrer" style="color: white">コースD</a><br/>
                  <i>3年生</i>
              </th>
              <th style="background-color:#0094ca; text-align:center; border-style:none;""">
                  <a href="https://curriculum.code.org/csf-19/coursee/" target="blank" rel="noopener noreferrer" style="color: white">コースE</a><br/>
                  <i>4年生</i>
              </th>
              <th style="background-color:#7664a0; text-align:center; border-style:none;""">
                  <a href="https://curriculum.code.org/csf-19/coursef/" target="blank" rel="noopener noreferrer" style="color: white">コースF</a><br/>
                  <i>5年生</i>
              </th>
            </tr>
            <tr>
              <td style="background-color:#f9cb9c; color:black; border-style:none; vertical-align: text-top;"">12レッスン、12時間以内で完了</td>
              <td style="background-color:#ffe599; color:black; border-style:none; vertical-align: text-top;"">12レッスン、12時間以内で完了</td>
              <td style="background-color:#d2da0e; color:black; border-style:none; vertical-align: text-top;"">18レッスン、18時間以内で完了</td>
              <td style="background-color:#68ebf5; color:black; border-style:none; vertical-align: text-top;"">18レッスン、18時間以内で完了</td>
              <td style="background-color:#9ed7ed; color:black; border-style:none; vertical-align: text-top;"">18レッスン、18~20時間以内で完了</td>
              <td style="background-color:#c9c1e9; color:black; border-style:none; vertical-align: text-top;"">20レッスン、20~22時間以内で完了</td>
            </tr>
            <tr>
              <td colspan="6" style="text-align:center;width:96%;background-color:#d9d9d9;color:black; border-style:none;">コンセプト</td>
            </tr>
            <tr>
              <td style="background-color:#f9cb9c; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>デジタルシティズンシップ</li>
                  <li>シークエンス</li>
                  <li>ループ</li>
                  <li>イベント</li>
                </ul>
              </td>
              <td style="background-color:#ffe599; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>デジタルシティズンシップ</li>
                  <li>シークエンス</li>
                  <li>ループ</li>
                  <li>コンピューティングの影響</li>
                  <li>イベント</li>
                </ul>
              </td>
              <td style="background-color:#d2da0e; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>デジタルシティズンシップ</li>
                  <li>シークエンス</li>
                  <li>バイナリ</li>
                  <li>ループ</li>
                  <li>イベント</li>
                  <li>データ</li>
                </ul>
              </td>
              <td style="background-color:#68ebf5; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>シークエンス</li>
                  <li>イベント</li>
                  <li>ループ</li>
                  <li>条件文</li>
                  <li>バイナリ</li>
                  <li>デジタルシティズンシップ</li>
                </ul>
              </td>
              <td style="background-color:#9ed7ed; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>スプライト</li>
                  <li>デジタルシティズンシップ</li>
                  <li>入れ子のループ</li>
                  <li>関数</li>
                    <li>コンピューティングの影響</li>
                </ul>
              </td>
              <td style="background-color:#c9c1e9; color:black; border-style:none; vertical-align: text-top;"">
                <ul style="font-style:italic;">
                  <li>デジタルシティズンシップ</li>
                  <li>変数</li>
                  <li>データ</li>
                  <li>Forループ</li>
                  <li>インターネット</li>
                  <li>スプライト</li>
                  </ul>
              </td>
          </table>
          <br/>

          ****今後、各コースの内容についてさらに詳しく知りたい場合は、かなり徹底した内容を備えた<a href="https://docs.google.com/document/d/1UqCgO06NzB1L6y83fnwnUcYdKr3MooJAaUZajj48DnI/preview" target="blank" rel="noopener noreferrer">コンピュータサイエンス入門カリキュラムガイド</a>をご覧ください。**
      OPD-K5 What is Mastery_copy:
        markdown: |-
          ＃将来について考える

          ##指導実践
          次のコンセプトのグループでは、以下のような指導実践について学びます。

          - レッスンプランを見つけて活用
          - ペアプログラミング
          - デバッグ
          - ジャーナリング

          ##基本的なコーディングの概念
          次の概念グループでは、コンピュータサイエンスの以下のような基本的なコア概念を実践します。

          - シーケンス
          - ループ
          - イベント
          - 条件文

          これらのレッスンでは、以下のことを行います。
          - コア概念の意味と、それがコンピュータサイエンスで重要である理由を定義して説明します
          - 概念を適用した簡単なプログラムを作成します（ビジュアルプログラミングを使用してパズルを解きます）
          - 概念を実践に統合する方法を考えます

          ##次のレッスンに進むべきかどうか、どうすればわかりますか？

          各レッスンを完了するときは、次のことを自問してください。

          - コンピュータサイエンスの知識がない人に、この特定のコア概念の重要性を定義して説明できますか？
          - このレッスンで、簡単なパズルを難なく完了することができましたか？
          - 教室でこれをどのように使用するかについて、いくつかアイデアがありますか？

          各質問に「はい」と答えられれば、次のレッスンに進んでください。いずれかの質問に「いいえ」の場合は、先に進む前に、レッスンに再度アクセスするか、または、コンピュータサイエンス入門コースの1つで、そのトピックについて詳しく調べましょう。
      OPD-K5 Why teach CS_copy:
        markdown: |+
          #コンピュータサイエンスを教える理由

          <img src="https://images.code.org/2d5f7097062637d95a723129689b4891-image-1571684813152.JPG" class="level-image">

          ##**重要なスキルを開発する**
          調査研究によると、コンピュータサイエンスは批判的思考、創造性、問題解決、実社会でのエンゲージメントスキルを促進します。

          ### **その他の科目のパフォーマンスを向上させる**
          STEMの教師でなくとも、教室でのコンピュータサイエンスのメリットを確認できます。<a href="https://medium.com/@codeorg/code-org-resourceful-teachers-higher-student-achievement-8be1efdec06e" target="blank" rel="noopener noreferrer">最近の調査研究</a>によると、機知に富んだ先生が教えたクラスでは、コンピュータサイエンス入門レッスンを教えた後、言語、数学、科学の標準テストで高いスコアが見られています。

          ### **早い段階で自信と関心を構築する**
          高校や大学で待ってからコンピュータサイエンスを紹介すると、コンピュータサイエンスが自分には向いていないと判断したり、学外でコンピュータサイエンスを勉強してきた生徒に比べてかなり遅れていると感じる生徒が出ます。

          高校で行うように、授業を選択する必要がないときに小学校でコンピュータサイエンスを学ぶことができると、すべての生徒がこの科目が非常に親しみやすいものであることを確認でき、楽しめるものであるかどうかを判断できます。

          ### **楽しい！**
          コンピュータサイエンスは、生徒に協力、創造性、表現の機会を提供します！

          ### **もっと説明が必要ですか？**
          Code.orgでは、先生のみならず、生徒、管理者、保護者、コミュニティのために、教室でコンピュータサイエンスが重要となる理由を理解するのに役立つ多くのリソースを用意しています。以下の感動的なビデオシリーズ、さらにはコンピュータサイエンス教育に関する統計およびエビデンスのいくつかをご覧ください。

          > <a href="http://code.org/educate/inspire" target="blank" rel="noopener noreferrer">インスピレーションあふれるビデオを探索 >></button></a>

          > <a href="http://code.org/promote" target="blank" rel="noopener noreferrer">研究結果を探索
           >></button></a>

          <img src="https://images.code.org/1b213b6c2256c6992b899df3c62559a0-image-1571684948168.jpg">

