---
es-MX:
  data:
    long_instructions:
      2-3 Artist 1 new: Hola, soy un artista. Puedes escribir código para hacerme
        dibujar lo que sea. Usa algunos bloques para hacerme dibujar sobre las líneas
        grises en la imagen (cada línea tiene 100 pixeles de largo).
      2-3 Artist 11: 'Crea un octógono con lados de 100 pixeles para agregar un borde
        a la señal de pare. '
      2-3 Artist 12: "¡Crea un círculo para completar el globo ocular!\n\nSi el artista
        gira 1 grado con cada bucle, ¿cuántas veces debes repetir el código para dibujar
        un círculo? "
      2-3 Artist 2 new: Esta casa tiene una pared a medio terminar. Cada lado mide
        100, pero la pared incompleta solo mide 50. Completa la pared.
      2-3 Artist 3.4: El bloque 'saltar' mueve al artista sin dibujar. Dibuja la línea
        de puntos con los bloques `saltar hacia adelante` y `avanzar`. Cada línea
        tiene 50 pixeles de largo.
      2-3 Artist 3new: |-
        El sombrero rojo tiene 100 pixeles de alto. Termina de dibujar un sombrero negro que sea 70 pixeles más corto.

        _(Nota: el ancho de cada sombrero es de 50 pixeles)._
      2-3 Artist 4: Ayúdame a completar la casa para este gato.
      2-3 Artist 6: "¡Esta casa necesita un techo! Dibuja el triángulo.\n\nPista:
        los tres lados tienen la misma longitud. \n\n<img src=\"https://images.code.org/8b10073fd1a7fe53b4da33ec2229894b-image-1468018903891.gif\"
        width=\"300\"/>"
      2-3 Artist 7: "Termina de dibujar el último conjunto de ventanas en la escuela
        para que todos en la clase puedan ver hacia afuera. \n\nLos lados de cada
        panel de ventana cuadrada tienen 25 pixeles de longitud. "
      2-3 Artist 8: "¡Es hora de construir un establo! \n\nDivide el establo en 2
        cuadrados del mismo tamaño para hacer las habitaciones para cada animal. \n\nPista:
        el rectángulo tiene 200 pixeles de ancho y 100 pixeles de alto. \n\nHay muchas
        formas diferentes de resolver este desafío."
      2-3 Artist 9: Termina esta cometa
      2-3 Artist Assessment 1: "**Evaluación:** termina de dibujar el último diente.
        Tiene 25 pixeles de ancho y 25 pixeles de alto."
      2-3 Artist Debugging 1: "Este sombrero solo debe tener 50 pixeles de ancho.
        \n¿Puedes corregirlo?\n\n<br/>"
      2-3 Artist Debugging 10: "El panel de dirección en mi dispositivo de juego es
        demasiado estrecho. \n\n¿Puedes aumentar el ancho en 10 pixeles? \n\nIntenta
        ejecutar el código primero para ver cuál es el error."
      2-3 Artist Debugging 11: Ayúdame a terminar mi hermoso copo de nieve. ¿Cuántas
        veces necesito "Repetir" para finalizarlo?
      2-3 Artist Debugging 2: 'El código para los tres bigotes que ves es incorrecto.
        Sugerencia: cada bigote tiene 75 píxeles de largo. Repara este código para
        dibujar los bigotes.'
      2-3 Artist Debugging 3: "¡Mi barco tiene un agujero! ¿Puedes repararlo cambiando
        el ángulo de la línea? Sugerencia: el último ángulo está errado por 15 grados."
      2-3 Artist Debugging 5: 'El código para la pierna y el pie está equivocado.
        Sugerencia: El pie es demasiado largo, podríamos necesitar eliminar un paso
        (juego de palabras intencional)'
      2-3 Artist Debugging 6: Parece que estoy sentado en una silla a la que le falta
        una pata. Edita los Bloques para dibujar la pata.
      2-3 Artist Debugging 7: Parece que la C en Código está dibujada al revés - ¿Puedes
        hacer que parezca una C?
      2-3 Artist Debugging 8: Mi molinillo de viento no está terminado. ¿Cuántas veces
        necesito repetir para terminarlo?
      2-3 Artist Debugging 9: 'El código de este tallo es incorrecto. Sugerencia:
        El ángulo está fuera por 60 grados'
      2-3 Artist Debugging Assessment 1: "**Evaluación:** \n¿Por qué este cuadrado
        es 75 pixeles más corto en cada lado? \n\n¿Dónde está el error en el código?"
      2-3 Artist Free Play: "¡Juego libre! Dibuja lo que quieras."
      2-3 Artist Functions 1: "\"Yo artista zombie. ¡Me encanta dibujar!\"\n\nAyuda
        al zombie a dibujar gafas cuadradas. \n\nEl puente entre las gafas es 25 pixeles
        más corto que el ancho de los cuadrados, que es de 100 pixeles."
      2-3 Artist Functions 10: "**Juego libre:** aquí verás dos funciones, una para
        dibujar un gran engranaje y otra para dibujar uno pequeño.  \n\n¡Úsalos para
        dibujar el interior de una máquina!"
      2-3 Artist Functions 11: "Hemos cambiado el nombre de la función `dibujar un
        cuadrado` a `dibujar un hexágono`, ¡pero todavía crea cuadrados! \n\n¿Puedes
        modificar la función `dibujar un hexágono` para dibujar un hexágono de 50
        pixeles de lado?\n\n¡Usa la nueva función para dibujar la imagen!"
      2-3 Artist Functions 11.5: "Esta es la misma función `dibujar un hexágono`.
        \n\n¿Qué pasa si creas un bucle 6 veces en el programa principal y giras 60
        grados cada vez que aplicas ese bucle?"
      2-3 Artist Functions 12: 'Las funciones son geniales para dibujar las cosas
        complejas varias veces. Puedes utilizar la función "dibujar una flor" para
        llenar el resto de la caja del jardinero. (Pista: las plantas están separadas
        por una longitud de 100 píxeles)  '
      2-3 Artist Functions 2: ¡Las funciones permiten definir nuevos bloques! Hemos
        movido los bloques para dibujar un cuadrado en la función llamada "dibuja
        un cuadrado". ¿Puedes utilizar la función "dibuja un cuadrado" para crear
        los lentes? Los cuadrados están separados por 75 píxeles.
      2-3 Artist Functions 3: Edita la función para dibujar un cuadrado con una longitud
        lateral de 115 y dibuja los lentes más grandes. Los cuadrados están ahora
        separados 45 píxeles.
      2-3 Artist Functions 4: Ahora, pon la función dentro de un bucle para dibujar
        estos tres cuadrados.
      2-3 Artist Functions 9: |-
        **Juego libre:** esta es una función de copo de nieve. ¡Experimenta con ella para crear una escena de invierno!

        Este es un nivel de juego libre. No debes resolver ningún desafío. ¡Que te diviertas!
      2-3 Artist Loops New 1: |-
        ¡Vamos a dibujar la cabeza de este robot! ¿Puedes crear un cuadrado con lados de 100 pixeles?

        <br/>
      2-3 Artist Loops New 10: Ahora vamos a conectar muchas V en un bucle.
      2-3 Artist Loops New 11: |-
        ¡Es hora de crear algo elegante!

        Vuelve a crear el código del último desafío pero, esta vez, agrega un giro a la izquierda de 30 grados dentro del bucle. Ahora, repítelo 24 veces en lugar de 8.
      2-3 Artist Loops New 12: Dibuja un diamante con lados de 100 píxeles.
      2-3 Artist Loops New 13: Ahora dibuja un diamante 3 veces en una iteración.
      2-3 Artist Loops New 14: "Juega con el código para el diamante y mira qué otros
        patrones puedes crear. \n\nIntenta cambiar cuántos grados giras y cuántas
        veces usas el bucle."
      2-3 Artist Loops New 15: |-
        Ahora, ¡dibuja lo que quieras!
        <br/><br/>
      2-3 Artist Loops New 2: |-
        Este es el mismo desafío que acabamos de resolver, pero esta vez solo puedes utilizar un bloque `avanzar` y un bloque`girar`.

        ¿Puedes usar un bloque `repetir` para resolver este desafío?
      2-3 Artist Loops New 9: Dibuja una V simple (donde ambos lados tengan 50 pixeles)
        para completar la flecha.
      2-3 Artist Nested Loops 1: |-
        Usaste bucles para dibujar formas antes, ¡pero ahora vamos a poner unos bucles dentro de otros!

        Pon un bloque `repetir` alrededor de toda esta pila de código para dibujar el patrón.

        <br/>
      2-3 Artist Nested Loops 10: Aplica el bucle a este código 12 veces para completar
        el patrón.
      2-3 Artist Nested Loops 11: Haga un bucle de este código 4 veces para completar
        el patrón, gire 90 grados después de cada círculo.
      2-3 Artist Nested Loops 12: Aplica el bucle a este código 12 veces para completar
        las curvas.
      2-3 Artist Nested Loops 2: Ahora haga un bucle del triángulo 6 veces. Después
        de cada triángulo, usted necesitará girar 60 grados antes de dibujar el siguiente.
      2-3 Artist Nested Loops 3: |-
        Necesitarás aplicar un bucle a tu triangulo 12 veces para dibujar este patrón.

        Divide el número de grados de un círculo (360) por el número de figuras que debes dibujar (12) para saber qué tan lejos debes girar luego de cada forma.
      2-3 Artist Nested Loops 4: 'Haga un bucle de este diamante 12 veces para dibujar
        una flor. Sugerencia: 12 diamantes es igual a los 12 triángulos que hiciste
        - ¿cuánto necesitas para girar después de cada forma?'
      2-3 Artist Nested Loops 5: Llenar en las ventanas del edificio con un bucle
        anidado. Las ventanas son 20 píxeles largos y 20 píxeles aparte.
      2-3 Artist Nested Loops 6: "Este dinosaurio tiene 8 picos a lo largo de su cola.\n\nCada
        pico tiene 30 pixeles de largo. \n\nAplica un bucle al triángulo 8 veces,
        ¡pero asegúrate de saltar hacia adelante luego de cada uno!"
      2-3 Artist Nested Loops 7: Bucle este triángulo 10 veces para dibujar el sol,
        necesitarás moverte y girar después de cada triángulo. Puedes averiguar cuánto
        girar dividiendo la cantidad de grados en un círculo por la cantidad de figuras
        que lo componen.
      2-3 Artist Nested Loops 8: Ahora vamos a agregar un poco de hierba a nuestra
        imagen. Cada penacho de césped es 50 píxeles aparte.
      2-3 Artist Nested Loops 9: Terminaremos esta foto agregándole una flor. Enrolle
        el diamante 12 veces para dibujar su flor.
      2-3 Artist Nested Loops Free Play: juego libre, dibujar algo fascinante con
        bucles anidados.
      2-3 Bee Conditionals 11: "¡Me pregunto qué hay allí afuera!\n\nAyúdame a volar
        por el patio y recoger el néctar solo de aquellas flores que tengan. "
      2-3 Bee Conditionals 13: 'Recoge néctar y haz miel. Pista: ¿Qué ocurre si usas
        el condicional "Si néctar" en una flor roja? ¿Puedes completar esto con un
        bucle (loop)?'
      2-3 Bee Conditionals 14: "¡Ahora hagamos todo junto!\n\nUsa lo que aprendiste
        para ayudarme a recoger el néctar solo de aquellas flores que tengan, con
        el menor número de bloques posible. \n\nNo olvides hacer miel al final."
      2-3 Bee Conditionals 15: "Este patrón de escalera debería resultar conocido.
        \ \n\n¿Puedes recoger el néctar solo de aquellas flores que tengan, con el
        menor número de bloques posible?"
      2-3 Bee Conditionals 2: "¡Soy una abeja hambrienta! \n\nAyúdame a recoger todo
        el néctar de las flores con el menor número de bloques posible."
      2-3 Bee Conditionals 3: Ayúdame a recoger todo el néctar de las flores y a hacer
        miel. Usa un bucle (loop).
      2-3 Bee Conditionals 5: "¡Estas flores púrpuras son mágicas y cambian!\n\nCada
        vez que intentes resolver el desafío, las flores púrpura pueden tener 1 néctar
        o no tener en absoluto... ¡pero no lo sabrás hasta que ejecutes el código!
        \n\nTen cuidado de no recoger néctar de una flor púrpura que no tenga. \nUsa
        el bloque `si néctar` para comprobar primero si el néctar es igual a 1."
      2-3 Bee Conditionals Assessment 1: "**Evaluación:** recoge todo el néctar.  \nAsegúrate
        de no recoger néctar de una flor púrpura que no tenga."
      2-3 Bee Debugging 1: |-
        ¡Estos bloques me están molestando!

        Corrige los errores para recoger todo el néctar.
      2-3 Bee Debugging 10: |-
        ¡Este desafío me está volviendo loco!

        Corrige los errores para recoger todo el néctar y hacer toda la miel.
      2-3 Bee Debugging 2: |-
        ¿Puedes encontrar el problema?

        Arregla los errores para recoger todo el néctar.
      2-3 Bee Debugging 3: Estos bloques realmente me molestan. Corregir el (los)
        error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging 5: "¡Esa flor se ve sabrosa! \n\nCorrige los errores para
        recoger todo el néctar.  \nPuedes utilizar la función de correr o de dar un
        paso."
      2-3 Bee Debugging 6: Estos bloques realmente me molestan. Corregir el (los)
        error(es) para recoger todo el néctar y hacer toda la miel.
      2-3 Bee Debugging 9: Estos bloques realmente me molestan. Corregir el (los)
        error(es) para recoger todo el néctar y hacer todo de la miel.
      2-3 Bee Debugging Assessment 1: |-
        **Evaluación:** ¡es el momento de mostrar lo que sabes!

        Corrige los errores para recoger todo el néctar y hacer toda la miel.
      2-3 Bee Functions 1: "Las funciones son bloques de códigos que realizan una
        tarea. \n\nUsa la función 'recoger el néctar' para recoger el néctar de cada
        flor."
      2-3 Bee Functions 10: "Las flores púrpuras cambian entre 1 o 0 néctar cada vez
        que ejecutas el desafío. \n\nCrea una función que recoja el néctar solo de
        aquellas flores que tengan."
      2-3 Bee Functions 2: Las funciones son bloques de código que realizan una tarea.
        Utilice la función "get 5" para obtener 5 néctares a cada momento. Asegúrese
        de utilizar un bucle para obtener un recuento ideal de bloque, también.
      2-3 Bee Functions 4: La función "mover y obtener néctar" realizada por la abeja,
        recoge néctar, y entonces devuelve a la abeja al principio. Usa la función
        para recoger todo el néctar.
      2-3 Bee Functions Assessment 1: "**Evaluación:** usa la función dada para recoger
        el néctar de cada flor."
      2-3 Bee Functions Assessment 2: "**Evaluación:** crea una función para girar,
        avanzar y hacer 3 mieles, y después haz que la abeja regrese al lugar de inicio."
      2-3 Bee Loops 1: "¡Esas flores se ven sabrosas! \n\nRecoge el néctar de cada
        una de las flores con el menor número de bloques posible."
      2-3 Bee Loops 13: "**Evaluación:** recoge todo el néctar con el menor número
        de bloques posible."
      2-3 Bee Loops 3A: Usa un bucle `repetir` para recoger todo el néctar.
      2-3 Bee Loops 3B: Ahora usa el nuevo bloque repeat para recolectar todo el néctar
        y hacer toda la miel.
      2-3 Bee Loops 4: |-
        ¡La abeja está muy ocupada!

        Ayuda a la abeja a recoger todo el néctar y hacer toda la miel con el menor número de bloques posible.
      2-3 Bee Loops 4A: "¿Qué pasa si haces un ciclo con esta secuencia 3 veces? ¡No
        olvides hacer la miel al final!"
      2-3 Bee Loops 5: |-
        La forma de este camino es diferente a la de los demás.

        ¿Puedes recoger todo el néctar con el menor número de bloques posible?
      2-3 Bee Loops 7: |-
        ¡Qué hermoso campo de flores!

        Ayuda a la abeja a visitar cada una de ellas.

        ¿Puedes encontrar cómo hacerlo con menos de 7 bloques?
      2-3 Bee Loops 8: Estas flores moradas tienen una cantidad desconocida de néctar.
        Utiliza el ciclo "while nectar" para recolectar todo el néctar. Este ciclo
        va a ejecutarse mientras la condición sea verdadera, en este caso Néctar >
        0.
      2-3 Bee Loops Assessment 1: "**Evaluación:** usa el bucle `mientras` para recoger
        todo el néctar de esas flores."
      2-3 Maze 1: "¿Puedes ayudarme a atrapar a este cerdo travieso?\n\nApila un par
        de bloques `avanzar` debajo del bloque `cuando se ejecuta` y presiona \"Ejecutar\". "
      2-3 Maze 12: |-
        De repente, ¡aparece un bloque mágico! Con el bloque `repetir`, puedes repetir el código una y otra vez.

        ¿Puedes crear un bucle que utilice un solo bloque `avanzar` dentro de un bloque `repetir` para llegar hasta el cerdo?
      2-3 Maze 13: "¡Llévame hasta el cerdo! Puedes usar un solo bloque `avanzar`
        esta vez"
      2-3 Maze 15: Usa dos ciclos para hacer que el cerdo use menos bloques.
      2-3 Maze Loops 18: |-
        ¡Llévame hasta el girasol con la menor cantidad de bloques posible!

        Intenta usar un bucle `repetir` dentro de otro para reducir la cantidad de código que necesitas.
      2-3 Maze Loops 19: |-
        ¡Llevemos esto a otro nivel!

        Usa bucles para llevarme hasta el girasol con el menor número de bucles posible.
      2-3 Maze Loops Assessment 1: "**Evaluación:** ¡llévame hasta el girasol con
        solo 5 bloques! "
      4-5 Artist 1: Ayúdame a terminar de dibujar mi caja (cada línea tiene 300 pixeles
        de largo).
      4-5 Artist 11: "Completa las líneas verdes. \n\nLas líneas tienen 300 pixeles
        de largo y están separadas por 15 pixeles."
      4-5 Artist 2: "¿Puedes crear un bucle de código para completar el cuadrado?"
      4-5 Artist 3: "Esta cama rectangular de flores tiene un perímetro de 600. \nEl
        lado más largo tiene una longitud de 200. \n\nDibuja un rectángulo con el
        menor número de bloques posible."
      4-5 Artist 3.5: "Intenta descubrir que ocurre si ejecutas este código (o presiona
        \"Ejecutar\" y pruébalo). \n\nLuego, ¡repite el código las veces que necesites
        para completar el dibujo!"
      4-5 Artist 4: "¿Cuántos grados tiene un circulo? \n\nRepite los bloques para
        crear un círculo de colores."
      4-5 Artist 5: ¿Con qué podemos reemplazar "???" para asegurarnos de que el zombie
        complete este dibujo con el bucle provisto?
      4-5 Artist 6: Este triángulo equilátero tiene ángulos de 60, 60 y 60 grados.
        Cada lado tiene 200 pixeles. Completa el dibujo.
      4-5 Artist 7: |-
        Este triángulo rectángulo tiene ángulos de 30, 60 y 90 grados. El lado inclinado tiene una longitud de 200 pixeles (la longitud de la hipotenusa).

        Completa el dibujo.
      4-5 Artist 8: "La línea que divide un campo de fútbol a la mitad es _perpendicular_
        a las líneas laterales. \nEste rectángulo tiene un perímetro de 800 pixeles
        en total y una longitud de 240 pixeles. ¿Cuál es su altura? \n\nDibuja los
        límites y la línea del medio."
      4-5 Artist 9: "Dibuja la mitad derecha de esta imagen para que el diseño sea
        simétrico. \nLos triángulos son equiláteros y tienen lados de 50 pixeles de
        largo."
      4-5 Artist Assessment 1: "**Evaluación:** usa un bucle para dibujar el triángulo
        equilátero. Cada lado tiene 300 pixeles."
      4-5 Artist Free Draw 1: "¡Dibujo libre! Dibujar lo que estés inspirado para
        crear."
      4-5 Artist Patterns 1: "¿Puedes dibujar esta cuadro utilizando un bucle? Cada
        lado es de 20 píxeles de largo."
      4-5 Artist Patterns 10: "Este código dibuja dos filas de hexágonos. Repite todo
        4 veces para dibujar el panal. \n\nDeberás retroceder 120 pixeles en tu bucle
        más externo para asegurarte de que el artista no dibuje fuera de la pantalla."
      4-5 Artist Patterns 11: "¿Cuántas veces necesitas repetir esto para dibujar
        un medio círculo?"
      4-5 Artist Patterns 12: Si copia ese bucle y gira a la izquierda en lugar de
        la derecha, ¿qué pasa? ¿Puedes repetir eso para dibujar esta ola?
      4-5 Artist Patterns 13: Ahora repitamos todo eso cuatro veces para crear este
        cuadro. Cuidado con las esquinas - ¡simplemente no puedes girar 90 grados!
        Si se repite 60 veces un giro de 3 grados hace un semicírculo, ¿cuál de estos
        bloques de código hará un cuarto de círculo para las esquinas?
      4-5 Artist Patterns 2: "Cuando pones tu bucle cuadrado dentro de otro bucle,
        lo llamamos bucle anidado. \n\n¿Qué necesitas agregar a tu bucle externo para
        asegurarte de que los 15 cuadrados se alineen uno al lado del otro?"
      4-5 Artist Patterns 3: Ahora vamos a un nivel más profundo. Hemos anidado todo
        el bloque de código en otro bucle, pero tienes que poner al artista en su
        lugar para dibujar la línea siguiente. ¿Cuál de estos bloques de código puede
        usted colocar al final del bucle exterior para dibujar la red entera?
      4-5 Artist Patterns 4: "Este diamante tiene lados de 50 pixeles y ángulos de
        120 y 60 grados. \n\nUtiliza un bucle para dibujarlo."
      4-5 Artist Patterns 5: "Repite este código para crear una fila de 6 diamantes.
        \n\nTen en cuenta que hemos cambiado nuestro código del diamante para que
        se repita 3 veces en lugar de 2. ¿Por qué crees que lo hicimos?"
      4-5 Artist Patterns 6: "¿Cuántas veces necesitas repetir este código para dibujar
        toda la cuadrícula de diamantes?"
      4-5 Artist Patterns 7: Vamos a modificar el código del último desafío para que
        el patrón sea más complejo. Ten en cuenta que los diamantes se superponen.
        Intenta cambiar el primer "saltar hacia atrás" de 100 a 50 (la mitad de distancia).
        ¿Qué tan lejos llegará el artista en el segundo "saltar hacia atrás"?
      4-5 Artist Patterns 8: Utilice un bucle para dibujar este hexágono con 40 píxeles
        y lados y ángulos de 60 grados.
      4-5 Artist Patterns 9: Ahora repite el código 3 veces para dibujar toda la fila.
        Sugerencia, cada hexágono es de 80 píxeles de ancho desde los puntos más lejanos
        de izquierda a derecha.
      4-5 Artist Patterns 9.5: "Ahora repitamos este código para dibujar dos filas
        de hexágonos. \n\nObserva cómo la segunda fila se desplaza hacia la derecha."
      4-5 Artist Patterns Free Play: Juego libre - ¡prueba tu destreza en la fabricación
        de un patrón propio!
      4-5 Bee Conditionals 1: |-
        ¡Esta nube bloquea mi visión!

        Comprueba si hay alguna flor debajo de la nube, y solo recoge el néctar si hay una.
        ¡Ten en cuenta que puede cambiar!
      4-5 Bee Conditionals 2: La abeja sólo quiere néctar ahora. Recuerda que no todos
        los objetos son flores, recoge néctar solamente de las flores.
      4-5 Bee Conditionals 4: "A veces esta nube oculta una flor, ¡y a veces un panal!\n\nUsa
        el bloque `si/si no` para recoger el néctar solo si hay una flor.  \nDe lo
        contrario, haz miel (porque hay un panal)."
      4-5 Bee Conditionals 5: Puede haber una flor o un panal bajo esas nubes. Usa
        el bloque if/else para recoger néctar si hay una flor, si no haz miel (porque
        hay un panal de abejas).
      4-5 Bee Conditionals 6: Esta flor púrpura puede tener 3, 2 o 1 néctar. Aquí
        un bloque if-else se combina con otro bloque if-else para crear un bloque
        if,else-if, else. Completa la solución para recoger la cantidad desconocida
        de néctar.
      4-5 Bee Conditionals 7: Recuerda que las flores púrpura pueden tener 1, 2 o
        3 néctares. Completa la función "revisar flor púrpura" y úsala para recoger
        todo el néctar de las flores.
      4-5 Bee Conditionals 8: "Escribe la función para `comprobar flor hacer miel`.
        \n\nTu función debe comprobar si la flor púrpura tiene 3, 2 o 1 néctares y
        recoger todo el néctar. Luego, debe avanzar y hacer miel."
      4-5 Bee Conditionals Assessment 1: "**Evaluación:** esta nube oculta una flor
        con un néctar o un panal que necesita una miel.\n\nCompleta la función `recoger
        néctar o hacer miel`, y llámala para recoger todo el néctar o la miel. "
      4-5 Bee Debugging 1: "Estos bloques me molestan. \n\n¿Puedes corregirlos?"
      4-5 Bee Debugging 6: La flor púrpura contiene una cantidad desconocida de néctar.
        Arregla los bloques, para obtener todo el néctar de la flor.
      4-5 Bee Debugging Assessment 1: "**Evaluación:** corrige el código."
      4-5 Bee Nested Loops 2: "Recoge todo el néctar de cada flor. \n\nUsa un bucle
        anidado. "
      4-5 Bee Nested Loops 4: "Recoge todo el néctar de cada flor y haz miel en el
        panal. \n\nUtiliza un bucle anidado. "
      4-5 Bee Nested Loops Assessment 1: "**Evaluación:** usa bucles para recoger
        todo el néctar y hacer toda la miel."
      4-5 Maze 7: |-
        ¡Haz que el zombie llegue hasta el girasol rápidamente!

        ¿Puedes resolver el desafío con menos de 11 bloques?
      4-5 Maze 9: "Ahora tenemos un nuevo bloque llamado `repetir hasta`.  \nNos permitirá
        repetir comandos hasta que el zombie llegue hasta el girasol. \n\nUsa el nuevo
        bloque `repetir hasta` para resolver este desafío con la menor cantidad de
        comandos posible."
      4-5 Maze Assessment 1: "**Evaluación:** llega hasta el girasol con la menor
        cantidad de bloques posible."
      4-5 Maze Conditionals 1: Utiliza el bloque repetir hasta para llevar al zombie
        hasta el girasol.
      4-5 Maze Conditionals 10: "¿Puedes añadir solo 3 bloques para ayudar al zombie
        a resolver un laberinto más complejo? \n\nSi lo haces bien, ¡podrá recorrer
        cualquier camino con curvas sin importar la longitud!"
      4-5 Maze Conditionals 2: Utiliza el bloque repetir hasta para llevar al zombie
        hasta el girasol.
      4-5 Maze Conditionals 3: 'Utiliza el bloque `si` para ayudarme a decidir cuándo
        girar. '
      4-5 Maze Conditionals 4: Ok, esto es como con el rompecabezas pasado, pero recuerda
        como utilizaste el bloque "if" y el bloque "repeat" juntos.
      4-5 Maze Conditionals 5: ¡Yo quiero girasol! Utiliza in bloque "if" para llevarme
        allá, con el menor número de bloques.
      4-5 Maze Conditionals 6: ¡Yo quiero girasol! Utiliza in bloque "if" para llevarme
        allá, con el menor número de bloques.
      4-5 Maze Conditionals 7: Ok, hagámoslo de nuevo para practicar - esto no es
        muy diferente, pero hay que estar pendiente de los ¡chompers!
      4-5 Maze Conditionals 8: "El bloque `si/si no` comprueba una condición, y luego
        realiza una cosa o la otra. \n\nUsa este nuevo bloque para llevarme hasta
        al girasol."
      4-5 Maze Conditionals 9: Una práctica más con el bloque "if-else", ¿Puedes hacerlo
        correctamente en el primer intento?
      4-5 Maze Conditionals Assessment 1: "**Evaluación:** utiliza un bloque `repetir
        hasta` y un bloque `si/si no` para llevarme hasta el girasol con la menor
        cantidad de bloques posible."
      4-5 Nested Loops 1: 'Completa el código para dibujar estos triángulos. El primero
        lo haces tú. Pista: 3 triángulos en una rotación de 360 grados.'
      4-5 Nested Loops 11: "¿Puedes dibujar estos 10 cuadrados de la acera con un
        bucle anidado? \n\nCada cuadrado tiene 30 pixeles."
      4-5 Nested Loops 12: "¿Puedes dibujar estos 36 triángulos con un bucle anidado?"
      4-5 Nested Loops 2: "Ahora anida este bucle dentro de otro para dibujar 10 triángulos.
        \nA esta acción se la llama bucle \"anidado\".  "
      4-5 Nested Loops 3: Crea un sol anidando el código de arranque en otro bucle.
        Esto se llama un bucle anidado.
      4-5 Nested Loops 5: haz un bucle con el código dado para crear un molino de
        viento.
      4-5 Nested Loops 6: "¿Puedes repetir el código del triángulo para dibujar un
        hexágono?"
      4-5 Nested Loops 7: 'con el bucle repite este diseño 10 veces. ¿Cuánto tienes
        que girar el bucle cada vez? (Pista: ¿Cuánto es 360 dividido por 10?)'
      4-5 Nested Loops 8: "Repite esta forma 6 veces. \n\n¿Cuánto tienes que girar
        cada vez que aplicas el bucle? "
      4-5 Nested Loops 9: "¡Dibuja los dientes en la boca de cocodrilo!"
      4-5 Nested Loops Assessment 1: "**Evaluación:** usa un bucle anidado para completar
        el diseño."
      4-5 While Loops 1: Muéveme al agujero y rellena con dos palas de tierra, usando
        el bloque de "relleno".
      4-5 While Loops 2: Muéveme a la pila de tierra y remueve con 5 palos, usando
        el bloque 'remover'.
      4-5 While Loops 3: 'Muéveme a la pila y remueve todo, después muéveme hacia
        el agujero y llénalo completamente. Sugerencia: Utiliza tan pocos bloques
        como sea posible.'
      4-5 While Loops 4: "¡Wow, encontré un agujero realmente profundo! no sé cuántas
        paleadas de tierra necesita. ¿Puedes escribir un programa que llene hasta
        que el suelo esté parejo? Sugerencia: trata usando el bucle mientras."
      Alien Defender: "**Idea de proyecto**: ¡crea un juego de defensa en el Laboratorio
        de juegos!"
      AppLab Intro 7 - Change Screen Color: "<div style=\"float:right\">\n\\t<img
        src=\"https://images.code.org/bf9b1fb57751fa90c9b786339914ad70-image-1508521068798.34.54
        AM.png\" style=\"height:150px\"> \n</div>\n\n**Objetivo:** hacer que la pantalla
        sea verde. \n\n**Cómo:** arrastra un bloque `establecerPropiedad()`. Usa los
        menús desplegables para establecer el `\"color-de-fondo\"` de la pantalla
        como `\"verde\"`. Luego, presiona \"Ejecutar\".\n\n**¿No puedes avanzar? Haz
        clic aquí:** ![expandable](https://images.code.org/3b5e70522b02867a1df1d5b5e481785e-image-1511279858395.gif)"
      AppLab Intro 7 - Change Text 2: "<div style=\"float:right\">\n<img src=\"https://images.code.org/39ead723fbd2b047aa2d1e401cbfec8a-image-1506545619076.34.29
        PM.png\" style=\"height:200px;\">\n</div>\n\n**Objetivo:** hacer que el texto
        sea azul y más grande. \n\n**Cómo:** necesitarás dos líneas de código. Asignar
        a `\"etiqueta1\"` un `\"tamaño-de-fuente\"` de `80` y un `\"color-de-texto\"`
        `\"azul\"`.\n\n**¿No puedes avanzar? Haz clic aquí:** ![expandable](https://images.code.org/2d5d46a03082af3b01847aad6602e2ea-image-1511280140482.gif)"
      AppLab Intro 7 - Full Text: "<div style=\"float:right\">\n<img src=\"https://images.code.org/1e81d5bcdd69172f4127de55d045225f-image-1507565161167.05.19
        AM.png\" style=\"height:200px\">\n</div>\n\n**Objetivo:** hacer que los botones
        sean `\"rojo\"` y \\`\"azul\". Luego, cambiar el texto en la etiqueta naranja
        grande.\n\n**Cómo:** \n\n-   Recuerda que puedes pasar sobre los elementos
        para ver sus `\"id\"`.\n-   Establece el `\"color-de-fondo\"` de los botones
        como `\"rojo\"` y `\"azul\"`.\n-   Cambia la propiedad `\"texto\"` de la etiqueta
        a lo que quieras, por ejemplo, `\"¡Bienvenido a mi aplicación!\"`.\n\n**¿No
        puedes avanzar? Haz clic aquí:** ![expandable](https://images.code.org/4bf99e7352e7c17a5bf73ced80171f6a-image-1511280628092.gif)"
      AppLab Intro 7 - onEvent intro: |-
        <img src="https://images.code.org/3d8c8487ea669563d3401c0009cd9462-image-1511281194897.gif" style="float:right;height:200px">

        **Objetivo:** la pantalla comienza siendo azul. Agrega código para que pase a ser verde cuando haces clic en el botón "Green-ify".

        **Cómo:** agregar código dentro de `enEvento` para establecer el `"color-de-fondo"` de la pantalla como `"verde"`.

        **¿No puedes avanzar? Haz clic aquí:** ![expandable](https://images.code.org/5ddf6b129bc04b79839b3661ccef788b-image-1511281012076.gif)
      AppLab Intro 7 - onEvent twoButtons: |-
        <img src="https://images.code.org/158c9258bfff18c2177440f201446c47-image-1507566793890.gif" style="float:right;height:200px">

        **Objetivo:** ayudar a terminar esta aplicación de linterna. El botón "Encendido" hace que la pantalla se vuelva blanca. Ejecuta la aplicación y pruébala. Luego, escribe código para que el botón "Apagado" haga que la pantalla vuelva a ser negra.

        **Cómo:** agregar código dentro del bloque `enEvento()` vacío que establezca el `"color-de-fondo"` de la pantalla como `"negro"` y el `"color-de-texto"` de la etiqueta como `"blanco"`.

        **¿No puedes avanzar? Haz clic aquí:** ![expandable](https://images.code.org/020b1d9b465aaf35967a528a92961c13-image-1511281772276.gif)
      AppLab Intro 7 - playSound: "<img src=\"https://images.code.org/28176329f15dea1a863564b069e72aab-image-1511282702534.44.52
        AM.png\" style=\"float:right;height:200px\">\n\n**Objetivo:** ¡este panel
        de sonidos está casi listo! Ejecútalo para ver cómo funciona. Luego, agrega
        una imagen, texto y sonido para el último botón.\n\n**Cómo:** \n\n-   Agrega
        un bloque `enEvento()` al programa y establece el \"id\" como `\"botón4\"`.
        Arrastra un bloque `reproducirSonido()` al bloque `enEvento()` y elige un
        sonido de la biblioteca. \n-   Agrega un bloque `establecerPropiedad()` (fuera
        de `enEvento()`) para cambiar la propiedad `\"imagen\"` del botón. Elige una
        imagen con el tercer menú desplegable.\n-   Agrega un bloque `establecerPropiedad()`
        más para cambiar el `\"texto\"` del botón.\n\n**¿No puedes avanzar? Haz clic
        aquí:** ![expandable](https://images.code.org/a3fdcb8954c5e8d585bef64df1ec5b1a-image-1511285408512.gif)"
      AppLab Intro 7 - thisOrThatAddButton: |-
        <img src="https://images.code.org/3feb07aaf3d933b094647479673a3293-image-1508373443129.37.00 PM.png" style="float:right;height:200px">

        **Objetivo:** agregar un segundo botón a la pantalla que diga "¡Derecha!" con un `"id"` de `"botónDerecho"`.

        **Cómo:** arrastra un nuevo botón en el Modo Diseño. Elige una posición y cambia su tamaño. Luego, establece su `"id"`, `"texto"`, `"color de fondo"` y `"tamaño de fuente"`.

        **¿No puedes avanzar? Haz clic aquí:** ![expandable](https://images.code.org/7035ad0445984cf889b159cf5682e35a-image-1508383186447.gif)
      AppLab Intro 7 - thisOrThatAddScreen: |-
        <img src="https://images.code.org/f102a1363aa575cc530379d9a4ee378c-image-1508382068883.00.59 PM.png" style="float:right;height:200px">

        **Objetivo:** crear una nueva pantalla llamada `"pantallaDerecha"`. Agrega una etiqueta de texto que diga "¡Fuiste hacia la derecha!".

        **Cómo:** agrega un nuevo elemento de pantalla en el Modo Diseño. Cambia su `"id"` a `"pantallaDerecha"`. Luego, arrastra una etiqueta a la pantalla y cambia el texto a "¡Fuiste hacia la derecha!".

        **¿No puedes avanzar? Haz clic aquí:** ![expandable](https://images.code.org/11cf186acb0453cf9ec46929b763f568-image-1508383646159.gif)
      AppLab Intro 7 - thisOrThatPersonalize: "<a href=\"https://studio.code.org/projects/applab/gx21oCP10-V4GlNMlSpwdQ\"
        target=\"_blank\"><img src=\"https://images.code.org/ba6c0db48cc1c3c28c135f1c2f67f361-image-1511244802597.10.18
        PM.png\" style=\"float:right;height:200px\"></a>\n<a href=\"https://studio.code.org/projects/applab/SM_edi1btguZZiQaTtUT9Q\"
        target=\"_blank\"><img src=\"https://images.code.org/284b55697d786e0cd64350d0967c5dda-image-1511244806272.11.05
        PM.png\" style=\"float:right;height:200px\"></a>\n<a href=\"https://studio.code.org/projects/applab/SMvVhgBX_GGyxg5LSEMrgg\"
        target=\"_blank\"><img src=\"https://images.code.org/445181ff8d84861919512ba9b8e09586-image-1511244809994.12.40
        PM.png\" style=\"float:right;height:200px\"></a>\n\n**Objetivo:** ampliar
        este proyecto para crear tu propia aplicación. Luego, ¡\"Compartir\" la aplicación
        con los demás!\n\n**Cómo:** decide qué tipo de aplicación quieres crear. Luego,
        comienza a crearla y agrega más pantallas, botones, texto, sonido e interacciones
        de usuario. También puedes probar algunos bloques más en la caja de herramientas.
        Una vez que hayas terminado, ¡haz clic en \"Compartir\" para enviarte la aplicación
        a ti o a un amigo! \n\n<details>\n\n<summary><b>Ideas para Elige tu propia
        aventura</b></summary>\n\nPrueba este <a href=\"https://studio.code.org/projects/applab/SMvVhgBX_GGyxg5LSEMrgg\"
        target=\"_blank\">ejemplo de aplicación de Elige tu propia aventura</a> y
        mira cómo funciona. Estas son algunas ideas que te ayudarán a crear tu propia
        historia.\n\n<li>Crea una aventura sobre tu personaje favorito, ya sea real
        o ficticio.</li>\n<li>Crea una aventura que cuente la historia de tu libro
        o película favorita, o una que hayas inventado.</li>\n<li>Crea una aventura
        que tenga muchos giros inesperados o en la que haya que tomar una decisión
        difícil.</li>\n<br>\n</details>\n\n<details><summary><b>Ideas para tarjeta
        de felicitación</b></summary>\n\nPrueba este <a href=\"https://studio.code.org/projects/applab/SM_edi1btguZZiQaTtUT9Q\"
        target=\"_blank\">ejemplo de aplicación de tarjeta de felicitación</a> y mira
        cómo funciona. Estas son algunas ideas que te ayudarán a crear tu propia tarjeta.\n\n<li>Piensa
        en un cumpleaños, día festivo u otro día especial que se avecina. ¡Crea una
        tarjeta para celebrarlo!</li>\n<li>Crea una tarjeta de agradecimiento para
        alguien que aprecies.</li>\n<li>Crea una invitación para un evento por venir.</li>\n<br>\n</details>\n\n<details><summary><b>Ideas
        para test de personalidad</b></summary>\n\nPrueba este <a href=\"https://studio.code.org/projects/applab/gx21oCP10-V4GlNMlSpwdQ\"
        target=\"_blank\">ejemplo de aplicación de test de personalidad</a> y mira
        cómo funciona. Estas son algunas ideas que te ayudarán a crear tu propio test.\n\n<li>Crea
        un test que sugiera algo que a una persona le puede gustar, como una comida,
        un equipo, un libro o un lugar.</li>\n<li>Crea un test que \"prediga el futuro\"
        según sus respuestas.</li>\n<li>Crea un test para ayudar a las personas a
        que tomen una decisión difícil.</li>\n\n</details>"
      AppLab Intro 7 - thisOrThatSetScreen: |-
        <img src="https://images.code.org/acd1acf659a2504d38ff80256d8e870f-image-1508374065550.com-crop (1).gif" style="float:right;height:200px">

        **Objetivo:** la pantalla cambia a `"pantallaDerecha"` cuando el usuario hace clic en el `"botónDerecho"`.

        **Cómo:** agrega un nuevo bloque `enEvento()` a tu programa en el Modo Código para tu botón "¡Derecha!". Agrega un bloque `establecerPantalla()` dentro de él que cambie las pantallas a `"pantallaDerecha"`.

        **¿No puedes avanzar? Haz clic aquí:** ![expandable](https://images.code.org/64dfec0d9f9c2fc237abb90ef6a72f0e-image-1508384166252.gif)
      CDU U6 Playground Sound Board: |-
        # Panel de sonidos 2.0

        ¡Ahora puedes reproducir sonidos, notas y canciones! Hasta puedes convertir tu panel en un panel de sonidos gracias a este nuevo conocimiento.

        En la caja de herramientas encontrarás los bloques relacionados con los timbres y las luces led. ¡Podrás crear cosas geniales!

        # Haz esto

        -   Usa todos los eventos del panel relacionados con los botones (arriba, abajo) para reproducir un sonido o canción específico con cada evento.
        -   ¿Hay algún otro evento que puedes usar para reproducir aún más sonidos/canciones?
      CDU U6 Playground Sound Board_2018: |-
        # Panel de sonidos 2.0

        ¡Ahora puedes reproducir sonidos, notas y canciones! Hasta puedes convertir tu panel en un panel de sonidos gracias a este nuevo conocimiento.

        En la caja de herramientas encontrarás los bloques relacionados con los timbres y las luces led. ¡Podrás crear cosas geniales!

        # Haz esto

        -   Usa todos los eventos del panel relacionados con los botones (arriba, abajo) para reproducir un sonido o canción específico con cada evento.
        -   ¿Hay algún otro evento que puedes usar para reproducir aún más sonidos/canciones?
      CDU U6 Playground Sound Board_2019: |-
        # Panel de sonidos 2.0

        ¡Ahora puedes reproducir sonidos, notas y canciones! Hasta puedes convertir tu panel en un panel de sonidos gracias a este nuevo conocimiento.

        En la caja de herramientas encontrarás los bloques relacionados con los timbres y las luces led. ¡Podrás crear cosas geniales!

        # Haz esto

        -   Usa todos los eventos del panel relacionados con los botones (arriba, abajo) para reproducir un sonido o canción específico con cada evento.
        -   ¿Hay algún otro evento que puedes usar para reproducir aún más sonidos/canciones?
      CSD Problem Solving Process Video: |-
        ## Preguntas a tener en cuenta

        -   ¿Cómo seguiste el proceso de resolución de problemas en la última lección?
        -   ¿Cómo podrías utilizar este proceso en un problema cotidiano?
      CSD U1 - PixFilter 1x1 intro: |-
        # Colores de 3 bits

        Cada pixel es un cuadrado en una pantalla que emite luz. Cada pixel puede tener un cierto número de bits asignados, y los bits por pixel determinan los colores que se pueden representar.

        En esta herramienta estamos usando 3 bits para definir el único pixel negro grande. El primer bit afecta el tono rojo. El segundo bit afecta al tono verde. El tercer bit afecta al tono azul.

        # Haz esto

        -   Haz clic en el botón "Ejecutar" para iniciar el widget
        -   Haz clic en las bombillas para encender o apagar cada color y mira qué ocurre con el pixel
        -   Mira cuántos colores diferentes puedes crear con solo tres bits
        -   Escribe los binarios asociados con cada color que creaste
      CSD U1 - PixFilter Filter Intro: |-
        # Filtrar pixeles

        Si alguna vez has usado Instagram, entonces conoces los filtros para las imágenes. Estos filtros leen cada pixel, lo procesan de alguna manera y lo devuelven filtrado. En esta herramienta, comenzaremos por filtrar un solo pixel antes de pasar a una imagen completa.

        # Haz esto

        -   Intenta cambiar los menús desplegables de colores en la sección Filtrar
        -   Haz clic en la fila superior de bombillas en la sección Diagrama para ver cómo el filtro convierte la entrada (bombillas superiores) en la salida (bombillas inferiores)
        -   Mira cómo los números en la sección Binario reflejan los cambios en los colores
        -   En función de cómo cambian los bits, ¿puedes formular qué está haciendo reemplazar? Habla con tu compañero para ver si pueden resolverlo.
        -   Completa la tabla del Nivel 2 en tu Guía de Actividades
      CSD U1 - PixFilter Filter Revisit: |-
        # Combinar filtros

        Ahora que has jugado con el filtro de un único canal de color, es hora de ver qué sucede si filtramos más de un color.

        # Haz esto

        -   Crea un filtro que cambie el valor de más de un canal de color a través de los menús desplegables de colores en la sección Filtrar
        -   Haz clic en la fila superior de bombillas en la sección Diagrama para ver cómo el filtro convierte la entrada (bombillas superiores) en la salida (bombillas inferiores)
        -   Mira cómo los números en la sección Binario reflejan los cambios en los colores
        -   Completa la tabla del Nivel 4 en tu Guía de Actividades
      CSD U1 - PixFilter FreePlay: |-
        # Juego libre

        Haz lo que quieras, crea algo genial
      CSD U1 - PixFilter Mario: |-
        # Combinar filtros

        A veces necesitarás filtrar más de un pixel para obtener el cambio de color que quieres.

        # Haz esto

        Mira a Mario, se ve bastante bien con su sombrero rojo y su overol. Tu trabajo es configurar el filtro para que se parezca a Luigi, con un sombrero verde y un overol.

        -   Primero, determina qué bits necesitas modificar para lograr el cambio
        -   Una vez que lo hayas determinado, configura el menú desplegable de filtros de manera adecuada
        -   Una vez que el filtro esté en funcionamiento, intenta encontrar otros filtros que cambien _únicamente_ su sombrero y su overol. ¿Cuántos colores de ropa diferentes puedes proponer?

        _¿Cuántos intentos necesitaste para encontrar el filtro correcto?_
      CSD U1 - PixFilter Mushroom: |-
        # Filtrar imágenes

        Ahora que hemos visto cómo se puede filtrar un solo pixel para cambiar su color, intentemos aplicar un filtro a una imagen compuesta por varios pixeles. El filtro que crees se aplicará a cada pixel en la imagen, y aún tiene las bombillas disponibles para experimentar cómo funcionará tu filtro con colores individuales.

        # Haz esto

        Esta es una foto de un hongo rojo; intenta convertirlo en un hongo amarillo.

        -   Primero, determina qué bit debes cambiar para que pase de rojo a amarillo.
        -   Una vez que lo hayas determinado, usa los menús desplegables de filtros para que todas las áreas rojas se vuelvan amarillas.
        -   Una vez que el filtro esté en funcionamiento y el rojo se vuelva amarillo, mira si puedes proponer filtros para otros colores.

        _¿Cuántos intentos necesitaste para encontrar el filtro correcto?_
      CSD U1 - PixFilter UnFilter: |-
        # Deshacer filtros

        Los filtros de bits también se pueden utilizar para _deshacer_ filtros. Esta es una imagen de un pájaro a la que se le aplicaron filtros que cambiaron sus colores originales. ¿Puedes volverla a la normalidad?

        # Haz esto

        <img src="https://images.code.org/c15636bda16e8792c59ac955332e37a5-image-1471372091393.22.56.png" style="float:right; width: 200px"/>
        Así es como debe verse nuestro pájaro. Usa el filtro para volverlo a la normalidad.

        -   Decide qué colores (y qué bits) necesitas cambiar. Es posible que tengas que escribir tus ideas en un papel.
        -   Una vez que sepas qué bits deben cambiarse, configura el menú desplegable de filtros de forma adecuada para probar tu respuesta
        -   Después de haber corregido la imagen, anota tu proceso y tu filtro final en la sección del Nivel 6 de tu Guía de Actividades

        _¿Cuántos intentos necesitaste para encontrar el filtro correcto?_
      CSD U2 CSS explore CSS: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">

        <details>

        <summary><strong>¿Cómo cambio entre archivos?</strong></summary>

        Haz clic en el nombre del archivo que deseas ver en el menú en el lado izquierdo de la pantalla.

        </details>
        </div>

        # Agregar estilo

        Este proyecto del Laboratorio web utiliza un nuevo lenguaje para agregar estilo a la página. Con un compañero, explora los archivos `index.html` y`style.css`. Prepárate para debatir sobre las siguientes preguntas.

        -   ¿Qué cambios hace este nuevo lenguaje a la página?
        -   ¿En qué se diferencia este lenguaje del HTML?
        -   ¿Cómo se conectan los archivos `index.html` y`style.css`?
      CSD U2 CSS explore CSS_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>¿Cómo cambio entre archivos?</strong></summary>

        Haz clic en el nombre del archivo que deseas ver en el menú en el lado izquierdo de la pantalla.

        </details>
        </div>

        # Agregar estilo

        Este proyecto del Laboratorio web utiliza un nuevo lenguaje para agregar estilo a la página. Con un compañero, explora los archivos `index.html` y`style.css`. Prepárate para debatir sobre las siguientes preguntas.

        -   ¿Qué cambios hace este nuevo lenguaje a la página?
        -   ¿En qué se diferencia este lenguaje del HTML?
        -   ¿Cómo se conectan los archivos `index.html` y`style.css`?
      CSD U2 CSS explore CSS_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>¿Cómo cambio entre archivos?</strong></summary>

        Haz clic en el nombre del archivo que deseas ver en el menú en el lado izquierdo de la pantalla.

        </details>
        </div>

        # Agregar estilo

        Este proyecto del Laboratorio web utiliza un nuevo lenguaje para agregar estilo a la página. Con un compañero, explora los archivos `index.html` y`style.css`. Prepárate para debatir sobre las siguientes preguntas.

        -   ¿Qué cambios hace este nuevo lenguaje a la página?
        -   ¿En qué se diferencia este lenguaje del HTML?
        -   ¿Cómo se conectan los archivos `index.html` y`style.css`?
      CSD U2 Debugging 1: |-
        # Depuración

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>¿Qué es un bug?</strong>
        </summary>
        Los bugs son errores en el código que hacen que no funcione según lo planeado.
        </details>
        <details>
        <summary><strong>¿Qué es la depuración?</strong>
        </summary>
        La depuración es el proceso de encontrar y corregir errores. Como es un proceso de resolución de problemas, puedes seguir sus pasos cuando intentes depurar.
        </details>
        <details>
        <summary><strong>¿Qué ejemplos de bugs hay?</strong>
        </summary>

        Los bugs pueden ser cualquier cosa que haga que el código no funcione según lo planeado. Algunos ejemplos son los errores de ortografía, poner el código en el lugar equivocado, usar la etiqueta incorrecta u olvidar cerrar una etiqueta.

        </details>
        </div>

        El código informático es escrito por humanos, y los humanos cometen errores. Parte de ser un buen científico informático es encontrar los errores propios y corregirlos. En ciencias de la computación, a los errores los llamamos **bugs**. El proceso de encontrar y corregir esos bugs se llama **depuración**. En los próximos niveles, trabajarás en tus habilidades de depuración.

        # Haz esto

        <img src="https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56 AM.png" style="float:right;border:black solid 5px;">

        -   Mira el código de la página web y debate con tu compañero acerca de la causa de estos dos bugs:
        -   El encabezado no es lo suficientemente grande.
        -   El segundo elemento de la lista no tiene un número.
        -   Corrige todos los errores en el código para que el resultado final coincida con la imagen de la derecha.
      CSD U2 Debugging 1_2018: |-
        # Depuración

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">

        <details>
        <summary><strong>¿Qué es un bug?</strong></summary>
        Los bugs son errores en el código que hacen que no funcione según lo planeado.
        </details>

        <details>
        <summary><strong>¿Qué es la depuración?</strong></summary>
        La depuración es el proceso de encontrar y corregir errores. Como es un proceso de resolución de problemas, puedes seguir sus pasos cuando intentes depurar.
        </details>

        <details>
        <summary><strong>¿Qué ejemplos de bugs hay?</strong>
        </summary>

        Los bugs pueden ser cualquier cosa que haga que el código no funcione según lo planeado. Algunos ejemplos son los errores de ortografía, poner el código en el lugar equivocado, usar la etiqueta incorrecta u olvidar cerrar una etiqueta.

        </details>
        </div>

        El código informático es escrito por humanos, y los humanos cometen errores. Parte de ser un buen científico informático es encontrar los errores propios y corregirlos. En ciencias de la computación, a los errores los llamamos **bugs**. El proceso de encontrar y corregir esos bugs se llama **depuración**. En los próximos niveles, trabajarás en tus habilidades de depuración.

        # Haz esto

        <img src="https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56 AM.png" style="float:right;border:black solid 5px;">

        -   Mira el código de la página web y debate con tu compañero acerca de la causa de estos dos bugs:
            -   El encabezado no es lo suficientemente grande.
            -   El segundo elemento de la lista no tiene un número.
        -   Corrige todos los errores en el código para que el resultado final coincida con la imagen de la derecha.
      CSD U2 Debugging 1_2019: |-
        # Depuración

        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">

        <details>
        <summary><strong>¿Qué es un bug?</strong></summary>
        Los bugs son errores en el código que hacen que no funcione según lo planeado.
        </details>

        <details>
        <summary><strong>¿Qué es la depuración?</strong></summary>
        La depuración es el proceso de encontrar y corregir errores. Como es un proceso de resolución de problemas, puedes seguir sus pasos cuando intentes depurar.
        </details>

        <details>
        <summary><strong>¿Qué ejemplos de bugs hay?</strong></summary>

        Los bugs pueden ser cualquier cosa que haga que el código no funcione según lo planeado. Algunos ejemplos son los errores de ortografía, poner el código en el lugar equivocado, usar la etiqueta incorrecta u olvidar cerrar una etiqueta.

        </details>
        </div>

        El código informático es escrito por humanos, y los humanos cometen errores. Parte de ser un buen científico informático es encontrar los errores propios y corregirlos. En ciencias de la computación, a los errores los llamamos **bugs**. El proceso de encontrar y corregir esos bugs se llama **depuración**. En los próximos niveles, trabajarás en tus habilidades de depuración.

        # Haz esto

        <img src="https://images.code.org/9c4d90a5a8293c5aee56e6cb81dae689-image-1500915264278.52.56 AM.png" style="float:right;border:black solid 5px;">

        -   Mira el código de la página web y debate con tu compañero acerca de la causa de estos dos bugs:
            -   El encabezado no es lo suficientemente grande.
            -   El segundo elemento de la lista no tiene un número.
        -   Corrige todos los errores en el código para que el resultado final coincida con la imagen de la derecha.
      CSD U2 Debugging 2: "# Depuración\n\n<div style=\"float: right; height: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary><strong>¿Qué
        es un bug?</strong>\n\n</summary>\n\nLos bugs son errores en el código que
        hacen que no funcione según lo planeado.\n\n</details>\n<details>\n<summary><strong>¿Qué
        es la depuración?</strong>\n</summary>\n\nLa depuración es el proceso de encontrar
        y corregir errores. Como es un proceso de resolución de problemas, puedes
        seguir sus pasos cuando intentes depurar.\n\n</details>\n<details>\n<summary><strong>¿Qué
        ejemplos de bugs hay?</strong>\n</summary>\n\nLos bugs pueden ser cualquier
        cosa que haga que el código no funcione según lo planeado. Algunos ejemplos
        son los errores de ortografía, poner el código en el lugar equivocado, usar
        la etiqueta incorrecta u olvidar cerrar una etiqueta.\n\n</details>\n</div>\n\n¡Practiquemos
        un poco más la depuración! Esta página es un poco más difícil de depurar que
        la anterior. \n\n# Haz esto\n\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38
        AM.png\" style=\"float:right;border:5px black solid;width:250px\">\n\n-   Debate
        con tu compañero acerca de qué bugs crees que tiene esta página.\n-   Encuentra
        y corrige todos los bugs para que tu página se vea igual a la de la derecha."
      CSD U2 Debugging 2_2018: "# Depuración\n\n<div style=\"float: right; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"
        markdown=\"1\">\n<details>\n\n<summary><strong>¿Qué es un bug?</strong></summary>\nLos
        bugs son errores en el código que hacen que no funcione según lo planeado.\n</details>\n\n<details>\n<summary><strong>¿Qué
        es la depuración?</strong></summary>\nLa depuración es el proceso de encontrar
        y corregir errores. Como es un proceso de resolución de problemas, puedes
        seguir sus pasos cuando intentes depurar.\n</details>\n\n<details>\n<summary><strong>¿Qué
        ejemplos de bugs hay?</strong></summary>\n\nLos bugs pueden ser cualquier
        cosa que haga que el código no funcione según lo planeado. Algunos ejemplos
        son los errores de ortografía, poner el código en el lugar equivocado, usar
        la etiqueta incorrecta u olvidar cerrar una etiqueta.\n\n</details>\n</div>\n\n¡Practiquemos
        un poco más la depuración! Esta página es un poco más difícil de depurar que
        la anterior. \n\n# Haz esto\n\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38
        AM.png\" style=\"float:right;border:5px black solid;width:250px\">\n\n-   Debate
        con tu compañero acerca de qué bugs crees que tiene esta página.\n-   Encuentra
        y corrige todos los bugs para que tu página se vea igual a la de la derecha."
      CSD U2 Debugging 2_2019: "# Depuración\n\n<div class=\"no-pullthrough\" style=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"
        markdown=\"1\">\n<details>\n\n<summary><strong>¿Qué es un bug?</strong></summary>\nLos
        bugs son errores en el código que hacen que no funcione según lo planeado.\n</details>\n\n<details>\n<summary><strong>¿Qué
        es la depuración?</strong></summary>\nLa depuración es el proceso de encontrar
        y corregir errores. Como es un proceso de resolución de problemas, puedes
        seguir sus pasos cuando intentes depurar.\n</details>\n\n<details>\n<summary><strong>¿Qué
        ejemplos de bugs hay?</strong></summary>\n\nLos bugs pueden ser cualquier
        cosa que haga que el código no funcione según lo planeado. Algunos ejemplos
        son los errores de ortografía, poner el código en el lugar equivocado, usar
        la etiqueta incorrecta u olvidar cerrar una etiqueta.\n\n</details>\n</div>\n\n¡Practiquemos
        un poco más la depuración! Esta página es un poco más difícil de depurar que
        la anterior. \n\n# Haz esto\n\n<img src=\"https://images.code.org/61190513dba270c731251df168b98f80-image-1474383960371.02.38
        AM.png\" style=\"float:right;border:5px black solid;width:250px\">\n\n-   Debate
        con tu compañero acerca de qué bugs crees que tiene esta página.\n-   Encuentra
        y corrige todos los bugs para que tu página se vea igual a la de la derecha."
      CSD U2 Debugging 3: |-
        # Depuración

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>¿Qué es un bug?</strong>
        </summary>

        Los bugs son errores en el código que hacen que no funcione según lo planeado.

        </details>
        <details>
        <summary><strong>¿Qué es la depuración?</strong>
        </summary>

        La depuración es el proceso de encontrar y corregir errores. Como es un proceso de resolución de problemas, puedes seguir sus pasos cuando intentes depurar.

        </details>
        <details>
        <summary><strong>¿Qué ejemplos de bugs hay?</strong>
        </summary>

        Los bugs pueden ser cualquier cosa que haga que el código no funcione según lo planeado. Algunos ejemplos son los errores de ortografía, poner el código en el lugar equivocado, usar la etiqueta incorrecta u olvidar cerrar una etiqueta.

        </details>
        <details>
        <summary><strong>¿Por qué el inspector a veces deja de funcionar?</strong>
        </summary>

        A veces hay tantos bugs en el HTML que el inspector no puede leer el código correctamente y deja de funcionar por completo, incluso en las partes del código que son correctas. Una vez que se corrigen los bugs, el inspector vuelve a funcionar.

        </details>
        </div>

        Esta página contiene imágenes. Encontrar bugs en páginas con imágenes es un poco más complicado. ¿Puedes depurar esta página?

        # Haz esto

        -   Debate con tu compañero acerca de la causa de los bugs en esta página.
        -   Corrige los bugs para que tu página se vea igual a la página de destino que se muestra debajo.

        ![](<https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24 AM.png>)
      CSD U2 Debugging 3_2018: |-
        # Depuración

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Qué es un bug?</strong>
        </summary>
        Los bugs son errores en el código que hacen que no funcione según lo planeado.
        </details>
        <details>
        <summary>
        <strong>¿Qué es la depuración?</strong>
        </summary>
        La depuración es el proceso de encontrar y corregir errores. Como es un proceso de resolución de problemas, puedes seguir sus pasos cuando intentes depurar.
        </details>
        <details>
        <summary>
        <strong>¿Qué ejemplos de bugs hay?</strong>
        </summary>
        Los bugs pueden ser cualquier cosa que haga que el código no funcione según lo planeado. Algunos ejemplos son los errores de ortografía, poner el código en el lugar equivocado, usar la etiqueta incorrecta u olvidar cerrar una etiqueta.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el inspector a veces deja de funcionar?</strong>
        </summary>

        A veces hay tantos bugs en el HTML que el inspector no puede leer el código correctamente y deja de funcionar por completo, incluso en las partes del código que son correctas. Una vez que se corrigen los bugs, el inspector vuelve a funcionar.

        </details>
        </div>

        Esta página contiene imágenes. Encontrar bugs en páginas con imágenes es un poco más complicado. ¿Puedes depurar esta página?

        # Haz esto

        -   Debate con tu compañero acerca de la causa de los bugs en esta página.
        -   Corrige los bugs para que tu página se vea igual a la página de destino que se muestra debajo.

        ![](<https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24 AM.png>)
      CSD U2 Debugging 3_2019: |-
        # Depuración

        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Qué es un bug?</strong>
        </summary>
        Los bugs son errores en el código que hacen que no funcione según lo planeado.
        </details>
        <details>
        <summary>
        <strong>¿Qué es la depuración?</strong>
        </summary>
        La depuración es el proceso de encontrar y corregir errores. Como es un proceso de resolución de problemas, puedes seguir sus pasos cuando intentes depurar.
        </details>
        <details>
        <summary>
        <strong>¿Qué ejemplos de bugs hay?</strong>
        </summary>
        Los bugs pueden ser cualquier cosa que haga que el código no funcione según lo planeado. Algunos ejemplos son los errores de ortografía, poner el código en el lugar equivocado, usar la etiqueta incorrecta u olvidar cerrar una etiqueta.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el inspector a veces deja de funcionar?</strong>
        </summary>

        A veces hay tantos bugs en el HTML que el inspector no puede leer el código correctamente y deja de funcionar por completo, incluso en las partes del código que son correctas. Una vez que se corrigen los bugs, el inspector vuelve a funcionar.

        </details>
        </div>

        Esta página contiene imágenes. Encontrar bugs en páginas con imágenes es un poco más complicado. ¿Puedes depurar esta página?

        # Haz esto

        -   Debate con tu compañero acerca de la causa de los bugs en esta página.
        -   Corrige los bugs para que tu página se vea igual a la página de destino que se muestra debajo.

        ![](<https://images.code.org/4a9ac71bcf6c04775df791516562cd47-image-1508779270522.56.24 AM.png>)
      CSD U2 Debugging 4: |-
        # Aplicar formato

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>¿Qué es el espacio en blanco?</strong>
        </summary>

        El espacio en blanco se refiere a cualquier carácter que aparece como un espacio en blanco en la pantalla, por ejemplo, un espacio, una pestaña o una nueva línea. Los espacios en blanco ayudan a separar diferentes partes del documento para que sea más fácil de leer. Por ejemplo, en el código HTML, los nuevos elementos se suelen colocar en una nueva línea, aunque esto no haga ninguna diferencia en cómo se ve la página.

        </details>
        <details>
        <summary><strong>¿Qué es la sangría?</strong>
        </summary>

        La sangría es la ubicación del texto más hacia la derecha o hacia la izquierda con el objetivo de separarlo del texto circundante. La sangría ayuda a expresar la estructura del programa. En HTML, los elementos que están dentro de otros elementos suelen tener sangría. Este es un ejemplo:

        <pre>
        &lt;body&gt;
        &lt;p&gt;Este párrafo está dentro del elemento "cuerpo".&lt;/p&gt;
        &lt;/body&gt;
        </pre>

        </details>
        <details>
        <summary><strong>¿Qué significa aplicar formato?</strong>
        </summary>

        Aplicar formato es organizar el texto de manera que sea más fácil de entender. En HTML, esto suele hacerse con la sangría. Eso significa que los elementos que están dentro de otros elementos están más a la derecha en el código. Este es un ejemplo:

        <pre>
        &lt;body&gt;
        &lt;p&gt;Este párrafo está dentro del elemento "cuerpo".&lt;/p&gt;
        &lt;/body&gt;
        </pre>

        </details>
        <details>
        <summary><strong>¿Por qué el inspector a veces deja de funcionar?</strong>
        </summary>

        A veces hay tantos bugs en el HTML que el inspector no puede leer el código correctamente y deja de funcionar por completo, incluso en las partes del código que son correctas. Una vez que se corrigen los bugs, el inspector vuelve a funcionar.

        </details>
        </div>

        Según cómo escribas tu código, puede ser más fácil o más difícil encontrar bugs. Si utilizas **espacios en blanco** y **sangría**, será más fácil de leer y corregir.

        # Haz esto

        -   Observa el código con tu compañero y debatan sobre cuál debería ser el formato para que sea más fácil de leer.
        -   Agrega nuevas líneas y sangría para que el código sea más fácil de leer.
        -   Corrige los bugs para que tu página se vea igual a la página de destino que se muestra debajo.

        ![](<https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13 AM.png>)
      CSD U2 Debugging 4_2018: |-
        # Aplicar formato

        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>¿Qué es el espacio en blanco?</strong></summary>
        El espacio en blanco se refiere a cualquier carácter que aparece como un espacio en blanco en la pantalla, por ejemplo, un espacio, una pestaña o una nueva línea. Los espacios en blanco ayudan a separar diferentes partes del documento para que sea más fácil de leer. Por ejemplo, en el código HTML, los nuevos elementos se suelen colocar en una nueva línea, aunque esto no haga ninguna diferencia en cómo se ve la página.
        </details>
        <details>
        <summary><strong>¿Qué es la sangría?</strong></summary>
        La sangría es la ubicación del texto más hacia la derecha o hacia la izquierda con el objetivo de separarlo del texto circundante. La sangría ayuda a expresar la estructura del programa. En HTML, los elementos que están dentro de otros elementos suelen tener sangría. Este es un ejemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este párrafo está dentro del elemento "cuerpo".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary><strong>¿Qué significa aplicar formato?</strong></summary>
        Aplicar formato es organizar el texto de manera que sea más fácil de entender. En HTML, esto suele hacerse con la sangría. Eso significa que los elementos que están dentro de otros elementos están más a la derecha en el código. Este es un ejemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este párrafo está dentro del elemento "cuerpo".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary><strong>¿Por qué el inspector a veces deja de funcionar?</strong>
        </summary>
        A veces hay tantos bugs en el HTML que el inspector no puede leer el código correctamente y deja de funcionar por completo, incluso en las partes del código que son correctas. Una vez que se corrigen los bugs, el inspector vuelve a funcionar.

        </details>
        </div>

        Según cómo escribas tu código, puede ser más fácil o más difícil encontrar bugs. Si utilizas **espacios en blanco** y **sangría**, será más fácil de leer y corregir.

        # Haz esto

        -   Observa el código con tu compañero y debatan sobre cuál debería ser el formato para que sea más fácil de leer.
        -   Agrega nuevas líneas y sangría para que el código sea más fácil de leer.
        -   Corrige los bugs para que tu página se vea igual a la página de destino que se muestra debajo.

        ![](<https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13 AM.png>)
      CSD U2 Debugging 4_2019: |-
        # Aplicar formato

        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>¿Qué es el espacio en blanco?</strong>
        </summary>

        El espacio en blanco se refiere a cualquier carácter que aparece como un espacio en blanco en la pantalla, por ejemplo, un espacio, una pestaña o una nueva línea. Los espacios en blanco ayudan a separar diferentes partes del documento para que sea más fácil de leer. Por ejemplo, en el código HTML, los nuevos elementos se suelen colocar en una nueva línea, aunque esto no haga ninguna diferencia en cómo se ve la página.

        </details>
        <details>
        <summary><strong>¿Qué es la sangría?</strong></summary>
        La sangría es la ubicación del texto más hacia la derecha o hacia la izquierda con el objetivo de separarlo del texto circundante. La sangría ayuda a expresar la estructura del programa. En HTML, los elementos que están dentro de otros elementos suelen tener sangría. Este es un ejemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este párrafo está dentro del elemento "cuerpo".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary><strong>¿Qué significa aplicar formato?</strong></summary>
        Aplicar formato es organizar el texto de manera que sea más fácil de entender. En HTML, esto suele hacerse con la sangría. Eso significa que los elementos que están dentro de otros elementos están más a la derecha en el código. Este es un ejemplo:
        <pre>
        &lt;body&gt;
        &lt;p&gt;Este párrafo está dentro del elemento "cuerpo".&lt;/p&gt;
        &lt;/body&gt;
        </pre>
        </details>
        <details>
        <summary><strong>¿Por qué el inspector a veces deja de funcionar?</strong>
        </summary>

        A veces hay tantos bugs en el HTML que el inspector no puede leer el código correctamente y deja de funcionar por completo, incluso en las partes del código que son correctas. Una vez que se corrigen los bugs, el inspector vuelve a funcionar.

        </details>
        </div>

        Según cómo escribas tu código, puede ser más fácil o más difícil encontrar bugs. Si utilizas **espacios en blanco** y **sangría**, será más fácil de leer y corregir.

        # Haz esto

        -   Observa el código con tu compañero y debatan sobre cuál debería ser el formato para que sea más fácil de leer.
        -   Agrega nuevas líneas y sangría para que el código sea más fácil de leer.
        -   Corrige los bugs para que tu página se vea igual a la página de destino que se muestra debajo.

        ![](<https://images.code.org/7e194db101f71235340fc075bf09776c-image-1508777739384.46.13 AM.png>)
      CSD U2 HTML Adding Paragraphs: |-
        # Agregar texto al cuerpo

        Cuando comienzas un proyecto en el Laboratorio web, automáticamente agregará las etiquetas `<!DOCTYPE>`, `<html>`, `<head>` y `<body>` al mismo. Cuando agregues contenido a tus proyectos, deberás hacerlo entre las etiquetas `<body>` y `</body>` porque debe ser parte del cuerpo de tu página web.

        # Haz esto

        -   Escribe tres oraciones separadas sobre un tema de tu interés dentro de las etiquetas del cuerpo de tu página web.
        -   Presiona "Actualizar y guardar" si no ves los cambios en el área de vista previa.
        -   Compara tu trabajo con el de un compañero. Asegúrate de colocar el código en el mismo lugar.
      CSD U2 HTML Adding Paragraphs pt 2: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>¿Qué es un párrafo?</strong></summary>

        Los párrafos están marcados con etiquetas de apertura (`<p>`) y cierre (`</p>`). Los párrafos de texto en HTML pueden tener cualquier longitud, desde una palabra hasta un grupo de oraciones. Agrupan conjuntos de oraciones y ponen un espacio entre ese grupo de texto y el siguiente.

        </details>
        <details>
        <summary><strong>¿Cómo puedo crear varios párrafos?</strong>
        </summary>

        Este es un ejemplo de varias etiquetas de párrafo en una fila. Este código debería colocarse dentro del cuerpo de tu página web.

        <p>Este es un párrafo. Tiene dos oraciones.</p>
        <p>Este es otro párrafo.</p>

        </details>
        </div>

        # Usar etiquetas de párrafos

        La etiqueta `<p>` o la etiqueta "párrafo" se colocan alrededor del texto para indicar que es parte de un párrafo. Al colocar texto en una etiqueta de párrafo, la computadora sabe que debe mostrarse de manera diferente, por lo general, con un espacio que lo separe del otro texto.

        # Haz esto

        -   Coloca el texto que has escrito dentro de al menos dos párrafos separados y rodéalo de las etiquetas `<p>` y `</p>`
        -   Compara los resultados con el de un compañero. ¿Qué cambió respecto de la manera en que se muestra el texto?
      CSD U2 HTML Adding Paragraphs pt 2_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        **¿Qué es un párrafo?**

        </summary>

        Los párrafos están marcados con etiquetas de apertura (`<p>`) y cierre (`</p>`. Los párrafos de texto en HTML pueden tener cualquier longitud, desde una palabra hasta un grupo de oraciones. Agrupan conjuntos de oraciones y ponen un espacio entre ese grupo de texto y el siguiente.

        </details>
        <details>
        <summary>

        **¿Cómo puedo crear varios párrafos?**

        </summary>

        Este es un ejemplo de varias etiquetas de párrafo en una fila. Este código debería colocarse dentro del cuerpo de tu página web.

        <p>Este es un párrafo. Tiene dos oraciones.</p>
        <p>Este es otro párrafo.</p>

        </details>
        </div>

        # Usar etiquetas de párrafos

        Las etiquetas `<p>` `</p>` o "párrafo" se colocan alrededor del texto para indicar que es parte de un párrafo. Al colocar texto entre etiquetas de apertura y cierre de párrafo, la computadora sabe que debe mostrarse de manera diferente, por lo general, con un espacio que lo separe del otro texto.

        # Haz esto

        -   Coloca el texto que has escrito dentro de al menos dos párrafos separados y rodéalo de las etiquetas `<p>` y `</p>`
        -   Compara los resultados con el de un compañero. ¿Qué cambió respecto de la manera en que se muestra el texto?
      CSD U2 HTML Adding Paragraphs pt 2_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Qué es un párrafo?</strong>
        </summary>

        Los párrafos están marcados con etiquetas de apertura (`<p>`) y cierre (`</p>`. Los párrafos de texto en HTML pueden tener cualquier longitud, desde una palabra hasta un grupo de oraciones. Agrupan conjuntos de oraciones y ponen un espacio entre ese grupo de texto y el siguiente.

        </details>
        <details>
        <summary>
        <strong>¿Cómo puedo crear varios párrafos?</strong>
        </summary>

        Este es un ejemplo de varias etiquetas de párrafo en una fila. Este código debería colocarse dentro del cuerpo de tu página web.

        <p>Este es un párrafo. Tiene dos oraciones.</p>
        <p>Este es otro párrafo.</p>

        </details>
        </div>

        # Usar etiquetas de párrafos

        Las etiquetas `<p>` `</p>` o "párrafo" se colocan alrededor del texto para indicar que es parte de un párrafo. Al colocar texto entre etiquetas de apertura y cierre de párrafo, la computadora sabe que debe tratarse de manera diferente, a menudo, con un espacio que lo separe del otro texto.

        # Haz esto

        -   Coloca el texto que has escrito dentro de al menos dos párrafos separados y rodéalo de las etiquetas `<p>` y `</p>`
        -   Compara los resultados con el de un compañero. ¿Qué cambió respecto de la manera en que se muestra el texto?
      CSD U2 HTML Adding Paragraphs_2018: |-
        # Agregar texto al cuerpo

        Cuando comienzas un proyecto en el Laboratorio web, automáticamente agregará las etiquetas `<!DOCTYPE>`, `<html>`, `<head>` y `<body>` al mismo. Cuando agregues contenido a tus proyectos, deberás hacerlo entre las etiquetas `<body>` y `</body>` porque debe ser parte del cuerpo de tu página web.

        # Haz esto

        -   Escribe tres oraciones separadas sobre un tema de tu interés dentro de las etiquetas del cuerpo de tu página web.
        -   Presiona "Actualizar y guardar" si no ves los cambios en el área de vista previa.
        -   Compara tu trabajo con el de un compañero. Asegúrate de colocar el código en el mismo lugar.
      CSD U2 HTML Adding Paragraphs_2019: |-
        # Agregar texto al cuerpo

        Cuando comienzas un proyecto en el Laboratorio web, automáticamente agregará las etiquetas `<!DOCTYPE>`, `<html>`, `<head>` y `<body>` al mismo. Cuando agregues contenido a tus proyectos, deberás hacerlo entre las etiquetas `<body>` y `</body>` porque debe ser parte del cuerpo de tu página web.

        # Haz esto

        -   Escribe tres oraciones separadas sobre un tema de tu interés dentro de las etiquetas del cuerpo de tu página web.
        -   Presiona "Actualizar y guardar" si no ves los cambios en el área de vista previa.
        -   Compara tu trabajo con el de un compañero. Asegúrate de colocar el código en el mismo lugar.
      CSD U2 HTML Debug Paragraphs: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Qué es un párrafo?</strong>
        </summary>
        Los párrafos están marcados con etiquetas de apertura (`<p>`) y cierre (`</p>`. Los párrafos de texto en HTML pueden tener cualquier longitud, desde una palabra hasta un grupo de oraciones. Agrupan conjuntos de oraciones y ponen un espacio entre ese grupo de texto y el siguiente.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el HTML parece funcionar incluso cuando está roto?</strong>
        </summary>
        El HTML es leído por tu navegador web para generar páginas web. Dado que las personas suelen cometer pequeños errores al escribir sus páginas web, los navegadores están programados para suponer lo que se pretendía hacer. ¡A veces se programan diferentes navegadores de tal manera que hagan diferentes suposiciones! La única forma de asegurarte de que tu código se vea como debe ser es utilizando las etiquetas de forma adecuada.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el código a veces se vuelve rosa?</strong>
        </summary>

        El Laboratorio web está programado para detectar algunos errores en el HTML automáticamente . Cuando advierte un error, el código se vuelve rosa. El error puede estar del código rosa o antes. Tendrás que depurar con atención para encontrarlo.

        </details>
        </div>

        # Depuración: corrige las etiquetas rotas

        Esta página web simple tiene algunos problemas que impiden que el contenido se muestre correctamente. Identifica y corrige los problemas. Esta práctica también se llama "depuración" del código.

        # Haz esto

        -   Corrige el código roto para que la página web se muestre de forma adecuada
        -   Compara los problemas que has corregido con el compañero de al lado
      CSD U2 HTML Debug Paragraphs_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>

        <strong>¿Qué es un párrafo?</strong>

        </summary>

        Los párrafos están marcados con etiquetas de apertura (`<p>`) y cierre (`</p>`. Los párrafos de texto en HTML pueden tener cualquier longitud, desde una palabra hasta un grupo de oraciones. Agrupan conjuntos de oraciones y ponen un espacio entre ese grupo de texto y el siguiente.

        </details>
        <details>
        <summary>

        <strong>¿Por qué el HTML parece funcionar incluso cuando está roto?</strong>

        </summary>

        El HTML es leído por tu navegador web para generar páginas web. Dado que las personas suelen cometer pequeños errores al escribir sus páginas web, los navegadores están programados para suponer lo que se pretendía hacer. ¡A veces se programan diferentes navegadores de tal manera que hagan diferentes suposiciones! La única forma de asegurarte de que tu código se vea como debe ser es utilizando las etiquetas de forma adecuada.

        </details>
        <details>
        <summary>

        <strong>¿Por qué el código a veces se vuelve rosa?</strong>

        </summary>

        El Laboratorio web está programado para detectar algunos errores en el HTML automáticamente . Cuando advierte un error, el código se vuelve rosa. El error puede estar del código rosa o antes. Tendrás que depurar con atención para encontrarlo.

        </details>
        </div>

        # Depuración: corrige las etiquetas rotas

        Esta página web simple tiene algunos problemas que impiden que el contenido se muestre correctamente. Identifica y corrige los problemas. Esta práctica también se llama "depuración" del código.

        # Haz esto

        -   Corrige el código roto para que la página web se muestre de forma adecuada
        -   Compara los problemas que has corregido con el compañero de al lado
      CSD U2 HTML Debug Paragraphs_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>
        <strong>¿Qué es un párrafo?</strong>
        </summary>

        Los párrafos están marcados con etiquetas de apertura (`<p>`) y cierre (`</p>`. Los párrafos de texto en HTML pueden tener cualquier longitud, desde una palabra hasta un grupo de oraciones. Agrupan conjuntos de oraciones y ponen un espacio entre ese grupo de texto y el siguiente.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el HTML parece funcionar incluso cuando está roto?</strong>

        </summary>

        El HTML es leído por tu navegador web para generar páginas web. Dado que las personas suelen cometer pequeños errores al escribir sus páginas web, los navegadores están programados para suponer lo que se pretendía hacer. ¡A veces se programan diferentes navegadores de tal manera que hagan diferentes suposiciones! La única forma de asegurarte de que tu código se vea como debe ser es utilizando las etiquetas de forma adecuada.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el código a veces se vuelve rosa?</strong>
        </summary>

        El Laboratorio web está programado para detectar algunos errores en el HTML automáticamente . Cuando advierte un error, el código se vuelve rosa. El error puede estar del código rosa o antes. Tendrás que depurar con atención para encontrarlo.

        </details>
        </div>

        # Depuración: corrige las etiquetas rotas

        Esta página web simple tiene algunos problemas que impiden que el contenido se muestre correctamente. Identifica y corrige los problemas. Esta práctica también se llama "depuración" del código.

        # Haz esto

        -   Corrige el código roto para que la página web se muestre de forma adecuada
        -   Compara los problemas que has corregido con el compañero de al lado
      CSD U2 Heading Demo_2018: "# Títulos\n\n<div style=\"float: right; height: 250px;
        width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\" markdown=\"1\">\n<details>\n\n<summary>\n\n**¿Qué
        son los títulos?**\n\n</summary>\nLos títulos son títulos de secciones de
        diferentes tamaños en una página web. Los títulos agregan estructura a tu
        página web, ya que la dividen para que sea más fácil de leer.\n</details>\n<details>\n<summary>\n\n**¿Cómo
        puedo crear títulos de diferentes tamaños?**\n\n</summary>\nLos títulos vienen
        en 6 tamaños diferentes. Hasta el momento, has utilizado principalmente el
        más grande: &lt;h1&gt;. El número '1' en la etiqueta HTML designa que este
        es el título más grande. El título más pequeño es el &lt;h6&gt;. También puedes
        probar las etiquetas &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, y &lt;h5&gt;, que
        son más pequeñas cuanto más grande es el número.\n</h1>\n</details>\n<details>\n<summary>\n\n**¿Qué
        es el HTML?**\n\n</summary>\nHTML significa Hypertext Markup Language (lenguaje
        de marcado de hipertexto). Se utiliza para agregar estructura al contenido
        de una página web y emplea etiquetas para especificar dónde comienzan y terminan
        ciertas estructuras. Estas etiquetas son conjuntos de caracteres que no se
        encuentran en el idioma español y cuyo objetivo es diferenciar el contenido
        de la estructura. \n</details>\n<details>\n<summary>\n\n**¿Qué es un elemento
        HTML?**\n\n</summary>\nUn elemento HTML es una pieza del sitio web marcada
        por una etiqueta de inicio y que suele cerrarse con una etiqueta de final.
        El elemento también incluye el contenido dentro de las etiquetas. Por ejemplo:
        \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"
        style=\"width:500px\">\n</details>\n<details>\n<summary>\n\n**¿Qué es una
        etiqueta HTML?**\n\n</summary>\n\nUna etiqueta HTML es el conjunto especial
        de caracteres que le indica a la máquina dónde está el inicio o el final de
        un elemento HTML y de qué tipo es.\n\n</details>\n</div>\n\nHasta ahora, has
        organizado tu contenido en párrafos. Otra forma en que el HTML te permite
        organizar tu código es mediante el uso de **títulos**. Un título es un fragmento
        de texto corto, como un título, que se encuentra en la parte superior de una
        sección de contenido.\n\nHaz esto:\n\n-   Encuentra los títulos en la página
        web a continuación y usa la herramienta de inspección para ver el código que
        los crea.\n-   Asegúrate de que tú y tu compañero estén de acuerdo en lo que
        hacen las etiquetas.\n-   Cambia el código para que \"Dibujo\" y \"2 años\"
        coincidan con los títulos del resto de la página."
      CSD U2 Heading Demo_2019: "# Títulos\n\n<div class=\"no-pullthrough\" style=\"float:
        right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\">\n<details>\n\n<summary><strong>¿Qué
        son los títulos?</strong>\n\n</summary>\nLos títulos son títulos de secciones
        de diferentes tamaños en una página web. Los títulos agregan estructura a
        tu página web, ya que la dividen para que sea más fácil de leer.\n</details>\n<details>\n<summary><strong>¿Cómo
        puedo crear títulos de diferentes tamaños?</strong>\n\n</summary>\nLos títulos
        vienen en 6 tamaños diferentes. Hasta el momento, has utilizado principalmente
        el más grande: &lt;h1&gt;. El número '1' en la etiqueta HTML designa que este
        es el título más grande. El título más pequeño es el &lt;h6&gt;. También puedes
        probar las etiquetas &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, y &lt;h5&gt;, que
        son más pequeñas cuanto más grande es el número.\n</details>\n<details>\n<summary><strong>¿Qué
        es el HTML?</strong>\n\n</summary>\nHTML significa Hypertext Markup Language
        (lenguaje de marcado de hipertexto). Se utiliza para agregar estructura al
        contenido de una página web y emplea etiquetas para especificar dónde comienzan
        y terminan ciertas estructuras. Estas etiquetas son conjuntos de caracteres
        que no se encuentran en el idioma español y cuyo objetivo es diferenciar el
        contenido de la estructura. \n</details>\n<details>\n<summary><strong>¿Qué
        es un elemento HTML?</strong>\n\n</summary>\nUn elemento HTML es una pieza
        del sitio web marcada por una etiqueta de inicio y que suele cerrarse con
        una etiqueta de final. El elemento también incluye el contenido dentro de
        las etiquetas. Por ejemplo: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"
        style=\"width:500px\">\n</details>\n<details>\n<summary><strong>¿Qué es una
        etiqueta HTML?</strong>\n\n</summary>\n\nUna etiqueta HTML es el conjunto
        especial de caracteres que le indica a la máquina dónde está el inicio o el
        final de un elemento HTML y de qué tipo es.\n\n</details>\n</div>\n\nHasta
        ahora, has organizado tu contenido en párrafos. Otra forma en que el HTML
        te permite organizar tu código es mediante el uso de **títulos**. Un título
        es un fragmento de texto corto, como un título, que se encuentra en la parte
        superior de una sección de contenido.\n\n# Haz esto:\n\n-   Encuentra los
        títulos en la página web a continuación y usa la herramienta de inspección
        para ver el código que los crea.\n-   Asegúrate de que tú y tu compañero estén
        de acuerdo en lo que hacen las etiquetas.\n-   Cambia el código para que \"Dibujo\"
        y \"2 años\" coincidan con los títulos del resto de la página."
      CSD U2 Heading Sizes: "# Tamaños de títulos\n\n<div style=\"float: right; height:
        250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"
        markdown=\"1\">\n<details>\n\n<summary>\n<strong>¿Qué son los títulos?</strong>\n\n</summary>\nLos
        títulos son títulos de secciones de diferentes tamaños en una página web.
        Los títulos agregan estructura a tu página web, ya que la dividen para que
        sea más fácil de leer.\n</details>\n<details>\n<summary><strong>¿Cómo puedo
        crear títulos de diferentes tamaños?</strong>\n\n</summary>\nLos títulos vienen
        en 6 tamaños diferentes. El título más común es &lt;h1&gt;,. El número 1 en
        la etiqueta HTML designa que este es el título más grande. El título más pequeño
        es el &lt;h6&gt;. También puedes probar las etiquetas &lt;h2&gt;, &lt;h3&gt;,
        &lt;h4&gt; y &lt;h5&gt;, que son más pequeñas cuanto más grande es el número.\n</details>\n<details>\n<summary><strong>¿Qué
        es el HTML?</strong>\n\n</summary>\nHTML significa Hypertext Markup Language
        (lenguaje de marcado de hipertexto). Se utiliza para agregar estructura al
        contenido de una página web y emplea etiquetas para especificar dónde comienzan
        y terminan ciertas estructuras. Estas etiquetas son conjuntos de caracteres
        que no se encuentran en el idioma español y cuyo objetivo es diferenciar el
        contenido de la estructura.\n</details>\n<details>\n<summary><strong>¿Qué
        es un elemento HTML?</strong>\n\n</summary>\nUn elemento HTML es una pieza
        del sitio web marcada por una etiqueta de inicio y que suele cerrarse con
        una etiqueta de final. El elemento también incluye el contenido dentro de
        las etiquetas. Por ejemplo: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"
        style=\"width:500px\">\n</details>\n<details>\n<summary><strong>¿Qué es una
        etiqueta HTML?</strong>\n\n</summary>\n\nUna etiqueta HTML es el conjunto
        especial de caracteres que le indica a la máquina dónde está el inicio o el
        final de un elemento HTML y de qué tipo es.\n\n</details>\n</div>\n\nLos títulos
        pueden venir en diferentes tamaños. En esta página, hay seis tamaños diferentes
        de títulos, pero están todos mezclados. ¿Tú y tu compañero pueden averiguar
        cómo corregirlos?\n\nHaz esto:\n\n-   Usa la herramienta de inspección para
        averiguar por qué los títulos tienen diferentes tamaños\n-   Asegúrate de
        que tú y tu compañero estén de acuerdo en lo que hacen las diferentes etiquetas
        de encabezados.\n-   Cambia las etiquetas para que los títulos estén ordenados
        del más grande al más pequeño, y el texto diga el tamaño correcto, como se
        ve en la imagen a continuación. \n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15
        PM.png\" style=\"width:100px; float:left\">"
      CSD U2 Heading Sizes_2018: "# Tamaños de títulos\n\n<div style=\"float: right;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"
        markdown=\"1\">\n<details>\n\n<summary>\n\n**¿Qué son los títulos?**\n\n</summary>\nLos
        títulos son títulos de secciones de diferentes tamaños en una página web.
        Los títulos agregan estructura a tu página web, ya que la dividen para que
        sea más fácil de leer.\n</details>\n<details>\n<summary>\n\n**¿Cómo puedo
        crear títulos de diferentes tamaños?**\n\n</summary>\nLos títulos vienen en
        6 tamaños diferentes. El título más común es &lt;h1&gt;,. El número 1 en la
        etiqueta HTML designa que este es el título más grande. El título más pequeño
        es el &lt;h6&gt;. También puedes probar las etiquetas &lt;h2&gt;, &lt;h3&gt;,
        &lt;h4&gt; y &lt;h5&gt;, que son más pequeñas cuanto más grande es el número.\n</details>\n<details>\n<summary>\n\n**¿Qué
        es el HTML?**\n\n</summary>\nHTML significa Hypertext Markup Language (lenguaje
        de marcado de hipertexto). Se utiliza para agregar estructura al contenido
        de una página web y emplea etiquetas para especificar dónde comienzan y terminan
        ciertas estructuras. Estas etiquetas son conjuntos de caracteres que no se
        encuentran en el idioma español y cuyo objetivo es diferenciar el contenido
        de la estructura.\n</details>\n<details>\n<summary>\n\n**¿Qué es un elemento
        HTML?**\n\n</summary>\nUn elemento HTML es una pieza del sitio web marcada
        por una etiqueta de inicio y que suele cerrarse con una etiqueta de final.
        El elemento también incluye el contenido dentro de las etiquetas. Por ejemplo:
        \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"
        style=\"width:500px\">\n</details>\n<details>\n<summary>\n\n**¿Qué es una
        etiqueta HTML?**\n\n</summary>\n\nUna etiqueta HTML es el conjunto especial
        de caracteres que le indica a la máquina dónde está el inicio o el final de
        un elemento HTML y de qué tipo es.\n\n</details>\n</div>\n\nLos títulos pueden
        venir en diferentes tamaños. En esta página, hay seis tamaños diferentes de
        títulos, pero están todos mezclados. ¿Tú y tu compañero pueden averiguar cómo
        corregirlos?\n\nHaz esto:\n\n-   Usa la herramienta de inspección para averiguar
        por qué los títulos tienen diferentes tamaños\n-   Asegúrate de que tú y tu
        compañero estén de acuerdo en lo que hacen las diferentes etiquetas de encabezados.\n-
        \  Cambia las etiquetas para que los títulos estén ordenados del más grande
        al más pequeño, y el texto diga el tamaño correcto, como se ve en la imagen
        a continuación. \n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15
        PM.png\" style=\"width:100px; float:left\">"
      CSD U2 Heading Sizes_2019: "# Tamaños de títulos\n\n<div class=\"no-pullthrough\"
        style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left:
        20px; font-size:14px\">\n<details>\n\n<summary><strong>¿Qué son los títulos?</strong>\n\n</summary>\nLos
        títulos son títulos de secciones de diferentes tamaños en una página web.
        Los títulos agregan estructura a tu página web, ya que la dividen para que
        sea más fácil de leer.\n</details>\n<details>\n<summary><strong>¿Cómo puedo
        crear títulos de diferentes tamaños?</strong>\n\n</summary>\nLos títulos vienen
        en 6 tamaños diferentes. El título más común es &lt;h1&gt;,. El número 1 en
        la etiqueta HTML designa que este es el título más grande. El título más pequeño
        es el &lt;h6&gt;. También puedes probar las etiquetas &lt;h2&gt;, &lt;h3&gt;,
        &lt;h4&gt; y &lt;h5&gt;, que son más pequeñas cuanto más grande es el número.\n</details>\n<details>\n<summary><strong>¿Qué
        es el HTML?</strong>\n\n</summary>\nHTML significa Hypertext Markup Language
        (lenguaje de marcado de hipertexto). Se utiliza para agregar estructura al
        contenido de una página web y emplea etiquetas para especificar dónde comienzan
        y terminan ciertas estructuras. Estas etiquetas son conjuntos de caracteres
        que no se encuentran en el idioma español y cuyo objetivo es diferenciar el
        contenido de la estructura.\n</details>\n<details>\n<summary><strong>¿Qué
        es un elemento HTML?</strong>\n\n</summary>\nUn elemento HTML es una pieza
        del sitio web marcada por una etiqueta de inicio y que suele cerrarse con
        una etiqueta de final. El elemento también incluye el contenido dentro de
        las etiquetas. Por ejemplo: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"
        style=\"width:500px\">\n</details>\n<details>\n<summary><strong>¿Qué es una
        etiqueta HTML?</strong>\n\n</summary>\n\nUna etiqueta HTML es el conjunto
        especial de caracteres que le indica a la máquina dónde está el inicio o el
        final de un elemento HTML y de qué tipo es.\n\n</details>\n</div>\n\nLos títulos
        pueden venir en diferentes tamaños. En esta página, hay seis tamaños diferentes
        de títulos, pero están todos mezclados. ¿Tú y tu compañero pueden averiguar
        cómo corregirlos?\n\nHaz esto:\n\n-   Usa la herramienta de inspección para
        averiguar por qué los títulos tienen diferentes tamaños\n-   Asegúrate de
        que tú y tu compañero estén de acuerdo en lo que hacen las diferentes etiquetas
        de encabezados.\n-   Cambia las etiquetas para que los títulos estén ordenados
        del más grande al más pequeño, y el texto diga el tamaño correcto, como se
        ve en la imagen a continuación. \n\n<img src=\"https://images.code.org/762022f97a355dd63dce5ecc8d0127aa-image-1493161154608.58.15
        PM.png\" style=\"width:100px; float:left\">"
      CSD U2 Heading Test_2018: "# Títulos y párrafos\n\n<div style=\"float: right;
        height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px\"
        markdown=\"1\">\n<details>\n\n<summary><strong>¿Qué es un párrafo?</strong></summary>\n\nLos
        párrafos también están marcados con etiquetas de apertura (`<p>`) y cierre
        (`</p>`). Los párrafos de texto en HTML pueden tener cualquier longitud, desde
        una palabra hasta un grupo de oraciones. Todo el texto de tu página web debe
        estar contenido en un elemento HTML (títulos o párrafos). Los párrafos agrupan
        conjuntos de oraciones y ponen un espacio entre ese grupo de texto y el siguiente.\n\n</details>\n<details>\n<summary><strong>¿Cómo
        puedo crear varios párrafos?</strong>\n\n</summary>\n\nLos párrafos también
        están marcados con etiquetas de apertura (`<p>`) y cierre (`</p>`). Para crear
        más de un párrafo, necesitarás varios conjuntos de etiquetas `<p>` de apertura
        y cierre. Por ejemplo:\n\n<pre>\n    &lt;p&gt;\n        Este es un párrafo.\n
        \   &lt;/p&gt;\n    &lt;p&gt;\n        Este es otro párrafo.\n    &lt;/p&gt;\n</pre>\n\n</details>\n<details>\n<summary><strong>¿Qué
        son los títulos?</strong>\n</summary>\nLos títulos son títulos de secciones
        de diferentes tamaños en una página web. Los títulos agregan estructura a
        tu página web, ya que la dividen para que sea más fácil de leer.\n</strong>\n</details>\n<details>\n<summary><strong>¿Cómo
        puedo crear títulos de diferentes tamaños?</strong>\n</summary>\nLos títulos
        vienen en 6 tamaños diferentes. Hasta el momento, has utilizado principalmente
        el &lt;h1&gt;, que es el más grande. El número 1 en la etiqueta HTML designa
        que este es el encabezado más grande. El encabezado más pequeño es el &lt;h6&gt;.
        También puedes probar las etiquetas &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt; y &lt;h5&gt;,
        que son más pequeñas cuanto más grande es el número.\n</details>\n<details>\n<summary><strong>¿Qué
        es el HTML?</strong>\n</summary>\nHTML significa Hypertext Markup Language
        (lenguaje de marcado de hipertexto). Se utiliza para agregar estructura al
        contenido de una página web y emplea etiquetas para especificar dónde comienzan
        y terminan ciertas estructuras. Estas etiquetas son conjuntos de caracteres
        que no se encuentran en el idioma español y cuyo objetivo es diferenciar el
        contenido de la estructura.\n</details>\n<details>\n<summary><strong>¿Qué
        es un elemento HTML?</strong>\n</summary>\nUn elemento HTML es una pieza del
        sitio web marcada por una etiqueta de inicio y que suele cerrarse con una
        etiqueta de final. El elemento también incluye el contenido dentro de las
        etiquetas. Por ejemplo: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"
        style=\"width:500px\">\n</details>\n<details>\n<summary><strong>¿Qué es una
        etiqueta HTML?</strong>\n</summary>\n\nUna etiqueta HTML es el conjunto especial
        de caracteres que le indica a la máquina dónde está el inicio o el final de
        un elemento HTML y de qué tipo es.\n\n</details>\n</div>\n\nEl autor de esta
        página agregó mucho contenido, pero no pensó en la estructura. Todo el texto
        está mezclado.\n\nHaz esto:\n\n-   Revisa el contenido con tu compañero y
        decide cuál crees que debería ser la mejor estructura.\n-   Usa las etiquetas
        de título y párrafo para crear el código de la estructura en la página."
      CSD U2 Heading Test_2019: "# Títulos y párrafos\n\n<div class=\"no-pullthrough\"
        style=\"float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left:
        20px; font-size:14px\">\n<details>\n\n<summary><strong>¿Qué es un párrafo?</strong></summary>\n\nLos
        párrafos también están marcados con etiquetas de apertura (`<p>`) y cierre
        (`</p>`). Los párrafos de texto en HTML pueden tener cualquier longitud, desde
        una palabra hasta un grupo de oraciones. Todo el texto de tu página web debe
        estar contenido en un elemento HTML (títulos o párrafos). Los párrafos agrupan
        conjuntos de oraciones y ponen un espacio entre ese grupo de texto y el siguiente.\n\n</details>\n<details>\n<summary>\n<strong>¿Cómo
        puedo crear varios párrafos?</strong>\n\n</summary>\n\nLos párrafos también
        están marcados con etiquetas de apertura (`<p>`) y cierre (`</p>`). Para crear
        más de un párrafo, necesitarás varios conjuntos de etiquetas `<p>` de apertura
        y cierre. Por ejemplo:\n\n<pre>\n    &lt;p&gt;\n        Este es un párrafo.\n
        \   &lt;/p&gt;\n    &lt;p&gt;\n        Este es otro párrafo.\n    &lt;/p&gt;\n</pre>\n\n</details>\n<details>\n<summary>\n<strong>¿Qué
        son los títulos?</strong>\n</summary>\nLos títulos son títulos de secciones
        de diferentes tamaños en una página web. Los títulos agregan estructura a
        tu página web, ya que la dividen para que sea más fácil de leer.\n</strong>\n</details>\n<details>\n<summary>\n<strong>¿Cómo
        puedo crear títulos de diferentes tamaños?</strong>\n</summary>\nLos títulos
        vienen en 6 tamaños diferentes. Hasta el momento, has utilizado principalmente
        el &lt;h1&gt;, que es el más grande. El número 1 en la etiqueta HTML designa
        que este es el encabezado más grande. El encabezado más pequeño es el &lt;h6&gt;.
        También puedes probar las etiquetas &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt; y &lt;h5&gt;,
        que son más pequeñas cuanto más grande es el número.\n</details>\n<details>\n<summary>\n<strong>¿Qué
        es el HTML?</strong>\n</summary>\nHTML significa Hypertext Markup Language
        (lenguaje de marcado de hipertexto). Se utiliza para agregar estructura al
        contenido de una página web y emplea etiquetas para especificar dónde comienzan
        y terminan ciertas estructuras. Estas etiquetas son conjuntos de caracteres
        que no se encuentran en el idioma español y cuyo objetivo es diferenciar el
        contenido de la estructura.\n</details>\n<details>\n<summary>\n<strong>¿Qué
        es un elemento HTML?</strong>\n</summary>\nUn elemento HTML es una pieza del
        sitio web marcada por una etiqueta de inicio y que suele cerrarse con una
        etiqueta de final. El elemento también incluye el contenido dentro de las
        etiquetas. Por ejemplo: \n<img src=\"https://images.code.org/fb4df62aa4d879f7021c567be2e28eea-image-1481135855001.png\"
        style=\"width:500px\">\n</details>\n<details>\n<summary>\n<strong>¿Qué es
        una etiqueta HTML?</strong>\n</summary>\n\nUna etiqueta HTML es el conjunto
        especial de caracteres que le indica a la máquina dónde está el inicio o el
        final de un elemento HTML y de qué tipo es.\n\n</details>\n</div>\n\nEl autor
        de esta página agregó mucho contenido, pero no pensó en la estructura. Todo
        el texto está mezclado.\n\nHaz esto:\n\n-   Revisa el contenido con tu compañero
        y decide cuál crees que debería ser la mejor estructura.\n-   Usa las etiquetas
        de título y párrafo para crear el código de la estructura en la página."
      CSD U2 Info Page Final Touches: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        <h2>
        Lista de control
        </h2>

        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Asegúrate de que tu imagen tenga la licencia correcta</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Sube la imagen al Laboratorio web</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Crea una etiqueta para la imagen con un atributo alt descriptivo</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Si la imagen no es tuya, agrega la atribución debajo<br/>

        </div>

        # Agregar imágenes a tu sitio

        Ya has creado algunas páginas con contenido genial en tu sitio web. ¡Ahora puedes agregar algunas imágenes!

        # Haz esto

        Ya sea que uses tus propias imágenes o las que encuentres en la búsqueda de Commons, agrega algunas a las páginas que ya has creado. ¡Sé creativo! Usa la lista de control que se encuentra a la derecha para realizar un seguimiento de los pasos que debes seguir al agregar imágenes.
      CSD U2 Info Page Final Touches_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        <h2>
        Lista de control
        </h2>

        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Asegúrate de que tu imagen tenga la licencia correcta</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Sube la imagen al Laboratorio web</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Crea una etiqueta para la imagen con un atributo alt descriptivo</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Si la imagen no es tuya, agrega la atribución debajo<br/>

        </div>

        # Agregar imágenes a tu sitio

        Ya has creado algunas páginas con contenido genial en tu sitio web. ¡Ahora puedes agregar algunas imágenes!

        # Haz esto

        Ya sea que uses tus propias imágenes o las que encuentres en la búsqueda de Commons, agrega algunas a las páginas que ya has creado. ¡Sé creativo! Usa la lista de control que se encuentra a la derecha para realizar un seguimiento de los pasos que debes seguir al agregar imágenes.
      CSD U2 Info Page Final Touches_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">

        <h2>
        Lista de control
        </h2>

        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Asegúrate de que tu imagen tenga la licencia correcta</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Sube la imagen al Laboratorio web</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Crea una etiqueta para la imagen con un atributo alt descriptivo</span>
        <input type="checkbox" style="float: left"><span style="display: block; margin-left: 20px; margin-bottom: 10px">Si la imagen no es tuya, agrega la atribución debajo<br/>

        </div>

        # Agregar imágenes a tu sitio

        Ya has creado algunas páginas con contenido genial en tu sitio web. ¡Ahora puedes agregar algunas imágenes!

        # Haz esto

        Ya sea que uses tus propias imágenes o las que encuentres en la búsqueda de Commons, agrega algunas a las páginas que ya has creado. ¡Sé creativo! Usa la lista de control que se encuentra a la derecha para realizar un seguimiento de los pasos que debes seguir al agregar imágenes.
      CSD U2 Inspector Warm Up: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary><strong>¿Cómo puedo usar la herramienta Inspector?</strong>

        </summary>

        La herramienta Inspector es una gran manera de aprender más sobre código poco conocido en el Laboratorio web. Para activar la herramienta, haz clic en <img src="https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png" style="width:100px">. Sabrás que está activada porque el botón se volverá blanco y dirá "Inspector: encendido". Una vez que enciendas la herramienta Inspector, podrás desplazarte sobre lo que quieras en el área de vista previa y el Laboratorio web resaltará el código que hace aparecer esa parte de la página.

        </details>
        </div>

        # Explorar el HTML

        Esta es una página web escrita en HTML, el idioma de la web. Aprenderás más acerca de cómo funciona, pero primero explora la página con la herramienta Inspector.

        # Haz esto

        -   Haz clic en el consejo "¿Cómo puedo usar la herramienta Inspector?" que se encuentra a la derecha para aprender a usar la herramienta.
        -   Sigue las instrucciones en la página web para explorar la página y hablar con un compañero acerca de cómo funciona.
      CSD U2 Inspector Warm Up_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>
        <strong><span>¿Cómo puedo usar la herramienta Inspector?</span></strong>
        </summary>

        La herramienta Inspector es una gran manera de aprender más sobre código poco conocido en el Laboratorio web. Para activar la herramienta, haz clic en <img src="https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png" style="width:100px">. Sabrás que está activada porque el botón se volverá blanco y dirá "Inspector: encendido". Una vez que enciendas la herramienta Inspector, podrás desplazarte sobre lo que quieras en el área de vista previa y el Laboratorio web resaltará el código que hace aparecer esa parte de la página.

        </details>
        </div>

        # Explorar el HTML

        Esta es una página web escrita en HTML, el idioma de la web. Aprenderás más acerca de cómo funciona, pero primero explora la página con la herramienta Inspector.

        # Haz esto

        -   Haz clic en el consejo "¿Cómo puedo usar la herramienta Inspector?" que se encuentra a la derecha para aprender a usar la herramienta.
        -   Sigue las instrucciones en la página web para explorar la página y hablar con un compañero acerca de cómo funciona.
      CSD U2 Inspector Warm Up_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px">
        <details>

        <summary>
        <strong><span>¿Cómo puedo usar la herramienta Inspector?</span></strong>
        </summary>

        La herramienta Inspector es una gran manera de aprender más sobre código poco conocido en el Laboratorio web. Para activar la herramienta, haz clic en <img src="https://images.code.org/188579d7c6e7645d0d2edd203a33bd63-image-1480361561351.31.56 PM.png" style="width:100px">. Sabrás que está activada porque el botón se volverá blanco y dirá "Inspector: encendido". Una vez que enciendas la herramienta Inspector, podrás desplazarte sobre lo que quieras en el área de vista previa y el Laboratorio web resaltará el código que hace aparecer esa parte de la página.

        </details>
        </div>

        # Explorar el HTML

        Esta es una página web escrita en HTML, el idioma de la web. Aprenderás más acerca de cómo funciona, pero primero explora la página con la herramienta Inspector.

        # Haz esto

        -   Haz clic en el consejo "¿Cómo puedo usar la herramienta Inspector?" que se encuentra a la derecha para aprender a usar la herramienta.
        -   Sigue las instrucciones en la página web para explorar la página y hablar con un compañero acerca de cómo funciona.
      CSD U2 Pair Programming Video_2019: |-
        ## Preguntas a tener en cuenta

        -   ¿Por qué crees que los programadores profesionales usan la programación en pareja?
        -   ¿De qué manera crees que la programación en pareja te puede ayudar a programar mejor?
      CSD U2 Project Start: |-
        # Inicia tu proyecto

        Ahora que tienes un plan para tu sitio web personal, puedes comenzar a programarlo aquí. No te preocupes si no puedes hacer todo lo que quieres hoy. Tendrás muchas oportunidades de mejorar tu trabajo a medida que aprendes más sobre el desarrollo de sitios web.

        # Haz esto

        -   Usa el HTML para crear la página que has esbozado. Asegúrate de que incluya
        -   Al menos **dos títulos de diferentes tamaños**
        -   Al menos **un párrafo**
        -   **Reflexiona** sobre tu página, compárala con tu boceto y muéstrasela a tu compañero
      CSD U2 Project Start_2018: |-
        # Inicia tu proyecto

        Ahora que tienes un plan para tu sitio web personal, puedes comenzar a programarlo aquí. No te preocupes si no puedes hacer todo lo que quieres hoy. Tendrás muchas oportunidades de mejorar tu trabajo a medida que aprendes más sobre el desarrollo de sitios web.

        # Haz esto

        -   Usa el HTML para crear la página que has esbozado. Asegúrate de que incluya
        -   Al menos **dos títulos de diferentes tamaños**
        -   Al menos **un párrafo**
        -   **Reflexiona** sobre tu página, compárala con tu boceto y muéstrasela a tu compañero
      CSD U2 Project Start_2019: |-
        # Inicia tu proyecto

        Ahora que tienes un plan para tu sitio web personal, puedes comenzar a programarlo aquí. No te preocupes si no puedes hacer todo lo que quieres hoy. Tendrás muchas oportunidades de mejorar tu trabajo a medida que aprendes más sobre el desarrollo de sitios web.

        # Haz esto

        -   Usa el HTML para crear la página que has esbozado. Asegúrate de que incluya
        -   Al menos **dos títulos de diferentes tamaños**
        -   Al menos **un párrafo**
        -   **Reflexiona** sobre tu página, compárala con tu boceto y muéstrasela a tu compañero
      CSD U2 RGB intro: |-
        # Colores RGB

        Todos los colores, tengan nombre o no, pueden describirse por el nivel de luz roja, verde y azul que se necesita para crearlos. Esto se llama valor RGB (abreviatura de rojo-verde-azul en inglés). Puedes usar el widget a tu izquierda para probar diferentes valores RGB y ver qué colores forman.

        -   **Haz clic en "Ejecutar" para iniciar el widget de la izquierda** y usa los controles para ajustar los niveles de luz roja, verde y azul.
        -   Para cada uno de los colores a continuación, haz que coincida con su valor RGB.

        A) rojo: 216, verde: 191, azul: 216 - rgb(216,191,216)

        B) rojo: 255, verde: 239, azul: 213 - rgb(255,239,213)

        C) rojo: 250, verde: 128, azul: 114 - rgb(250,128,114)

        D) rojo: 70, verde: 130, azul: 180 - rgb(70, 130, 180)

        E) rojo: 107, verde: 142, azul: 35 - rgb(107,142,35)

        <div style="font-size: 16px">
        <br />
        <details>

        <summary><strong>¿Por qué el rojo y el verde forman el amarillo?</strong></summary>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color">Wikipedia - Síntesis aditiva de color</a>

        </details>
        <details>
        <summary><strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong></summary>

        <p>
        Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.
        </p>

        </details>
        </div>
      CSD U2 RGB intro_2018: |-
        # Colores RGB

        Todos los colores, tengan nombre o no, pueden describirse por el nivel de luz roja, verde y azul que se necesita para crearlos. Esto se llama valor RGB (abreviatura de rojo-verde-azul en inglés). Puedes usar el widget a tu izquierda para probar diferentes valores RGB y ver qué colores forman.

        -   **Haz clic en "Ejecutar" para iniciar el widget de la izquierda** y usa los controles para ajustar los niveles de luz roja, verde y azul.
        -   Para cada uno de los colores a continuación, haz que coincida con su valor RGB.

        A) rojo: 216, verde: 191, azul: 216 - rgb(216,191,216)

        B) rojo: 255, verde: 239, azul: 213 - rgb(255,239,213)

        C) rojo: 250, verde: 128, azul: 114 - rgb(250,128,114)

        D) rojo: 70, verde: 130, azul: 180 - rgb(70, 130, 180)

        E) rojo: 107, verde: 142, azul: 35 - rgb(107,142,35)

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>¿Por qué el rojo y el verde forman el amarillo?</strong>
        </summary>

        <p>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color" target="_new">Wikipedia - Síntesis aditiva de color</a>

        </p> </details>
        <details>
        <summary>
        <strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong>
        </summary>

        <p>
        Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.
        </p>

        </details>
        </div>
      CSD U2 RGB intro_2019: |-
        # Colores RGB

        Todos los colores, tengan nombre o no, pueden describirse por el nivel de luz roja, verde y azul que se necesita para crearlos. Esto se llama valor RGB (abreviatura de rojo-verde-azul en inglés). Puedes usar el widget a tu izquierda para probar diferentes valores RGB y ver qué colores forman.

        -   **Haz clic en "Ejecutar" para iniciar el widget de la izquierda** y usa los controles para ajustar los niveles de luz roja, verde y azul.
        -   Para cada uno de los colores a continuación, haz que coincida con su valor RGB.

        A) rojo: 216, verde: 191, azul: 216 - rgb(216,191,216)

        B) rojo: 255, verde: 239, azul: 213 - rgb(255,239,213)

        C) rojo: 250, verde: 128, azul: 114 - rgb(250,128,114)

        D) rojo: 70, verde: 130, azul: 180 - rgb(70, 130, 180)

        E) rojo: 107, verde: 142, azul: 35 - rgb(107,142,35)

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>¿Por qué el rojo y el verde forman el amarillo?</strong>
        </summary>

        <p>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color" target="_new">Wikipedia - Síntesis aditiva de color</a>

        </p> </details>
        <details>
        <summary>
        <strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong>
        </summary>

        <p>
        Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.
        </p>

        </details>
        </div>
      CSD U2 RGB others: |-
        # Colores primaverales y otoñales

        Elige valores RGB para colores primaverales y otoñales.

        -   Haz clic en "Ejecutar" para iniciar el widget.
        -   Ajusta los niveles hasta que encuentres un color primaveral que te guste, y luego escribe los valores en tu guía de actividades.
        -   Haz lo mismo para un color otoñal. Vas a necesitar los valores RGB para la siguiente actividad.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary><strong>¿Dónde puedo ver toda la gama de tipos de colores?</strong></summary>
        Puedes encontrar diversas opciones de colores en <a href="http://www.w3schools.com/colors/colors_picker.asp">W3Schools - HTML Color Picker</a></details>
        <details>
        <summary><strong>¿Por qué el rojo y el verde forman el amarillo?</strong></summary>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color">Wikipedia - Síntesis aditiva de color</a>

        </details>
        <details>
        <summary><strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong></summary>

        <p>Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.</p>

        </details>
        </div>
      CSD U2 RGB others_2018: |-
        # Colores primaverales y otoñales

        Elige valores RGB para colores primaverales y otoñales.

        -   Haz clic en "Ejecutar" para iniciar el widget.
        -   Ajusta los niveles hasta que encuentres un color primaveral que te guste, y luego escribe los valores en tu guía de actividades.
        -   Haz lo mismo para un color otoñal. Vas a necesitar los valores RGB para la siguiente actividad.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>¿Dónde puedo ver toda la gama de tipos de colores?</strong>
        </summary>

        Puedes encontrar diversas opciones de colores en <a href="http://www.w3schools.com/colors/colors_picker.asp" target="_new">W3Schools - HTML Color Picker</a>

        </details>
        <details>
        <summary>
        <strong>¿Por qué el rojo y el verde forman el amarillo?</strong>
        </summary>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color" target="_new">Wikipedia - Síntesis aditiva de color</a>

        </details>
        <details>
        <summary>
        <strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong>
        </summary>

        Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.

        </details>
        </div>
      CSD U2 RGB others_2019: |-
        # Colores primaverales y otoñales

        Elige valores RGB para colores primaverales y otoñales.

        -   Haz clic en "Ejecutar" para iniciar el widget.
        -   Ajusta los niveles hasta que encuentres un color primaveral que te guste, y luego escribe los valores en tu guía de actividades.
        -   Haz lo mismo para un color otoñal. Vas a necesitar los valores RGB para la siguiente actividad.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>¿Dónde puedo ver toda la gama de tipos de colores?</strong>
        </summary>

        Puedes encontrar diversas opciones de colores en <a href="http://www.w3schools.com/colors/colors_picker.asp" target="_new">W3Schools - HTML Color Picker</a>

        </details>
        <details>
        <summary>
        <strong>¿Por qué el rojo y el verde forman el amarillo?</strong>
        </summary>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color" target="_new">Wikipedia - Síntesis aditiva de color</a>

        </details>
        <details>
        <summary>
        <strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong>
        </summary>

        Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.

        </details>
        </div>
      CSD U2 RGB summer: |-
        # Colores veraniegos

        Elige valores RGB para formar un color amarillo veraniego.

        -   Haz clic en "Ejecutar" para iniciar el widget.
        -   Ajusta los niveles hasta que logres el amarillo veraniego en la parte inferior del widget.
        -   Escribe los valores RGB en tu guía de actividades. Vas a necesitarlos en la siguiente actividad.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary><strong>¿Por qué el rojo y el verde forman el amarillo?</strong></summary>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color">Wikipedia - Síntesis aditiva de color</a>

        </details>
        <details>
        <summary><strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong></summary>

        <p>Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.</p>

        </details>
        </div>
      CSD U2 RGB summer_2018: |-
        # Colores veraniegos

        Elige valores RGB para formar un color amarillo veraniego.

        -   Haz clic en "Ejecutar" para iniciar el widget.
        -   Ajusta los niveles hasta que logres el amarillo veraniego en la parte inferior del widget.
        -   Escribe los valores RGB en tu guía de actividades. Vas a necesitarlos en la siguiente actividad.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>¿Por qué el rojo y el verde forman el amarillo?</strong>
        </summary>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color" target="_new">Wikipedia - Síntesis aditiva de color</a>

        </details>
        <details>
        <summary>
        <strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong>
        </summary>

        Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.

        </details>
        </div>
      CSD U2 RGB summer_2019: |-
        # Colores veraniegos

        Elige valores RGB para formar un color amarillo veraniego.

        -   Haz clic en "Ejecutar" para iniciar el widget.
        -   Ajusta los niveles hasta que logres el amarillo veraniego en la parte inferior del widget.
        -   Escribe los valores RGB en tu guía de actividades. Vas a necesitarlos en la siguiente actividad.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>¿Por qué el rojo y el verde forman el amarillo?</strong>
        </summary>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color" target="_new">Wikipedia - Síntesis aditiva de color</a>

        </details>
        <details>
        <summary>
        <strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong>
        </summary>

        Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.

        </details>
        </div>
      CSD U2 RGB winter: |-
        # Colores invernales

        En los siguientes niveles, encontrarás colores de temporada para un sitio web. Aquí, deberás encontrar los valores RGB para un color azul invernal.

        -   Haz clic en "Ejecutar" para iniciar el widget.
        -   Ajusta los niveles hasta que logres el color azul invernal en la parte inferior del widget.
        -   Escribe los valores RGB en tu guía de actividades. Vas a necesitarlos en la siguiente actividad.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary><strong>¿Cómo puedo formar un color más claro?</strong></summary>
        <p>Para formar un color más claro, debes agregar más luz (aumenta el nivel del control deslizante). Si ya has agregado la cantidad máxima de luz azul, deberás agregar más luz roja y verde para que tu azul sea más claro.</p></details>
        <details>
        <summary><strong>¿Por qué el rojo y el verde forman el amarillo?</strong></summary>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color">Wikipedia - Síntesis aditiva de color</a>

        </details>
        <details>
        <summary><strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong></summary>

        <p>Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.</p>

        </details>
        </div>
      CSD U2 RGB winter_2018: |-
        # Colores invernales

        En los siguientes niveles, encontrarás colores de temporada para un sitio web. Aquí, deberás encontrar los valores RGB para un color azul invernal.

        -   Haz clic en "Ejecutar" para iniciar el widget.
        -   Ajusta los niveles hasta que logres el color azul invernal en la parte inferior del widget.
        -   Escribe los valores RGB en tu guía de actividades. Vas a necesitarlos en la siguiente actividad.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>¿Cómo puedo formar un color más claro?</strong>
        </summary>

        Para formar un color más claro, debes agregar más luz (aumenta el nivel del control deslizante). Si ya has agregado la cantidad máxima de luz azul, deberás agregar más luz roja y verde para que tu azul sea más claro.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el rojo y el verde forman el amarillo?</strong>
        </summary>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color" target="_new">Wikipedia - Síntesis aditiva de color</a>

        </details>
        <details>
        <summary>
        <strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong>
        </summary>

        Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.

        </details>
        </div>
      CSD U2 RGB winter_2019: |-
        # Colores invernales

        En los siguientes niveles, encontrarás colores de temporada para un sitio web. Aquí, deberás encontrar los valores RGB para un color azul invernal.

        -   Haz clic en "Ejecutar" para iniciar el widget.
        -   Ajusta los niveles hasta que logres el color azul invernal en la parte inferior del widget.
        -   Escribe los valores RGB en tu guía de actividades. Vas a necesitarlos en la siguiente actividad.

        <div style="font-size: 16px">
        <br />
        <details>

        <summary>
        <strong>¿Cómo puedo formar un color más claro?</strong>
        </summary>

        Para formar un color más claro, debes agregar más luz (aumenta el nivel del control deslizante). Si ya has agregado la cantidad máxima de luz azul, deberás agregar más luz roja y verde para que tu azul sea más claro.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el rojo y el verde forman el amarillo?</strong>
        </summary>

        Si mezclas pintura, el rojo y el verde forman el marrón, pero la mezcla de colores RGB utiliza la luz en lugar de la pintura, por lo que los colores se mezclan de manera diferente. RGB utiliza una _mezcla aditiva de colores_. En esta mezcla, el rojo y el verde forman el amarillo, el rojo y el azul forman el magenta, y el azul y el verde forman el cian. Si mezclas los tres colores primarios (rojo, verde y azul), se forma el blanco. Puedes leer más en <a href="https://es.wikipedia.org/wiki/S%C3%ADntesis_aditiva_de_color" target="_new">Wikipedia - Síntesis aditiva de color</a>

        </details>
        <details>
        <summary>
        <strong>¿Cuántos colores puedo formar con la mezcla de colores RGB?</strong>
        </summary>

        Con la mezcla de colores RGB puedes formar más de dieciséis millones de colores diferentes.

        </details>
        </div>
      CSD U2 add content: |-
        # Agregar HTML

        Luego, deberías agregar el HTML a tus páginas.

        # Haz esto

        -   Agrega el HTML para crear cada una de las páginas que esbozaste en tu guía de proyectos.
        -   También puedes agregar más HTML a las páginas que ya has creado.
      CSD U2 add content_2018: |-
        # Agregar HTML

        Luego, deberías agregar el HTML a tus páginas.

        # Haz esto

        -   Agrega el HTML para crear cada una de las páginas que esbozaste en tu guía de proyectos.
        -   También puedes agregar más HTML a las páginas que ya has creado.
      CSD U2 add content_2019: |-
        # Agregar HTML

        Luego, deberías agregar el HTML a tus páginas.

        # Haz esto

        -   Agrega el HTML para crear cada una de las páginas que esbozaste en tu guía de proyectos.
        -   También puedes agregar más HTML a las páginas que ya has creado.
      CSD U2 add file: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary><strong>¿Qué es una hoja de estilo?</strong></summary>
        Una hoja de estilo es un documento que controla cómo se verá una página web. Las hojas de estilo externas son archivos separados que están vinculados a la página HTML.
        </details>
        <details>
        <summary><strong>¿Qué es CSS?</strong></summary>

        CSS es un lenguaje que controla la forma en que aparece el contenido en un sitio web. Utiliza conjuntos de reglas para cambiar el aspecto de una página. Cada conjunto de reglas tiene un selector, que especifica qué elementos de la página se verán afectados, y reglas, que explican cómo mostrar los elementos. Cada regla consiste de una propiedad y un valor para esa propiedad.

        Este es un ejemplo de un conjunto de reglas que hace que el texto en una etiqueta `h2` sea azul y esté en cursiva:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        </pre>

        En este ejemplo, `h2` es el selector, `color` y `font-family` son propiedades, y `blue` y `cursive` son los valores para esas propiedades.

        </details>
        <details>
        <summary><strong>¿Cómo puedo crear una nueva hoja de estilo?</strong></summary>
        Para crear una nueva hoja de estilo, haz clic en el botón "Agregar CSS" que se encuentra encima del área del código.
        </details>
        <details>
        <summary><strong>¿Qué nombre debo asignar a mi hoja de estilo?</strong></summary>

        Puedes elegir cualquier nombre para tu hoja de estilo, pero es mejor elegir un nombre relevante, como "estilo.css" o "acercademiestilos.css" para que quede claro de qué se trata el archivo. Tu archivo siempre debe terminar con la extensión ".css".

        </details>
        <details>
        <summary><strong>¿Cómo puedo cambiar el nombre de un archivo?</strong></summary>

        Para cambiar el nombre de un archivo, puedes hacer clic con el botón derecho (o hacer control-clic) en el nombre del archivo y elegir la opción "Cambiar nombre". Esto te permitirá escribir un nuevo nombre de archivo. También podrás cambiar el nombre si haces clic en el nombre de un archivo una vez que esté resaltado.

        </details>
        <details>
        <summary><strong>¿Cómo puedo agregar mi hoja de estilo a una página web?</strong></summary>

        Para agregar una hoja de estilo a una página web, abre el código de esa página. Dentro de la etiqueta del encabezado, agrega el siguiente código `<link rel="stylesheet" href="style.css">`. Luego, cambia el nombre de "style.css" por el de tu hoja de estilo.

        </details>
        </div>

        # Agregar una hoja de estilo

        Esta es tu página Acerca de mí anterior. En el siguiente nivel, tendrás la oportunidad de agregar algunos estilos diferentes, pero, primero, debes agregar una hoja de estilo, asignarle un nombre y vincularla a tu página html.

        1.  Crea una nueva hoja de estilo para tu proyecto.
        2.  Cambia el nombre del archivo de la hoja de estilo.
        3.  Agrega tu hoja de estilo a tu página HTML.

        <img src="https://cdo-curriculum.s3.amazonaws.com/media/uploads/weblab_stylesheet.png" style=" max-width:500px">
      CSD U2 add file_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Qué es una hoja de estilo?</strong>
        </summary>

        Una hoja de estilo es un documento que controla cómo se verá una página web. Las hojas de estilo externas son archivos separados que están vinculados a la página HTML.

        </details>
        <details>
        <summary>
        <strong>¿Qué es CSS?</strong>
        </summary>

        CSS es un lenguaje que controla la forma en que aparece el contenido en un sitio web. Utiliza conjuntos de reglas para cambiar el aspecto de una página. Cada conjunto de reglas tiene un selector, que especifica qué elementos de la página se verán afectados, y reglas, que explican cómo mostrar los elementos. Cada regla consiste de una propiedad y un valor para esa propiedad.

        Este es un ejemplo de un conjunto de reglas que hace que el texto en una etiqueta `h2` sea azul y esté en cursiva:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        </pre>

        En este ejemplo, `h2` es el selector, `color` y `font-family` son propiedades, y `blue` y `cursive` son los valores para esas propiedades.

        </details>
        <details>
        <summary>
        <strong>¿Cómo puedo crear una nueva hoja de estilo?</strong>
        </summary>
        Para crear una nueva hoja de estilo, haz clic en el botón "Agregar CSS" que se encuentra encima del área del código.
        </details>
        <details>
        <summary>
        <strong>¿Qué nombre debo asignar a mi hoja de estilo?</strong>
        </summary>
        Puedes elegir cualquier nombre para tu hoja de estilo, pero es mejor elegir un nombre relevante, como "estilo.css" o "acercademiestilos.css" para que quede claro de qué se trata el archivo. Tu archivo siempre debe terminar con la extensión ".css".
        </details>
        <details>
        <summary>
        <strong>¿Cómo puedo cambiar el nombre de un archivo?</strong>
        </summary>
        Para cambiar el nombre de un archivo, puedes hacer clic con el botón derecho (o hacer control-clic) en el nombre del archivo y elegir la opción "Cambiar nombre". Esto te permitirá escribir un nuevo nombre de archivo. También podrás cambiar el nombre si haces clic en el nombre de un archivo una vez que esté resaltado.
        </details>
        <details>
        <summary>
        <strong>¿Cómo puedo agregar mi hoja de estilo a una página web?</strong>
        </summary>

        Para agregar una hoja de estilo a una página web, abre el código de esa página. Dentro de la etiqueta del encabezado, agrega el siguiente código `<link rel="stylesheet" href="style.css">`. Luego, cambia el nombre de "style.css" por el de tu hoja de estilo.

        </details>
        </div>

        # Agregar una hoja de estilo

        Esta es tu página Acerca de mí anterior. En el siguiente nivel, tendrás la oportunidad de agregar algunos estilos diferentes, pero, primero, debes agregar una hoja de estilo, asignarle un nombre y vincularla a tu página html.

        1.  Crea una nueva hoja de estilo para tu proyecto.
        2.  Cambia el nombre del archivo de la hoja de estilo.
        3.  Agrega tu hoja de estilo a tu página HTML.

        <img src="https://cdo-curriculum.s3.amazonaws.com/media/uploads/weblab_stylesheet.png" style=" max-width:500px">
      CSD U2 add file_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Qué es una hoja de estilo?</strong>
        </summary>

        Una hoja de estilo es un documento que controla cómo se verá una página web. Las hojas de estilo externas son archivos separados que están vinculados a la página HTML.

        </details>
        <details>
        <summary>
        <strong>¿Qué es CSS?</strong>
        </summary>

        CSS es un lenguaje que controla la forma en que aparece el contenido en un sitio web. Utiliza conjuntos de reglas para cambiar el aspecto de una página. Cada conjunto de reglas tiene un selector, que especifica qué elementos de la página se verán afectados, y reglas, que explican cómo mostrar los elementos. Cada regla consiste de una propiedad y un valor para esa propiedad.

        Este es un ejemplo de un conjunto de reglas que hace que el texto en una etiqueta `h2` sea azul y esté en cursiva:

        <pre>h2 {
        color: blue;
        font-family: cursive;
        </pre>

        En este ejemplo, `h2` es el selector, `color` y `font-family` son propiedades, y `blue` y `cursive` son los valores para esas propiedades.

        </details>
        <details>
        <summary>
        <strong>¿Cómo puedo crear una nueva hoja de estilo?</strong>
        </summary>
        Para crear una nueva hoja de estilo, haz clic en el botón "Agregar CSS" que se encuentra encima del área del código.
        </details>
        <details>
        <summary>
        <strong>¿Qué nombre debo asignar a mi hoja de estilo?</strong>
        </summary>
        Puedes elegir cualquier nombre para tu hoja de estilo, pero es mejor elegir un nombre relevante, como "estilo.css" o "acercademiestilos.css" para que quede claro de qué se trata el archivo. Tu archivo siempre debe terminar con la extensión ".css".
        </details>
        <details>
        <summary>
        <strong>¿Cómo puedo cambiar el nombre de un archivo?</strong>
        </summary>
        Para cambiar el nombre de un archivo, puedes hacer clic con el botón derecho (o hacer control-clic) en el nombre del archivo y elegir la opción "Cambiar nombre". Esto te permitirá escribir un nuevo nombre de archivo. También podrás cambiar el nombre si haces clic en el nombre de un archivo una vez que esté resaltado.
        </details>
        <details>
        <summary>
        <strong>¿Cómo puedo agregar mi hoja de estilo a una página web?</strong>
        </summary>

        Para agregar una hoja de estilo a una página web, abre el código de esa página. Dentro de la etiqueta del encabezado, agrega el siguiente código `<link rel="stylesheet" href="style.css">`. Luego, cambia el nombre de "style.css" por el de tu hoja de estilo.

        </details>
        </div>

        # Agregar una hoja de estilo

        Esta es tu página Acerca de mí anterior. En el siguiente nivel, tendrás la oportunidad de agregar algunos estilos diferentes, pero, primero, debes agregar una hoja de estilo, asignarle un nombre y vincularla a tu página html.

        1.  Crea una nueva hoja de estilo para tu proyecto.
        2.  Cambia el nombre del archivo de la hoja de estilo.
        3.  Agrega tu hoja de estilo a tu página HTML.

        <img src="https://cdo-curriculum.s3.amazonaws.com/media/uploads/weblab_stylesheet.png" style=" max-width:500px">
      CSD U2 add style_2019: |-
        # ¡Pruébalo!

        Ahora que has visto diferentes formas de estilo, es hora de probarlas por ti mismo. Esta es una página web que has visto antes, ¡pero necesita algo de estilo!

        # Haz esto

        -   Asigna un color de fondo a la página web.
        -   Agrega más espacio alrededor de las imágenes.
        -   Haz que todo el texto tenga un color diferente.
        -   Agrega otros estilos que te gusten.
      CSD U2 challenge: |-
        # Desafío

        Consulta con tu docente antes de comenzar este desafío.

        Esta página aún no está terminada y tiene algunos errores. Afortunadamente, hay comentarios que deberían ayudarte a completarla tal como pretendía el autor.

        # Haz esto

        -   Mira el código con tu compañero y debate sobre cómo debería verse la página.
        -   Trabajen juntos para terminar la página; presten atención al formato.
        -   Compara la página con la de otra pareja para ver si son iguales.
      CSD U2 challenge_2018: |-
        # Desafío

        Consulta con tu docente antes de comenzar este desafío.

        Esta página aún no está terminada y tiene algunos errores. Afortunadamente, hay comentarios que deberían ayudarte a completarla tal como pretendía el autor.

        # Haz esto

        -   Mira el código con tu compañero y debate sobre cómo debería verse la página.
        -   Trabajen juntos para terminar la página; presten atención al formato.
        -   Compara la página con la de otra pareja para ver si son iguales.
      CSD U2 challenge_2019: |-
        # Desafío

        Consulta con tu docente antes de comenzar este desafío.

        Esta página aún no está terminada y tiene algunos errores. Afortunadamente, hay comentarios que deberían ayudarte a completarla tal como pretendía el autor.

        # Haz esto

        -   Mira el código con tu compañero y debate sobre cómo debería verse la página.
        -   Trabajen juntos para terminar la página; presten atención al formato.
        -   Compara la página con la de otra pareja para ver si son iguales.
      CSD U2 classes modify: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>

        </summary>
        Para que el código funcione, debes crear una clase `invierno` y agregar elementos a la clase.

        La clase se crea en la hoja de estilo, con el siguiente código.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        Este código crea una clase llamada `invierno` y hace que todo en la clase sea de nuestro color azul invernal, que tiene los valores RGB (195,230,255).

        El código que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. El `class=invierno` dentro de la etiqueta de apertura agrega todo lo que está dentro de la etiqueta a la clase.

        </details>
        <details>
        <summary>
        <strong>¿Qué reglas se pueden agregar al conjunto de reglas de la clase?</strong>

        </summary>

        El conjunto de reglas de una clase puede tener las mismas reglas que cualquier otro tipo de selector. Si una regla no se aplica al contenido de la clase (por ejemplo, si se usa `font-size` en un elemento sin texto), la computadora ignorará esa regla, pero seguirá usando las reglas que funcionan.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>

        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>

        </summary>
        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.
        </details>
        <details>
        <summary>
        <strong>Tengo diferentes valores RGB, pero los míos también son correctos.</strong>

        </summary>

        Debido a que RGB crea millones de colores diferentes, algunos son tan similares que las personas tienen dificultades para diferenciarlos. Eso significa que hay varios valores RGB que se parecen lo suficiente a nuestro color invernal y que se pueden usar.

        </details>
        </div>

        # Agregar reglas

        Las palabras de tu clase `invierno` deben tener el mismo tipo de color y fuente.

        -   Encuentra el conjunto de reglas CSS en la hoja de estilo que da estilo a las palabras de la clase `invierno`.
        -   Agrega una regla que cambia la fuente de las palabras de la clase `invierno`. Puede ser cualquier tipo de fuente, pero tendrá que ser diferente a la de las otras tres estaciones.
        -   Agrega otra regla que desees para las palabras de la clase `invierno`.
      CSD U2 classes modify_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>
        </summary>
        Para que el código funcione, debes crear una clase `invierno` y agregar elementos a la clase.

        La clase se crea en la hoja de estilo, con el siguiente código.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        Este código crea una clase llamada `invierno` y hace que todo en la clase sea de nuestro color azul invernal, que tiene los valores RGB (195,230,255).

        El código que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. El `class=invierno` dentro de la etiqueta de apertura agrega todo lo que está dentro de la etiqueta a la clase.

        </details>
        <details>

        <summary>
        <strong>¿Qué reglas se pueden agregar al conjunto de reglas de la clase?</strong>
        </summary>

        El conjunto de reglas de una clase puede tener las mismas reglas que cualquier otro tipo de selector. Si una regla no se aplica al contenido de la clase (por ejemplo, si se usa `font-size` en un elemento sin texto), la computadora ignorará esa regla, pero seguirá usando las reglas que funcionan.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>
        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>
        </summary>
        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.
        </details>
        <details>
        <summary>
        <strong>Tengo diferentes valores RGB, pero los míos también son correctos.</strong>
        </summary>

        Debido a que RGB crea millones de colores diferentes, algunos son tan similares que las personas tienen dificultades para diferenciarlos. Eso significa que hay varios valores RGB que se parecen lo suficiente a nuestro color invernal y que se pueden usar.

        </details>
        </div>

        # Agregar reglas

        Las palabras de tu clase `invierno` deben tener el mismo tipo de color y fuente.

        -   Encuentra el conjunto de reglas CSS en la hoja de estilo que da estilo a las palabras de la clase `invierno`.
        -   Agrega una regla que cambia la fuente de las palabras de la clase `invierno`. Puede ser cualquier tipo de fuente, pero tendrá que ser diferente a la de las otras tres estaciones.
        -   Agrega otra regla que desees para las palabras de la clase `invierno`.
      CSD U2 classes modify_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>
        </summary>
        Para que el código funcione, debes crear una clase `invierno` y agregar elementos a la clase.

        La clase se crea en la hoja de estilo, con el siguiente código.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        Este código crea una clase llamada `invierno` y hace que todo en la clase sea de nuestro color azul invernal, que tiene los valores RGB (195,230,255).

        El código que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. El `class=invierno` dentro de la etiqueta de apertura agrega todo lo que está dentro de la etiqueta a la clase.

        </details>
        <details>

        <summary>
        <strong>¿Qué reglas se pueden agregar al conjunto de reglas de la clase?</strong>
        </summary>

        El conjunto de reglas de una clase puede tener las mismas reglas que cualquier otro tipo de selector. Si una regla no se aplica al contenido de la clase (por ejemplo, si se usa `font-size` en un elemento sin texto), la computadora ignorará esa regla, pero seguirá usando las reglas que funcionan.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>
        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>
        </summary>
        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.
        </details>
        <details>
        <summary>
        <strong>Tengo diferentes valores RGB, pero los míos también son correctos.</strong>
        </summary>

        Debido a que RGB crea millones de colores diferentes, algunos son tan similares que las personas tienen dificultades para diferenciarlos. Eso significa que hay varios valores RGB que se parecen lo suficiente a nuestro color invernal y que se pueden usar.

        </details>
        </div>

        # Agregar reglas

        Las palabras de tu clase `invierno` deben tener el mismo tipo de color y fuente.

        -   Encuentra el conjunto de reglas CSS en la hoja de estilo que da estilo a las palabras de la clase `invierno`.
        -   Agrega una regla que cambia la fuente de las palabras de la clase `invierno`. Puede ser cualquier tipo de fuente, pero tendrá que ser diferente a la de las otras tres estaciones.
        -   Agrega otra regla que desees para las palabras de la clase `invierno`.
      CSD U2 classes sample: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>
        </summary>
        Para que el código funcione, debes crear una clase `invierno` y agregar elementos a la clase.

        La clase se crea en la hoja de estilo, con el siguiente código.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        Este código crea una clase llamada `invierno` y hace que todo en la clase sea de nuestro color azul invernal, que tiene los valores RGB (195,230,255).

        El código que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. El `class=invierno` dentro de la etiqueta de apertura agrega todo lo que está dentro de la etiqueta a la clase.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>

        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>

        </summary>
        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.
        </details>
        <details>
        <summary>
        <strong>Tengo diferentes valores RGB, pero los míos también son correctos.</strong>

        </summary>

        Debido a que RGB crea millones de colores diferentes, algunos son tan similares que las personas tienen dificultades para diferenciarlos. Eso significa que hay varios valores RGB que se parecen lo suficiente a nuestro color invernal y que se pueden usar.

        </details>
        </div>

        # Clases

        En esta página, el programador web ha usado clases para que algunas de las palabras tenga nuestro color invernal.

        -   Mirar el código HTML para ver palabras de la clase `invierno`. ¿Por qué "nevado" es la única palabra sin el color invernal?
        -   Agrega código al HTML para que "nevado" tenga el mismo azul invernal que las otras palabras.
        -   Mire dentro de la hoja de estilo para encontrar la regla que hace que todas las palabras de la clase `invierno` sean azules y comprueba si sus números RGB se asemejan a los de la hoja de estilo.
        -   Habla con tu compañero acerca de cómo funciona el código.
      CSD U2 classes sample_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>
        </summary>
        Para que el código funcione, debes crear una clase `invierno` y agregar elementos a la clase.

        La clase se crea en la hoja de estilo, con el siguiente código.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        Este código crea una clase llamada `invierno` y hace que todo en la clase sea de nuestro color azul invernal, que tiene los valores RGB (195,230,255).

        El código que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. El `class=invierno` dentro de la etiqueta de apertura agrega todo lo que está dentro de la etiqueta a la clase.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>
        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>
        </summary>
        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.
        </details>
        <details>
        <summary>
        <strong>Tengo diferentes valores RGB, pero los míos también son correctos.</strong>
        </summary>

        Debido a que RGB crea millones de colores diferentes, algunos son tan similares que las personas tienen dificultades para diferenciarlos. Eso significa que hay varios valores RGB que se parecen lo suficiente a nuestro color invernal y que se pueden usar.

        </details>
        </div>

        # Clases

        En esta página, el programador web ha usado clases para que algunas de las palabras tenga nuestro color invernal.

        -   Mirar el código HTML para ver palabras de la clase `invierno`. ¿Por qué "nevado" es la única palabra sin el color invernal?
        -   Agrega código al HTML para que "nevado" tenga el mismo azul invernal que las otras palabras.
        -   Mire dentro de la hoja de estilo para encontrar la regla que hace que todas las palabras de la clase `invierno` sean azules y comprueba si sus números RGB se asemejan a los de la hoja de estilo.
        -   Habla con tu compañero acerca de cómo funciona el código.
      CSD U2 classes sample_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>
        </summary>
        Para que el código funcione, debes crear una clase `invierno` y agregar elementos a la clase.

        La clase se crea en la hoja de estilo, con el siguiente código.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        Este código crea una clase llamada `invierno` y hace que todo en la clase sea de nuestro color azul invernal, que tiene los valores RGB (195,230,255).

        El código que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. El `class=invierno` dentro de la etiqueta de apertura agrega todo lo que está dentro de la etiqueta a la clase.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>
        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>
        </summary>
        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.
        </details>
        <details>
        <summary>
        <strong>Tengo diferentes valores RGB, pero los míos también son correctos.</strong>
        </summary>

        Debido a que RGB crea millones de colores diferentes, algunos son tan similares que las personas tienen dificultades para diferenciarlos. Eso significa que hay varios valores RGB que se parecen lo suficiente a nuestro color invernal y que se pueden usar.

        </details>
        </div>

        # Clases

        En esta página, el programador web ha usado clases para que algunas de las palabras tenga nuestro color invernal.

        -   Mirar el código HTML para ver palabras de la clase `invierno`. ¿Por qué "nevado" es la única palabra sin el color invernal?
        -   Agrega código al HTML para que "nevado" tenga el mismo azul invernal que las otras palabras.
        -   Mire dentro de la hoja de estilo para encontrar la regla que hace que todas las palabras de la clase `invierno` sean azules y comprueba si sus números RGB se asemejan a los de la hoja de estilo.
        -   Habla con tu compañero acerca de cómo funciona el código.
      CSD U2 classes spring: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>

        </summary>
        Para que el código funcione, debes crear una clase `primavera` y agregar elementos a la clase.

        La clase ya ha sido creada en la hoja de estilo, pero no tiene reglas.

        <pre>.primavera{
        color: rgb(195,230,255);
        }</pre>

        Mira las reglas de la clase `invierno` para obtener pistas sobre cómo crear reglas para la clase `verano`.

        También deberás agregar algunos elementos a la clase `primavera` dentro de tu archivo HTML.

        El código en el archivo HTML que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. Usa este patrón para agregar elementos a la clase `primavera`.

        </details>
        <details>
        <summary>
        <strong>¿Qué reglas se pueden agregar al conjunto de reglas de la clase?</strong>

        </summary>

        El conjunto de reglas de una clase puede tener las mismas reglas que cualquier otro tipo de selector. Si una regla no se aplica al contenido de la clase (por ejemplo, si se usa `font-size` en un elemento sin texto), la computadora ignorará esa regla, pero seguirá usando las reglas que funcionan.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>

        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>

        </summary>
        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.

        </details>
        </div>

        # Clase `primavera`

        Ahora que tu clase `invierno` está lista, puedes comenzar con las otras estaciones.

        -   Encuentra el conjunto de reglas CSS vacío en la hoja de estilo que da estilo a las palabras de la clase `primavera`.
        -   Agrega dos reglas, una para que el texto tenga tu color primaveral antes de la lección y otra para que el texto tenga una fuente, tamaño de fuente o decoración diferente.
        -   Agrega la clase `primavera` a los elementos de esa clase en la página HTML.
      CSD U2 classes spring_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>
        </summary>
        Para que el código funcione, debes crear una clase `primavera` y agregar elementos a la clase.

        La clase ya ha sido creada en la hoja de estilo, pero no tiene reglas.

        <pre>.primavera {
        color: rgb(195,230,255);
        }</pre>

        Mira las reglas de la clase `invierno` para obtener pistas sobre cómo crear reglas para la clase `verano`.

        También deberás agregar algunos elementos a la clase `primavera` dentro de tu archivo HTML.

        El código en el archivo HTML que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. Usa este patrón para agregar elementos a la clase `primavera`.

        </details>
        <details>
        <summary>
        <strong>¿Qué reglas se pueden agregar al conjunto de reglas de la clase?</strong>
        </summary>

        El conjunto de reglas de una clase puede tener las mismas reglas que cualquier otro tipo de selector. Si una regla no se aplica al contenido de la clase (por ejemplo, si se usa `font-size` en un elemento sin texto), la computadora ignorará esa regla, pero seguirá usando las reglas que funcionan.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>
        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>
        </summary>

        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.

        </details>
        </div>

        # Clase `primavera`

        Ahora que tu clase `invierno` está lista, puedes comenzar con las otras estaciones.

        -   Encuentra el conjunto de reglas CSS vacío en la hoja de estilo que da estilo a las palabras de la clase `primavera`.
        -   Agrega dos reglas, una para que el texto tenga tu color primaveral antes de la lección y otra para que el texto tenga una fuente, tamaño de fuente o decoración diferente.
        -   Agrega la clase `primavera` a los elementos de esa clase en la página HTML.
      CSD U2 classes spring_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>
        </summary>
        Para que el código funcione, debes crear una clase `primavera` y agregar elementos a la clase.

        La clase ya ha sido creada en la hoja de estilo, pero no tiene reglas.

        <pre>.primavera {
        color: rgb(195,230,255);
        }</pre>

        Mira las reglas de la clase `invierno` para obtener pistas sobre cómo crear reglas para la clase `verano`.

        También deberás agregar algunos elementos a la clase `primavera` dentro de tu archivo HTML.

        El código en el archivo HTML que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. Usa este patrón para agregar elementos a la clase `primavera`.

        </details>
        <details>
        <summary>
        <strong>¿Qué reglas se pueden agregar al conjunto de reglas de la clase?</strong>
        </summary>

        El conjunto de reglas de una clase puede tener las mismas reglas que cualquier otro tipo de selector. Si una regla no se aplica al contenido de la clase (por ejemplo, si se usa `font-size` en un elemento sin texto), la computadora ignorará esa regla, pero seguirá usando las reglas que funcionan.

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>
        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>
        </summary>

        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.

        </details>
        </div>

        # Clase `primavera`

        Ahora que tu clase `invierno` está lista, puedes comenzar con las otras estaciones.

        -   Encuentra el conjunto de reglas CSS vacío en la hoja de estilo que da estilo a las palabras de la clase `primavera`.
        -   Agrega dos reglas, una para que el texto tenga tu color primaveral antes de la lección y otra para que el texto tenga una fuente, tamaño de fuente o decoración diferente.
        -   Agrega la clase `primavera` a los elementos de esa clase en la página HTML.
      CSD U2 classes summer: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>

        </summary>
        Para que el código de la clase `invierno` funcione, se debe crear una clase `invierno` y agregar elementos a la clase.

        La clase se crea en la hoja de estilo, con el siguiente código.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        Este código crea una clase llamada `invierno` y hace que todo en la clase sea de nuestro color azul invernal, que tiene los valores RGB (195,230,255).

        El código que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. El `class=invierno` dentro de la etiqueta de apertura agrega todo lo que está dentro de la etiqueta a la clase.

        </details>
        <details>
        <summary>
        <strong>¿Cómo puedo crear un nuevo conjunto de reglas?</strong>

        </summary>
        Para crear un nuevo conjunto de reglas, sigue el patrón que usan las clases `invierno` y `primavera` en la hoja de estilo.
        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        El nombre del selector y los valores de color serán diferentes, pero el siguiente patrón es siempre el mismo.

        <pre>.classname {
        property1: value1;
        property2: value2;
        }</pre>

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>

        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>

        </summary>

        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.

        </details>
        </div>

        # Clases `verano` y `otoño`

        -   Dentro de la hoja de estilo, crea un nuevo conjunto de reglas para una clase "verano".
        -   Agrega una regla para configurar el texto en la clase "verano" según tu color RGB de verano.
        -   Agrega la clase "verano" a los elementos de esa clase en la página HTML.
        -   Haz lo mismo para la clase "otoño".
      CSD U2 classes summer_2018: |-
        <div style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>
        </summary>
        Para que el código de la clase `invierno` funcione, se debe crear una clase `invierno` y agregar elementos a la clase.

        La clase se crea en la hoja de estilo, con el siguiente código.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        Este código crea una clase llamada `invierno` y hace que todo en la clase sea de nuestro color azul invernal, que tiene los valores RGB (195,230,255).

        El código que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. El `class=invierno` dentro de la etiqueta de apertura agrega todo lo que está dentro de la etiqueta a la clase.

        </details>
        <details>
        <summary>
        <strong>¿Cómo puedo crear un nuevo conjunto de reglas?</strong>
        </summary>

        Para crear un nuevo conjunto de reglas, sigue el patrón que usan las clases `invierno` y `primavera` en la hoja de estilo.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        El nombre del selector y los valores de color serán diferentes, pero el siguiente patrón es siempre el mismo.

        <pre>.classname {
        property1: value1;
        property2: value2;
        }</pre>

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>
        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>
        </summary>

        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.

        </details>
        </div>

        # Clases `verano` y `otoño`

        -   Dentro de la hoja de estilo, crea un nuevo conjunto de reglas para una clase "verano".
        -   Agrega una regla para configurar el texto en la clase "verano" según tu color RGB de verano.
        -   Agrega la clase "verano" a los elementos de esa clase en la página HTML.
        -   Haz lo mismo para la clase "otoño".
      CSD U2 classes summer_2019: |-
        <div class="no-pullthrough" style="float: right; height: 250px; width: 40%; overflow-y: scroll; margin-left: 20px; font-size:14px" markdown="1">
        <details>

        <summary>
        <strong>¿Cómo funciona el código?</strong>
        </summary>
        Para que el código de la clase `invierno` funcione, se debe crear una clase `invierno` y agregar elementos a la clase.

        La clase se crea en la hoja de estilo, con el siguiente código.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        Este código crea una clase llamada `invierno` y hace que todo en la clase sea de nuestro color azul invernal, que tiene los valores RGB (195,230,255).

        El código que agrega un elemento `h5` a la clase `invierno` es `<h5 class="invierno">`. El `class=invierno` dentro de la etiqueta de apertura agrega todo lo que está dentro de la etiqueta a la clase.

        </details>
        <details>
        <summary>
        <strong>¿Cómo puedo crear un nuevo conjunto de reglas?</strong>
        </summary>

        Para crear un nuevo conjunto de reglas, sigue el patrón que usan las clases `invierno` y `primavera` en la hoja de estilo.

        <pre>.invierno {
        color: rgb(195,230,255);
        }</pre>

        El nombre del selector y los valores de color serán diferentes, pero el siguiente patrón es siempre el mismo.

        <pre>.classname {
        property1: value1;
        property2: value2;
        }</pre>

        </details>
        <details>
        <summary>
        <strong>¿Por qué el selector tiene un punto delante?</strong>
        </summary>
        En CSS, un punto delante de un selector significa que el selector es el nombre de una clase. Si no hay un punto, significa que el selector es el nombre de una etiqueta HTML.
        </details>
        <details>
        <summary>
        <strong>¿Por qué el programador web usa clases?</strong>
        </summary>

        Un programador web usa clases cuando algunos elementos deben tener un estilo diferente a otros, incluso si son de la misma etiqueta. Las clases también se pueden usar para dar el mismo estilo a elementos con etiquetas diferentes.

        </details>
        </div>

        # Clases `verano` y `otoño`

        -   Dentro de la hoja de estilo, crea un nuevo conjunto de reglas para una clase "verano".
        -   Agrega una regla para configurar el texto en la clase "verano" según tu color RGB de verano.
        -   Agrega la clase "verano" a los elementos de esa clase en la página HTML.
        -   Haz lo mismo para la clase "otoño".
      CSD U3 Entertainment Sample 1: "# Alienígena Saltador\\\r\n\n\\\r\nPresiona\n\"Ejecutar\"
        para jugar el juego de la izquierda. Puedes hacer que el alienígena salte
        con el\nbarra espaciadora, y moverlo hacia la izquierda y hacia la derecha
        con las teclas de flecha. Tu puntuación\nsera al recolectar estrellas, y si
        puntúas lo suficiente, el fondo cambiará."
      CSD U3 Entertainment Sample 1_2018: "# Alienígena Saltador\\\r\n\n\\\r\nPresiona\n\"Ejecutar\"
        para jugar el juego de la izquierda. Puedes hacer que el alienígena salte
        con el\nbarra espaciadora, y moverlo hacia la izquierda y hacia la derecha
        con las teclas de flecha. Tu puntuación\nsera al recolectar estrellas, y si
        puntúas lo suficiente, el fondo cambiará."
      CSD U3 Entertainment Sample 1_2019: "# Alienígena Saltador\\\r\n\n\\\r\nPresiona\n\"Ejecutar\"
        para jugar el juego de la izquierda. Puedes hacer que el alienígena salte
        con el\nbarra espaciadora, y moverlo hacia la izquierda y hacia la derecha
        con las teclas de flecha. Tu puntuación\nsera al recolectar estrellas, y si
        puntúas lo suficiente, el fondo cambiará."
      CSD U3 Entertainment Sample 2: "# Conejito Hambriento\\\r\n\n\\\r\nEl\nConejito
        tiene hambre, y está buscando hongos y zanahorias para la cena.\\\r\n\\\r\nPara\nganar,
        tendrás que encontrar un envace para la cena, luego recoger al menos diez
        zanahorias\ny cinco hongos.\\\r\n\\\r\nAsegúrate de evitar los insectos. Mariquitas
        y caracoles\ncomerán tu comida, y las abejas te picarán, ¡haciéndote soltar
        todo!\\\r\n\\\r\nUza\nla barra espaciadora para saltar. Puedes aplastar mariquitas
        y caracoles saltando sobre ellos.\\\r\n\\\r\nHaz clic\nen \"Ejecutar\" para
        iniciar el programa."
      CSD U3 Entertainment Sample 2_2018: "# Conejito Hambriento\\\r\n\n\\\r\nEl\nConejito
        tiene hambre, y está buscando hongos y zanahorias para la cena.\\\r\n\\\r\nPara\nganar,
        tendrás que encontrar un envace para la cena, luego recoger al menos diez
        zanahorias\ny cinco hongos.\\\r\n\\\r\nAsegúrate de evitar los insectos. Mariquitas
        y caracoles\ncomerán tu comida, y las abejas te picarán, ¡haciéndote soltar
        todo!\\\r\n\\\r\nUza\nla barra espaciadora para saltar. Puedes aplastar mariquitas
        y caracoles saltando sobre ellos.\\\r\n\\\r\nHaz clic\nen \"Ejecutar\" para
        iniciar el programa."
      CSD U3 Entertainment Sample 2_2019: "# Conejito Hambriento\\\r\n\n\\\r\nEl\nConejito
        tiene hambre, y está buscando hongos y zanahorias para la cena.\\\r\n\\\r\nPara\nganar,
        tendrás que encontrar un envace para la cena, luego recoger al menos diez
        zanahorias\ny cinco hongos.\\\r\n\\\r\nAsegúrate de evitar los insectos. Mariquitas
        y caracoles\ncomerán tu comida, y las abejas te picarán, ¡haciéndote soltar
        todo!\\\r\n\\\r\nUza\nla barra espaciadora para saltar. Puedes aplastar mariquitas
        y caracoles saltando sobre ellos.\\\r\n\\\r\nHaz clic\nen \"Ejecutar\" para
        iniciar el programa."
      CSD U3 Entertainment Sample 3: "# Caricaturas animadas\\\r\n\n\\\r\nCombinando\nimágenes,
        texto y alguna animación sutil pueden hacer cómics realmente interesantes\no
        historias gráficas. Haga clic en \"Ejecutar\" para ver un ejemplo.\\\r"
      CSD U3 Entertainment Sample 3_2018: "# Caricaturas animadas\\\r\n\n\\\r\nCombinando\nimágenes,
        texto y alguna animación sutil pueden hacer cómics realmente interesantes\no
        historias gráficas. Haga clic en \"Ejecutar\" para ver un ejemplo.\\\r"
      CSD U3 Entertainment Sample 3_2019: "# Caricaturas animadas\\\r\n\n\\\r\nCombinando\nimágenes,
        texto y alguna animación sutil pueden hacer cómics realmente interesantes\no
        historias gráficas. Haga clic en \"Ejecutar\" para ver un ejemplo.\\\r"
      CSD U3 Entertainment Sample 4: "# Timbre de sello\\\r\n\n\\\r\nHacer clic\nEn
        \"Ejecutar\" para iniciar el programa, luego use la almohadilla de sello para
        dibujar con\ncolores simples y sellos de animales.\\\r"
      CSD U3 Entertainment Sample 4_2018: "# Timbre de sello\\\r\n\n\\\r\nHacer clic\nEn
        \"Ejecutar\" para iniciar el programa, luego use la almohadilla de sello para
        dibujar con\ncolores simples y sellos de animales.\\\r"
      CSD U3 Entertainment Sample 4_2019: "# Timbre de sello\\\r\n\n\\\r\nHacer clic\nEn
        \"Ejecutar\" para iniciar el programa, luego use la almohadilla de sello para
        dibujar con\ncolores simples y sellos de animales.\\\r"
      CSD U3 Input Fish: "# Pez con flechas\\\r\n\n\\\r\nEl pez\nestá de regreso.
        ¿Puedes hacer que el pez se mueva hacia la izquierda solo cuando la tecla
        de la flecha esta\npresionada?\\\r\n\\\r\n\n# Hacer esto\\\r\n\n\\\r\n\n-
        \  Agregue una declaración if para verificar cuando\n    la tecla de flecha
        izquierda está presionada hacia abajo.\\\r\n-   Mueva los comandos para mover
        el\n    pez dentro de la declaración if."
      CSD U3 Input Fish_2018: "# Pez con flechas\\\r\n\n\\\r\nEl pez\nestá de regreso.
        ¿Puedes hacer que el pez se mueva hacia la izquierda solo cuando la tecla
        de la flecha esta\npresionada?\\\r\n\\\r\n\n# Hacer esto\\\r\n\n\\\r\n\n-
        \  Agregue una declaración if para verificar cuando\n    la tecla de flecha
        izquierda está presionada hacia abajo.\\\r\n-   Mueva los comandos para mover
        el\n    pez dentro de la declaración if."
      CSD U3 Input Fish_2019: "# Pez con flechas\\\r\n\n\\\r\nEl pez\nestá de regreso.
        ¿Puedes hacer que el pez se mueva hacia la izquierda solo cuando la tecla
        de la flecha esta\npresionada?\\\r\n\\\r\n\n# Hacer esto\\\r\n\n\\\r\n\n-
        \  Agregue una declaración if para verificar cuando\n    la tecla de flecha
        izquierda está presionada hacia abajo.\\\r\n-   Mueva los comandos para mover
        el\n    pez dentro de la declaración if."
      CSD U3 Input Gears: "# Engranajes con Condicionales\\\r\n\n\\\r\nVamos a\nhacer
        girar los engranajes solo cuando la tecla de espacio se mantiene presionada.\\\r\n\\\r\n\n#
        Hagamos\n\nEsto\\\r\n\\\r\n\n-   Agregar una instrucción `if`.\\\r\n-   Use
        `Flecha bajando` como entrada para la\n    declaración if para verificar cuando
        se presiona la tecla de espacio.\\\r\n-   Mueve el código que\n    hace que
        los engranajes giren dentro del `if`."
      CSD U3 Input Gears_2018: "# Engranajes con Condicionales\\\r\n\n\\\r\nVamos
        a\nhacer girar los engranajes solo cuando la tecla de espacio se mantiene
        presionada.\\\r\n\\\r\n\n# Hagamos\n\nEsto\\\r\n\\\r\n\n-   Agregar una instrucción
        `if`.\\\r\n-   Use `Flecha bajando` como entrada para la\n    declaración
        if para verificar cuando se presiona la tecla de espacio.\\\r\n-   Mueve el
        código que\n    hace que los engranajes giren dentro del `if`."
      CSD U3 Input Gears_2019: "# Engranajes con Condicionales\\\r\n\n\\\r\nVamos
        a\nhacer girar los engranajes solo cuando la tecla de espacio se mantiene
        presionada.\\\r\n\\\r\n\n# Hagamos\n\nEsto\\\r\n\\\r\n\n-   Agregar una instrucción
        `if`.\\\r\n-   Use `Flecha bajando` como entrada para la\n    declaración
        if para verificar cuando se presiona la tecla de espacio.\\\r\n-   Mueve el
        código que\n    hace que los engranajes giren dentro del `if`."
      CSD U3 Keyboard Input Challenge: "# Desafío\\\r\n\n_Comprobar\ncon tu maestra
        antes de intentar este desafío._\\\r\n\\\r\nAquí está el programa de errores\nhas
        estado trabajando durante los últimos niveles. Elija uno o más de los siguientes\ndesafíos,
        o agrega nuevas características tuyas!\\\r\n\\\r\n\n-   Use la tecla \"espacio\"\n
        \   para controlar otra propiedad de su sprite de error, como la rotación
        o la escala.\\\r\n-   \\*\n    Agregue una asignación al azar a su movimiento.\\\r\n-
        \  Agregue un segundo sprite y control\n    eso con un conjunto diferente
        de teclas (\"w\", \"a\", \"s\" y \"d\" son comunes\n    opciones).\\\r\n-
        \  Agregue algunas formas a su fondo para que la escena sea más interesante."
      CSD U3 Keyboard Input Challenge_2018: "# Desafío\\\r\n\n_Comprobar\ncon tu maestra
        antes de intentar este desafío._\\\r\n\\\r\nAquí está el programa de errores\nhas
        estado trabajando durante los últimos niveles. Elija uno o más de los siguientes\ndesafíos,
        o agrega nuevas características tuyas!\\\r\n\\\r\n\n-   Use la tecla \"espacio\"\n
        \   para controlar otra propiedad de su sprite de error, como la rotación
        o la escala.\\\r\n-   \\*\n    Agregue una asignación al azar a su movimiento.\\\r\n-
        \  Agregue un segundo sprite y control\n    eso con un conjunto diferente
        de teclas (\"w\", \"a\", \"s\" y \"d\" son comunes\n    opciones).\\\r\n-
        \  Agregue algunas formas a su fondo para que la escena sea más interesante."
      CSD U3 Keyboard Input Challenge_2018_2019: "# Desafío\\\r\n\n_Comprobar\ncon
        tu maestra antes de intentar este desafío._\\\r\n\\\r\nAquí está el programa
        de errores\nhas estado trabajando durante los últimos niveles. Elija uno o
        más de los siguientes\ndesafíos, o agrega nuevas características tuyas!\\\r\n\\\r\n\n-
        \  Use la tecla \"espacio\"\n    para controlar otra propiedad de su sprite
        de error, como la rotación o la escala.\\\r\n-   \\*\n    Agregue una asignación
        al azar a su movimiento.\\\r\n-   Agregue un segundo sprite y control\n    eso
        con un conjunto diferente de teclas (\"w\", \"a\", \"s\" y \"d\" son comunes\n
        \   opciones).\\\r\n-   Agregue algunas formas a su fondo para que la escena
        sea más interesante."
      CSD U3 Movement Your Own 2: "# Agregar movimiento a tu animación\\\r\n\n\\\r\nCon\nsu
        escena estática configurada, ahora puede agregar algún movimiento. Cuando
        está satisfecho\ncon su programa, haga clic en el botón \"Enviar\" para activarlo.
        Usted siempre puede\nno enviarlo y continuar trabajando si desea agregar funciones.\\\r\n\\\r\n\n#
        Hacer esto\\\r\n\n\\\r\nEn\nel lazo de drenaje\\\r\n\\\r\n\n-   Identificar
        qué propiedades de los sprites cambiarán.\\\r\n-   Actualiza\n    esas propiedades
        usando el patrón de contador.\\\r\n    \\\r\n    \\_ Sugerencia: si tu patrón
        de contador\n    no funciona como esperaba, agregue vigilantes para ayudar
        a depurar su programa.\\_"
      CSD U3 Movement Your Own 2_2018: "# Agregar movimiento a tu animación\\\r\n\n\\\r\nCon\nsu
        escena estática configurada, ahora puede agregar algún movimiento. Cuando
        está satisfecho\ncon su programa, haga clic en el botón \"Enviar\" para activarlo.
        Usted siempre puede\nno enviarlo y continuar trabajando si desea agregar funciones.\\\r\n\\\r\n\n#
        Hacer esto\\\r\n\n\\\r\nEn\nel lazo de drenaje\\\r\n\\\r\n\n-   Identificar
        qué propiedades de los sprites cambiarán.\\\r\n-   Actualiza\n    esas propiedades
        usando el patrón de contador.\\\r\n    \\\r\n    \\_ Sugerencia: si tu patrón
        de contador\n    no funciona como esperaba, agregue vigilantes para ayudar
        a depurar su programa.\\_"
      CSD U3 Movement Your Own 2_2019: "# Agregar movimiento a tu animación\\\r\n\n\\\r\nCon\nsu
        escena estática configurada, ahora puede agregar algún movimiento. Cuando
        está satisfecho\ncon su programa, haga clic en el botón \"Enviar\" para activarlo.
        Usted siempre puede\nno enviarlo y continuar trabajando si desea agregar funciones.\\\r\n\\\r\n\n#
        Hacer esto\\\r\n\n\\\r\nEn\nel lazo de drenaje\\\r\n\\\r\n\n-   Identificar
        qué propiedades de los sprites cambiarán.\\\r\n-   Actualiza\n    esas propiedades
        usando el patrón de contador.\\\r\n    \\\r\n    \\_ Sugerencia: si tu patrón
        de contador\n    no funciona como esperaba, agregue vigilantes para ayudar
        a depurar su programa.\\_"
      CSD U3 Random background: "# Fondo\\\r\n\n\\\r\nA veces\nquerrás llenar toda
        la pantalla con un color. Para eso, puedes usar\n`fondo`. Cubre todo en la
        pantalla con el color que elija.\\\r\n\\\r\n\n# \n\nHacer esto\\\r\n\\\r\n\n-
        \  Ejecute el código para ver \\`el trabajo de fondo.\\\r\n-   Cambiar el
        fondo\n    de amarillo a naranja.\\\r\n    \\\r\n-   Desafío: hay un cuadrado
        morado que esta\n    cubierto por el fondo. ¿Puedes cambiar el orden del código
        para que\n    puedas ver los cuadros morados y azules? \\*"
      CSD U3 Random background_2018: "# Fondo\\\r\n\n\\\r\nA veces\nquerrás llenar
        toda la pantalla con un color. Para eso, puedes usar\n`fondo`. Cubre todo
        en la pantalla con el color que elija.\\\r\n\\\r\n\n# \n\nHacer esto\\\r\n\\\r\n\n-
        \  Ejecute el código para ver \\`el trabajo de fondo.\\\r\n-   Cambiar el
        fondo\n    de amarillo a naranja.\\\r\n    \\\r\n-   Desafío: hay un cuadrado
        morado que esta\n    cubierto por el fondo. ¿Puedes cambiar el orden del código
        para que\n    puedas ver los cuadros morados y azules? \\*"
      CSD U3 Random background_2019: "# Fondo\\\r\n\n\\\r\nA veces\nquerrás llenar
        toda la pantalla con un color. Para eso, puedes usar\n`fondo`. Cubre todo
        en la pantalla con el color que elija.\\\r\n\\\r\n\n# \n\nHacer esto\\\r\n\\\r\n\n-
        \  Ejecute el código para ver \\`el trabajo de fondo.\\\r\n-   Cambiar el
        fondo\n    de amarillo a naranja.\\\r\n    \\\r\n-   Desafío: hay un cuadrado
        morado que esta\n    cubierto por el fondo. ¿Puedes cambiar el orden del código
        para que\n    puedas ver los cuadros morados y azules? \\*"
      CSD U3 Random random ellipse: "# Números aleatorios\\\r\n\n\\\r\n`randomNumber
        ()`\nelige un número aleatorio entre un valor mínimo y máximo. Puedes usar
        este\ncódigo en lugar de escribir en el número específico. Si haces tus dibujos\ncon
        números aleatorios se verá un poco diferente cada vez que corra\nsu programa.\\\r\n\\\r\n\n#
        Hacer esto\\\r\n\n\\\r\n\n-   Ejecute el programa varias veces para ver\n
        \   cómo este funciona.\\\r\n-   Cambie los números dentro de `Numero Aleatorio`
        y ejecute el código\n    de nuevo algunas veces para ver qué cambia."
      CSD U3 Random random ellipse_2018: "# Números aleatorios\\\r\n\n\\\r\n`randomNumber
        ()`\nelige un número aleatorio entre un valor mínimo y máximo. Puedes usar
        este\ncódigo en lugar de escribir en el número específico. Si haces tus dibujos\ncon
        números aleatorios se verá un poco diferente cada vez que corra\nsu programa.\\\r\n\\\r\n\n#
        Hacer esto\\\r\n\n\\\r\n\n-   Ejecute el programa varias veces para ver\n
        \   cómo este funciona.\\\r\n-   Cambie los números dentro de `Numero Aleatorio`
        y ejecute el código\n    de nuevo algunas veces para ver qué cambia."
      CSD U3 Random random ellipse_2018_2019: "# Números aleatorios\\\r\n\n\\\r\n`randomNumber
        ()`\nelige un número aleatorio entre un valor mínimo y máximo. Puedes usar
        este\ncódigo en lugar de escribir en el número específico. Si haces tus dibujos\ncon
        números aleatorios se verá un poco diferente cada vez que corra\nsu programa.\\\r\n\\\r\n\n#
        Hacer esto\\\r\n\n\\\r\n\n-   Ejecute el programa varias veces para ver\n
        \   cómo este funciona.\\\r\n-   Cambie los números dentro de `Numero Aleatorio`
        y ejecute el código\n    de nuevo algunas veces para ver qué cambia."
      CSD U3 Scene Example: "# escenas de Sprite\\\r\n\n\\\r\nAl combinar formas,
        sprites y un nuevo bloque llamado \\`texto ', puedes crear escenas simples,
        historias o cómics. Si bien este ejemplo es bastante simple, puedes combinar
        tantos sprites y formas como desees para crear escenas tan complejas o detalladas
        como desees.\\\r\n\\\r\n\n## esbozado \\\r\n\n\\\r\nAntes de continuar, tomate
        un segundo para esbozar un escenario que te gustaría hacer al final de esta
        lección. Considera las formas simples que has usado en el pasado, los sprites
        para tus personajes y cualquier texto que quieras en la pantalla. Una vez
        que haya esbozado una idea, aprenderas sobre 'texto' y cómo componer una escena.\\\r"
      CSD U3 Sprites anitab 2: |-
        # Sube tu propia imagen

        También puedes usar la pestaña Animación para subir o dibujar tu propia imagen.

        # Haz esto

        Vas a crear una cometa voladora. Puedes buscar una imagen en la web o dibujar tu propia cometa para crear una nueva animación desde cero.

        -   Descarga la imagen de la cometa. Las imágenes con fondo transparente son mejores.
        -   Abre la pestaña de animaciones.
        -   Haz clic en <img src="https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05 PM.png" style="width:50px"> y luego en <img src="https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16 PM.png" style="width:50px"> para subir una imagen.
        -   Selecciona el archivo en tu computadora.
        -   Cambia el nombre de la imagen para que sea más fácil de recordar. Para cambiar el nombre, haz clic en el texto debajo de la imagen.
        -   De vuelta en el código, usa `sprite.setAnimation()` para que el sprite `cometa` muestre tu nueva animación.

        ¡No te preocupes si la imagen de la cometa es muy grande! Aprenderás cómo corregir eso en el próximo nivel.
      CSD U3 Sprites anitab 2_2018: |-
        # Sube tu propia imagen

        También puedes usar la pestaña Animación para subir o dibujar tu propia imagen.

        # Haz esto

        Vas a crear una cometa voladora. Puedes buscar una imagen en la web o dibujar tu propia cometa para crear una nueva animación desde cero.

        -   Descarga la imagen de la cometa. Las imágenes con fondo transparente son mejores.
        -   Abre la pestaña de animaciones.
        -   Haz clic en <img src="https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05 PM.png" style="width:50px"> y luego en <img src="https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16 PM.png" style="width:50px"> para subir una imagen.
        -   Selecciona el archivo en tu computadora.
        -   Cambia el nombre de la imagen para que sea más fácil de recordar. Para cambiar el nombre, haz clic en el texto debajo de la imagen.
        -   De vuelta en el código, usa `sprite.setAnimation()` para que el sprite `cometa` muestre tu nueva animación.

        ¡No te preocupes si la imagen de la cometa es muy grande! Aprenderás cómo corregir eso en el próximo nivel.
      CSD U3 Sprites anitab 2_2019: |-
        # Sube tu propia imagen

        También puedes usar la pestaña Animación para subir o dibujar tu propia imagen.

        # Haz esto

        Vas a crear una cometa voladora. Puedes buscar una imagen en la web o dibujar tu propia cometa para crear una nueva animación desde cero.

        -   Descarga la imagen de la cometa. Las imágenes con fondo transparente son mejores.
        -   Abre la pestaña de animaciones.
        -   Haz clic en <img src="https://images.code.org/346f6657dba57b0c3bd5deb534f76b69-image-1466194432449.13.05 PM.png" style="width:50px"> y luego en <img src="https://images.code.org/60c0371b45b29f10a3c8530db9154428-image-1466194434329.13.16 PM.png" style="width:50px"> para subir una imagen.
        -   Selecciona el archivo en tu computadora.
        -   Cambia el nombre de la imagen para que sea más fácil de recordar. Para cambiar el nombre, haz clic en el texto debajo de la imagen.
        -   De vuelta en el código, usa `sprite.setAnimation()` para que el sprite `cometa` muestre tu nueva animación.

        ¡No te preocupes si la imagen de la cometa es muy grande! Aprenderás cómo corregir eso en el próximo nivel.
      CSD U3 Sprites scene challenge: "# Desafío: Extiende tu\n\nescena\\\r\n\\\r\n_Comprueba
        con tu maestro antes de comenzar este desafío._\\\r\n\\\r\nAhora\nque hayas
        terminado tu escena, considera agregarla o crear otra."
      CSD U3 Sprites scene challenge_2018: "# Desafío: Extiende tu\n\nescena\\\r\n\\\r\n_Comprueba
        con tu maestro antes de comenzar este desafío._\\\r\n\\\r\nAhora\nque hayas
        terminado tu escena, considera agregarla o crear otra."
      CSD U3 Sprites scene challenge_2019: "# Desafío: Extiende tu\n\nescena\\\r\n\\\r\n_Comprueba
        con tu maestro antes de comenzar este desafío._\\\r\n\\\r\nAhora\nque hayas
        terminado tu escena, considera agregarla o crear otra."
      CSD U3 Sprites scene drawing: "# Crea tu escena - Dibujando\\\r\n\n\\\r\nTu
        \nvas a comenzar a crear una escena por ti mismo. Si aún no lo has hecho,
        toma\nun minuto para esbozar una imagen de su escena (considere usar papel
        cuadriculado).\nUna vez que tengas una idea y un plan para tu escena, comienza
        a dibujar el fondo.\\\r\n\\\r\n\n# \n\nHacer esto\\\r\n\\\r\n\n-   Use un
        comando `background()` para llenar la pantalla con un color.\\\r\n-   \\*\n
        \   Agregue los comandos de forma necesarios para dibujar los elementos que
        no son de sprite de su escena."
      CSD U3 Sprites scene drawing_2018: "# Crea tu escena - Dibujando\\\r\n\n\\\r\nTu
        \nvas a comenzar a crear una escena por ti mismo. Si aún no lo has hecho,
        toma\nun minuto para esbozar una imagen de su escena (considere usar papel
        cuadriculado).\nUna vez que tengas una idea y un plan para tu escena, comienza
        a dibujar el fondo.\\\r\n\\\r\n\n# \n\nHacer esto\\\r\n\\\r\n\n-   Use un
        comando `background()` para llenar la pantalla con un color.\\\r\n-   \\*\n
        \   Agregue los comandos de forma necesarios para dibujar los elementos que
        no son de sprite de su escena."
      CSD U3 Sprites scene drawing_2019: "# Crea tu escena - Dibujando\\\r\n\n\\\r\nTu
        \nvas a comenzar a crear una escena por ti mismo. Si aún no lo has hecho,
        toma\nun minuto para esbozar una imagen de su escena (considere usar papel
        cuadriculado).\nUna vez que tengas una idea y un plan para tu escena, comienza
        a dibujar el fondo.\\\r\n\\\r\n\n# \n\nHacer esto\\\r\n\\\r\n\n-   Use un
        comando `background()` para llenar la pantalla con un color.\\\r\n-   \\*\n
        \   Agregue los comandos de forma necesarios para dibujar los elementos que
        no son de sprite de su escena."
      CSD U3 Sprites scene sprites: "# Crea tu escena - Sprites\\\r\n\n\\\r\nCon\nel
        fondo en su lugar, es hora de agregar sus sprites.\\\r\n\n# Hacer esto\\\r\n\n\\\r\n\\*\nAgrega
        o crea todas tus imágenes de sprite en la pestaña Animación.\\\r\n\n-   Crea\n
        \   una variable para cada sprite en la parte superior de tu programa y usa
        `setAnimation ()`\n    para asignar las imágenes que ha creado en la pestaña
        Animación.\\\r\n-   Llamar a `drawSprites ()`\n    una vez al final de su
        programa.\\\r\n    \\\r\n    _Iniciar: es probable que desee llamar a `drawSprites
        ()`\n    al final de tu programa para que los sprites estén sobre tu fondo,\n
        \   pero para algunos diseños es posible que desee llamar `drawSprites ()`
        antes para que\n    tus sprites están encima de algunas formas pero debajo
        de otras._"
      CSD U3 Sprites scene sprites_2018: "# Crea tu escena - Sprites\\\r\n\n\\\r\nCon\nel
        fondo en su lugar, es hora de agregar sus sprites.\\\r\n\n# Hacer esto\\\r\n\n\\\r\n\\*\nAgrega
        o crea todas tus imágenes de sprite en la pestaña Animación.\\\r\n\n-   Crea\n
        \   una variable para cada sprite en la parte superior de tu programa y usa
        `setAnimation ()`\n    para asignar las imágenes que ha creado en la pestaña
        Animación.\\\r\n-   Llamar a `drawSprites ()`\n    una vez al final de su
        programa.\\\r\n    \\\r\n    _Iniciar: es probable que desee llamar a `drawSprites
        ()`\n    al final de tu programa para que los sprites estén sobre tu fondo,\n
        \   pero para algunos diseños es posible que desee llamar `drawSprites ()`
        antes para que\n    tus sprites están encima de algunas formas pero debajo
        de otras._"
      CSD U3 Sprites scene sprites_2019: "# Crea tu escena - Sprites\\\r\n\n\\\r\nCon\nel
        fondo en su lugar, es hora de agregar sus sprites.\\\r\n\n# Hacer esto\\\r\n\n\\\r\n\\*\nAgrega
        o crea todas tus imágenes de sprite en la pestaña Animación.\\\r\n\n-   Crea\n
        \   una variable para cada sprite en la parte superior de tu programa y usa
        `setAnimation ()`\n    para asignar las imágenes que ha creado en la pestaña
        Animación.\\\r\n-   Llamar a `drawSprites ()`\n    una vez al final de su
        programa.\\\r\n    \\\r\n    _Iniciar: es probable que desee llamar a `drawSprites
        ()`\n    al final de tu programa para que los sprites estén sobre tu fondo,\n
        \   pero para algunos diseños es posible que desee llamar `drawSprites ()`
        antes para que\n    tus sprites están encima de algunas formas pero debajo
        de otras._"
      CSD U3 Sprites scene text: "# Crea tu escena - Texto\\\r\n\n\\\r\nLa\npieza
        final de tu escena es agregar texto.\\\r\n\\\r\n\n# Hacer esto\\\r\n\n\\\r\n\n-
        \  Agrega un\n    `text ()` comando para cada línea de texto por separado.\\\r\n-
        \  Si es necesario, use `fill ()`\n    y `textSize ()` para cambiar la apariencia
        de su texto.\\\r\n    \\\r\n    \\_ Sugerencia: la mayoría\n    de las escenas
        tienen el texto encima de todo, lo que requeriría su `text ()`\n    comandos
        para ser las últimas líneas en su programa. Sin embargo, si quieres el texto\n
        \   en capas con otros elementos, puede considerar cambiar el orden.\\_"
      CSD U3 Sprites scene text_2018: "# Crea tu escena - Texto\\\r\n\n\\\r\nLa\npieza
        final de tu escena es agregar texto.\\\r\n\\\r\n\n# Hacer esto\\\r\n\n\\\r\n\n-
        \  Agrega un\n    `text ()` comando para cada línea de texto por separado.\\\r\n-
        \  Si es necesario, use `fill ()`\n    y `textSize ()` para cambiar la apariencia
        de su texto.\\\r\n    \\\r\n    \\_ Sugerencia: la mayoría\n    de las escenas
        tienen el texto encima de todo, lo que requeriría su `text ()`\n    comandos
        para ser las últimas líneas en su programa. Sin embargo, si quieres el texto\n
        \   en capas con otros elementos, puede considerar cambiar el orden.\\_"
      CSD U3 Sprites scene text_2019: "# Crea tu escena - Texto\\\r\n\n\\\r\nLa\npieza
        final de tu escena es agregar texto.\\\r\n\\\r\n\n# Hacer esto\\\r\n\n\\\r\n\n-
        \  Agrega un\n    `text ()` comando para cada línea de texto por separado.\\\r\n-
        \  Si es necesario, use `fill ()`\n    y `textSize ()` para cambiar la apariencia
        de su texto.\\\r\n    \\\r\n    \\_ Sugerencia: la mayoría\n    de las escenas
        tienen el texto encima de todo, lo que requeriría su `text ()`\n    comandos
        para ser las últimas líneas en su programa. Sin embargo, si quieres el texto\n
        \   en capas con otros elementos, puede considerar cambiar el orden.\\_"
      CSD U3 Sprites text: "# Agregar texto\\\r\n\n\\\r\nPuedes poner\ntexto en cualquier
        lugar que desee en la pantalla usando `text`. Cambiar el texto \nvisualizado
        en el código provisto, luego agregue un segundo `texto` para escribir en un\nparte
        diferente de la pantalla.\\\r\n\\\r\n\\_ Sugerencia: el tamaño del texto predeterminado
        es bastante pequeño, pero\npuedes usar el bloque `textSize` para cambiar eso.
        También puede usar `fill` para\ncambia el color de tu texto.\\_"
      CSD U3 Sprites text_2018: "# Agregar texto\\\r\n\n\\\r\nPuedes poner\ntexto
        en cualquier lugar que desee en la pantalla usando `text`. Cambiar el texto
        \nvisualizado en el código provisto, luego agregue un segundo `texto` para
        escribir en un\nparte diferente de la pantalla.\\\r\n\\\r\n\\_ Sugerencia:
        el tamaño del texto predeterminado es bastante pequeño, pero\npuedes usar
        el bloque `textSize` para cambiar eso. También puede usar `fill` para\ncambia
        el color de tu texto.\\_"
      CSD U3 Sprites text_2019: "# Agregar texto\\\r\n\n\\\r\nPuedes poner\ntexto
        en cualquier lugar que desee en la pantalla usando `text`. Cambiar el texto
        \nvisualizado en el código provisto, luego agregue un segundo `texto` para
        escribir en un\nparte diferente de la pantalla.\\\r\n\\\r\n\\_ Sugerencia:
        el tamaño del texto predeterminado es bastante pequeño, pero\npuedes usar
        el bloque `textSize` para cambiar eso. También puede usar `fill` para\ncambia
        el color de tu texto.\\_"
      CSD U3 Variables Draw Challenge: "# Desafío: dibujar una\n\nImagen\\\r\n\\\r\n_Comprueba
        con tu profesor antes de abordar este nivel de desafío._\\\r\n\\\r\nUtilizando\nvariables,
        dibuja una imagen donde muchos de los elementos se basan en una variable común\npara
        el tamaño o la ubicación. Por ejemplo, dibuja un rostro con variables que
        controlan\nel tamaño y o la ubicación de ambos ojos, oídos y fosas nasales.
        Una vez que hayas\ncompletado tu dibujo, intenta cambiar los valores de las
        variables para estar\nseguro de que toda la imagen cambia junto.\\\r"
      CSD U3 Variables Draw Challenge_2018: "# Desafío: dibujar una\n\nImagen\\\r\n\\\r\n_Comprueba
        con tu profesor antes de abordar este nivel de desafío._\\\r\n\\\r\nUtilizando\nvariables,
        dibuja una imagen donde muchos de los elementos se basan en una variable común\npara
        el tamaño o la ubicación. Por ejemplo, dibuja un rostro con variables que
        controlan\nel tamaño y o la ubicación de ambos ojos, oídos y fosas nasales.
        Una vez que hayas\ncompletado tu dibujo, intenta cambiar los valores de las
        variables para estar\nseguro de que toda la imagen cambia junto.\\\r"
      CSD U3 Variables Draw Challenge_2019: "# Desafío: dibujar una\n\nImagen\\\r\n\\\r\n_Comprueba
        con tu profesor antes de abordar este nivel de desafío._\\\r\n\\\r\nUtilizando\nvariables,
        dibuja una imagen donde muchos de los elementos se basan en una variable común\npara
        el tamaño o la ubicación. Por ejemplo, dibuja un rostro con variables que
        controlan\nel tamaño y o la ubicación de ambos ojos, oídos y fosas nasales.
        Una vez que hayas\ncompletado tu dibujo, intenta cambiar los valores de las
        variables para estar\nseguro de que toda la imagen cambia junto.\\\r"
      CSD U5 binary 5-new: "# Decodificación de múltiples números\\\r\\\r\n\n\\\r\nAquí
        hay un widget que puede calcular números de hasta ocho bits. (Si tiene un
        número más corto, puede dejar los bits adicionales de la izquierda desactivados).
        Puede usarlo para encontrar los valores de los dos récords mundiales a continuación.\\\r\n\\\r\n!
        \\[] (<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14>\nPM.png)\\\r\n\\\r\n\n1.
        \ la cola de perro más larga (en pulgadas) (5 bits)\\\r\n2.  La mayor cantidad
        de cucharas sobre la cara de alguien (5 bits)\\\r\n    /r\n    # Hacer esto\\\r\n3.
        \ Decodifica los dos números de una cadena binaria."
      CSD U5 binary 5-new_2018: "# Decodificación de múltiples números\\\r\\\r\n\n\\\r\nAquí
        hay un widget que puede calcular números de hasta ocho bits. (Si tiene un
        número más corto, puede dejar los bits adicionales de la izquierda desactivados).
        Puede usarlo para encontrar los valores de los dos récords mundiales a continuación.\\\r\n\\\r\n!
        \\[] (<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14>\nPM.png)\\\r\n\\\r\n\n1.
        \ la cola de perro más larga (en pulgadas) (5 bits)\\\r\n2.  La mayor cantidad
        de cucharas sobre la cara de alguien (5 bits)\\\r\n    /r\n    # Hacer esto\\\r\n3.
        \ Decodifica los dos números de una cadena binaria."
      CSD U5 binary 5-new_2019: "# Decodificación de múltiples números\\\r\\\r\n\n\\\r\nAquí
        hay un widget que puede calcular números de hasta ocho bits. (Si tiene un
        número más corto, puede dejar los bits adicionales de la izquierda desactivados).
        Puede usarlo para encontrar los valores de los dos récords mundiales a continuación.\\\r\n\\\r\n!
        \\[] (<https://images.code.org/e86788ff9b92a2b01b99749fa1aba8e8-image-1505426626592.01.14>\nPM.png)\\\r\n\\\r\n\n1.
        \ la cola de perro más larga (en pulgadas) (5 bits)\\\r\n2.  La mayor cantidad
        de cucharas sobre la cara de alguien (5 bits)\\\r\n    /r\n    # Hacer esto\\\r\n3.
        \ Decodifica los dos números de una cadena binaria."
      CSD U6 emotion machine 2: "# Cambio de color\\\r\n\n\\\r\nSi miras hacia atrás
        en el ejemplo de esta aplicación, debes notar que los emojis no solo cambian
        cuando haces clic en un botón, sino que también cambia su color.\\\r\n\\\r\n\n#
        \n\nHacer esto\\\r\n\\\r\nEn cada uno de los controladores de eventos, establece
        la propiedad de \"color de icono\" de \"cara\". Elije un color cálido para
        feliz y un color frío para triste."
      CSD U6 emotion machine 2_2018: "# Cambio de color\\\r\n\n\\\r\nSi miras hacia
        atrás en el ejemplo de esta aplicación, debes notar que los emojis no solo
        cambian cuando haces clic en un botón, sino que también cambia su color.\\\r\n\\\r\n\n#
        \n\nHacer esto\\\r\n\\\r\nEn cada uno de los controladores de eventos, establece
        la propiedad de \"color de icono\" de \"cara\". Elije un color cálido para
        feliz y un color frío para triste."
      CSD U6 emotion machine 2_2019: "# Cambio de color\\\r\n\n\\\r\nSi miras hacia
        atrás en el ejemplo de esta aplicación, debes notar que los emojis no solo
        cambian cuando haces clic en un botón, sino que también cambia su color.\\\r\n\\\r\n\n#
        \n\nHacer esto\\\r\n\\\r\nEn cada uno de los controladores de eventos, establece
        la propiedad de \"color de icono\" de \"cara\". Elije un color cálido para
        feliz y un color frío para triste."
      CSD U6 for loop click exit: "# Saber cuándo detenerse\\\r\n\n\\\r\nProbablemente
        has notado en el último nivel que recibió un error si hizo clic en el botón
        muchas veces. Cada vez que está escribiendo código que se repite (incluso
        cuando se repite de forma manual, como este), es importante considerar cómo
        sabrá que es hora de detener la repetición.\\\r\n\\\r\n\n# Hacer esto\\\r\n\n\\\r\nEste
        programa es similar al anterior, excepto que hemos reemplazado el nombre de
        la variable con uno más descriptivo, y agregamos un condicional dentro del
        controlador de eventos. Tendrá que completar el condicional para que no intentemos
        alternar un LED que no existe.\\\r\n\\\r\n\\_ ¿Su código funcionaría sin cambios
        para una placa con más o menos LED? Si no, ¿podrías modificarlo para que así
        sea? \\_"
      CSD U6 for loop click exit_2018: "# Saber cuándo detenerse\\\r\n\n\\\r\nProbablemente
        has notado en el último nivel que recibió un error si hizo clic en el botón
        muchas veces. Cada vez que está escribiendo código que se repite (incluso
        cuando se repite de forma manual, como este), es importante considerar cómo
        sabrá que es hora de detener la repetición.\\\r\n\\\r\n\n# Hacer esto\\\r\n\n\\\r\nEste
        programa es similar al anterior, excepto que hemos reemplazado el nombre de
        la variable con uno más descriptivo, y agregamos un condicional dentro del
        controlador de eventos. Tendrá que completar el condicional para que no intentemos
        alternar un LED que no existe.\\\r\n\\\r\n\\_ ¿Su código funcionaría sin cambios
        para una placa con más o menos LED? Si no, ¿podrías modificarlo para que así
        sea? \\_"
      CSD U6 for loop click exit_2019: "# Saber cuándo detenerse\\\r\n\n\\\r\nProbablemente
        has notado en el último nivel que recibió un error si hizo clic en el botón
        muchas veces. Cada vez que está escribiendo código que se repite (incluso
        cuando se repite de forma manual, como este), es importante considerar cómo
        sabrá que es hora de detener la repetición.\\\r\n\\\r\n\n# Hacer esto\\\r\n\n\\\r\nEste
        programa es similar al anterior, excepto que hemos reemplazado el nombre de
        la variable con uno más descriptivo, y agregamos un condicional dentro del
        controlador de eventos. Tendrá que completar el condicional para que no intentemos
        alternar un LED que no existe.\\\r\n\\\r\n\\_ ¿Su código funcionaría sin cambios
        para una placa con más o menos LED? Si no, ¿podrías modificarlo para que así
        sea? \\_"
      CSD U6 for loop led function: |-
        # Cambiar colores con una función

        Podríamos escribir un bucle `desde` para cada color diferente con el que vamos a configurar los LED, pero eso sería una gran cantidad de código duplicado que es _casi_ el mismo. ¡Este es el lugar perfecto para usar una _función con un parámetro_! Ya has visto y usado funciones con parámetros, pero ahora vas a crear una desde cero.

        # Haz esto

        Crea una función llamada `setLedsColor` que tenga un parámetro `color` y úsala para cambiar el color de todos los LED

        -   Al final del programa, arrastra una función con el bloque de parámetros ![expandable](https://images.code.org/bd6ec3d9a651cf760a7dc8e1949658c0-image-1512761901850.png)
        -   Cambia el nombre de `myFunction` a `setLedsColor`
        -   Cambia el nombre del parámetro de `n` a `color`
        -   Dentro de tu función, agrega un _bucle desde_ que se repita hasta alcanzar el final de `colorLeds`
        -   Dentro de tu _bucle desde_, establece el color del LED actual con el parámetro `color` (por ej. `colorLeds[i].color(color)`

        Agregaremos controladores de eventos que usen esta función en el próximo nivel, pero por ahora, puedes probar tu función en tu programa y escribir esto en la consola de depuración: `setLedsColor("blue")`
      CSD U6 for loop led function_2018: |-
        # Cambiar colores con una función

        Podríamos escribir un bucle `desde` para cada color diferente con el que vamos a configurar los LED, pero eso sería una gran cantidad de código duplicado que es _casi_ el mismo. ¡Este es el lugar perfecto para usar una _función con un parámetro_! Ya has visto y usado funciones con parámetros, pero ahora vas a crear una desde cero.

        # Haz esto

        Crea una función llamada `setLedsColor` que tenga un parámetro `color` y úsala para cambiar el color de todos los LED

        -   Al final del programa, arrastra una función con el bloque de parámetros ![expandable](https://images.code.org/bd6ec3d9a651cf760a7dc8e1949658c0-image-1512761901850.png)
        -   Cambia el nombre de `myFunction` a `setLedsColor`
        -   Cambia el nombre del parámetro de `n` a `color`
        -   Dentro de tu función, agrega un _bucle desde_ que se repita hasta alcanzar el final de `colorLeds`
        -   Dentro de tu _bucle desde_, establece el color del LED actual con el parámetro `color` (por ej. `colorLeds[i].color(color)`

        Agregaremos controladores de eventos que usen esta función en el próximo nivel, pero por ahora, puedes probar tu función en tu programa y escribir esto en la consola de depuración: `setLedsColor("blue")`
      CSD U6 iter predict bubbles: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
      CSD U6 iter predict bubbles_2018: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
      CSD U6 iter predict bubbles_2019: "! \\[] (<https://images.code.org/e5a08f29a9c4e306de5553dafca9fb5d-image-1467913845542.gif>)"
      CSDU4 Connecting Screens: |-
        # Navegar

        Una vez que comiences a agregar varias pantallas a una aplicación, debes asegurarse de que los usuarios siempre puedan llegar a donde quieren ir. En los siguientes dos niveles, aprenderás cómo asegurarte de que un usuario siempre pueda volver a la "página de inicio" de tu aplicación.

        # Haz esto

        Esta es una aplicación con cuatro páginas diferentes, pero solamente la pantalla "roja" tiene un enlace. En este nivel podrás crear otros dos botones para llevar al usuario a la pantalla correcta.

        -   Agrega dos bloques `onEvent()`, uno para el "greenButton" y el otro para el "blueButton".
        -   Usa el bloque `setScreen()` para que cada botón lleve a la pantalla apropiada.
        -   Prueba tu aplicación para asegurarte de que ambos botones funcionen. Por ejemplo, si haces clic en el botón verde, deberías ir a la pantalla verde.
      CSDU4 Connecting Screens Getting Back: |-
        # Volver

        Quienes usen tu aplicación ahora pueden acceder a cada una de las páginas roja, verde y azul, pero no pueden volver a la página de inicio. Puedes agregar botones y controladores de eventos para ayudarlos.

        # Haz esto

        Crea botones y controladores de eventos para ayudar a los usuarios a volver a la página de "inicio"

        -   Usa el Modo Diseño para crear un botón dentro de cada una de pantallas "roja", "verde" y "azul". Asegúrate de que tengan ID descriptivos.
        -   De vuelta en tu código, arrastra tres bloques `onEvent()`, uno por cada uno de los tres botones que creaste.
        -   Dentro de cada bloque `onEvent()`, usa el bloque `setScreen()` que vuelve a tu página de "inicio".
        -   Prueba tu aplicación. Deberías poder volver a la pantalla de inicio de cada una de las otras tres pantallas.
      Course 4 Artist 13: "¿Aún jugando? ¡Aquí hay un lienzo en blanco en donde usted
        podrá diseñar lo que quiera!"
      Course 4 Artist 6: 'Completa el código para dibujar estos triángulos. Sugerencia:
        3 triángulos en una rotación de 360 grados.'
      Course 4 Artist 8: Dibuje este sol enlazando este bloque de código íntegramente
        12 veces.
      Course 4 Artist 8a: "¿Recuerdas esta forma? ¡Ahora vamos a dejarte construirla
        sin darte ningún bloque para empezar! Sugerencia: hay 3 triángulos dentro
        de la rotación de 360 grados... ¿Cuántas veces 3 va en 360?"
      Course 4 Artist For Loops 4: Usa un bucle "FOR" para dibujar estos cuadrados.
        Empiezan a 15 píxeles de largo, el más grande es de 300 píxeles de largos,
        y cada cuadrado es 15 píxeles más grande que el anterior. Te he dado casi
        todo el código que vas a necesitar - haz perdido un bloque, ¿cuál es?
      Course 4 Artist For Loops 6a: "¡Haz 3 pequeños cambios al código desde el último
        nivel para obtener esto!"
      Course 4 Bee Params 1: Use la función "obtener néctar 3" que gira, mueve para
        recoger el néctar y luego regresa a su ubicación original. Escriba una secuencia
        para recoger todo el néctar usando "obtener néctar 3".
      Course 4 Bee Params 5: Vamos a empezar desde cero. ¿Puedes crear una nueva función
        llamada `recoger 5 néctares` con un parámetro de dirección?
      Course 4 Play Lab Params 4: Aquí hay una función denominada "patrulla". Edítela
        para mover el Gato hacia arriba 400 píxeles y luego hacia abajo 400 píxeles.
      Course 4 Play Lab Params 8: Use un bloque "cuando el actor toque" para enviar
        al Perro de regreso al lado superior izquierdo SOLAMENTE si el Perro toca
        a alguno de los otros actores.
      Course 4 Play Lab Vars 2: ¡Esa carrera en ese último problema no fue justa!
        Cambie la variable de "velocidad\_perro" para asegurarse de que puede recoger
        más banderas que el Gato. ¡El primero en recoger 10 banderas gana!
      Course 4 Play Lab Vars 6: "<h5><b>\r\nEn nuestro juego, ¿Cómo deberíamos marcar
        los puntos? \r\n</b></h5> \r\n<br/>\r\n\r\n1. Agrega 1 a tu variable `puntos`
        cada vez que el perro golpee al gato un un trozo de torta.  <br/>    <br/>
        \r\n2. Usa el evento `cuando el actor 2 toque cualquier cosa` para gatillar
        una actualización a tu puntaje. Puedes incrementar tu variable estableciendo
        `puntos= punto + 1.`  <br/>   <br/> \r\n3. Llega a un puntaje de 10 para pasar
        de nivel.\r\n\r\n<br/><br/>\r\n<h4>\r\n**Nota:** ¡Usa la flecha derecha para
        lanzar torta!\r\n</h4>"
      Course 4 Play Lab Vars 9: "¡Momento de juego gratis! Aquí están todas las variables
        con las  que hemos jugado hasta ahora, así como unas pocas más en caso que
        las quieras. \\\r\n\\\r\n¡Observa ahora que hay tantos bloques en nuestra
        caja de herramientas que necesitan ser organizadas Aquí hemos puesto cada
        pieza en una categoría apropiada. Tómate un tiempo para explorar todo lo que
        hay disponible. Cuando hayas terminado de navegar, haz un juego o historia
        usando repeticiones, variables y eventos.  \\\r\n\\\r\n_Sugerencia: desplázate
        hacia abajo para ver todos los comandos en el espacio de trabajo._"
      Course 4 Play Labs For Loops 1: Vamos a hacer que el perro diga todos los números
        desde el 1 hasta el 100. Usa un ciclo y un bloque contador para decir la variable
        contador cada vez que se ejecute el ciclo.
      Course 4 Playlab For Loops 5b: Ajusta el intervalo de los bucles 'for' para
        que ambos personajes terminen exactamente en el mismo lugar.
      Course 4 SCFL 1a: "**Súper desafío de bucles 'desde':** ¿Puedes hacer que Scrat
        llegue hasta su bellota con la menor cantidad de bloques posible?"
      Course 4 SCFL 1b: "**Súper desafío de bucles 'desde':** ¿Puedes hacer que Scrat
        llegue hasta su bellota con la menor cantidad de bloques posible?"
      Course 4 SCV 1: |-
        <img src="https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png" width="250px"/>

        **Super Desafío Variables.** ¡Has aprendido todo lo que necesitas para saber para hacer un patrón como este! Este desafío está hecho para ser difícil. ¿Puedes insistir con él hasta descubrir la solución?
      Course 4 SCV 2: |-
        <img src="https://images.code.org/85f0b27009edd86eff78692004b9ed52-image-1444712655590.02.32.png" width="250px"/>

        **Super Desafío Variables.** ¡Has aprendido todo lo que necesitas para saber para hacer un patrón como este! Este desafío está hecho para ser difícil. ¿Puedes insistir con él hasta descubrir la solución?
      Course 4 SCV 6: "<img src=\"https://images.code.org/499fc71a0a06bacb68a9789ad57f8148-image-1445574373673.16.44.png\"
        width=\"250px\"/>\n\n**Super Desafío Variables.** ¡Has aprendido todo lo que
        necesitas para saber para hacer un patrón como este! Este desafío está hecho
        para ser difícil. ¿Puedes insistir con él hasta descubrir la solución?  "
      CourseD_Dance_Party_01: |-
        _¡Hagamos una fiesta!_

        Arrastra el bloque de 'Crear nuevo' en el espacio de trabajo y conéctalo dentro del bloque de 'instalación' para crear tu primer bailarín.

        -   _También puedes hacer clic en el foco a la izquierda si deseas más información o retos extra._
      CourseD_Dance_Party_02: |-
        ¡Vamos a bailar!

        Arrastra el bloque <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> en el espacio de trabajo. Conéctalo debajo del bloque <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. El bailarín debería comenzar un nuevo movimiento después de la cuarta medida.

        Las **Medidas** se utilizan para contar el tiempo en la música. En este tutorial, una medida son cuatro tiempos.
      CourseD_Dance_Party_03: |-
        _¡Ya estamos entrando en ritmo!_

        Añade un bloque <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> a tu espacio de trabajo. Haz que el bailarín comience un nuevo movimiento después de 6 medidas.
      CourseD_Dance_Party_04: |-
        \*¡Este baile necesita algunas luces! \*

        Busca un bloque nuevo en la caja de herramientas que agregue un efecto de fondo detrás de tu bailarín. ¡Mira como los efectos cambian con la música!
      CourseD_Dance_Party_05: |-
        Usa un nuevo bloque para hacer que el bailarín cambie los movimientos ¡**Cada 2 medidas**!

        \*Al elegir '(siguiente)', '(anterior)' o '(al azar)' harás que el bailarín realice un movimiento distinto cada vez que se ejecuta el código.
      CourseD_Dance_Party_06: |-
        \*¡Necesitamos más bailarines! \*

        Crea un bailarín llamado 'backup\_dancer1' para que baile con el gato.
      CourseD_Dance_Party_08: |-
        Cada bailarín tiene su conjunto de _properties_ que controlan como se ve.

        Puedes hacer parecer que un bailarín se encuentre en el fondo haciendo su _size_ más pequeño. ¿Puedes hacer que ambos bailarines sean del mismo tamaño?
      CourseD_Dance_Party_09: |-
        Los bailarines tienen una propiedad de "tinte" que puede añadir una capa de color. Trata de cambiar el color de uno de tus bailarines.

        -   Los tintes mezclan el color que elijas con los colores del bailarín.
      CourseD_Dance_Party_10: |-
        Ahora sabemos cómo cambiar las propiedades de un bailarín. También podemos hacer que estas mismas propiedades respondan automáticamente a la música con este bloque:
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Este programa utiliza el volumen del "bajo" de la música (los sonidos profundos) para controlar la altura de un bailarín. ¿Puedes hacer que el otro bailarín también responda a la música?
      CourseD_Dance_Party_11: |-
        El bloque <xml><block type="Dancelab_whenKey"></block></xml> le permite ejecutar el código cuando se presiona la flecha hacia arriba.

        Puedes cambiar el movimiento del baile, cambiar las propiedades de un bailarín o hacer un movimiento rápido solo una vez. ¡Se creativo y busca nuevos bloques!
      CourseD_Dance_Party_11_5: |-
        Echa un vistazo a este bloque:

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        ¡Ahora puedes crear un grupo de bailarines con un solo movimiento!

        Trata de usar algunos de los bloques de "todos los patos" para escribir el código que hará que todos los patos bailen juntos.
      CourseD_Dance_Party_11b: "¡Es hora de bailar! El gato se mueve cuando presionas
        la tecla de flecha izquierda. Hace el “paso del robot” cuando presionas la
        tecla de flecha derecha."
      CourseD_Dance_Party_12: |-
        ¡Vamos baila! Crea tu propio baile para compartir con tus
        amigos.
      CourseE_HOC 2018 Level_1: Necesitas provisiones para la travesía que tienes
        por delante. Recoge un **bote** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        del **cofre** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      CourseE_HOC 2018 Level_10: Hay un **calamar** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)
        escondido en algún lugar de este monumento oceánico. ¿Puedes encontrarlo?
      CourseE_HOC 2018 Level_11: Construye un muro de **prismarina** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        alrededor del concreto negro. ¡Esto activará el **conducto** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        para que completes tu desafío!
      CourseE_HOC 2018 Level_2: "¡Es más fácil ir en bote que nadar en aguas abiertas!
        Dirígete al final del muelle para subir a bordo."
      CourseE_HOC 2018 Level_3: Toma los remos y dirige tu bote a través del mar abierto
        para atrapar el **bacalao** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      CourseE_HOC 2018 Level_4: Alimentemos el **delfín** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png)
        con el bacalao. Usa el bloque "repetir" para cruzar el océano más rápido.
      CourseE_HOC 2018 Level_5: "¡Hay una **Concha de Nautilus** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)
        escondida en algún lado! Explora el naufragio para encontrar el **cofre**
        ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png)."
      CourseE_HOC 2018 Level_6: "¡Debe estar helado allí afuera! Atrapa un **salmón**
        ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)
        camino a las ruinas submarinas."
      CourseE_HOC 2018 Level_7a: Encontraste las ruinas submarinas. Explora la arenisca
        hasta encontrar un **cofre** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        que contenga un tesoro de **prismarina** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      CourseE_HOC 2018 Level_8: Primero icebergs, ¿ahora lava? Atraviesa esta isla
        volcánica y encuentra el **pez tropical** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        en el arrecife de coral.
      CourseE_HOC 2018 Level_9b: Lograste llegar al arrecife, ¡ahora busca el **Corazón
        del Mar** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)!
        Usa el coral azul y rojo para llegar al **cofre** del tesoro ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).
      Dance_Party_01: |-
        _¡Hagamos una fiesta!_

        Arrastra el bloque de 'Crear nuevo' en el espacio de trabajo y conéctalo dentro del bloque de 'instalación' para crear tu primer bailarín.

        -   _También puedes hacer clic en el foco a la izquierda si deseas más información o retos extra._
      Dance_Party_02: |-
        ¡Vamos a bailar!

        Arrastra el bloque <xml><block type="Dancelab_changeMoveLR"><title name="SPRITE">new\_dancer</title><title name="MOVE" config="MOVES.Dab, MOVES.Drop, MOVES.Floss">Floss</title><title name="DIR">-1</title></block></xml> en el espacio de trabajo. Conéctalo debajo del bloque <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">4</title><title name="UNIT">"measures"</title></block></xml>. El bailarín debería comenzar un nuevo movimiento después de la cuarta medida.

        Las **Medidas** se utilizan para contar el tiempo en la música. En este tutorial, una medida son cuatro tiempos.
      Dance_Party_03: |-
        _¡Ya estamos entrando en ritmo!_

        Añade un bloque <xml><block type="Dancelab_atTimestamp"><title name="TIMESTAMP">6</title><title name="UNIT">"measures"</title></block></xml> a tu espacio de trabajo. Haz que el bailarín comience un nuevo movimiento después de 6 medidas.
      Dance_Party_04: |-
        \*¡Este baile necesita algunas luces! \*

        Busca un bloque nuevo en la caja de herramientas que agregue un efecto de fondo detrás de tu bailarín. ¡Mira como los efectos cambian con la música!
      Dance_Party_05: |-
        Usa un nuevo bloque para hacer que el bailarín cambie los movimientos ¡**Cada 2 medidas**!

        \*Al elegir '(siguiente)', '(anterior)' o '(al azar)' harás que el bailarín realice un movimiento distinto cada vez que se ejecuta el código.
      Dance_Party_06: |-
        \*¡Necesitamos más bailarines! \*

        Crea un bailarín llamado 'backup\_dancer1' para que baile con el gato.
      Dance_Party_08: |-
        Cada bailarín tiene su conjunto de _properties_ que controlan como se ve.

        Puedes hacer parecer que un bailarín se encuentre en el fondo haciendo su _size_ más pequeño. ¿Puedes hacer que ambos bailarines sean del mismo tamaño?
      Dance_Party_09: |-
        Los bailarines tienen una propiedad de "tinte" que puede añadir una capa de color. Trata de cambiar el color de uno de tus bailarines.

        -   Los tintes mezclan el color que elijas con los colores del bailarín.
      Dance_Party_10: |-
        Ahora sabemos cómo cambiar las propiedades de un bailarín. También podemos hacer que estas mismas propiedades respondan automáticamente a la música con este bloque:
        <xml>
        <block type="Dancelab_startMapping">

        <title name="SPRITE">right_pineapple</title>
        <title name="PROPERTY">"scale"</title>
        <title name="RANGE">"bass"</title>
        </block></xml>

        Este programa utiliza el volumen del "bajo" de la música (los sonidos profundos) para controlar la altura de un bailarín. ¿Puedes hacer que el otro bailarín también responda a la música?
      Dance_Party_11: |-
        El bloque <xml><block type="Dancelab_whenKey"></block></xml> le permite ejecutar el código cuando se presiona la flecha hacia arriba.

        Puedes cambiar el movimiento del baile, cambiar las propiedades de un bailarín o hacer un movimiento rápido solo una vez. ¡Se creativo y busca nuevos bloques!
      Dance_Party_11_5: |-
        Echa un vistazo a este bloque:

        <xml>
        <block type="Dancelab_makeNewDanceSpriteGroup">
        <title name="N">6</title>
        <title name="COSTUME">"DUCK"</title>
        <title name="LAYOUT">"circle"</title>
        </block></xml>

        ¡Ahora puedes crear un grupo de bailarines con un solo movimiento!

        Trata de usar algunos de los bloques de "todos los patos" para escribir el código que hará que todos los patos bailen juntos.
      Dance_Party_11b: "¡Es hora de bailar! El gato se mueve cuando presionas la tecla
        de flecha izquierda. Hace el “paso del robot” cuando presionas la tecla de
        flecha derecha."
      Dance_Party_12: |-
        ¡Vamos baila! Crea tu propio baile para compartir con tus
        amigos.
      Dance_Party_extras_battle: |-
        # Grupos de baile

        Este es un baile entre dos equipos. Las flechas controlan a uno de los bailarines y las teclas "w, a, s, d" controlan al otro. Baila contra un amigo y luego trata de mejorar este baile.

        -   Agrega más teclas para controlar los bailes
        -   Haz que los bailarines de reparto también respondan cuando presiones las teclas
        -   Alterna al bailarín cada 4 compases al establecer su visibilidad
      Dance_Party_extras_every_beat: |-
        # Negras

        La mayoría de nuestros bailes han usado compases completos, pero cada compás está compuesto por 4 negras. Este baile usa “cada 0.25 compases” para hacer que el bailarín aplauda en cada negra.

        Este baile también utiliza un bloque _condicional_ para controlar que el bloque de “cada 0.25 compases” pueda cambiar el baile. Intenta cambiar los números en el bloque condicional para ver cómo cambia el baile.

        -   Experimenta con otra duraciones de notas (como 0.5 para una semicorchea o 0.125 para una corchea).
            \*Añade algunos eventos “Después del compás”
        -   Cambia "compases" por "segundos" y prueba sincronizar tus bailes de esa manera.
      Dance_Party_extras_layout: |-
        # ¡Ponte en formación!

        Dale un vistazo a este baile que utiliza el bloque de “diseño” para cambiar la formación de los bailarines de reparto a lo largo del baile. Prueba una de estas ideas para ampliarlo:

        -   Crear un segundo grupo de bailarines en una capa diferente
        -   Cambiar el diseño cuando se presiona una tecla
        -   Cambiar una propiedad cuando los bailarines cambian formación
      Dance_Party_extras_on_beat: |-
        # Bajos, medios y agudos

        Este baile utiliza eventos "pico" para activar un código cuando el nivel de la música se eleva. Prueba juguetear con diferentes canciones para ver cómo cambian el baile.
      Dance_Party_extras_speed: |-
        # Acelera, reduce la velocidad

        El baile final utiliza el bloque "establecer velocidad" para controlar que tan rápido se mueve cada bailarín. Experimenta con diferentes velocidades en diferentes puntos de la canción. No dudes en seguir experimentando con este baile o regresa a cualquiera de los bailes anteriores para mejorarlos.
      Dance_Party_extras_visible: |-
        # ¿A donde fueron?

        Este baile muestra y esconde dos diferentes grupos de bailarines. Dale un vistazo y luego intenta agregar tu propio estilo.

        -   Añade otro grupo de bailarines
        -   Muestra y oculta a los bailarines con las flechas de dirección
        -   Oculta todos los bailarines y cambiar a un emocionante efecto de fondo
      Function intro Ryan: "Una **función** llamada \"Construye puente\" se encuentra
        en tu área de trabajo.  ¡Incluye todo el código que necesitas para cruzar
        el río! \\\r\n \\\r\nAjusta el pequeño bloque verde en tu área de trabajo
        dos veces para arreglar el camino y llevar a {currentPlayerName} hasta la
        antorcha de piedra rojiza [redstone_torch]."
      Function intro Ryan_2019: "Una **función** llamada \"Construye puente\" se encuentra
        en tu área de trabajo.  ¡Incluye todo el código que necesitas para cruzar
        el río! \\\r\n \\\r\nAjusta el pequeño bloque verde en tu área de trabajo
        dos veces para arreglar el camino y llevar a {currentPlayerName} hasta la
        antorcha de piedra rojiza [redstone_torch]."
      HOC 2018 Level_1: Necesitas provisiones para la travesía que tienes por delante.
        Recoge un **bote** ![](https://images.code.org/0b3162de9dc0abf3e0890d315b8cc699-image-1538697977747.png)
        del **cofre** ![](https://images.code.org/e0cf43fd36a50dd16ee06595047bfd8f-image-1538697999418.png).
      HOC 2018 Level_10: Hay un **calamar** ![](https://images.code.org/82f305ab1cb4a9ff9044991a18edb16e-image-1538947827218.png)
        escondido en algún lugar de este monumento oceánico. ¿Puedes encontrarlo?
      HOC 2018 Level_11: Construye un muro de **prismarina** ![](https://images.code.org/d110b8d13c01756fcdbef3768b2e2859-image-1538699770898.png)
        alrededor del concreto negro. ¡Esto activará el **conducto** ![](https://images.code.org/7773cf30f42e6727a23c8cb364d4664b-image-1538699800030.png)
        para que completes tu desafío!
      HOC 2018 Level_12: "¡Felicitaciones! El mundo acuático abierto te espera. ¡Construye
        un arrecife de coral! ¡Un volcán! ¡Un naufragio! Tú eliges."
      HOC 2018 Level_2: "¡Es más fácil ir en bote que nadar en aguas abiertas! Dirígete
        al final del muelle para subir a bordo."
      HOC 2018 Level_3: Toma los remos y dirige tu bote a través del mar abierto para
        atrapar el **bacalao** ![](https://images.code.org/9b636884eefb1efe18f9f844e1e916a9-image-1538698597353.png).
      HOC 2018 Level_4: Alimentemos el **delfín** ![](https://images.code.org/8c240fd4df4da2795ba7ca942b77a057-image-1538947890991.png)
        con el bacalao. Usa el bloque "repetir" para cruzar el océano más rápido.
      HOC 2018 Level_5: "¡Hay una **Concha de Nautilus** ![](https://images.code.org/2eb084fa0c718dee6ca4b6379381f735-image-1538698936660.png)
        escondida en algún lado! Explora el naufragio para encontrar el **cofre**
        ![](https://images.code.org/16cdd5779b38909d4bf47b29535c92b0-image-1538698950602.png)."
      HOC 2018 Level_6: "¡Debe estar helado allí afuera! Atrapa un **salmón** ![](https://images.code.org/c66eadf25b3cdfe20bbfdc91e2c28c94-image-1538699000102.png)
        camino a las ruinas submarinas."
      HOC 2018 Level_7a: Encontraste las ruinas submarinas. Explora la arenisca hasta
        encontrar un **cofre** ![](https://images.code.org/29a5fd76b869d755a60d39fbbb4057eb-image-1538699081910.png)
        que contenga un tesoro de **prismarina** ![](https://images.code.org/5f5ebe5121b8f9787d7dbd38ad0a86cc-image-1538699091018.png).
      HOC 2018 Level_8: Primero icebergs, ¿ahora lava? Atraviesa esta isla volcánica
        y encuentra el **pez tropical** ![](https://images.code.org/6d3293e7709cb1a43d9f7617fd0cc2b8-image-1538699180397.png)
        en el arrecife de coral.
      HOC 2018 Level_9b: Lograste llegar al arrecife, ¡ahora busca el **Corazón del
        Mar** ![](https://images.code.org/3035926d2a37aa695b5d47413adcffa2-image-1538699398781.png)!
        Usa el coral azul y rojo para llegar al **cofre** del tesoro ![](https://images.code.org/af697397dd70e5b6b93b00eb46c558af-image-1538699377397.png).
      K-1 Bee Loops 2: "¡Utiliza un enlace para moverte y obtener el néctar y hacer
        miel!"
      K-1 Bee Loops 3: "¡Utiliza enlaces para obtener néctar y para hacer miel!"
      K-1 Bee Loops 4: "¡Ulilice enlaces para obtener néctar, hacer miel y moverse!"
      K-1 Bee Loops 5: "¡Utiliza enlaces para tomar néctar y miel!"
      K-1 Bee Loops 6: "¡Utiliza enlaces para obtener néctar, miel y para moverte!"
      K-1 Maze Loops 11: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 12: "¡Llévame al cerdo! Usa el bloque de repetición."
      K-1 Maze Loops 2: "¡Usa el bloque de Repetición para llevarme al cerdo!"
      K-1 Maze Loops 8: "¡Llévame al cerdo! Usa el bloque de repetición."
      MC_HOC_2017_01_RETRY: "¡{currentPlayerName} está atrapado dentro de la casa,
        pero el Agent está aquí para ayudar!   \\\r\n \\\r\n   \\\r\nAjusta un bloque
        \"mover hacia adelante\" con el bloque \"al correr\" en el área de trabajo
        para llevar al Agent a la placa de presión [PressurePlate_Up], luego presiona
        \"Correr\" y usa las teclas de flecha para sacar a {currentPlayerName} de
        la casa y recoger el **cofre** [chest]."
      MC_HOC_2017_01_RETRY_2019: "¡{currentPlayerName} está atrapado dentro de la
        casa, pero el Agent está aquí para ayudar!   \\\r\n \\\r\n   \\\r\nAjusta
        un bloque \"mover hacia adelante\" con el bloque \"al correr\" en el área
        de trabajo para llevar al Agent a la placa de presión [PressurePlate_Up],
        luego presiona \"Correr\" y usa las teclas de flecha para sacar a {currentPlayerName}
        de la casa y recoger el **cofre** [chest]."
      MC_HOC_2017_02_Cole: "¡{currentPlayerName} se dirige a una aventura! Como ayuda,
        usa el **mapa** [map_empty] detrás de la puerta cerrada a la derecha. \\\r\n
        \\\r\nAjusta el código en el área de trabajo para mover al Agent a la placa
        de presión [PressurePlate_Up] para que {currentPlayerName} pueda pasar."
      MC_HOC_2017_02_Cole_2019: "¡{currentPlayerName} se dirige a una aventura! Como
        ayuda, usa el **mapa** [map_empty] detrás de la puerta cerrada a la derecha.
        \\\r\n \\\r\nAjusta el código en el área de trabajo para mover al Agent a
        la placa de presión [PressurePlate_Up] para que {currentPlayerName} pueda
        pasar."
      MC_HOC_2017_03_Cole: "{currentPlayerName} continúa en la aventura y necesita
        la **brújula** [compass] para prepararse para el viaje.  \\\r\n   \\\r\nDale
        un código al Agent para que abra la puerta."
      MC_HOC_2017_03_Cole_2019: "{currentPlayerName} continúa en la aventura y necesita
        la **brújula** [compass] para prepararse para el viaje.  \\\r\n   \\\r\nDale
        un código al Agent para que abra la puerta."
      MC_HOC_2017_04POINT5_RYAN: "¡Lograste cruzar! \\\r\n\\\r\nAhora, ayuda a {currentPlayerName}
        a cruzar el laberinto con seguridad para recoger el **hacha** [diamond_axe]\\\r"
      MC_HOC_2017_04POINT5_RYAN_2019: "¡Lograste cruzar! \\\r\n\\\r\nAhora, ayuda
        a {currentPlayerName} a cruzar el laberinto con seguridad para recoger el
        **hacha** [diamond_axe]\\\r"
      MC_HOC_2017_04_Cole: "¡El Agent puede cruzar el agua!  \\\r\n \\\r\nUsa un bucle
        \"Repetir\" para resolver este acertijo y ayuda a {currentPlayerName} a llegar
        a la **cubeta** [bucket_empty] detrás de la puerta."
      MC_HOC_2017_04_Cole_2019: "¡El Agent puede cruzar el agua!  \\\r\n \\\r\nUsa
        un bucle \"Repetir\" para resolver este acertijo y ayuda a {currentPlayerName}
        a llegar a la **cubeta** [bucket_empty] detrás de la puerta."
      MC_HOC_2017_05_Cole: "¡Oh, no, el puente se derrumbó! \\\r\n\\\r\nEscribe el
        código para que el Agent reconstruya el puente usando el bloque \"colocar\"
        para que {currentPlayerName} pueda llegar hasta la **pala** [diamond_shovel]."
      MC_HOC_2017_05_Cole_2019: "¡Oh, no, el puente se derrumbó! \\\r\n\\\r\nEscribe
        el código para que el Agent reconstruya el puente usando el bloque \"colocar\"
        para que {currentPlayerName} pueda llegar hasta la **pala** [diamond_shovel]."
      MC_HOC_2017_06_Cole: "¡Otro río, pero este es mucho más ancho! \\\r\n \\\r\nArregla
        este código para ayudar al Agent a construir un puente para que {currentPlayerName}
        pueda llegar al **pico** [diamond_pickaxe]."
      MC_HOC_2017_06_Cole_2019: "¡Otro río, pero este es mucho más ancho! \\\r\n \\\r\nArregla
        este código para ayudar al Agent a construir un puente para que {currentPlayerName}
        pueda llegar al **pico** [diamond_pickaxe]."
      MC_HOC_2017_07_Cole: "¡Hay hielo en el camino!  \n\n¡La función `despejar el
        camino` puede ayudarte a destruir el hielo y llevar a {currentPlayerName}
        a la vagoneta [minecart_normal]!"
      MC_HOC_2017_07_Cole_2019: "¡Hay hielo en el camino!  \n\n¡La función `despejar
        el camino` puede ayudarte a destruir el hielo y llevar a {currentPlayerName}
        a la vagoneta [minecart_normal]!"
      MC_HOC_2017_10_RETRY: "¿Puedes encontrar la diferencia entre las dos funciones
        en tu área de trabajo? \\\r\n \\\r\nUsa estas funciones con más código de
        la caja de herramientas para despejar el camino a la vagoneta, luego recoge
        el **pedernal y acero** [flint_and_steel]. \\\r"
      MC_HOC_2017_10_RETRY_2019: "¿Puedes encontrar la diferencia entre las dos funciones
        en tu área de trabajo? \\\r\n \\\r\nUsa estas funciones con más código de
        la caja de herramientas para despejar el camino a la vagoneta, luego recoge
        el **pedernal y acero** [flint_and_steel]. \\\r"
      MC_HOC_2017_Ali: Mira las funciones más abajo.  ¿Cómo puedes usarlas para evitar
        a los Ghasts y a ayudar a {currentPlayerName} a llegar con seguridad al **libro
        de encantamientos** [book_enchanted]?
      MC_HOC_2017_Ali_2019: Mira las funciones más abajo.  ¿Cómo puedes usarlas para
        evitar a los Ghasts y a ayudar a {currentPlayerName} a llegar con seguridad
        al **libro de encantamientos** [book_enchanted]?
      MC_HOC_2017_FP20x20: "**Improvisación:** ¡Ahora es cosa tuya! Usa el código
        del Agent para ayudarte a explorar este mundo."
      MC_HOC_2017_FP20x20_2019: "**Improvisación:** ¡Ahora es cosa tuya! Usa el código
        del Agent para ayudarte a explorar este mundo."
      NEW Course 4 Artist Functions 12: Utiliza la función "trazar una línea de cuadrados"
        del rompecabezas anterior para trazar este patrón.
      NEW Course 4 Artist Functions 3: Aquí está el nuevo tipo de Bloque. Es llamado
        "Bloque función". Haga clic en "Ejecutar" para ver qué pasa.
      NEW Course 4 Artist Functions 9: "¿Qué bloque necesitas añadir para conseguir
        que el triángulo se ponga encima del cuadrado?"
      NEW Course 4 Artist Params 2: Crea una función `dibujar triángulo` desde cero
        para crear un triángulo con lados de 50 pixeles.
      NEW Course 4 Artist Params 4: ¿Notas algo diferente en estos bloques de función?
        Haz clic en "Ejecutar" para ver qué pasa.
      NEW Course 4 Artist Params inspire: "<img src=\"https://images.code.org/1df195df9d808f0dd539bef0f5c2958b-image-1443049871563.02.54.png\"
        width=\"250px\"/>\n\n**Inspiración para juego libre:** ¡has aprendido todo
        lo que necesitas saber para crear un patrón como este! \n\nSi esta imagen
        te sirve de inspiración, intenta crear algo similar. De lo contrario, crea
        algo que sea tuyo.\n\nTen en cuenta que utilizamos el bloque `establecer alfa`
        para que los \"pétalos\" se orienten hacia afuera."
      NEW Course 4 Artist Vars 12: Modifica este algoritmo para que utilice la variable
        "lados" en lugar de un número fijo para dibujar un pentágono. Reemplaza el
        número 5 con la variable "lados" y usa el bloque "establecer lados".
      NEW Course 4 Artist Vars 4: Vamos a intentarlo otra vez. Ahora, vamos a hacer
        este diseño cool con un hexágono de 60 píxeles.
      NEW Course 4 Artist Vars 6: ¿Me puedes ayudar a dibujar este patrón cool dejando
        caer el bloque de variable "longitud" en los lugares correctos?
      NEW Course 4 Bee For Loops 5: También puedes utilizar un 'loop para' para la
        cuenta regresiva. Intenta juntar este néctar haciendo cuenta regresiva de
        5 a 1 de a 1.
      OPD-K5 FirstProgram: Mira el siguiente video, que explica el primer programa
        que los estudiantes más jóvenes escribirán en [Course A](https://studio.code.org/s/coursea-2018?section_id=2042045).
        ¡En la página siguiente podrás escribir un programa similar!
      OPD-K5 LessonPlanning: "Hasta ahora, han sido introducidos a algunas de nuestras
        planificaciones de lecciones sin conexión. Sin embargo, hay planificaciones
        de lecciones para cada lección de Fundamentos de Ciencias de la Computación
        -ambas conectadas y en línea-. Usted puede encontrar la lista completa de
        planificaciones de lecciones para cada curso a continuación:\n<br/>\n<br/>
        \n[el curso A planes de lección] \\(<https://curriculum.code.org/csf-18/coursea/>)<br/>
        \n[planes de lección del curso B] \\(<https://curriculum.code.org/csf-18/courseb/>)<br/>\n[planes
        de lección del curso C] \\(<https://curriculum.code.org/csf-18/coursec/>)<br/>
        \n[planes de lección del curso D] \\(<https://curriculum.code.org/csf-18/coursed/>)<br/>
        \n[planes de lección del curso E] \\(<https://curriculum.code.org/csf-18/coursee/>)<br/>
        \n[planes de lección del curso de F] \\(<https://curriculum.code.org/csf-18/coursef/>)<br/>
        \n\nSin embargo, puede que desee adaptar estas lecciones, ¡o crear una propia!
        El siguiente video explica la estructura de las lecciones de Fundamentos de
        Ciencias de la Computación, y además proporciona algunos consejos en caso
        de que quiera desarrollar su propia lección."
      Overworld Chop Tree: La madera es un recurso muy importante. Muchas cosas están
        hechas de madera. Ve hacia el árbol y usa el comando "destruir bloque" para
        talarlo.
      Overworld Chop Tree_2019: La madera es un recurso muy importante. Muchas cosas
        están hechas de madera. Ve hacia el árbol y usa el comando "destruir bloque"
        para talarlo.
      Overworld House Frame Chosen: Construye el resto de tu casa de cualquier material
        que desees. El comando "repetir" va a venir bien.
      Overworld House Frame Chosen_2019: Construye el resto de tu casa de cualquier
        material que desees. El comando "repetir" va a venir bien.
      Overworld Move to Sheep: Añade un segundo comando "avanzar" para llegar a la
        oveja.
      Overworld Move to Sheep_2019: Añade un segundo comando "avanzar" para llegar
        a la oveja.
      Overworld Shear Sheep: ¡Hora de esquilar! Usa el comando "esquilar" para obtener
        lana de ambas ovejas.
      Overworld Shear Sheep_2019: ¡Hora de esquilar! Usa el comando "esquilar" para
        obtener lana de ambas ovejas.
      Pixelation - Lesson 15 - Complete 3-bit color: "# Pixelación de color: tarea
        1\n\n**Instrucciones:**\n\n-   Comenzaremos con la imagen 4x2 que creó Maddie,
        pero excluiremos los últimos dos cuadrados. \n-   Averigua qué dos colores
        faltan y codifícalos para terminar la imagen."
      Underground Avoiding Lava: Hay lava bajo algunos de estos bloques. Tendrás que
        cubrirlos antes de seguir avanzando. Aquí te será útil un comando "si". Añade
        un comando "avanzar" en el lugar correcto para extraer los recursos de estos
        bloques.
      Underground Avoiding Lava_2019: Hay lava bajo algunos de estos bloques. Tendrás
        que cubrirlos antes de seguir avanzando. Aquí te será útil un comando "si".
        Añade un comando "avanzar" en el lugar correcto para extraer los recursos
        de estos bloques.
      Underground If Statements: Ahora las cosas se complican. Recoge tres bloques
        de piedra rojiza pero no te caigas en la lava. Usa un comando `si` para colocar
        roca sobre la lava que descubras.
      Underground If Statements_2019: Ahora las cosas se complican. Recoge tres bloques
        de piedra rojiza pero no te caigas en la lava. Usa un comando `si` para colocar
        roca sobre la lava que descubras.
      comment_intro_maze_2018: "_\"Estoy confundido. Ayúdame a recordar cómo resolver
        este laberinto.\"_  \n\n* * *\n\nPara pasar este desafío, resuelve el laberinto
        y usa el nuevo bloque <xml><block type=\"comment\">\n    <title name=\"TEXT\">
        </title>\n  </block></xml> para dejarte recordatorios rápidos. ¡Pueden ayudarte
        a recordar qué hiciste y por qué!   \n\nSolo **tú** usas estos comentarios;
        no afectarán el área de juego."
      course1_artist_loops_challenge2: "¡Vamos a jugar un juego!! Dibuja tantas X
        como tú puedas! ¿Puedes obtener 3 en una fila?"
      course1_artist_loops_challenge3: "**Tweet!**\\\r\n\\\r\n_\"¿Puedes ayudarme
        a hacer dos casas de pájaros?\"_"
      course1_artist_loops_challenge4: _"Es momento de lanzar los dados! ¿Puedes ayudarme
        a dibujar estos?"_
      course1_maze_debugging_challenge1: Depura este nivel. Elimina los bloques adicionales
        y agrega los bloques faltantes. ¡Lleva el pájaro al cerdo!
      course1_maze_debugging_challenge2: Depura este nivel. ¡Estos son los bloques
        correctos, pero están en el orden equivocado!
      course1_playlab_events_challenge1: |-
        _"¿Dónde están escondidos/as mis amigos/as?. ¡En este juego, haciendo clic sobre mi mostrará a mi amigo Olive el gato!"_

        ¡Al hacer clic en Olive aparecerá Robin! ¿Puedes escribir código para mostrar el resto de los personajes también?

        En este desafío, asegúrate de hacer clic para sugerencias! ¡Las sugerencias te ayudarán a hacer este proyecto paso a paso!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      course2_artist_nestedLoops_challenge1: "¿Puedes descifrar cómo hacer una imagen
        como esta?\\\r\n\\\r\n\n-   Ambas formas tienen **lados de 50 pixeles.**\\\r\n-
        \  Los _octágonos_ están hechos con giros de **45 grados**.\\\r\n-   Los _triángulos_
        están hechos con giros de **120 grados**."
      course2_artist_prog_challenge2: _¡Ayúdame a pintar de amarillo las líneas en
        este camino!_
      course2_bee_conditionals_challenge2: Recoge todo el néctar o haz toda la miel.
        Puedes recoger todo el néctar en una flor usando el loop `mientras néctar
        > 0`.
      course2_collector_prog_challenge1: "¡Mira con cuidado! ¿Puedes recolectar todas
        las **10** piezas del tesoro?"
      course2_harvester_loops_challenge1: Recoge todo el maíz.
      course2_harvester_loops_challenge2: Recoge toda la lechuga. ¡Evita los árboles
        y los campos!
      course2_maze_programming_challenge2: A veces hay más de una forma de resolver
        el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      course3_artist_functions_challenge1: Una vez que defines una función, puedes
        llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para
        ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      course3_artist_functions_challenge2: "No sólo puedes slatar algunas ubicaciones
        pre establecidas, como las esquinas del lienzo, también puedes 'saltar a'
        el comando ¡para llegar a absolutalmente cualquier espacio que gustes! Intenta
        este código para ver cómo funciona, luego 'haz tu propio programa!\\\r\n<xml>\\\r\n
        <block type=\"jump_to_xy\">\\\r\n\n <title name=\"XPOS\">???</title>\r\n <title
        name=\"YPOS\">???</title>\r\n </block></xml>"
      course3_bee_functions_challenge1: Para este desafío debes trabajar solo. ¡Este
        puede ser más difícil de lo que parece!
      course3_bee_functions_challenge3: Crea una función para recoger todo el néctar
        y la miel mientras hay un camino por delante. ¡Úsalo para completar el desafío!
      course3_bee_functions_challenge4: "¡Usa todo lo que has aprendido para completar
        este desafío!"
      course3_collector_debugging_challenge2: "¿Eres experto en loops anidados? ¡Usa
        lo que has aprendido hasta ahora para recolectar todo el tesoro!"
      course3_farmer_until_challenge2: Usa bloques si/si no para seguir el camino
        con curvas. En cada esquina, usa el comando 'remover 1' en un loop para limpiar
        los montones.
      course3_maze_until_challenge1: Sin pistas, sólo desafío. Lleva al zombie hasta
        el girasol.
      course3_playLab_challenge1: "\\*¡Las **ardillas** están aterrorizadas de ver
        que un **dinosaurio** ha llelgado a la ciudad! ¿Puede el bravo **caballero**
        evitar que entren en pánico?\\*\\\r\n\\\r\nReglas:\\\r\n\n1.  _Tocar a las
        ardillas te da puntos._\\\r\n2.  _Tocar al dinosaurio te quita muchos puntos._\\\r\n
        \   \\\r\n    ¡Aquí hay un tipo de juego diferente que ya ha comenzado para
        ti! Juégalo para ver cómo funciona. \\\r\n    \\\r\n    \\\r\n    Algo debería
        suceder cuando obtengas suficientes puntos o cuando se te acaben los puntos.
        Agrega algún código a las funciones 'ganar juego' y 'perder juego' para hacer
        que el juego funcione de la forma que debería. \\\r\n    ¡Haz clic en pistas
        para ideas!"
      course4_artist_binary_challenge1: Sólo puedes usar cada valor binario (0 ó 1)
        una vez cada un en este rompecabezas. Intenta usar bucles anidados para completar
        este dibujo.
      course4_artist_binary_challenge2: "Hay 256 bits representados en esta grilla
        cuadriculada - eso significa que es fácil que un cambio pequeño cauer grandes
        problemas. ¿Eres lo suficientemente perseverante para restaurar este logo
        a su forma normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      course4_artist_concept_challenge2: Crea cinco molinillos usando el código de
        más abajo.
      course4_artist_functions_challenge2: "No sólo puedes slatar algunas ubicaciones
        pre establecidas, como las esquinas del lienzo, también puedes 'saltar a'
        el comando ¡para llegar a absolutalmente cualquier espacio que gustes! Intenta
        este código para ver cómo funciona, luego 'haz tu propio programa!\\\r\n<xml>\\\r\n
        <block type=\"jump_to_xy\">\\\r\n\n <title name=\"XPOS\">???</title>\r\n <title
        name=\"YPOS\">???</title>\r\n </block></xml>"
      course4_artist_fwp_challenge1: Intente ejecutar este programa y haga cambios
        para ver que ocurre. ¿Puedes averiguar cómo funciona? (o elimínalo y reemplázalo
        con algo totalmente diferente)
      course4_bee_fwp_challenge1: Usa un 'loop para' en una función para recoger todo
        el maíz. El mismo 'loop para' puede contar a valores máximos diferentes usando
        el parámetro 'longitud'.
      course4_collector_nested_loops_challenge2: "_\"Vamos a cazar tesoros - ¡usando
        bucles!\"_ \\\r\n\\\r\nAyuda al coleccionista a alcanzar al menos dos pilas
        del tesoro sólo usando los bloques de tu caja de herramientas. Es posible
        recoger los 4."
      course4_harvester_nested_loops_challenge1: _"¡Necesito ayuda en la granja! Ayúdame
        a cosechar este maíz usando sólo los bloques en tu caja de herramientas."_
      course4_playlab_variables_challenge1: Usa estos bloques para hacer que los actores
        compartan un chiste toc/toc. ¡Cambia el remate y establece tu propio chiste!
      courseA_artist_loops10: "## Es hora de regresar a la tierra. ¡Ayúdame a poner
        piedras para que no me caiga! \\\\ r \\\\ r! [expandable] \\(<https://images.code.[expandable]org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif>)"
      courseA_artist_loops10_2018: "## Es hora de regresar a la tierra. ¡Ayúdame a
        poner piedras para que no me caiga! \\\\ r \\\\ r! [expandable] \\(<https://images.code.[expandable]org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif>)"
      courseA_artist_loops10_2019: "## Es hora de regresar a la tierra. ¡Ayúdame a
        poner piedras para que no me caiga! \\\\ r \\\\ r! [expandable] \\(<https://images.code.[expandable]org/d3213d375d0271e114aa4313cdeb34be-image-1498064942606.gif>)"
      courseA_artist_loops11: "## Ayúdame a construir los escalones para ver cómo
        navega el barco. \\\\ r\n\n\\\\ r \n! [expandable] \\(<https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif>)"
      courseA_artist_loops11_2018: "## Ayúdame a construir los escalones para ver
        cómo navega el barco. \\\\ r\n\n\\\\ r \n! [expandable] \\(<https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif>)"
      courseA_artist_loops11_2019: "## Ayúdame a construir los escalones para ver
        cómo navega el barco. \\\\ r\n\n\\\\ r \n! [expandable] \\(<https://images.code.org/ed19f00a2350b186fbe86ea805e17925-image-1498065450651.gif>)"
      courseA_artist_loops12: "El artista vio algo gracioso a la distancia.  Dibuja
        lo que crees que vio. \\\\ r \n\\\\ r \n\\_\\_\\_ \\\\ r \n\n### Ideas \\\\
        r\n\n\\\\ r \n! \\[] (<https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif>)
        \\\\ r \n! \\[] (https\\: //images.code .org / 126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        \\\\ r \n! \\[] (<https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif>)
        \\\\ r \n! \\[] (<https://images.code.org> /55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseA_artist_loops12_2018: "El artista vio algo gracioso a la distancia.  Dibuja
        lo que crees que vio. \\\\ r \n\\\\ r \n\\_\\_\\_ \\\\ r \n\n### Ideas \\\\
        r\n\n\\\\ r \n! \\[] (<https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif>)
        \\\\ r \n! \\[] (https\\: //images.code .org / 126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        \\\\ r \n! \\[] (<https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif>)
        \\\\ r \n! \\[] (<https://images.code.org> /55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseA_artist_loops12_2019: "El artista vio algo gracioso a la distancia.  Dibuja
        lo que crees que vio. \\\\ r \n\\\\ r \n\\_\\_\\_ \\\\ r \n\n### Ideas \\\\
        r\n\n\\\\ r \n! \\[] (<https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif>)
        \\\\ r \n! \\[] (https\\: //images.code .org / 126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        \\\\ r \n! \\[] (<https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif>)
        \\\\ r \n! \\[] (<https://images.code.org> /55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)"
      courseA_artist_loops2: "Ayude al artista a dibujar esta línea dos veces hacia
        adelante. \\\\ r \n\\\\ r \n! \\[] (<https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif>)"
      courseA_artist_loops2_2018: "Ayude al artista a dibujar esta línea dos veces
        hacia adelante. \\\\ r \n\\\\ r \n! \\[] (<https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif>)"
      courseA_artist_loops2_2019: "Ayude al artista a dibujar esta línea dos veces
        hacia adelante. \\\\ r \n\\\\ r \n! \\[] (<https://images.code.org/04501f26a36673460f5c8fe04e3e7686-image-1498002095108.gif>)"
      courseA_artist_loops3: "Nuestro artista está tratando de trazar \nuna línea
        cinco veces, pero no puede hacerlo bien. ¿Puede usted ayudar? \\\\ r \n\\\\
        r \n! [expandable] \\(<https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif>)"
      courseA_artist_loops3_2018: "Nuestro artista está tratando de trazar \nuna línea
        cinco veces, pero no puede hacerlo bien. ¿Puede usted ayudar? \\\\ r \n\\\\
        r \n! [expandable] \\(<https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif>)"
      courseA_artist_loops3_2019: "Nuestro artista está tratando de trazar \nuna línea
        cinco veces, pero no puede hacerlo bien. ¿Puede usted ayudar? \\\\ r \n\\\\
        r \n! [expandable] \\(<https://images.code.org/6d79b5f8291bd8e11c427bff25f423c2-image-1467935497388.gif>)"
      courseA_artist_loops4: "Ahora, ¡utiliza un bucle <xml><block type=\"controls_repeat_simplified_dropdown\"><title\nname=\"TIMES\"
        config=\"2-6\">5</title></block></xml> para dibujar esta línea cinco veces!\\\r\n\\\r\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)"
      courseA_artist_loops4_2018: "Ahora, ¡utiliza un bucle <xml><block type=\"controls_repeat_simplified_dropdown\"><title\nname=\"TIMES\"
        config=\"2-6\">5</title></block></xml> para dibujar esta línea cinco veces!\\\r\n\\\r\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)"
      courseA_artist_loops4_2019: "Ahora, ¡utiliza un bucle <xml><block type=\"controls_repeat_simplified_dropdown\"><title\nname=\"TIMES\"
        config=\"2-6\">5</title></block></xml> para dibujar esta línea cinco veces!\\\r\n\\\r\n![](https://images.code.org/b2bc7f52ffdac2ad0d8e7c2d798c24df-image-1501875818062.gif)"
      courseA_artist_loops5: "## Dibuja una línea de siete pasos de largo. Esto se
        convertirá en nuestro horizonte. \\\\ r\n\n\\\\ r \n![expandable] \\(<https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif>)"
      courseA_artist_loops5_2018: "## Dibuja una línea de siete pasos de largo. Esto
        se convertirá en nuestro horizonte. \\\\ r\n\n\\\\ r \n![expandable] \\(<https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif>)"
      courseA_artist_loops5_2019: "## Dibuja una línea de siete pasos de largo. Esto
        se convertirá en nuestro horizonte. \\\\ r\n\n\\\\ r \n![expandable] \\(<https://images.code.org/dc7c4317177f2b94421c5aa589c31ac7-image-1498002771889.gif>)"
      courseA_artist_loops6: "## Pongamos una buena colina en la parte posterior.
        \\\\ r\n\n\\\\ r \n! [expandable] \\(<https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif>)"
      courseA_artist_loops6_2018: "## Pongamos una buena colina en la parte posterior.
        \\\\ r\n\n\\\\ r \n! [expandable] \\(<https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif>)"
      courseA_artist_loops6_2019: "## Pongamos una buena colina en la parte posterior.
        \\\\ r\n\n\\\\ r \n! [expandable] \\(<https://images.code.org/f64d93b6d9a7d9c3edfce3c227c0dd49-image-1498062074031.gif>)"
      courseA_artist_loops7: |-
        ## Usa el bucle <xml>\<block

        type="controls_repeat_simplified\_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> para agregar olas al agua.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops7_2018: |-
        ## Usa el bucle <xml>\<block

        type="controls_repeat_simplified\_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> para agregar olas al agua.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops7_2019: |-
        ## Usa el bucle <xml>\<block

        type="controls_repeat_simplified\_dropdown"><title name="TIMES" config="3-10">???</title></block></xml> para agregar olas al agua.

        ![expandable](https://images.code.org/01c5f6772a8b608a2fca5f6de7e25c67-image-1498062629139.gif)
      courseA_artist_loops8: |-
        ## Necesitamos una escalera hasta el bote.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops8_2018: |-
        ## Necesitamos una escalera hasta el bote.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops8_2019: |-
        ## Necesitamos una escalera hasta el bote.

        ![expandable](https://images.code.org/ee90228fae25ecca1fba589b721f9120-image-1498063066878.gif)
      courseA_artist_loops9: |-
        ## **Desafío:** Las escaleras hasta el muelle están rotas. Ayúdame a arreglarlas.

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops9_2018: |-
        ## **Desafío:** Las escaleras hasta el muelle están rotas. Ayúdame a arreglarlas.

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops9_2019: |-
        ## **Desafío:** Las escaleras hasta el muelle están rotas. Ayúdame a arreglarlas.

        ![expandable](https://images.code.org/9d36df1afb6a738ba7bcff8734403ff3-image-1498063282074.gif)
      courseA_artist_loops_challenge1: "Puedes usar un loop para dibujar muchas líneas
        seguidas.\\\r\n\\\r\n¿Puedes dibujar una casa ? ¡Haz que se vea como a ti
        te gusta! Intenta buscar patrones que se repiten!\\\r\n\\\r\nAquí hay algunas
        ideas:\\\r\n\\\r\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)"
      courseA_artist_loops_challenge1_2018: "Puedes usar un loop para dibujar muchas
        líneas seguidas.\\\r\n\\\r\n¿Puedes dibujar una casa ? ¡Haz que se vea como
        a ti te gusta! Intenta buscar patrones que se repiten!\\\r\n\\\r\nAquí hay
        algunas ideas:\\\r\n\\\r\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)"
      courseA_artist_loops_challenge1_2019: "Puedes usar un loop para dibujar muchas
        líneas seguidas.\\\r\n\\\r\n¿Puedes dibujar una casa ? ¡Haz que se vea como
        a ti te gusta! Intenta buscar patrones que se repiten!\\\r\n\\\r\nAquí hay
        algunas ideas:\\\r\n\\\r\n![](https://images.code.org/6e59e881e0aa1d31186e81a203655a0b-image-1501785654664.png)"
      courseA_artist_loops_challenge2a: |-
        _"¡Ayúdame a preparar el campamento!"_

        Usa los bloques de la caja de herramientas para dibujar estas tres tiendas.
      courseA_artist_loops_challenge2a_2018: |-
        _"¡Ayúdame a preparar el campamento!"_

        Usa los bloques de la caja de herramientas para dibujar estas tres tiendas.
      courseA_artist_loops_challenge2a_2019: |-
        _"¡Ayúdame a preparar el campamento!"_

        Usa los bloques de la caja de herramientas para dibujar estas tres tiendas.
      courseA_collector_loops1: |-
        **Juego libre:** ¡Esta es Laurel la Aventurera! Muévela y consigue todo el tesoro que puedas.

        Arrastra los bloques al espacio de trabajo y descubre cómo obtener tesoros. Obtén al menos un objeto para pasar este nivel.
      courseA_collector_loops12: "_\"¡Eureka! ¡Consigue tanto tesoro como puedas!\"_
        \ \n(No tienes que obtenerlo todo)."
      courseA_collector_loops12_2018: "_\"¡Eureka! ¡Consigue tanto tesoro como puedas!\"_
        \ \n(No tienes que obtenerlo todo)."
      courseA_collector_loops12_2019: "_\"¡Eureka! ¡Consigue tanto tesoro como puedas!\"_
        \ \n(No tienes que obtenerlo todo)."
      courseA_collector_loops1_2018: |-
        **Juego libre:** ¡Esta es Laurel la Aventurera! Muévela y consigue todo el tesoro que puedas.

        Arrastra los bloques al espacio de trabajo y descubre cómo obtener tesoros. Obtén al menos un objeto para pasar este nivel.
      courseA_collector_loops1_2019: |-
        **Juego libre:** ¡Esta es Laurel la Aventurera! Muévela y consigue todo el tesoro que puedas.

        Arrastra los bloques al espacio de trabajo y descubre cómo obtener tesoros. Obtén al menos un objeto para pasar este nivel.
      courseA_collector_loops2: |-
        ¡Consigue los tres montones! Acerca a Laurel a cada pieza del tesoro y, luego, usa este bloque:
         <xml><block type="collector_collect"/></xml>
      courseA_collector_loops2_2018: |-
        ¡Consigue los tres montones! Acerca a Laurel a cada pieza del tesoro y, luego, usa este bloque:
         <xml><block type="collector_collect"/></xml>
      courseA_collector_loops2_2019: |-
        ¡Consigue los tres montones! Acerca a Laurel a cada pieza del tesoro y, luego, usa este bloque:
         <xml><block type="collector_collect"/></xml>
      courseA_collector_loops3: ¿Cómo puede Laurel obtener los cinco montones de tesoros
        con un solo bloque <xml><block type="maze_moveEast"/></xml>?
      courseA_collector_loops3_2018: ¿Cómo puede Laurel obtener los cinco montones
        de tesoros con un solo bloque <xml><block type="maze_moveEast"/></xml>?
      courseA_collector_loops3_2019: ¿Cómo puede Laurel obtener los cinco montones
        de tesoros con un solo bloque <xml><block type="maze_moveEast"/></xml>?
      courseA_collector_loops_challenge1: _"¿Puedes ayudarme a detectar algunos errores?
        Sé por qué camino quiero ir, pero no estoy segura de cuántos pasos dar"._
      courseA_collector_loops_challenge1_2018: _"¿Puedes ayudarme a detectar algunos
        errores? Sé por qué camino quiero ir, pero no estoy segura de cuántos pasos
        dar"._
      courseA_collector_loops_challenge1_2019: _"¿Puedes ayudarme a detectar algunos
        errores? Sé por qué camino quiero ir, pero no estoy segura de cuántos pasos
        dar"._
      courseA_collector_preLoops1: |-
        ¡Ella es Laurel la Aventurera!

        Presiona el botón "Ejecutar" para verla caminar hasta el tesoro y recogerlo.
      courseA_collector_preLoops2: "¡Genial! ¡Ahora puedes agregar el código tú mismo!
        \n\nColoca un bloque ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
        en la parte inferior del programa y haz clic en \"Ejecutar\"."
      courseA_collector_preLoops3: Para recoger el tesoro, encaja dos bloques ![](https://images.code.org/54c206b62a02f1d7ea8f1bee52664ecb-image-1508905670742.25.37.png)
        y un bloque ![](https://images.code.org/563c0deb5c51d43cdfa72d62dec3419d-image-1508904559201.05.30.png)
        en la parte inferior del programa y haz clic en "Ejecutar".
      courseA_collector_preLoops7: |-
        ¡Consigue los tres montones! Acerca a Laurel a cada pieza del tesoro y, luego, usa este bloque:
         <xml><block type="collector_collect"/></xml>
      courseA_harvester_loops1: "¡Ayuda a la cosechadora a recoger todo el maíz!"
      courseA_harvester_loops10: "¡Ayuda a la cosechadora a recoger todo el maíz!"
      courseA_harvester_loops10_2019: "¡Ayuda a la cosechadora a recoger todo el maíz!"
      courseA_harvester_loops11: "¡Intenta uno más por tu cuenta! "
      courseA_harvester_loops11_2019: "¡Intenta uno más por tu cuenta! "
      courseA_harvester_loops1_2019: "¡Ayuda a la cosechadora a recoger todo el maíz!"
      courseA_harvester_loops2: "¡La cosechadora necesita recoger todo el maíz! ¿Ves
        algún patrón?"
      courseA_harvester_loops2_2019: "¡La cosechadora necesita recoger todo el maíz!
        ¿Ves algún patrón?"
      courseA_harvester_loops3: "¿Puedes recoger todo el maíz con **un** solo bloque
        de movimiento?"
      courseA_harvester_loops3_2019: "¿Puedes recoger todo el maíz con **un** solo
        bloque de movimiento?"
      courseA_harvester_loops4: |-
        _"¡Necesito ayuda para encontrar lo que está mal!"_

        ¿Puedes ayudar a la cosechadora a encontrar el error en su código?
      courseA_harvester_loops4_2019: |-
        _"¡Necesito ayuda para encontrar lo que está mal!"_

        ¿Puedes ayudar a la cosechadora a encontrar el error en su código?
      courseA_harvester_loops5: "¡Inténtalo tú mismo! ¿Puedes recoger el maíz al final?"
      courseA_harvester_loops5_2019: "¡Inténtalo tú mismo! ¿Puedes recoger el maíz
        al final?"
      courseA_harvester_loops5a: "¡Mira todo este maíz! ¿Puedes recogerlo tú mismo?"
      courseA_harvester_loops5a_2019: "¡Mira todo este maíz! ¿Puedes recogerlo tú
        mismo?"
      courseA_harvester_loops5b: "¿Puedes cambiar tu código para que la cosechadora
        recoja todo el maíz?"
      courseA_harvester_loops5b_2019: "¿Puedes cambiar tu código para que la cosechadora
        recoja todo el maíz?"
      courseA_harvester_loops6: ¡Necesitarás **un** bloque <xml><block type="maze_moveWest"></block></xml>
        y **un** bloque <xml><block type="maze_moveNorth"></block></xml> para terminar
        este desafío!
      courseA_harvester_loops6_2019: ¡Necesitarás **un** bloque <xml><block type="maze_moveWest"></block></xml>
        y **un** bloque <xml><block type="maze_moveNorth"></block></xml> para terminar
        este desafío!
      courseA_harvester_loops7: "¡Inténtalo tú mismo! "
      courseA_harvester_loops7_2019: "¡Inténtalo tú mismo! "
      courseA_harvester_loops9: "¿Puedes descubrir cómo recoger _todo_ este maíz?"
      courseA_harvester_loops9_2019: "¿Puedes descubrir cómo recoger _todo_ este maíz?"
      courseA_harvester_seq1: "¡Ayuda a la cosechadora a recoger el trozo de maíz!"
      courseA_harvester_seq10: "¡La cosechadora necesita recoger todo el maíz! ¿Ves
        algún patrón?"
      courseA_harvester_seq10_2019: "¡La cosechadora necesita recoger todo el maíz!
        ¿Ves algún patrón?"
      courseA_harvester_seq11: "¡Inténtalo tú mismo! Recoge el maíz."
      courseA_harvester_seq11_2019: "¡Inténtalo tú mismo! Recoge el maíz."
      courseA_harvester_seq12: |-
        _¡Gracias por ayudarme!_

        Recoge todo el maíz.
      courseA_harvester_seq12_2019: |-
        _¡Gracias por ayudarme!_

        Recoge todo el maíz.
      courseA_harvester_seq13: "¡Ayuda a la cosechadora a recoger el maíz!"
      courseA_harvester_seq13_2019: "¡Ayuda a la cosechadora a recoger el maíz!"
      courseA_harvester_seq1_2019: "¡Ayuda a la cosechadora a recoger el trozo de
        maíz!"
      courseA_harvester_seq2: '¡Usa <xml><block type="maze_moveWest"/></xml> **tres**
        veces para que la cosechadora llegue hasta el maíz! '
      courseA_harvester_seq2_2019: '¡Usa <xml><block type="maze_moveWest"/></xml>
        **tres** veces para que la cosechadora llegue hasta el maíz! '
      courseA_harvester_seq3: ¡Usa <xml><block type="maze_moveNorth"/></xml> **tres**
        veces para que la cosechadora llegue hasta el maíz! No te olvides de recoger
        el maíz al final.
      courseA_harvester_seq3_2019: ¡Usa <xml><block type="maze_moveNorth"/></xml>
        **tres** veces para que la cosechadora llegue hasta el maíz! No te olvides
        de recoger el maíz al final.
      courseA_harvester_seq4: Agrega _un_ bloque para ayudar a la cosechadora a recoger
        el maíz.
      courseA_harvester_seq4_2019: Agrega _un_ bloque para ayudar a la cosechadora
        a recoger el maíz.
      courseA_harvester_seq5: "¿Puedes descubrir el error en este código? ¡Ayuda a
        la cosechadora a recoger el maíz!"
      courseA_harvester_seq5_2019: "¿Puedes descubrir el error en este código? ¡Ayuda
        a la cosechadora a recoger el maíz!"
      courseA_harvester_seq6: "¡Inténtalo tú mismo!"
      courseA_harvester_seq6_2019: "¡Inténtalo tú mismo!"
      courseA_harvester_seq7: "¡Tienes que moverte en dos direcciones para recoger
        el maíz! Ayuda a la cosechadora a elegir la dirección correcta."
      courseA_harvester_seq7_2019: "¡Tienes que moverte en dos direcciones para recoger
        el maíz! Ayuda a la cosechadora a elegir la dirección correcta."
      courseA_harvester_seq8: "¡Ahora la cosechadora necesita recoger el maíz dos
        veces!"
      courseA_harvester_seq8_2019: "¡Ahora la cosechadora necesita recoger el maíz
        dos veces!"
      courseA_harvester_seq9: "¡Agrega dos bloques para terminar este desafío!"
      courseA_harvester_seq9_2019: "¡Agrega dos bloques para terminar este desafío!"
      courseA_maze_ramp2_2018: ¡Encaja los dos bloques <xml><block type="maze_moveEast"/></xml>
        en <xml><block type="when_run"/></xml> para finalizar tu código; luego, haz
        click en "▶ Ejecutar".
      courseA_maze_ramp2_2019: ¡Encaja los dos bloques <xml><block type="maze_moveEast"/></xml>
        en <xml><block type="when_run"/></xml> para finalizar tu código; luego, haz
        click en "▶ Ejecutar".
      courseA_maze_ramp3a_2018: Toma un bloque <xml><block type="maze_moveNorth"/></xml>
        de la caja de herramientas y agrégalo a la parte inferior de los otros bloques
        para finalizar este código; luego haz clic en "▶ Ejecutar".
      courseA_maze_ramp3a_2019: Toma un bloque <xml><block type="maze_moveNorth"/></xml>
        de la caja de herramientas y agrégalo a la parte inferior de los otros bloques
        para finalizar este código; luego haz clic en "▶ Ejecutar".
      courseA_maze_ramp3b_2018: "¡Hay un bloque sobrante al final de este código!
        \ \n\nArrástralo a la caja de herramientas para descartarlo."
      courseA_maze_ramp3b_2019: "¡Hay un bloque sobrante al final de este código!
        \ \n\nArrástralo a la caja de herramientas para descartarlo."
      courseA_maze_ramp4a_2018: "¿Puedes descubrir qué bloque necesitas agregar al
        final de los otros bloques para terminar este código?"
      courseA_maze_ramp4a_2019: "¿Puedes descubrir qué bloque necesitas agregar al
        final de los otros bloques para terminar este código?"
      courseA_maze_ramp5a_2018: "¡Prueba este tú mismo!"
      courseA_maze_ramp5a_2019: "¡Prueba este tú mismo!"
      courseA_maze_seq1: _"¡Juega con estos bloques e intenta llevarme hasta el cerdo
        malo!"_
      courseA_maze_seq10: |-
        **Desafío:** ¡Rodea el TNT para que el pájaro llegue hasta el cerdo!

        ![expandable](https://images.code.org/a656e421bc90e530a7e1ce636e507752-image-1497996976195.gif)
      courseA_maze_seq10_2018: "**Desafío:** ¡Evita el TNT para que el pájaro llegue
        hasta el cerdo!"
      courseA_maze_seq10_2019: "**Desafío:** ¡Evita el TNT para que el pájaro llegue
        hasta el cerdo!"
      courseA_maze_seq11: |-
        ¡Es tiempo de un desafío más corto! Muévete en una dirección, y luego en otra, para que el pájaro llegue hasta el cerdo.

        ![expandable](https://images.code.org/bb4571384fc56702704a0c9395ee3695-image-1497996380902.gif)
      courseA_maze_seq11_2018: "¡Es tiempo de un desafío más corto! Muévete en una
        dirección, y luego en otra, para que el pájaro llegue hasta el cerdo.  "
      courseA_maze_seq11_2019: "¡Es tiempo de un desafío más corto! Muévete en una
        dirección, y luego en otra, para que el pájaro llegue hasta el cerdo.  "
      courseA_maze_seq12: |-
        ¡Atrapa a ese cerdo!

        ![expandable](https://images.code.org/c6ae5024441e2305db82d06679e5a281-image-1497997160569.gif)
      courseA_maze_seq12_2018: "¡Atrapa a ese cerdo!"
      courseA_maze_seq12_2019: "¡Atrapa a ese cerdo!"
      courseA_maze_seq1_2018: _"¡Juega con estos bloques e intenta llevarme hasta
        el cerdo malo!"_
      courseA_maze_seq1_2019: _"¡Juega con estos bloques e intenta llevarme hasta
        el cerdo malo!"_
      courseA_maze_seq2: |-
        _"¡Hay un error! Arregla el código para que pueda llegar hasta el cerdo."_

        ![expandable](https://images.code.org/4af4959874b3ca1fdd3008dc4f77add4-image-1497994904322.gif)
      courseA_maze_seq3: |-
        _"¡Arregla el código para que pueda llegar hasta el cerdo!"_

        ![expandable](https://images.code.org/4adca88dc6df7378846a91d0fb0e59d1-image-1497995239069.gif)
      courseA_maze_seq4: |-
        _"Algo no está bien."_

        ¡QUITA un bloque para que el pájaro llegue hasta el cerdo!

        ![expandable](https://images.code.org/6af44fb0ba5ac5dd5502e2538f51fb9c-image-1497996162453.gif)
      courseA_maze_seq5: |-
        Inténtalo tú mismo desde el comienzo.

        ![expandable](https://images.code.org/e4ef591b4580db478330c298d1af756f-image-1497997080163.gif)
      courseA_maze_seq5_2018: Prueba este.
      courseA_maze_seq5_2019: Prueba este.
      courseA_maze_seq5a_2018: |-
        _"¡Aquí cerdito, cerdito!"_

        ¿Qué puedes agregar al final de este código para que el pájaro llegue hasta el cerdo?
      courseA_maze_seq5a_2019: |-
        _"¡Aquí cerdito, cerdito!"_

        ¿Qué puedes agregar al final de este código para que el pájaro llegue hasta el cerdo?
      courseA_maze_seq6: |-
        ¡Muéveme en una dirección, y luego en otra, para que pueda llegar hasta el cerdo!

        ![expandable](https://images.code.org/8f71c406afa60c6898937d950c670205-image-1497996506419.gif)
      courseA_maze_seq6_2018: "¡Mueve en una dirección, y luego en otra, para que
        el pájaro pueda llegar hasta el cerdo!"
      courseA_maze_seq6_2019: "¡Mueve en una dirección, y luego en otra, para que
        el pájaro pueda llegar hasta el cerdo!"
      courseA_maze_seq7: |-
        ¡Descubre qué falta y luego agrega bloques para que el pájaro pueda llegar hasta el cerdo!

        ![expandable](https://images.code.org/35bdb628dabd4259b581286b071c02f3-image-1497996651260.gif)
      courseA_maze_seq8: |-
        ¡Resuelve este nivel y haz que el pájaro llegue hasta el cerdo!

        ![expandable](https://images.code.org/fb4735244f74a4e001d1fa7b5c6028f9-image-1497998330218.gif)
      courseA_maze_seq8_2018: "¡Resuelve este nivel y haz que el pájaro llegue hasta
        el cerdo!"
      courseA_maze_seq8_2019: "¡Resuelve este nivel y haz que el pájaro llegue hasta
        el cerdo!"
      courseA_maze_seq9: |-
        **Desafío:** Agrega bloques para depurar este nivel y que el pájaro llegue hasta el cerdo.

        ![expandable](https://images.code.org/3f35068dd3cf51c420a536fa078f854d-image-1497996843105.gif)
      courseA_maze_seq_challenge1: Depura este nivel. Elimina los bloques adicionales
        y agrega los bloques faltantes. ¡Lleva el pájaro al cerdo!
      courseA_maze_seq_challenge1_2018: Depura este nivel. Elimina los bloques adicionales
        y agrega los bloques faltantes. ¡Lleva el pájaro al cerdo!
      courseA_maze_seq_challenge1_2019: Depura este nivel. Elimina los bloques adicionales
        y agrega los bloques faltantes. ¡Lleva el pájaro al cerdo!
      courseA_playLab_events3: |-
        Ayuda a Jorge el Perro a moverse. Conecta el bloque <xml><block type="studio_move">

        <title name="SPRITE">1</title>
        <title name="DIR">8</title>
        </block></xml> al bloque de evento <xml><block type="studio_whenArrow">
        <title name="VALUE">izquierda</title>
        </block></xml> que ya está en el área de trabajo.

        ¡Lleva a Jorge hacia la bandera para terminar este nivel!
      courseA_playLab_events3_2018: |-
        Ayuda a Jorge el Perro a moverse. Conecta el bloque <xml><block type="studio_move">

        <title name="SPRITE">1</title>
        <title name="DIR">8</title>
        </block></xml> al bloque de evento <xml><block type="studio_whenArrow">
        <title name="VALUE">izquierda</title>
        </block></xml> que ya está en el área de trabajo.

        ¡Lleva a Jorge hacia la bandera para terminar este nivel!
      courseA_playLab_events3_2019: |-
        Ayuda a Jorge el Perro a moverse. Conecta el bloque <xml><block type="studio_move">

        <title name="SPRITE">1</title>
        <title name="DIR">8</title>
        </block></xml> al bloque de evento <xml><block type="studio_whenArrow">
        <title name="VALUE">izquierda</title>
        </block></xml> que ya está en el área de trabajo.

        ¡Lleva a Jorge hacia la bandera para terminar este nivel!
      courseA_playLab_events4: Ahora, agrega más bloques para que Jorge se mueva hacia
        la derecha si haces clic en el botón de flecha derecha.
      courseA_playLab_events4_2018: Ahora, agrega otro bloque de evento para que Jorge
        se mueva a la derecha si haces clic en el botón de flecha derecha.
      courseA_playLab_events4_2019: Ahora, agrega otro bloque de evento para que Jorge
        se mueva a la derecha si haces clic en el botón de flecha derecha.
      courseA_playLab_events5: Agrega eventos para que Jorge se mueva hacia arriba
        y hacia abajo si se presionan los botones de flecha arriba y flecha abajo.
      courseA_playLab_events5_2018: Agrega eventos para que Jorge se mueva hacia arriba
        y hacia abajo si se presionan los botones de flecha arriba y flecha abajo.
      courseA_playLab_events5_2019: Agrega eventos para que Jorge se mueva hacia arriba
        y hacia abajo si se presionan los botones de flecha arriba y flecha abajo.
      courseA_playLab_events7_2018: _Juego libre:_ Agrega todo lo que quieras a este
        juego. ¿Puedes hacer que el dinosaurio desaparezca cuando Jorge se encuentra
        con él?
      courseA_playLab_events7_2019: _Juego libre:_ Agrega todo lo que quieras a este
        juego. ¿Puedes hacer que el dinosaurio desaparezca cuando Jorge se encuentra
        con él?
      courseA_playlab_events_challenge1: |-
        ¡Robin aparecerá si haces clic en Olive! ¿Puedes escribir el código para mostrar al resto de los personajes?

        ¡Asegúrate de hacer clic para obtener consejos en este desafío! ¡Los consejos te ayudarán a crear este proyecto paso a paso!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge1_2018: |-
        ¡Robin aparecerá si haces clic en Olive! ¿Puedes escribir el código para mostrar al resto de los personajes?

        ¡Asegúrate de hacer clic para obtener consejos en este desafío! ¡Los consejos te ayudarán a crear este proyecto paso a paso!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge1_2019: |-
        ¡Robin aparecerá si haces clic en Olive! ¿Puedes escribir el código para mostrar al resto de los personajes?

        ¡Asegúrate de hacer clic para obtener consejos en este desafío! ¡Los consejos te ayudarán a crear este proyecto paso a paso!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge2: |-
        Haz que cada uno haga algo cuando haces clic en ellos. ¿Qué dirán los animales? ¿Qué más pasará?

        ¡Asegúrate de hacer clic para obtener consejos en este desafío! ¡Los consejos te ayudarán a probar cosas divertidas!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge2_2018: |-
        Haz que cada uno haga algo cuando haces clic en ellos. ¿Qué dirán los animales? ¿Qué más pasará?

        ¡Asegúrate de hacer clic para obtener consejos en este desafío! ¡Los consejos te ayudarán a probar cosas divertidas!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseA_playlab_events_challenge2_2019: |-
        Haz que cada uno haga algo cuando haces clic en ellos. ¿Qué dirán los animales? ¿Qué más pasará?

        ¡Asegúrate de hacer clic para obtener consejos en este desafío! ¡Los consejos te ayudarán a probar cosas divertidas!

        ![](<https://images.code.org/d42103835215d4b070f7f463b5e3073c-image-1494531456899.30.19 PM.png>)
      courseB_Scrat_ramp1_2018: Para que Scrat llegue hasta la bellota, encaja el
        bloque <xml><block type="maze_moveEast"/></xml> en la parte inferior del bloque
        <xml><block type="when_run"/></xml>, y luego presiona "▶ Ejecutar".
      courseB_Scrat_ramp1_2019: Para que Scrat llegue hasta la bellota, encaja el
        bloque <xml><block type="maze_moveEast"/></xml> en la parte inferior del bloque
        <xml><block type="when_run"/></xml>, y luego presiona "▶ Ejecutar".
      courseB_Scrat_ramp2_2018: Encaja ambos bloques <xml><block type="maze_moveEast"/></xml>
        en la parte inferior del bloque <xml><block type="when_run"/></xml> para terminar
        tu código. Luego, haz click en "▶ Ejecutar".
      courseB_Scrat_ramp2_2019: Encaja ambos bloques <xml><block type="maze_moveEast"/></xml>
        en la parte inferior del bloque <xml><block type="when_run"/></xml> para terminar
        tu código. Luego, haz click en "▶ Ejecutar".
      courseB_Scrat_ramp3a_2018: Toma un bloque <xml><block type="maze_moveNorth"/></xml>
        de la caja de herramientas y agrégalo a la parte inferior de los otros bloques
        para finalizar este código; luego haz clic en "▶ Ejecutar".
      courseB_Scrat_ramp3a_2019: Toma un bloque <xml><block type="maze_moveNorth"/></xml>
        de la caja de herramientas y agrégalo a la parte inferior de los otros bloques
        para finalizar este código; luego haz clic en "▶ Ejecutar".
      courseB_Scrat_ramp3b_2018: |-
        ¡Hay un bloque sobrante al final de este código!

        Arrástralo a la caja de herramientas para descartarlo.
      courseB_Scrat_ramp3b_2019: |-
        ¡Hay un bloque sobrante al final de este código!

        Arrástralo a la caja de herramientas para descartarlo.
      courseB_Scrat_ramp4a_2018: "¿Puedes descubrir qué bloque necesitas agregar al
        final de los otros bloques para terminar este código?"
      courseB_Scrat_ramp4a_2019: "¿Puedes descubrir qué bloque necesitas agregar al
        final de los otros bloques para terminar este código?"
      courseB_Scrat_ramp5a_2018: "¡Prueba este tú mismo!"
      courseB_Scrat_ramp5a_2019: "¡Prueba este tú mismo!"
      courseB_artist_loops10: |-
        Usa lo que has aprendido para hacer un dibujo de lo que crees que vio el artista cuando llegó a casa.

        * * *

        ### Ideas

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseB_artist_loops10_2018: |-
        Usa lo que has aprendido para hacer un dibujo de lo que crees que vio el artista cuando llegó a casa.

        * * *

        ### Ideas

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseB_artist_loops10_2019: |-
        Usa lo que has aprendido para hacer un dibujo de lo que crees que vio el artista cuando llegó a casa.

        * * *

        ### Ideas

        ![](https://images.code.org/b329e035f02cf0273987a530d4ff93b3-image-1497998147979.gif)
        ![](https://images.code.org/126edbb030b78586c620fea11bd9c867-image-1497998152966.gif)
        ![](https://images.code.org/a4fc9deba0ecdae5f434a828708d997b-image-1497998171788.gif)
        ![](https://images.code.org/55271714dcfc01bf49441cdf3bf17649-image-1497998176661.gif)
      courseB_artist_loops6: Detrás de los arbustos, hay una hermosa viña llena de
        flores. ¿Puedes subir la viña y ver hasta dónde llega?
      courseB_artist_loops6_2018: Detrás de los arbustos, hay una hermosa viña llena
        de flores. ¿Puedes subir la viña y ver hasta dónde llega?
      courseB_artist_loops6_2019: Detrás de los arbustos, hay una hermosa viña llena
        de flores. ¿Puedes subir la viña y ver hasta dónde llega?
      courseB_artist_loops7: "**Desafío:** ¡Es un jardín escondido! Vamos a recorrerlo."
      courseB_artist_loops7_2018: "**Desafío:** ¡Es un jardín escondido! Vamos a recorrerlo."
      courseB_artist_loops7_2019: "**Desafío:** ¡Es un jardín escondido! Vamos a recorrerlo."
      courseB_artist_loops_challenge1: _"Es momento de lanzar los dados! ¿Puedes ayudarme
        a dibujar estos?"_
      courseB_artist_loops_challenge1_2018: _"Es momento de lanzar los dados! ¿Puedes
        ayudarme a dibujar estos?"_
      courseB_artist_loops_challenge1_2019: _"Es momento de lanzar los dados! ¿Puedes
        ayudarme a dibujar estos?"_
      courseB_artist_loops_challenge2: Dibuja tantas X como puedas. ¿Puedes lograr
        3 en fila?
      courseB_artist_loops_challenge2_2018: Dibuja tantas X como puedas. ¿Puedes lograr
        3 en fila?
      courseB_artist_loops_challenge2_2019: Dibuja tantas X como puedas. ¿Puedes lograr
        3 en fila?
      courseB_collector_loops1: |-
        **Juego libre:** ¡Esta es Laurel la Aventurera! Muévela y consigue todo el tesoro que puedas.

        Arrastra los bloques al espacio de trabajo y descubre cómo obtener tesoros. Obtén al menos un objeto para pasar este nivel.
      courseB_collector_loops1_2018: "**Juego libre:** Mueve a Laurel y consigue todos
        los tesoros que puedas. Consigue al menos un objeto sin errores para pasar
        este nivel.\n\n* * *\n\nArrastra bloques al espacio de trabajo e intenta descubrir
        cómo conseguir tesoros.  "
      courseB_collector_loops1_2019: "**Juego libre:** Mueve a Laurel y consigue todos
        los tesoros que puedas. Consigue al menos un objeto sin errores para pasar
        este nivel.\n\n* * *\n\nArrastra bloques al espacio de trabajo e intenta descubrir
        cómo conseguir tesoros.  "
      courseB_collector_loops2: |-
        Mueve a Laurel hasta el tesoro y, luego, usa el bloque <xml><block type="collector_collect"/></xml> para recogerlo.

        Recoge los cuatro montones para pasar este nivel.
      courseB_collector_loops2_2018: |-
        Mueve a Laurel hasta el tesoro y, luego, usa el bloque <xml><block type="collector_collect"/></xml> para recogerlo.

        Recoge los cuatro montones para pasar este nivel.
      courseB_collector_loops2_2019: |-
        Mueve a Laurel hasta el tesoro y, luego, usa el bloque <xml><block type="collector_collect"/></xml> para recogerlo.

        Recoge los cuatro montones para pasar este nivel.
      courseB_collector_loops3: ¿Cómo puede Laurel obtener los cinco montones de tesoros
        con un solo bloque <xml><block type="maze_moveEast"/></xml>?
      courseB_collector_loops3_2018: ¿Cómo puede Laurel obtener los cinco montones
        de tesoros con un solo bloque <xml><block type="maze_moveEast"/></xml>?
      courseB_collector_loops3_2019: ¿Cómo puede Laurel obtener los cinco montones
        de tesoros con un solo bloque <xml><block type="maze_moveEast"/></xml>?
      courseB_collector_loops_challenge2a: |-
        _"¡Vamos a buscar el tesoro!"_

        Ayuda a Laurel a obtener al menos **5** piezas del tesoro para finalizar este desafío.
      courseB_collector_loops_challenge2a_2018: |-
        _"¡Vamos a buscar el tesoro!"_

        Ayuda a Laurel a obtener al menos **5** piezas del tesoro para finalizar este desafío.
      courseB_collector_loops_challenge2a_2019: |-
        _"¡Vamos a buscar el tesoro!"_

        Ayuda a Laurel a obtener al menos **5** piezas del tesoro para finalizar este desafío.
      courseB_iceage_loops1: "¡Ayuda a Scrat a atravesar el hielo resbaladizo para
        llegar hasta la bellota!"
      courseB_iceage_loops10: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseB_iceage_loops10_2019: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseB_iceage_loops11: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseB_iceage_loops11_2019: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseB_iceage_loops12: "¡Llega a la bellota como sea!"
      courseB_iceage_loops12_2019: "¡Llega a la bellota como sea!"
      courseB_iceage_loops1_2019: "¡Ayuda a Scrat a atravesar el hielo resbaladizo
        para llegar hasta la bellota!"
      courseB_iceage_loops2: ¡Usa los bloques <xml><block type="maze_moveWest"/></xml>
        y <xml><block type="maze_moveSouth"/></xml> para llegar a la bellota!
      courseB_iceage_loops2_2019: ¡Usa los bloques <xml><block type="maze_moveWest"/></xml>
        y <xml><block type="maze_moveSouth"/></xml> para llegar a la bellota!
      courseB_iceage_loops3: ¿Puedes llegar a la bellota con un solo bloque <xml><block
        type="maze_moveWest"/></xml>? ¡Inténtalo usando un bucle!
      courseB_iceage_loops3_2019: ¿Puedes llegar a la bellota con un solo bloque <xml><block
        type="maze_moveWest"/></xml>? ¡Inténtalo usando un bucle!
      courseB_iceage_loops4: "¡Añade un bloque más para que Scrat llegue hasta la
        bellota!"
      courseB_iceage_loops4_2019: "¡Añade un bloque más para que Scrat llegue hasta
        la bellota!"
      courseB_iceage_loops6: "¿Puedes agregar un bucle para llegar a la bellota?"
      courseB_iceage_loops6_2019: "¿Puedes agregar un bucle para llegar a la bellota?"
      courseB_iceage_loops7: "¡Scrat realmente quiere esa bellota! "
      courseB_iceage_loops7_2019: "¡Scrat realmente quiere esa bellota! "
      courseB_iceage_loops8: "¿Puedes arreglar este código? "
      courseB_iceage_loops8_2019: "¿Puedes arreglar este código? "
      courseB_iceage_loops9: "¡La bellota está muy lejos! ¿Puedes utilizar los bucles
        para ayudar a Scrat a llegar hasta allí?"
      courseB_iceage_loops9_2019: "¡La bellota está muy lejos! ¿Puedes utilizar los
        bucles para ayudar a Scrat a llegar hasta allí?"
      courseB_maze_seq3: _"¡Arregla el código para llevarme hasta el cerdo!"_
      courseB_maze_seq9: "**Desafío:** Rodea el TNT para que el pájaro llegue hasta
        el cerdo."
      courseB_maze_seq9_2018: "**Desafío:** Rodea el hielo roto para que Scrat llegue
        hasta la bellota."
      courseB_maze_seq9_2019: "**Desafío:** Rodea el hielo roto para que Scrat llegue
        hasta la bellota."
      courseB_maze_seq_challenge1: Solo tienes cuatro de cada bloque de movimiento.
        ¿Puedes encontrar una ruta antes de que se te acaben los bloques?
      courseB_maze_seq_challenge1_2018: Solo tienes cuatro de cada bloque de movimiento.
        ¿Puedes encontrar una ruta antes de que se te acaben los bloques?
      courseB_maze_seq_challenge1_2019: Solo tienes cuatro de cada bloque de movimiento.
        ¿Puedes encontrar una ruta antes de que se te acaben los bloques?
      courseB_playLab_events1: "Este juego se llama \"Laboratorio de juegos\".  \n\nDescubre
        si puedes descifrar qué hace cada bloque."
      courseB_playLab_events1_2018: "Este juego se llama \"Laboratorio de juegos\".
        \ \n\nDescubre si puedes descifrar qué hace cada bloque."
      courseB_playLab_events1_2019: "Este juego se llama \"Laboratorio de juegos\".
        \ \n\nDescubre si puedes descifrar qué hace cada bloque."
      courseB_playlab_events3: Utiliza un evento para que Daisy la Dragón cambie a
        un estado de ánimo aleatorio ![](https://images.code.org/c365e065614fea592612264f33624c09-image-1475698889081.17.53.png)
        si haces clic en ella.
      courseB_playlab_events3_2018: Utiliza un evento para que Daisy la Dragón cambie
        a un estado de ánimo aleatorio ![](https://images.code.org/c365e065614fea592612264f33624c09-image-1475698889081.17.53.png)
        si haces clic en ella.
      courseB_playlab_events3_2019: Utiliza un evento para que Daisy la Dragón cambie
        a un estado de ánimo aleatorio ![](https://images.code.org/c365e065614fea592612264f33624c09-image-1475698889081.17.53.png)
        si haces clic en ella.
      courseB_playlab_events4: "¡Es tiempo de caballeros! \n\nAñade un evento para
        que el caballero se mueva hacia el dragón cada vez que se hace clic en la
        flecha izquierda."
      courseB_playlab_events4_2018: |-
        ¡Es tiempo de caballeros! Consigue el dragón para completar este nivel.

        Añade un evento para que el caballero se mueva hacia el dragón cada vez que se hace clic en la flecha izquierda.
      courseB_playlab_events4_2019: |-
        ¡Es tiempo de caballeros! Consigue el dragón para completar este nivel.

        Añade un evento para que el caballero se mueva hacia el dragón cada vez que se hace clic en la flecha izquierda.
      courseB_playlab_events5_2018: "Ahora añade un evento para que el caballero huya
        del dragón si presionas la flecha derecha. \n\nMueve al caballero hacia la
        derecha para pasar este nivel."
      courseB_playlab_events5_2019: "Ahora añade un evento para que el caballero huya
        del dragón si presionas la flecha derecha. \n\nMueve al caballero hacia la
        derecha para pasar este nivel."
      courseB_playlab_events6: |-
        ¡Ayuda a tu caballero a conseguir todas las banderas!

        Para ello, necesitarás añadir eventos que ayuden al caballero a moverse hacia arriba, hacia abajo, a la izquierda y a la derecha.
      courseB_playlab_events6_2018: |-
        ¡Ayuda a tu caballero a conseguir todas las banderas!

        Para ello, necesitarás añadir eventos que ayuden al caballero a moverse hacia arriba, hacia abajo, a la izquierda y a la derecha.
      courseB_playlab_events6_2019: |-
        ¡Ayuda a tu caballero a conseguir todas las banderas!

        Para ello, necesitarás añadir eventos que ayuden al caballero a moverse hacia arriba, hacia abajo, a la izquierda y a la derecha.
      courseB_playlab_events7: "¿Quieres que este juego sea aún más divertido? ¡Haz
        que el caballero se desvanezca cuando se encuentre con el dragón mientras
        busca las banderas! \n\nPara que parezca más real, reproduce un sonido cada
        vez que choquen.\n\nConsulta todos los objetivos y, luego, encuéntrate con
        el dragón para pasar de nivel."
      courseB_playlab_events7_2018: "¡Añade más cosas para que el juego sea divertido!\n\n1.
        \ Haz que el caballero se desvanezca cuando se encuentre con el dragón.   \n2.
        \ Reproduce un sonido cuando choquen para que parezca más real.  \n\n* * *\n\nConsulta
        todos los objetivos y, luego, encuéntrate con el dragón para pasar de nivel."
      courseB_playlab_events7_2019: "¡Añade más cosas para que el juego sea divertido!\n\n1.
        \ Haz que el caballero se desvanezca cuando se encuentre con el dragón.   \n2.
        \ Reproduce un sonido cuando choquen para que parezca más real.  \n\n* * *\n\nConsulta
        todos los objetivos y, luego, encuéntrate con el dragón para pasar de nivel."
      courseB_playlab_events_challenge1: "¡Es momento para la Gran Carrera Animal!
        Haz que los animales se muevan hacia abajo cuando presionas `▼`. \n\n¿Cuál
        será el más veloz?"
      courseB_playlab_events_challenge1_2018: "¡Es momento para la Gran Carrera Animal!
        Haz que los animales se muevan hacia abajo cuando presionas `▼`. \n\n¿Cuál
        será el más veloz?"
      courseB_playlab_events_challenge1_2019: "¡Es momento para la Gran Carrera Animal!
        Haz que los animales se muevan hacia abajo cuando presionas `▼`. \n\n¿Cuál
        será el más veloz?"
      courseB_playlab_events_challenge2: |-
        Hagamos que los animales desaparezcan si haces clic en ellos.
        Intenta jugar con el perro ahora, y luego ayuda a los otros animales a unirse a la diversión. ¡También puedes agregar sonidos y ganar puntos para crear un juego de Animal Tag!

        ![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)
      courseB_playlab_events_challenge2_2018: |-
        Hagamos que los animales desaparezcan si haces clic en ellos.
        Intenta jugar con el perro ahora, y luego ayuda a los otros animales a unirse a la diversión. ¡También puedes agregar sonidos y ganar puntos para crear un juego de Animal Tag!

        ![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)
      courseB_playlab_events_challenge2_2019: |-
        Hagamos que los animales desaparezcan si haces clic en ellos.
        Intenta jugar con el perro ahora, y luego ayuda a los otros animales a unirse a la diversión. ¡También puedes agregar sonidos y ganar puntos para crear un juego de Animal Tag!

        ![](https://images.code.org/d48437a0b08be90110541e0ef21076e0-image-1497907722000.gif)
      courseB_starWars_prog1: |-
        ![Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_"Ve por la chatarra, BB-8!"_

        Cuidado con los muros y las cajas. La chatarra luce así: ![picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)
      courseB_starWars_prog10: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¿Puedes recoger todo?"_'
      courseB_starWars_prog10_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¿Puedes recoger todo?"_'
      courseB_starWars_prog10_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¿Puedes recoger todo?"_'
      courseB_starWars_prog11: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Continúa!"_'
      courseB_starWars_prog11_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Continúa!"_'
      courseB_starWars_prog11_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Continúa!"_'
      courseB_starWars_prog1_2018: |-
        ![Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_"Ve por la chatarra, BB-8!"_

        Cuidado con los muros y las cajas. La chatarra luce así: ![picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)
      courseB_starWars_prog1_2019: |-
        ![Rey](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)_"Ve por la chatarra, BB-8!"_

        Cuidado con los muros y las cajas. La chatarra luce así: ![picture of scrap metal](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)
      courseB_starWars_prog2: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Consigue todo el metal."_'
      courseB_starWars_prog2_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Consigue todo el metal."_'
      courseB_starWars_prog2_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"Consigue todo el metal."_'
      courseB_starWars_prog3: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Continúa, BB-8!"_'
      courseB_starWars_prog3_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Continúa, BB-8!"_'
      courseB_starWars_prog3_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Continúa, BB-8!"_'
      courseB_starWars_prog4: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Consíguela, BB-8!"_'
      courseB_starWars_prog4_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Consíguela, BB-8!"_'
      courseB_starWars_prog4_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Consíguela, BB-8!"_'
      courseB_starWars_prog5: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¿Puedes recoger todo?"_'
      courseB_starWars_prog5_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¿Puedes recoger todo?"_'
      courseB_starWars_prog5_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¿Puedes recoger todo?"_'
      courseB_starWars_prog6: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Puedes hacerlo!"_'
      courseB_starWars_prog6_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Puedes hacerlo!"_'
      courseB_starWars_prog6_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Puedes hacerlo!"_'
      courseB_starWars_prog7: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Ve a buscarla!"_'
      courseB_starWars_prog7_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Ve a buscarla!"_'
      courseB_starWars_prog7_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Ve a buscarla!"_'
      courseB_starWars_prog8: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Sigue así, BB-8."_

        **Desafío**: Recoger toda la chatarra.
      courseB_starWars_prog8_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Sigue así, BB-8."_

        **Desafío**: Recoger toda la chatarra.
      courseB_starWars_prog8_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Sigue así, BB-8."_

        **Desafío**: Recoger toda la chatarra.
      courseB_starWars_prog9: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Puedes hacerlo!"_'
      courseB_starWars_prog9_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Puedes hacerlo!"_'
      courseB_starWars_prog9_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Puedes hacerlo!"_'
      courseC19_playLab_EOC1: "¡Es sorprendente cuánto has aprendido! Vamos a hacer
        un juego paso a paso.\\\r\n\\\r\nUsando nuevos bloques de la caja de herramientas,
        escoge un nuevo fondo, luego escoge un actor para que esté en tu juego."
      courseC19_playLab_EOC2: "Usa bloques como manejadores de eventos y acciones
        para hacer que tu jugador se mueva de acuerdo a las flechas de tu teclado.
        \ \\\r\n\\\r\nLleva al jugador hasta los blancos para completar este desafío."
      courseC19_playLab_EOC3: "¡Agreguemos más personajes a tu juego!\\\r\n\\\r\nUsa
        el bloque 'establecer actor' para agregar más personajes luego mueve el objetivo
        para completar el desafío."
      courseC19_playLab_EOC4: "Personajes múltiples y hacer que los actores se muevan
        es un gran comienzo para un juego, pero necesitamos hacer más para hacer que
        se sienta como un juego real. ¡Agreguemos un puntaje!\\\r\n\\\r\nUsa bloques
        de eventos como el 'cuando actores tocan' para cambiar el puntaje. Marca 10
        puntos para completar el rompecabezas."
      courseC19_playLab_EOC5: "¡Gran trabajo! Tienes todos los componentes básicos
        de un juego funcionando. Ahora dedica algún tiempo asegurándote que el juego
        funcione de la forma que quieres. Incluye una forma de ganar o perder tu juego,
        luego juega hasta que necesites una de esa condiciones."
      courseC19_playLab_EOC6: "¡Has terminado! Ahora puedes jugar tu juego o compartirlo
        con tus amigos o compañeros!"
      courseC_PlayLab_events6_2019: Ahora, escribe un programa para que Waddles el
        Pingüino se mueva con las teclas arriba / abajo / izquierda / derecha para
        tocar a todos los objetivos.
      courseC_PlayLab_events7: |-
        El botón `repetir siempre` te permite ejecutar el código una y otra vez. Usa este bloque para mover a Chomp el Dino (actor 2) 400 pixeles hacia arriba y hacia abajo constantemente.

        ![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)
      courseC_PlayLab_events7_2018: |-
        El botón `repetir siempre` te permite ejecutar el código una y otra vez. Usa este bloque para mover a Chomp el Dino (actor 2) 400 pixeles hacia arriba y hacia abajo constantemente.

        ![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)
      courseC_PlayLab_events7_2019: |-
        El botón `repetir siempre` te permite ejecutar el código una y otra vez. Usa este bloque para mover a Chomp el Dino (actor 2) 400 pixeles hacia arriba y hacia abajo constantemente.

        ![](https://images.code.org/0cbe6dd5f4e2251e3f121dbabc0cc19d-image-1523040103822.com-resize.gif)
      courseC_PlayLab_events8: "¿Puedes hacer que Waddles (actor 1) diga \"¡Ay!\"
        y reproduzca un sonido de \"golpe\" si se encuentra con Chomp? \n\nCuando
        estés listo, juega para hacer que eso suceda.\n\n![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)"
      courseC_PlayLab_events8_2018: "¿Puedes hacer que Waddles (actor 1) diga \"¡Ay!\"
        y reproduzca un sonido de \"golpe\" si se encuentra con Chomp? \n\nCuando
        estés listo, juega para hacer que eso suceda.\n\n![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)"
      courseC_PlayLab_events8_2019: "¿Puedes hacer que Waddles (actor 1) diga \"¡Ay!\"
        y reproduzca un sonido de \"golpe\" si se encuentra con Chomp? \n\nCuando
        estés listo, juega para hacer que eso suceda.\n\n![](https://images.code.org/a634f249021651f60a1acf37bf78d07d-image-1475342557950.gif)"
      courseC_PlayLab_eventsA_embed_2019: Juguemos un juego. ¡Anota 5 puntos moviendo
        el Pingüino hacia el Pulpo!
      courseC_PlayLab_events_challenge1: |-
        Usa un nuevo bloque para que Waddles se mueva automáticamente hacia el inicio cuando se encuentre con el Dinosaurio y cuando anote un punto. ¡Así tu juego será más desafiante y divertido!

        Juega y mueve a Waddles con las flechas hasta que anotes suficientes puntos. Waddles se debe mover a la posición `izquierda media` de la pantalla para completar este desafío.
      courseC_PlayLab_events_challenge1_2018: |-
        Usa un nuevo bloque para que Waddles se mueva automáticamente hacia el inicio cuando se encuentre con el Dinosaurio y cuando anote un punto. ¡Así tu juego será más desafiante y divertido!

        Juega y mueve a Waddles con las flechas hasta que anotes 5 puntos o más. Waddles se debe mover a la posición `izquierda media` de la pantalla para completar este desafío.
      courseC_PlayLab_events_challenge1_2019: |-
        Usa un nuevo bloque para que Waddles se mueva automáticamente hacia el inicio cuando se encuentre con el Dinosaurio y cuando anote un punto. ¡Así tu juego será más desafiante y divertido!

        Juega y mueve a Waddles con las flechas hasta que anotes 5 puntos o más. Waddles se debe mover a la posición `izquierda media` de la pantalla para completar este desafío.
      courseC_artist_loop1: "¡Fantástico!  \n\nCambiemos el pincel y usemos el bloque
        `establecer patrón` para agregar algo de estilo antes de que comience nuestro
        bucle."
      courseC_artist_loop1_2018: |-
        _"¡Fantástico!"_

        Cambiemos el pincel y usemos el bloque <xml><block type="draw_line_style_pattern"> <title name="VALUE">PREDETERMINADO</title></block></xml> para agregar algo de estilo antes de que comience nuestro bucle.
      courseC_artist_loop1_2019: |-
        _"¡Fantástico!"_

        Cambiemos el pincel y usemos el bloque <xml><block type="draw_line_style_pattern"> <title name="VALUE">PREDETERMINADO</title></block></xml> para agregar algo de estilo antes de que comience nuestro bucle.
      courseC_artist_loops1a: "**Juego libre:** ¡Vamos a crear algo más grande paso
        a paso! Puedes crear lo que quieras, ¡pero te vamos a mostrar cómo hacer algo
        así!\n\n![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)\n\nUsa
        el `salto a 200 sobre 200` para llevar al artista hasta el centro del área
        de juego, y luego usa el bloque `dibujar un sticker` para que aparezca el
        pájaro. \n\n* * *\n\nPresiona \"Finalizar\" cuando estés contento con lo que
        has hecho."
      courseC_artist_loops1a_2018: "**Juego libre:** ¡Vamos a crear algo más grande
        paso a paso!  \n\nUsa el `salto a 200 sobre 200` para llevar al artista hasta
        el centro del área de juego, y luego usa el bloque `dibujar un sticker` para
        que aparezca el pájaro.\n\n* * *\n\nPresiona \"Finalizar\" cuando estés contento
        con lo que has hecho."
      courseC_artist_loops1a_2019: "**Juego libre:** ¡Vamos a crear algo más grande
        paso a paso! \n\nUsa el bloque <xml> <block type=\"jump_to\" id=\"callout\"
        name=\"callout\" block-text=\"jump to the middle center position\"><title
        name=\"VALUE\">13</title></block></xml> para llevar al artista hasta el centro
        del área de juego, y luego usa el bloque <xml><block type=\"sticker\" block-text=\"draw
        sticker\"><title name=\"VALUE\">Beaver</title></block></xml> para que aparezca
        algo.\n\n* * *\n\nPresiona \"Finalizar\" cuando estés contento con lo que
        has hecho.\n\n![expandable](https://images.code.org/1435d3650553df44eba973572d409a50-image-1553096405891.png)\n![expandable](https://images.code.org/6912d2144b90aa7087fe854742d1e8b9-image-1553096425394.png)\n![expandable](https://images.code.org/8de9e1aa15fdfe30ffed763e0e1d6e04-image-1553096428531.png)"
      courseC_artist_loops1b_2019: |-
        Agrega un comando `girar` a tu código para cambiar la orientación de tu sticker.

        * * *

        Presiona "Finalizar" si estás satisfecho con el resultado.

        ![expandable](https://images.code.org/30fe9d37758abd27055d9a6e5a890680-image-1553097358155.png)
        ![expandable](https://images.code.org/61feed00662019b99ac774322231f084-image-1553097362176.png)
        ![expandable](https://images.code.org/fd123bb703ea4c630218a12eb5994053-image-1553097354066.png)
      courseC_artist_loops2a: Ahora usa un bucle para que tu pájaro dé vueltas 12
        veces con un giro de 30 grados.
      courseC_artist_loops2a_2018: Ahora usa un bucle para que tu pájaro dé vueltas
        12 veces con un giro de 30 grados.
      courseC_artist_loops2a_2019: |-
        Ahora usa un bucle para crear más copias de tu sticker. Intentar cambiar los números en los bloques 'girar' y 'repetir' para crear diferentes patrones.

        * * *

        Presiona "Finalizar" cuando estés contento con lo que has creado.

        ![expandable](https://images.code.org/8b4352a1abe72419043d278752261b57-image-1553097917337.png)
        ![expandable](https://images.code.org/5211e2fe2852e25a884a790155ba47d5-image-1553097923167.png)
        ![expandable](https://images.code.org/0e3fbe8bbd20526cc735dfd26d2473ee-image-1553097925789.png)
      courseC_artist_loops3a: "¡Qué divertido!  \n\nAhora agrega un sticker de un
        murciélago justo después del pájaro para crear una imagen como la de abajo.\n\n*
        * *\n\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)"
      courseC_artist_loops3a_2018: "¡Qué divertido!  \n\nAhora agrega un sticker de
        un murciélago justo después del pájaro para crear una imagen como la de abajo.\n\n*
        * *\n\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)"
      courseC_artist_loops3a_2019: "¡Qué divertido!  \n\nAhora agrega un segundo sticker
        justo por encima del primero para hacer una imagen como las que aparecen a
        continuación.\n\n* * *\n\n![expandable](https://images.code.org/3aa37f679eabc7a5a337291db614dd98-image-1496711069351.03.49.png)\n![expandable](https://images.code.org/dd0e0eee69d37493c5ba584164316a9f-image-1553098351969.png)\n![expandable](https://images.code.org/880908899d8e6ceac8a8ce1bd0bf47eb-image-1553098355311.png)\n\nPresiona
        \"Finalizar\" cuando sientas que has terminado."
      courseC_artist_loops4a: |-
        Agrega un bloque a tu código para que el artista salte 75 pixeles hacia adelante entre el pájaro y el murciélago. En este desafío, ¡asegúrate de tener el bloque `saltar 200 sobre 200` dentro de tu bucle para mantenerte en el centro!

        * * *

        ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)
      courseC_artist_loops4a_2018: |-
        Edita tu código para saltar 75 pixeles hacia adelante entre el pájaro y el murciélago. En este desafío, ¡asegúrate de tener el bloque `saltar 200 sobre 200` dentro de tu bucle para mantenerte en el centro!

        * * *

        ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)
      courseC_artist_loops4a_2019: |-
        Edita tu código para saltar hacia adelante entre los dibujos de los dos stickers. En este desafío, ¡asegúrate de tener el bloque `saltar a la posición central en el medio` dentro de tu bucle para mantenerte en el centro!

        * * *

        Presiona "Finalizar" cuando estés contento con lo que has creado.

        ![expandable](https://images.code.org/5b67ed8d878d6c2a5009eee054427fd5-image-1496711253365.05.35.png)
        ![expandable](https://images.code.org/5774170704916cfddcf2e98c2c01d718-image-1553099207939.png)
        ![expandable](https://images.code.org/9b016314df4aed5165c76282bab0cea1-image-1553099212229.png)
        ![expandable](https://images.code.org/2cf50b8e9ae75803f15908304c22a10b-image-1553099215987.png)
      courseC_artist_loops5a: |-
        ¿Qué sucede cuando reemplazas uno o ambos stickers con una criatura diferente?

        * * *

        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5a_2018: |-
        ¿Qué sucede cuando reemplazas uno o ambos stickers con una criatura diferente?

        * * *

        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5a_2019: |-
        ¿Qué sucede cuando reemplazas uno o ambos stickers con una criatura diferente?

        * * *

        ![expandable](https://images.code.org/cadb5e244db64a781bc02b55f2e7ccca-image-1496711397989.08.28.png)
      courseC_artist_loops5b: "¿Qué sucede cuando te `mueves hacia adelante`, y luego
        te `mueves hacia atrás`, unos 100, 200 o 400 pixeles en algún lugar dentro
        del bucle? \n\n-   Intenta usar el bloque 'establecer patrón\\` antes de que
        tu bucle comience a crear una obra de arte.\n    * * *\n    ![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)"
      courseC_artist_loops5b_2018: "¿Qué sucede cuando te `mueves hacia adelante`,
        y luego te `mueves hacia atrás`, unos 100, 200 o 400 pixeles en algún lugar
        dentro del bucle? \n\n-   Intenta usar el bloque 'establecer patrón\\` antes
        de que tu bucle comience a crear una obra de arte.\n    * * *\n    ![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)"
      courseC_artist_loops5b_2019: |-
        ¿Qué sucede cuando te `mueves hacia adelante`, y luego te `mueves hacia atrás`, unos 100, 200 o 400 pixeles en algún lugar dentro del bucle?

        -   Intenta usar el bloque 'establecer patrón\` antes de que tu bucle comience a crear una obra de arte.

        * * *

        ![expandable](https://images.code.org/d523de02389fd23db3029327c03b727d-image-1497039953252.24.18.png)
        ![expandable](https://images.code.org/55285e9e5c5ae1cf1c895cc0bf92824d-image-1553100970790.png)
        ![expandable](https://images.code.org/6b8e67db2a3b341bc56fa53f67c284c2-image-1553100974645.png)
      courseC_artist_loops6a: |-
        ¡Agrega un tercer sticker en el lugar del bucle que quieras! ¿Cómo luce ahora?

        -   ¡Cambia el patrón en tu pincel para obtener más variedad!

        * * *

        ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)
      courseC_artist_loops6a_2018: |-
        ¡Agrega un tercer sticker en el lugar del bucle que quieras! ¿Cómo luce ahora?

        -   ¡Cambia el patrón en tu pincel para obtener más variedad!

        * * *

        ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)
      courseC_artist_loops6a_2019: |-
        ¡Agrega un tercer sticker en el lugar del bucle que quieras! ¿Cómo luce ahora?

        -   ¡Cambia el patrón en tu pincel para obtener más variedad!

        * * *

        ![expandable](https://images.code.org/b0f999ef4b9ab6bd9780e9fbac07dc8d-image-1497040845047.39.55.png)
      courseC_artist_loops7a: |-
        Intenta cambiar el bucle `repetir` para ejecutar un número diferente de veces. ¿Qué tan lejos tienes que girar para rodear un círculo completo?

        -   Intenta cambiar las veces que giras
        -   Intenta un giro de 60 grados, 6 veces
        -   Intenta un giro de 20 grados, 18 veces

        * * *

        Esta imagen usa un pirata, un ninja y una jirafa. Ellos giran 18 veces con un giro de 20 grados.

        ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)
      courseC_artist_loops7a_2018: |-
        Intenta cambiar el bucle `repetir` para ejecutar un número diferente de veces. ¿Qué tan lejos tienes que girar para rodear un círculo completo?

        -   Intenta cambiar las veces que giras
        -   Intenta un giro de 60 grados, 6 veces
        -   Intenta un giro de 20 grados, 18 veces

        * * *

        Esta imagen usa un pirata, un ninja y una jirafa. Ellos giran 18 veces con un giro de 20 grados.

        ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)
      courseC_artist_loops7a_2019: |-
        Intenta cambiar el bucle `repetir` para ejecutar un número diferente de veces. ¿Qué tan lejos tienes que girar para rodear un círculo completo?

        -   Intenta cambiar las veces que giras
        -   Intenta un giro de 60 grados, 6 veces
        -   Intenta un giro de 20 grados, 18 veces

        * * *

        Esta imagen usa un pirata, un ninja y una jirafa. Ellos giran 18 veces con un giro de 20 grados.

        ![expandable](https://images.code.org/99411638acb44e8a7ba5b9696fe11fa4-image-1496714175039.53.24.png)
      courseC_artist_loops8a: |-
        Ahora haz algo tú mismo. ¿Qué sucede cuando creas dos círculos separados de stickers diferentes?

        * * *

        ¿Necesitas una idea? Prueba hacer un diseño como este.

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_artist_loops8a_2018: |-
        Ahora haz algo tú mismo. ¿Qué sucede cuando creas dos círculos separados de stickers diferentes?

        * * *

        ¿Necesitas una idea? Prueba hacer un diseño como este.

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_artist_loops8a_2019: |-
        Ahora haz algo tú mismo. ¿Qué sucede cuando creas dos círculos separados de stickers diferentes?

        * * *

        ¿Necesitas una idea? Prueba hacer un diseño como este.

        ![expandable](https://images.code.org/d8e0ad6294aa5e04e4aab56631a6b50b-image-1496714582863.02.14.png)
      courseC_artist_loopsPre1a: |-
        Ahora pon este código dentro de un bloque `repetir` y haz un bucle **6** veces.

        -   Observa que hemos agregado un giro de 60 grados al final del código con bucle para lograr una rotación completa.
      courseC_artist_loopsPre1a_2018: |-
        Ahora pon este código dentro de un bloque `repetir` y haz un bucle **6** veces.

        -   Observa que hemos agregado un giro de 60 grados al final del código con bucle para lograr una rotación completa.
      courseC_artist_loopsPre1a_2019: |-
        Ahora pon este código dentro de un bloque `repetir` y haz un bucle **6** veces.

        -   Observa que hemos agregado un giro de 60 grados al final del código con bucle para lograr una rotación completa.
      courseC_artist_loopsPrePre1a: "Usa el bloque <xml><block type=\"jump_to_xy\"
        id=\"callMe\"><title name=\"XPOS\">200</title><title name=\"YPOS\">200</title></block></xml>
        para llevar al artista hasta el centro del área de juego. \nLuego dibuja una
        línea de 50 pixeles de largo con el bloque <xml><block type=\"draw_move_by_constant\"><title
        name=\"DIR\">ir hacia adelante</title><title name=\"VALUE\">50</title></block></xml>."
      courseC_artist_loopsPrePre1a_2018: |-
        ### ¡El artista está en la ubicación incorrecta!

        Usa el bloque <xml><block type="jump_to_xy" id="callMe"><title name="XPOS">200</title><title name="YPOS">200</title></block></xml> para llevar al artista hasta el centro del área de juego.
        Luego dibuja una línea de 50 pixeles de largo con el bloque <xml><block type="draw_move_by_constant"><title name="DIR">ir hacia adelante</title><title name="VALUE">50</title></block></xml>.
      courseC_artist_loopsPrePre1a_2019: |-
        ### ¡El artista está en la ubicación incorrecta!

        Usa el bloque <xml><block type="jump_to_xy" id="callMe"><title name="XPOS">200</title><title name="YPOS">200</title></block></xml> para llevar al artista hasta el centro del área de juego.
        Luego dibuja una línea de 50 pixeles de largo con el bloque <xml><block type="draw_move_by_constant"><title name="DIR">ir hacia adelante</title><title name="VALUE">50</title></block></xml>.
      courseC_artist_prog1: |-
        _"Hola, soy un artista. Puedes escribir un código para hacerme dibujar casi cualquier cosa"._

        ¡Juega con los bloques de la caja de herramientas para ver qué hacen!
      courseC_artist_prog1_2018: |-
        _"Hola, soy un artista. Puedes escribir un código para hacerme dibujar casi cualquier cosa"._

        ¡Juega con los bloques de la caja de herramientas para ver qué hacen!
      courseC_artist_prog1_2019: |-
        _"Hola, soy un artista. Puedes escribir un código para hacerme dibujar casi cualquier cosa"._

        ¡Juega con los bloques de la caja de herramientas para ver qué hacen!
      courseC_artist_prog2: "_\"¡Hagamos una jaula para mi monstruo mascota!\"_\n\nArrastra
        los bloques a la pantalla para que el artista dibuje sobre las líneas grises
        de la imagen.  \n\n(Cada línea tiene 100 pixeles de largo)"
      courseC_artist_prog2_2018: "_\"¡Hagamos una jaula para mi monstruo mascota!\"_\n\nArrastra
        los bloques a la pantalla para que el artista dibuje sobre las líneas grises
        de la imagen.  \n\n(Cada línea tiene 100 pixeles de largo)"
      courseC_artist_prog2_2019: "_\"¡Hagamos una jaula para mi monstruo mascota!\"_\n\nArrastra
        los bloques a la pantalla para que el artista dibuje sobre las líneas grises
        de la imagen.  \n\n(Cada línea tiene 100 pixeles de largo)"
      courseC_artist_prog3: |-
        _"¡Esta nave espacial necesita una ventana!"_

        Cada lado del cuadrado interior tiene 100 pixeles y todos los ángulos son de 90 grados.
      courseC_artist_prog3_2018: |-
        _"¡Esta nave espacial necesita una ventana!"_

        Cada lado del cuadrado interior tiene 100 pixeles y todos los ángulos son de 90 grados.
      courseC_artist_prog3_2019: |-
        _"¡Esta nave espacial necesita una ventana!"_

        Cada lado del cuadrado interior tiene 100 pixeles y todos los ángulos son de 90 grados.
      courseC_artist_prog4: "_\"¡Oh, no! ¡La mascota extraterrestre de Starla acaba
        de irse volando! ¡Ayudemos a la mujer del espacio!_\n\nTermina el cohete de
        Starla para que pueda perseguir a su mascota. \n(Cada lado del triángulo tiene
        100 pixeles de largo y los ángulos exteriores son de 120 grados)."
      courseC_artist_prog4_2018: "_\"¡Oh, no! ¡La mascota extraterrestre de Starla
        acaba de irse volando! ¡Ayudemos a la mujer del espacio!_\n\nTermina el cohete
        de Starla para que pueda perseguir a su mascota. \n(Cada lado del triángulo
        tiene 100 pixeles de largo y los ángulos exteriores son de 120 grados)."
      courseC_artist_prog4_2019: "_\"¡Oh, no! ¡La mascota extraterrestre de Starla
        acaba de irse volando! ¡Ayudemos a la mujer del espacio!_\n\nTermina el cohete
        de Starla para que pueda perseguir a su mascota. \n(Cada lado del triángulo
        tiene 100 pixeles de largo y los ángulos exteriores son de 120 grados)."
      courseC_artist_prog5: "_\"¡Quizás deberíamos hacer una etiqueta para cada una
        de nuestras mascotas en caso de que se pierdan!\"_\n\nDibuja un rectángulo
        alrededor del exterior para terminar esta etiqueta. \n(Los lados largos tienen
        200 pixeles cada uno y los lados cortos, 100 pixeles)"
      courseC_artist_prog5_2018: "_\"¡Quizás deberíamos hacer una etiqueta para cada
        una de nuestras mascotas en caso de que se pierdan!\"_\n\nDibuja un rectángulo
        alrededor del exterior para terminar esta etiqueta. \n(Los lados largos tienen
        200 pixeles cada uno y los lados cortos, 100 pixeles)"
      courseC_artist_prog5_2019: "_\"¡Quizás deberíamos hacer una etiqueta para cada
        una de nuestras mascotas en caso de que se pierdan!\"_\n\nDibuja un rectángulo
        alrededor del exterior para terminar esta etiqueta. \n(Los lados largos tienen
        200 pixeles cada uno y los lados cortos, 100 pixeles)"
      courseC_artist_prog6: |-
        _"¡Ahora una etiqueta para Belle!"_

        Dibuja este diamante con lados de 200 pixeles.
      courseC_artist_prog6_2018: |-
        _"¡Ahora una etiqueta para Belle!"_

        Dibuja este cuadrado con lados de 200 pixeles.
      courseC_artist_prog6_2019: |-
        _"¡Ahora una etiqueta para Belle!"_

        Dibuja este cuadrado con lados de 200 pixeles.
      courseC_artist_prog7: "**Desafío:** ¡Esta es una etiqueta especial! \n\n¿Puedes
        descubrir cómo dibujar el contorno? \n(El lado largo tiene 150 pixeles, y
        cada uno de los lados cortos tiene 75 pixeles)"
      courseC_artist_prog7_2018: "**Desafío:** ¡Esta es una etiqueta especial! \n\n¿Puedes
        descubrir cómo dibujar el contorno? \n(El lado largo tiene 150 pixeles, y
        cada uno de los lados cortos tiene 75 pixeles)"
      courseC_artist_prog7_2019: "**Desafío:** ¡Esta es una etiqueta especial! \n\n¿Puedes
        descubrir cómo dibujar el contorno? \n(El lado largo tiene 150 pixeles, y
        cada uno de los lados cortos tiene 75 pixeles)"
      courseC_artist_prog8: "Una etiqueta más. Este es un triángulo para Pi.  \n(Cada
        lado tiene 150 pixeles)"
      courseC_artist_prog8_2018: "Una etiqueta más. Este es un triángulo para Pi.
        \ \n(Cada lado tiene 150 pixeles)"
      courseC_artist_prog8_2019: "Una etiqueta más. Este es un triángulo para Pi.
        \ \n(Cada lado tiene 150 pixeles)"
      courseC_artist_prog_challenge1: Dibuja habitaciones para cada uno de los animales.
        Hay muchas formas diferentes de resolver este desafío, ¡así que diviértete!
        Los lados de cada cuadrado tienen 100 pixeles de largo.
      courseC_artist_prog_challenge1_2018: Dibuja habitaciones para cada uno de los
        animales. Hay muchas formas diferentes de resolver este desafío, ¡así que
        diviértete! Los lados de cada cuadrado tienen 100 pixeles de largo.
      courseC_artist_prog_challenge1_2019: Dibuja habitaciones para cada uno de los
        animales. Hay muchas formas diferentes de resolver este desafío, ¡así que
        diviértete! Los lados de cada cuadrado tienen 100 pixeles de largo.
      courseC_artist_prog_challenge2a: |-
        _"¡Ayúdame a pintar las líneas amarillas de este camino!"_

        ¡Los tres segmentos de líneas tienen longitudes de 150, 100 y 200 pixeles!
      courseC_artist_prog_challenge2a_2018: |-
        _"¡Ayúdame a pintar las líneas amarillas de este camino!"_

        ¡Los tres segmentos de líneas tienen longitudes de 150, 100 y 200 pixeles!
      courseC_artist_prog_challenge2a_2019: |-
        _"¡Ayúdame a pintar las líneas amarillas de este camino!"_

        ¡Los tres segmentos de líneas tienen longitudes de 150, 100 y 200 pixeles!
      courseC_collector_loops_challenge2: |-
        _"¡Vamos a cazar el tesoro!"_

        Ayuda a la recolectora a obtener al menos **5** partes del tesoro.
      courseC_collector_loops_challenge2_2018: |-
        _"¡Vamos a cazar el tesoro!"_

        Ayuda a la recolectora a obtener al menos **5** partes del tesoro.
      courseC_collector_loops_challenge2_2019: |-
        _"¡Vamos a cazar el tesoro!"_

        Ayuda a la recolectora a obtener al menos **5** partes del tesoro.
      courseC_collector_prog1: |-
        **Juego libre:** ¡Esta es Laurel la Aventurera! Muévela y recoge tanto tesoro como puedas. ¡Usa el bloque `recolectar` para recoger el tesoro!

        Arrastra los bloques al espacio de trabajo e intenta descubrir cómo obtener el tesoro. Consigue al menos un elemento para pasar este nivel.
      courseC_collector_prog1_2018: |-
        **Juego libre:** ¡Esta es Laurel la Aventurera! Muévela y recoge tanto tesoro como puedas. ¡Usa el bloque `recolectar` para recoger el tesoro!

        Arrastra los bloques al espacio de trabajo e intenta descubrir cómo obtener el tesoro. Consigue al menos un elemento para pasar este nivel.
      courseC_collector_prog1_2019: |-
        **Juego libre:** ¡Esta es Laurel la Aventurera! Muévela y recoge tanto tesoro como puedas. ¡Usa el bloque `recolectar` para recoger el tesoro!

        Arrastra los bloques al espacio de trabajo e intenta descubrir cómo obtener el tesoro. Consigue al menos un elemento para pasar este nivel.
      courseC_collector_prog2: Mueve a Laurel hacia el tesoro, y luego usa <xml><block
        type="collector_collect"/></xml> para recogerlo.
      courseC_collector_prog2_2018: Mueve a Laurel hacia el tesoro, y luego usa <xml><block
        type="collector_collect"/></xml> para recogerlo.
      courseC_collector_prog2_2019: Mueve a Laurel hacia el tesoro, y luego usa <xml><block
        type="collector_collect"/></xml> para recogerlo.
      courseC_collector_prog3: "_\"¡La secuencia importa!\"_ \n\nLos bloques que necesitas
        ya están en el espacio de trabajo, pero no están conectados. \nOrdena los
        bloques para recoger el tesoro y resolver el desafío."
      courseC_collector_prog3_2018: "_\"¡La secuencia importa!\"_ \n\nLos bloques
        que necesitas ya están en el espacio de trabajo, pero no están conectados.
        \nOrdena los bloques para recoger el tesoro y resolver el desafío."
      courseC_collector_prog3_2019: "_\"¡La secuencia importa!\"_ \n\nLos bloques
        que necesitas ya están en el espacio de trabajo, pero no están conectados.
        \nOrdena los bloques para recoger el tesoro y resolver el desafío."
      courseC_collector_prog4: "_\"¡La secuencia importa!\"_ \n\nLos bloques que necesitas
        ya están en el espacio de trabajo, pero no están conectados.  \n\nOrdena los
        bloques para recoger todo el tesoro y resolver el desafío."
      courseC_collector_prog4_2018: "_\"¡La secuencia importa!\"_ \n\nLos bloques
        que necesitas ya están en el espacio de trabajo, pero no están conectados.
        \ \n\nOrdena los bloques para recoger todo el tesoro y resolver el desafío."
      courseC_collector_prog4_2019: "_\"¡La secuencia importa!\"_ \n\nLos bloques
        que necesitas ya están en el espacio de trabajo, pero no están conectados.
        \ \n\nOrdena los bloques para recoger todo el tesoro y resolver el desafío."
      courseC_collector_prog5: |-
        _"¡Ayúdame a recoger cada parte del tesoro!"_

        Estos bloques están desordenados. ¿Puedes ordenarlos?
      courseC_collector_prog5_2018: |-
        _"¡Ayúdame a recoger cada parte del tesoro!"_

        Estos bloques están desordenados. ¿Puedes ordenarlos?
      courseC_collector_prog5_2019: |-
        _"¡Ayúdame a recoger cada parte del tesoro!"_

        Estos bloques están desordenados. ¿Puedes ordenarlos?
      courseC_collector_prog6: |-
        _"¡Ayúdame a recoger todo el tesoro!"_

        Estos bloques están desordenados. Vuelve a ordenarlos para recoger todo el tesoro.
      courseC_collector_prog6_2018: |-
        _"¡Ayúdame a recoger todo el tesoro!"_

        Estos bloques están desordenados. Vuelve a ordenarlos para recoger todo el tesoro.
      courseC_collector_prog6_2019: |-
        _"¡Ayúdame a recoger todo el tesoro!"_

        Estos bloques están desordenados. Vuelve a ordenarlos para recoger todo el tesoro.
      courseC_collector_prog7: "**Desafío:** _\"¿Qué está sucediendo aquí?\"_\n\nIncluso
        si los ponemos en el orden correcto, seguirán faltando algunos. \nUsa los
        bloques de la caja de herramientas para recoger todo el tesoro."
      courseC_collector_prog7_2018: "**Desafío:** _\"¿Qué está sucediendo aquí?\"_\n\nIncluso
        si los ponemos en el orden correcto, seguirán faltando algunos. \nUsa los
        bloques de la caja de herramientas para recoger todo el tesoro."
      courseC_collector_prog7_2019: "**Desafío:** _\"¿Qué está sucediendo aquí?\"_\n\nIncluso
        si los ponemos en el orden correcto, seguirán faltando algunos. \nUsa los
        bloques de la caja de herramientas para recoger todo el tesoro."
      courseC_collector_prog8: _"¡Sigue trabajando así de bien! Ayúdame a recoger
        todo el tesoro"._
      courseC_collector_prog8_2018: _"¡Sigue trabajando así de bien! Ayúdame a recoger
        todo el tesoro"._
      courseC_collector_prog8_2019: _"¡Sigue trabajando así de bien! Ayúdame a recoger
        todo el tesoro"._
      courseC_collector_prog9: _"¡Recojamos todo el tesoro!"_
      courseC_collector_prog9_2018: _"¡Recojamos todo el tesoro!"_
      courseC_collector_prog9_2019: _"¡Recojamos todo el tesoro!"_
      courseC_collector_prog_challenge2: Hay 20 piezas del tesoro en esta cueva. ¡Recoge
        al menos **10** para terminar el desafío!
      courseC_collector_prog_challenge2_2018: Hay 20 piezas del tesoro en esta cueva.
        ¡Recoge al menos **10** para terminar el desafío!
      courseC_collector_prog_challenge2_2019: Hay 20 piezas del tesoro en esta cueva.
        ¡Recoge al menos **10** para terminar el desafío!
      courseC_data wizard: Presiona Ejecutar. El mago hará que aparezcan animales.
        Cuéntalos. ¿Qué observas?
      courseC_flappy_events1: "Agrega el bloque `cantidad normal de aleteo` al evento
        `cuando hagas clic`, y luego presiona \"Ejecutar\".  \n\n* * *\n\nHaz clic
        o toca en el espacio de juego para mover a Flappy hacia el objetivo."
      courseC_flappy_events10: "¡Crea tu propio juego para Flappy! \n\nPuedes cambiar
        las imágenes y las reglas... ¡e incluso la gravedad! \nCuando estés listo,
        haz clic en \"Finalizar\" para compartirlo con tus amigos en sus teléfonos."
      courseC_flappy_events10_2018: "¡Crea tu propio juego para Flappy! \n\nPuedes
        cambiar las imágenes y las reglas... ¡e incluso la gravedad! \nCuando estés
        listo, haz clic en \"Finalizar\" para compartirlo con tus amigos en sus teléfonos."
      courseC_flappy_events10_2019: "¡Crea tu propio juego para Flappy! \n\nPuedes
        cambiar las imágenes y las reglas... ¡e incluso la gravedad! \nCuando estés
        listo, haz clic en \"Finalizar\" para compartirlo con tus amigos en sus teléfonos."
      courseC_flappy_events1_2018: "Agrega el bloque `cantidad normal de aleteo` al
        evento `cuando hagas clic`, y luego presiona \"Ejecutar\".  \n\n* * *\n\nHaz
        clic o toca en el espacio de juego para mover a Flappy hacia el objetivo."
      courseC_flappy_events1_2019: "Agrega el bloque `cantidad normal de aleteo` al
        evento `cuando hagas clic`, y luego presiona \"Ejecutar\".  \n\n* * *\n\nHaz
        clic o toca en el espacio de juego para mover a Flappy hacia el objetivo."
      courseC_flappy_events2: "El evento `cuando se ejecute` te permite ejecutar el
        código tan pronto como comience tu juego.  \n\nIntenta agregar un bloque que
        establezca el nivel de velocidad cuando se presiona el botón \"Ejecutar\".
        \n\n* * *\n\nJuega y aletea hacia el objetivo para continuar."
      courseC_flappy_events2_2018: "El evento `cuando se ejecute` te permite ejecutar
        el código tan pronto como comience tu juego.  \n\nIntenta agregar un bloque
        que establezca el nivel de velocidad cuando se presiona el botón \"Ejecutar\".
        \n\n* * *\n\nJuega y aletea hacia el objetivo para continuar."
      courseC_flappy_events2_2019: "El evento `cuando se ejecute` te permite ejecutar
        el código tan pronto como comience tu juego.  \n\nIntenta agregar un bloque
        que establezca el nivel de velocidad cuando se presiona el botón \"Ejecutar\".
        \n\n* * *\n\nJuega y aletea hacia el objetivo para continuar."
      courseC_flappy_events3: "Ahora hemos agregado el suelo. \n\nAgrega el bloque
        `finalizar el juego` al evento `cuando toque el suelo`. \n\n* * *\n\nJuega
        y estrella el pájaro en el suelo para continuar."
      courseC_flappy_events3_2018: "Ahora hemos agregado el suelo. \n\nAgrega el bloque
        `finalizar el juego` al evento `cuando toque el suelo`. \n\n* * *\n\nJuega
        y estrella el pájaro en el suelo para continuar."
      courseC_flappy_events3_2019: "Ahora hemos agregado el suelo. \n\nAgrega el bloque
        `finalizar el juego` al evento `cuando toque el suelo`. \n\n* * *\n\nJuega
        y estrella el pájaro en el suelo para continuar."
      courseC_flappy_events4: "Flappy volará a través de los obstáculos a menos que
        escribas el código para hacerlo chocar. \n\nAgrega un bloque al evento `cuando
        golpee un obstáculo` para que el juego termine si Flappy se estrella contra
        el primer grupo de tuberías."
      courseC_flappy_events4_2018: "Flappy volará a través de los obstáculos a menos
        que escribas el código para hacerlo chocar. \n\nAgrega un bloque al evento
        `cuando golpee un obstáculo` para que el juego termine si Flappy se estrella
        contra el primer grupo de tuberías."
      courseC_flappy_events4_2019: "Flappy volará a través de los obstáculos a menos
        que escribas el código para hacerlo chocar. \n\nAgrega un bloque al evento
        `cuando golpee un obstáculo` para que el juego termine si Flappy se estrella
        contra el primer grupo de tuberías."
      courseC_flappy_events5: "Hemos agregado un marcador para contar los puntos cuando
        Flappy pasa los obstáculos.  \n\nAgrega un bloque al evento `cuando pase un
        obstáculo` que anote un punto, y luego presiona \"Ejecutar\" para que Floppy
        vuele a través del primer grupo de tuberías."
      courseC_flappy_events5_2018: "Hemos agregado un marcador para contar los puntos
        cuando Flappy pasa los obstáculos.  \n\nAgrega un bloque al evento `cuando
        pase un obstáculo` que anote un punto, y luego presiona \"Ejecutar\" para
        que Floppy vuele a través del primer grupo de tuberías."
      courseC_flappy_events5_2019: "Hemos agregado un marcador para contar los puntos
        cuando Flappy pasa los obstáculos.  \n\nAgrega un bloque al evento `cuando
        pase un obstáculo` que anote un punto, y luego presiona \"Ejecutar\" para
        que Floppy vuele a través del primer grupo de tuberías."
      courseC_flappy_events6: "Haz clic en la flecha hacia abajo dentro del bloque
        `cantidad normal de aleteo` para escoger un poder de aleteo diferente. \n\nVe
        si aún puedes anotar un punto después de hacer aletear a Flappy, ya sea más
        o menos tiempo, cada vez que haces clic."
      courseC_flappy_events6_2018: "Haz clic en la flecha hacia abajo dentro del bloque
        `cantidad normal de aleteo` para escoger un poder de aleteo diferente. \n\nVe
        si aún puedes anotar un punto después de hacer aletear a Flappy, ya sea más
        o menos tiempo, cada vez que haces clic."
      courseC_flappy_events6_2019: "Haz clic en la flecha hacia abajo dentro del bloque
        `cantidad normal de aleteo` para escoger un poder de aleteo diferente. \n\nVe
        si aún puedes anotar un punto después de hacer aletear a Flappy, ya sea más
        o menos tiempo, cada vez que haces clic."
      courseC_flappy_events7: A continuación, intenta agregar un bloque al evento
        `cuando se ejecute` para cambiar la escena.
      courseC_flappy_events7_2018: A continuación, intenta agregar un bloque al evento
        `cuando se ejecute` para cambiar la escena.
      courseC_flappy_events7_2019: A continuación, intenta agregar un bloque al evento
        `cuando se ejecute` para cambiar la escena.
      courseC_flappy_events8: "Puedes configurar el fondo en cualquier evento, no
        solo cuando comienza el juego. \n\nIntenta establecer una escena **aleatoria**
        cuando sucedan otros eventos... por ejemplo, cuando se pase un obstáculo."
      courseC_flappy_events8_2018: "Puedes configurar el fondo en cualquier evento,
        no solo cuando comienza el juego. \n\nIntenta establecer una escena **aleatoria**
        cuando sucedan otros eventos... por ejemplo, cuando se pase un obstáculo."
      courseC_flappy_events8_2019: "Puedes configurar el fondo en cualquier evento,
        no solo cuando comienza el juego. \n\nIntenta establecer una escena **aleatoria**
        cuando sucedan otros eventos... por ejemplo, cuando se pase un obstáculo."
      courseC_flappy_events9: Para hacerlo más difícil, en lugar de finalizar el juego
        cuando Flappy golpea un obstáculo, trata de volver el puntaje a 0.
      courseC_flappy_events9_2018: Para hacerlo más difícil, en lugar de finalizar
        el juego cuando Flappy golpea un obstáculo, trata de volver el puntaje a 0.
      courseC_flappy_events9_2019: Para hacerlo más difícil, en lugar de finalizar
        el juego cuando Flappy golpea un obstáculo, trata de volver el puntaje a 0.
      courseC_harvester_loops1: "Los bucles se pueden usar para repetir más que movimientos.
        \n\nUsa los bucles para recoger las cuatro calabazas."
      courseC_harvester_loops10: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops10_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops10_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops11: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops11_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops11_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops1_2018: "Los bucles se pueden usar para repetir más que
        movimientos. \n\nUsa los bucles para recoger las cuatro calabazas."
      courseC_harvester_loops1_2019: "Los bucles se pueden usar para repetir más que
        movimientos. \n\nUsa los bucles para recoger las cuatro calabazas."
      courseC_harvester_loops2: "¿Puedes combinar dos bucles diferentes para moverte
        hacia las calabazas, y luego recogerlas todas?"
      courseC_harvester_loops2_2018: "¿Puedes combinar dos bucles diferentes para
        moverte hacia las calabazas, y luego recogerlas todas?"
      courseC_harvester_loops2_2019: "¿Puedes combinar dos bucles diferentes para
        moverte hacia las calabazas, y luego recogerlas todas?"
      courseC_harvester_loops3: Recoge todas las calabazas.
      courseC_harvester_loops3_2018: Recoge todas las calabazas.
      courseC_harvester_loops3_2019: Recoge todas las calabazas.
      courseC_harvester_loops4: |-
        ¡Ahora también hay maíz creciendo!

        Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops4_2018: |-
        ¡Ahora también hay maíz creciendo!

        Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops4_2019: |-
        ¡Ahora también hay maíz creciendo!

        Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops5: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops5_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops5_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops6: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops6_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops6_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops7: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops7_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops7_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops8: |-
        **Desafío:** Recoge todo el maíz y todas las calabazas.

        Puedes completar este desafío de la forma que quieras, ¡pero te tomará mucho trabajo o te dará mucho que pensar!
      courseC_harvester_loops8_2018: |-
        **Desafío:** Recoge todo el maíz y todas las calabazas.

        Puedes completar este desafío de la forma que quieras, ¡pero te tomará mucho trabajo o te dará mucho que pensar!
      courseC_harvester_loops8_2019: |-
        **Desafío:** Recoge todo el maíz y todas las calabazas.

        Puedes completar este desafío de la forma que quieras, ¡pero te tomará mucho trabajo o te dará mucho que pensar!
      courseC_harvester_loops9: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops9_2018: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops9_2019: Recoge todo el maíz y todas las calabazas.
      courseC_harvester_loops_challenge2: Recoge toda la lechuga. ¡Evita los árboles
        y los campos!
      courseC_harvester_loops_challenge2_2018: Recoge toda la lechuga. ¡Evita los
        árboles y los campos!
      courseC_harvester_loops_challenge2_2019: Recoge toda la lechuga. ¡Evita los
        árboles y los campos!
      courseC_maze_debugging1: |-
        _"¡Oh, no! Veo un problema."_

        Corrige los errores para recoger todo el tesoro.
      courseC_maze_debugging1_2018: "¡Este código no está del todo bien! \n\nCorrige
        el código para ayudar a Scrat a llegar hasta la bellota."
      courseC_maze_debugging1_2019: "¡Este código no está del todo bien! \n\nCorrige
        el código para ayudar a Scrat a llegar hasta la bellota."
      courseC_maze_debugging2: |-
        _"¡Puedes hacerlo!"_

        Corrige los errores para recoger todo el tesoro.
      courseC_maze_debugging3: |-
        _"Sé perseverante y podrás descifrar esto."_

        Corrige los errores para recoger todo el tesoro.
      courseC_maze_debugging3_2018: "Algo no está del todo bien. \n\n¡Quita los bloques
        para que Scrat llegue hasta la bellota!"
      courseC_maze_debugging3_2019: "Algo no está del todo bien. \n\n¡Quita los bloques
        para que Scrat llegue hasta la bellota!"
      courseC_maze_debugging4: |-
        _"No te frustres. ¡Puedes hacerlo!"_

        Corrige los errores para recoger todo el tesoro.
      courseC_maze_debugging5: |-
        _"¡Este desafío me está volviendo loco!"_

        Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver este desafío.
      courseC_maze_debugging6: "**Desafío:** Todos los bloques que necesitas están
        aquí... Usa tus habilidades de depuración para arreglar los errores y recoger
        todo el tesoro."
      courseC_maze_debugging7: |-
        _"¡Cuánto tesoro!"_

        Ayuda a Laurel a corregir el código para recoger todo el tesoro.
      courseC_maze_debugging8_predict1: |-
        _"¡Es la isla del tesoro!"_

        Ayuda a Laurel a corregir el código para recoger todo el tesoro.
      courseC_maze_debugging9: |-
        _"¡Es la isla del tesoro!"_

        Ayuda a Laurel a corregir el código para recoger todo el tesoro.
      courseC_maze_debugging_challenge2: Si Scrat gira muy seguido, ¡podría marearse!
        Ayúdalo a llegar hasta la bellota con solo cuatro comandos "girar".
      courseC_maze_debugging_challenge2_2018: Si Scrat gira muy seguido, ¡podría marearse!
        Ayúdalo a llegar hasta la bellota con solo cuatro comandos "girar".
      courseC_maze_debugging_challenge2_2019: Si Scrat gira muy seguido, ¡podría marearse!
        Ayúdalo a llegar hasta la bellota con solo cuatro comandos "girar".
      courseC_maze_programming1: Para este desafío, arrastra todos los bloques para
        juntarlos y haz clic en "Ejecutar" para verlo funcionar.
      courseC_maze_programming1_2018: Para este desafío, arrastra todos los bloques
        para juntarlos y haz clic en "Ejecutar" para verlo funcionar.
      courseC_maze_programming1_2019: Para este desafío, arrastra todos los bloques
        para juntarlos y haz clic en "Ejecutar" para verlo funcionar.
      courseC_maze_programming2: Arrastra un bloque <xml><block type="maze_moveForward"/></xml>
        adicional desde la caja de herramientas para finalizar tu código.
      courseC_maze_programming2_2018: Arrastra un bloque <xml><block type="maze_moveForward"/></xml>
        adicional desde la caja de herramientas para finalizar tu código.
      courseC_maze_programming2_2019: Arrastra un bloque <xml><block type="maze_moveForward"/></xml>
        adicional desde la caja de herramientas para finalizar tu código.
      courseC_maze_programming3: "_\"Este cerdo me eriza las plumas.\"_\n\nHay un
        bloque sobrante que hará que el pájaro se estrelle. \nDesengánchalo de los
        bloques grises y arrástralo de vuelta a la caja de herramientas para eliminarlo."
      courseC_maze_programming3_2018: "_\"Este cerdo me eriza las plumas.\"_\n\nHay
        un bloque sobrante que hará que el pájaro se estrelle. \nDesengánchalo de
        los bloques grises y arrástralo de vuelta a la caja de herramientas para eliminarlo."
      courseC_maze_programming3_2019: "_\"Este cerdo me eriza las plumas.\"_\n\nHay
        un bloque sobrante que hará que el pájaro se estrelle. \nDesengánchalo de
        los bloques grises y arrástralo de vuelta a la caja de herramientas para eliminarlo."
      courseC_maze_programming4: "_\"Traza el camino y llévame hasta el cerdo tonto.\"_
        \n\n¡Evita el TNT o volarán plumas!"
      courseC_maze_programming4_2018: "_\"Traza el camino y llévame hasta el cerdo
        tonto.\"_ \n\n¡Evita el TNT o volarán plumas!"
      courseC_maze_programming4_2019: "_\"Traza el camino y llévame hasta el cerdo
        tonto.\"_ \n\n¡Evita el TNT o volarán plumas!"
      courseC_maze_programming5: |-
        _"¡Sigue este camino para llevarme hasta el cerdo!"_

        Evita el TNT.
      courseC_maze_programming5_2018: |-
        _"¡Sigue este camino para llevarme hasta el cerdo!"_

        Evita el TNT.
      courseC_maze_programming5_2019: |-
        _"¡Sigue este camino para llevarme hasta el cerdo!"_

        Evita el TNT.
      courseC_maze_programming6: |-
        _"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"_

        Haz que el pájaro llegue hasta el cerdo y evita el TNT.
      courseC_maze_programming6_2018: |-
        _"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"_

        Haz que el pájaro llegue hasta el cerdo y evita el TNT.
      courseC_maze_programming6_2019: |-
        _"Mantén la calma y ayúdame a encontrar al cerdo malo. De lo contrario, ¡me puedo enojar!"_

        Haz que el pájaro llegue hasta el cerdo y evita el TNT.
      courseC_maze_programming7: |-
        _"¡Es hora de enojarse!"_

        **Desafío:** Este código tiene muchos errores. Tendrás que quitar algunos bloques y agregar otros.
      courseC_maze_programming7_2018: |-
        _"¡Es hora de enojarse!"_

        **Desafío:** Este código tiene muchos errores. Tendrás que quitar algunos bloques y agregar otros.
      courseC_maze_programming7_2019: |-
        _"¡Es hora de enojarse!"_

        **Desafío:** Este código tiene muchos errores. Tendrás que quitar algunos bloques y agregar otros.
      courseC_maze_programming8: _"Mantén la calma y ayúdame a encontrar al cerdo
        malo"._
      courseC_maze_programming8_2018: _"Mantén la calma y ayúdame a encontrar al cerdo
        malo"._
      courseC_maze_programming8_2019: _"Mantén la calma y ayúdame a encontrar al cerdo
        malo"._
      courseC_maze_programming8_predict1: _"Mantén la calma y ayúdame a encontrar
        al cerdo malo"._
      courseC_maze_programming8_predict1_2018: _"Mantén la calma y ayúdame a encontrar
        al cerdo malo"._
      courseC_maze_programming8_predict1_2019: _"Mantén la calma y ayúdame a encontrar
        al cerdo malo"._
      courseC_maze_programming9: _"¡Ahora ayúdame a acercarme sigilosamente al cerdo
        de la forma que quieras!"_
      courseC_maze_programming9_2018: _"¡Ahora ayúdame a acercarme sigilosamente al
        cerdo de la forma que quieras!"_
      courseC_maze_programming9_2019: _"¡Ahora ayúdame a acercarme sigilosamente al
        cerdo de la forma que quieras!"_
      courseC_maze_programming_challenge1: "¡El pájaro necesita tu ayuda! El cerdo
        está escondido y la meta es encontrarlo. "
      courseC_maze_programming_challenge1_2018: "¡El pájaro necesita tu ayuda! El
        cerdo está escondido y la meta es encontrarlo. "
      courseC_maze_programming_challenge1_2019: "¡El pájaro necesita tu ayuda! El
        cerdo está escondido y la meta es encontrarlo. "
      courseC_maze_programming_challenge2: A veces hay más de una forma de resolver
        el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      courseC_maze_programming_challenge2_2018: A veces hay más de una forma de resolver
        el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      courseC_maze_programming_challenge2_2019: A veces hay más de una forma de resolver
        el mismo problema. ¡A veces, es más rápido ir hacia atrás que ir hacia adelante!
      courseC_starWars_loops1: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _\"Ve a recoger la chatarra, BB-8!\"_ \n\nUsa cinco de los mismos bloques
        para recoger chatarra. La chatarra brilla así: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops10: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)"¡Vamos, BB-8!"\_

        ¡Lo estás haciendo muy bien! ¡Sigue así!
      courseC_starWars_loops10_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)"¡Vamos, BB-8!"\_

        ¡Lo estás haciendo muy bien! ¡Sigue así!
      courseC_starWars_loops10_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)"¡Vamos, BB-8!"\_

        ¡Lo estás haciendo muy bien! ¡Sigue así!
      courseC_starWars_loops11: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Sigue, BB-8!"_

        ¡Casi terminas! Este vez, ¡escoge el camino que tú quieras!
      courseC_starWars_loops11_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Sigue, BB-8!"_

        ¡Casi terminas! Este vez, ¡escoge el camino que tú quieras!
      courseC_starWars_loops11_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Sigue, BB-8!"_

        ¡Casi terminas! Este vez, ¡escoge el camino que tú quieras!
      courseC_starWars_loops1_2018: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _\"Ve a recoger la chatarra, BB-8!\"_ \n\nUsa cinco de los mismos bloques
        para recoger chatarra. La chatarra brilla así: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops1_2019: "![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _\"Ve a recoger la chatarra, BB-8!\"_ \n\nUsa cinco de los mismos bloques
        para recoger chatarra. La chatarra brilla así: ![](https://images.code.org/5665566ab779d9b63d03cf8ba127a98f-image-1500570606896.gif)"
      courseC_starWars_loops2: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Vamos, BB-8!"_

        Para llegar a la chatarra, intenta crear un bucle que use un solo bloque dentro de un bloque 'repetir'.
      courseC_starWars_loops2_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Vamos, BB-8!"_

        Para llegar a la chatarra, intenta crear un bucle que use un solo bloque dentro de un bloque 'repetir'.
      courseC_starWars_loops2_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Vamos, BB-8!"_

        Para llegar a la chatarra, intenta crear un bucle que use un solo bloque dentro de un bloque 'repetir'.
      courseC_starWars_loops4: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Sigue así, BB-8."_

        En este desafío, ¡dos bucles 'repetir' te ayudarán a llevar a BB-8 hasta la chatarra con el menor número de bloques!
      courseC_starWars_loops4_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Sigue así, BB-8."_

        En este desafío, ¡dos bucles 'repetir' te ayudarán a llevar a BB-8 hasta la chatarra con el menor número de bloques!
      courseC_starWars_loops4_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Sigue así, BB-8."_

        En este desafío, ¡dos bucles 'repetir' te ayudarán a llevar a BB-8 hasta la chatarra con el menor número de bloques!
      courseC_starWars_loops5: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Vamos BB-8!"_'
      courseC_starWars_loops5_2018: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Vamos BB-8!"_'
      courseC_starWars_loops5_2019: '![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png)
        _"¡Vamos BB-8!"_'
      courseC_starWars_loops6: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¿Puedes recogerlo todo?"_

        ¡Los bucles funcionan incluso con más de un bloque adentro! ¿Puedes crear bucles para esta secuencia?
      courseC_starWars_loops6_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¿Puedes recogerlo todo?"_

        ¡Los bucles funcionan incluso con más de un bloque adentro! ¿Puedes crear bucles para esta secuencia?
      courseC_starWars_loops6_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¿Puedes recogerlo todo?"_

        ¡Los bucles funcionan incluso con más de un bloque adentro! ¿Puedes crear bucles para esta secuencia?
      courseC_starWars_loops7: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Puedes hacerlo!"_

        ¿Puedes intentar recoger toda la chatarra con un solo bucle? Intenta programarlo todo y luego encuentra el código de repetición para ponerlo en un bucle.
      courseC_starWars_loops7_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Puedes hacerlo!"_

        ¿Puedes intentar recoger toda la chatarra con un solo bucle? Intenta programarlo todo y luego encuentra el código de repetición para ponerlo en un bucle.
      courseC_starWars_loops7_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Puedes hacerlo!"_

        ¿Puedes intentar recoger toda la chatarra con un solo bucle? Intenta programarlo todo y luego encuentra el código de repetición para ponerlo en un bucle.
      courseC_starWars_loops8: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Sigue así, BB-8."_

        **Desafío:** Combina las ideas de los últimos retos para completar este nivel.
      courseC_starWars_loops8_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Sigue así, BB-8."_

        **Desafío:** Combina las ideas de los últimos retos para completar este nivel.
      courseC_starWars_loops8_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"Sigue así, BB-8."_

        **Desafío:** Combina las ideas de los últimos retos para completar este nivel.
      courseC_starWars_loops9: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Sigue adelante!"_

        ¡Usa lo que has aprendido para recoger la chatarra!
      courseC_starWars_loops9_2018: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Sigue adelante!"_

        ¡Usa lo que has aprendido para recoger la chatarra!
      courseC_starWars_loops9_2019: |-
        ![](https://images.code.org/51347264025d71343bb2b5bd6b49813b-image-1500569514703.png) _"¡Sigue adelante!"_

        ¡Usa lo que has aprendido para recoger la chatarra!
      courseC_video_angles2: "¡Sabías que puedes poner bucles dentro de otros bucles
        para hacerlos más poderosos? Eso se llama hacer un \"bucle anidado\".\\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\n¡Arrastra
        el código para el último triángulo a un nuevo bucle para hacerlo girar y hacer
        copos de nieve!\\\r\n\\\r\n_(Necesitarás hacerlo girar 6 veces a 60 grados
        para obtener este patrón.)_"
      courseD_artist_1_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“Hola, soy Elsa de Arendelle, ayúdame a dibujar una forma.”_\n\nDibuja un
        hexágono con lados de 50 pixeles de largo.  \n\n* * *\n\nPara dibujar un hexágono,
        necesitaras: \n\n-   Moverte hacia adelante **50** pixeles\n-   Girar a la
        derecha **60** grados\n-   Repetir un total de **6** veces"
      courseD_artist_1_2018_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“Hola, soy Elsa de Arendelle, ayúdame a dibujar una forma.”_\n\nDibuja un
        hexágono con lados de 50 pixeles de largo.  \n\n* * *\n\nPara dibujar un hexágono,
        necesitaras: \n\n-   Moverte hacia adelante **50** pixeles\n-   Girar a la
        derecha **60** grados\n-   Repetir un total de **6** veces"
      courseD_artist_2_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“¡Buen trabajo!”_\n\nLuego de dibujar el hexágono, gira a la derecha **60**
        grados, y luego dibuja una línea que sea de **150** pixeles de largo.   \n\nPara
        finalizar, ubica a Elsa en el centro del área de juego con el bloque <xml><block
        type=\"jump_to\"><title name=\"VALUE\">centro medio</title></block></xml>."
      courseD_artist_2_2018_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“¡Buen trabajo!”_\n\nLuego de dibujar el hexágono, gira a la derecha **60**
        grados, y luego dibuja una línea que sea de **150** pixeles de largo.   \n\nPara
        finalizar, ubica a Elsa en el centro del área de juego con el bloque <xml><block
        type=\"jump_to\" block-text=\"jump to the middle center position\"><title
        name=\"VALUE\">centro medio</title></block></xml>."
      courseD_artist_3_2018: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Hagamos un copo de nieve.”_

        Para convertir este código en un copo de nieve, anida todos los códigos dentro de otro bucle `repetir` y ejecútalo un total de **6** veces. Solo deberías tener que agregar un bloque.
      courseD_artist_3_2018_2019: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _“Hagamos un copo de nieve.”_

        Para convertir este código en un copo de nieve, anida todos los códigos dentro de otro bucle `repetir` y ejecútalo un total de **6** veces. Solo deberías tener que agregar un bloque.
      courseD_artist_4_2018: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"¡Hagamos que nuestros copos de nieve sean especiales!"_

        **Inspiración:** ¿Dónde necesitas agregar un código si quieres dibujar un cuadrado pequeño en la punta de cada línea larga?

        * * *

        Puedes intentar lo que quieras en este desafío. Te damos una idea:

        Intenta hacer un cuadrado pequeño al final de cada línea

        -   Cada lado debería tener 15 pixeles de largo
        -   Deberías girar 90 grados
        -   Repite 4 veces esas acciones
      courseD_artist_4_2018_2019: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"¡Hagamos que nuestros copos de nieve sean especiales!"_

        **Inspiración:** ¿Dónde necesitas agregar un código si quieres dibujar un cuadrado pequeño en la punta de cada línea larga?

        * * *

        Puedes intentar lo que quieras en este desafío. Te damos una idea:

        Intenta hacer un cuadrado pequeño al final de cada línea

        -   Cada lado debería tener 15 pixeles de largo
        -   Deberías girar 90 grados
        -   Repite 4 veces esas acciones
      courseD_artist_5_2018: |-
        ![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png) _"¡Intenta cambiar las formas o las longitudes de las líneas para personalizarlas!"_

        **Inspiración:** Puedes cambiar tu dibujo como quieras. Te damos una idea:

        -   ¡Intenta cambiar el tipo de forma en el medio del copo de nieve por el que está al final de cada línea!
      courseD_artist_5_2018_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"¡Intenta cambiar las formas o las longitudes de las líneas para personalizarlas!\"_\n\n<br/>
        \ \n\n**Inspiración:** Puedes cambiar tu dibujo como quieras. Te damos una
        idea:\n\n-   ¡Intenta cambiar el tipo de forma en el medio del copo de nieve
        por el que está al final de cada línea!"
      courseD_artist_6_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Intentemos algo nuevo. Esta vez, patina en zigzag.\"_\n\n<br/>  \n\n**Inspiración:**
        Intenta cambiar tu línea de 150 pixeles de largo por 6 líneas de **25** pixeles\n\n-
        \  Gira **45** grados en otras direcciones después de cada línea corta para
        que se vea como un zigzag\n-   ¿Dónde debes poner el nuevo bloque `repetir`
        para que esto suceda?\n-   ¿Cuántas veces tienes que repetir tu patrón de
        2 líneas cortas para tener 6 en total?"
      courseD_artist_6_2018_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Intentemos algo nuevo. Esta vez, patina en zigzag.\"_\n\n<br/>  \n\n**Inspiración:**
        Intenta cambiar tu línea de 150 pixeles de largo por 6 líneas de **25** pixeles\n\n-
        \  Gira **45** grados en otras direcciones después de cada línea corta para
        que se vea como un zigzag\n-   ¿Dónde debes poner el nuevo bloque `repetir`
        para que esto suceda?\n-   ¿Cuántas veces tienes que repetir tu patrón de
        2 líneas cortas para tener 6 en total?"
      courseD_artist_binary1: |-
        Te hemos proporcionado una grilla de "pixeles" que puedes recorrer y que te permite crear diseños con solo activar algunos cuadrados.

        Usa los bloques de abajo para que el artista dibuje "01010101" en código binario en la primera fila.
      courseD_artist_binary1_2018: |-
        Te hemos proporcionado una grilla de "pixeles" que puedes recorrer y que te permite crear diseños con solo activar algunos cuadrados.

        Usa los bloques de abajo para que el artista dibuje "01010101" en código binario en la primera fila.
      courseD_artist_binary1_2019: |-
        Te hemos proporcionado una grilla de "pixeles" que puedes recorrer y que te permite crear diseños con solo activar algunos cuadrados.

        Usa los bloques de abajo para que el artista dibuje "01010101" en código binario en la primera fila.
      courseD_artist_binary2: "Esta es una función que toma un hilo binario de 1 y
        0 e instruye al artista para que los siga de izquierda a derecha, y de arriba
        hacia abajo.  \n\n* * *\n\nEl artista llenará los cuadrados cuando vea un
        1 y los ignorará cuando vea un 0. \n\n* * *\n\n**Ejecuta este código para
        ver cómo el artista usa el sistema binario para dibujar este patrón.**"
      courseD_artist_binary2_2018: "Esta es una función que toma un hilo binario de
        1 y 0 e instruye al artista para que los siga de izquierda a derecha, y de
        arriba hacia abajo.  \n\n* * *\n\nEl artista llenará los cuadrados cuando
        vea un 1 y los ignorará cuando vea un 0. \n\n* * *\n\n**Ejecuta este código
        para ver cómo el artista usa el sistema binario para dibujar este patrón.**"
      courseD_artist_binary2_2019: "Esta es una función que toma un hilo binario de
        1 y 0 e instruye al artista para que los siga de izquierda a derecha, y de
        arriba hacia abajo.  \n\n* * *\n\nEl artista llenará los cuadrados cuando
        vea un 1 y los ignorará cuando vea un 0. \n\n* * *\n\n**Ejecuta este código
        para ver cómo el artista usa el sistema binario para dibujar este patrón.**"
      courseD_artist_binary_challenge1_2018: Sólo puedes usar cada valor binario (0
        ó 1) una vez cada un en este rompecabezas. Intenta usar bucles anidados para
        completar este dibujo.
      courseD_artist_binary_challenge1_2019: Sólo puedes usar cada valor binario (0
        ó 1) una vez cada un en este rompecabezas. Intenta usar bucles anidados para
        completar este dibujo.
      courseD_artist_binary_challenge2_2018: "Hay 256 bits representados en esta grilla
        cuadriculada - eso significa que es fácil que un cambio pequeño cauer grandes
        problemas. ¿Eres lo suficientemente perseverante para restaurar este logo
        a su forma normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      courseD_artist_binary_challenge2_2019: "Hay 256 bits representados en esta grilla
        cuadriculada - eso significa que es fácil que un cambio pequeño cauer grandes
        problemas. ¿Eres lo suficientemente perseverante para restaurar este logo
        a su forma normal?\\\r\n\\\r\n![](https://images.code.org/74e15f513982b47762dd33ebbc21e5e9-image-1498776314610.png)"
      courseD_artist_nestedLoops1a: "Ahora has bucles con el triángulo 6 veces. \n\nNecesitarás
        girar 60 grados después de cada triángulo antes de dibujar el siguiente. "
      courseD_artist_nestedLoops1a_2018: "Ahora has bucles con el triángulo 6 veces.
        \n\nNecesitarás girar 60 grados después de cada triángulo antes de dibujar
        el siguiente. "
      courseD_artist_nestedLoops1a_2019: "Ahora has bucles con el triángulo 6 veces.
        \n\nNecesitarás girar 60 grados después de cada triángulo antes de dibujar
        el siguiente. "
      courseD_artist_nestedLoops2: |-
        Esta vez, completa el desafío con la menor cantidad de bloques posible.

        Necesitarás girar 60 grados después de cada triángulo antes de dibujar el siguiente.
        ¿Ves que es mucho más fácil con **bucles anidados**?
      courseD_artist_nestedLoops2_2018: |-
        Esta vez, completa el desafío con la menor cantidad de bloques posible.

        Necesitarás girar 60 grados después de cada triángulo antes de dibujar el siguiente.
        ¿Ves que es mucho más fácil con **bucles anidados**?
      courseD_artist_nestedLoops2_2019: |-
        Esta vez, completa el desafío con la menor cantidad de bloques posible.

        Necesitarás girar 60 grados después de cada triángulo antes de dibujar el siguiente.
        ¿Ves que es mucho más fácil con **bucles anidados**?
      courseD_artist_nestedLoops4: "¡Excelente! Haz lo mismo con estos círculos. \n\n-
        \  Para crear cada círculo, debes mover 1 pixel antes de girar 1 grado, 360
        veces.\n-   Cada círculo comienza a 50 pixeles de distancia de donde termina
        el anterior"
      courseD_artist_nestedLoops4_2018: "¡Excelente! Haz lo mismo con estos círculos.
        \n\n-   Para crear cada círculo, debes mover 1 pixel antes de girar 1 grado,
        360 veces.\n-   Cada círculo comienza a 50 pixeles de distancia de donde termina
        el anterior"
      courseD_artist_nestedLoops4_2019: "¡Excelente! Haz lo mismo con estos círculos.
        \n\n-   Para crear cada círculo, debes mover 1 pixel antes de girar 1 grado,
        360 veces.\n-   Cada círculo comienza a 50 pixeles de distancia de donde termina
        el anterior"
      courseD_artist_nestedLoops5: |-
        ¿Qué sucede si también giras 90 grados entre los círculos?

        (Para obtener esta imagen, aún necesitas saltar 50 pixeles entre los círculos)
      courseD_artist_nestedLoops5_2018: |-
        ¿Qué sucede si también giras 90 grados entre los círculos?

        (Para obtener esta imagen, aún necesitas saltar 50 pixeles entre los círculos)
      courseD_artist_nestedLoops5_2019: |-
        ¿Qué sucede si también giras 90 grados entre los círculos?

        (Para obtener esta imagen, aún necesitas saltar 50 pixeles entre los círculos)
      courseD_artist_nestedLoops7: |-
        Usa lo que has aprendido para hacer este dibujo.

        -   Los cuadrados tienen **lados de 100 pixeles** y **ángulos de 90 grados**
        -   Necesitarás girar **60 grados entre cada cuadrado**. ¿Por qué? Porque hay 6 cuadrados, y 360 grados (una vuelta completa) divididos por 6 da 60 grados.
        -   Asegúrate de saltar **50 pixeles para llegar al siguiente cuadrado**
      courseD_artist_nestedLoops7_2018: |-
        Usa lo que has aprendido para hacer este dibujo.

        -   Los cuadrados tienen **lados de 100 pixeles** y **ángulos de 90 grados**
        -   Necesitarás girar **60 grados entre cada cuadrado**. ¿Por qué? Porque hay 6 cuadrados, y 360 grados (una vuelta completa) divididos por 6 da 60 grados.
        -   Asegúrate de saltar **50 pixeles para llegar al siguiente cuadrado**
      courseD_artist_nestedLoops7_2019: |-
        Usa lo que has aprendido para hacer este dibujo.

        -   Los cuadrados tienen **lados de 100 pixeles** y **ángulos de 90 grados**
        -   Necesitarás girar **60 grados entre cada cuadrado**. ¿Por qué? Porque hay 6 cuadrados, y 360 grados (una vuelta completa) divididos por 6 da 60 grados.
        -   Asegúrate de saltar **50 pixeles para llegar al siguiente cuadrado**
      courseD_artist_nestedLoops8: |-
        Usa lo que has aprendido en los últimos dos desafíos para crear esta imagen desde el principio.

        -   Cada hexágono tiene **lados de 50 pixeles** y **giros de 60 grados**
      courseD_artist_nestedLoops8_2018: |-
        Usa lo que has aprendido en los últimos dos desafíos para crear esta imagen desde el principio.

        -   Cada hexágono tiene **lados de 50 pixeles** y **giros de 60 grados**
      courseD_artist_nestedLoops8_2019: |-
        Usa lo que has aprendido en los últimos dos desafíos para crear esta imagen desde el principio.

        -   Cada hexágono tiene **lados de 50 pixeles** y **giros de 60 grados**
      courseD_artist_nestedLoops9: |-
        **Desafío:** ¿Puedes descubrir cómo hacer una imagen como esta?

        -   Ambas formas tienen **lados de 50 pixeles**
        -   Deberás saltar hacia adelante la longitud de un lado entre cada par de formas y girar 45 grados.
      courseD_artist_nestedLoops9_2018: |-
        **Desafío:** ¿Puedes descubrir cómo hacer una imagen como esta?

        -   Ambas formas tienen **lados de 50 pixeles**
        -   Deberás saltar hacia adelante la longitud de un lado entre cada par de formas y girar 45 grados.
      courseD_artist_nestedLoops9_2019: |-
        **Desafío:** ¿Puedes descubrir cómo hacer una imagen como esta?

        -   Ambas formas tienen **lados de 50 pixeles**
        -   Deberás saltar hacia adelante la longitud de un lado entre cada par de formas y girar 45 grados.
      courseD_artist_nestedLoops9_predict1: |-
        **Desafío:** ¿Puedes descubrir cómo hacer una imagen como esta?

        -   Ambas formas tienen lados de 50 pixeles
      courseD_artist_nestedLoops9_predict1_2018: |-
        **Desafío:** ¿Puedes descubrir cómo hacer una imagen como esta?

        -   Ambas formas tienen lados de 50 pixeles
      courseD_artist_nestedLoops9_predict1_2019: |-
        **Desafío:** ¿Puedes descubrir cómo hacer una imagen como esta?

        -   Ambas formas tienen lados de 50 pixeles
      courseD_artist_nestedLoopsFP: |-
        Ahora es tu turno. ¡Usa las habilidades que has aprendido y haz algo que te encante!
        ¿Necesitas ideas? Te damos algunas:

        ![expandable](https://images.code.org/7ac814e356b3548f57bfab8a9eb31dff-image-1497993113904.png)
        ![expandable](https://images.code.org/bd29d35c9a8abf9d27591b90b0f3ec0f-image-1497993121072.png)
        ![expandable](https://images.code.org/2970f34785e51ae98be7aff6fe0827ce-image-1497993126938.png)
      courseD_artist_nestedLoopsFP_2018: |-
        Ahora es tu turno. ¡Usa las habilidades que has aprendido y haz algo que te encante!
        ¿Necesitas ideas? Te damos algunas:

        ![expandable](https://images.code.org/7ac814e356b3548f57bfab8a9eb31dff-image-1497993113904.png)
        ![expandable](https://images.code.org/bd29d35c9a8abf9d27591b90b0f3ec0f-image-1497993121072.png)
        ![expandable](https://images.code.org/2970f34785e51ae98be7aff6fe0827ce-image-1497993126938.png)
      courseD_artist_nestedLoopsFP_2019: |-
        Ahora es tu turno. ¡Usa las habilidades que has aprendido y haz algo que te encante!
        ¿Necesitas ideas? Te damos algunas:

        ![expandable](https://images.code.org/7ac814e356b3548f57bfab8a9eb31dff-image-1497993113904.png)
        ![expandable](https://images.code.org/bd29d35c9a8abf9d27591b90b0f3ec0f-image-1497993121072.png)
        ![expandable](https://images.code.org/2970f34785e51ae98be7aff6fe0827ce-image-1497993126938.png)
      courseD_artist_nestedLoops_challenge1: "¿Puedes descifrar cómo hacer una imagen
        como esta?\\\r\n\\\r\n\n-   Ambas formas tienen **lados de 50 pixeles.**\\\r\n-
        \  Los _octágonos_ están hechos con giros de **45 grados**.\\\r\n-   Los _triángulos_
        están hechos con giros de **120 grados**."
      courseD_artist_nestedLoops_challenge1_2018: "¿Puedes descifrar cómo hacer una
        imagen como esta?\\\r\n\\\r\n\n-   Ambas formas tienen **lados de 50 pixeles.**\\\r\n-
        \  Los _octágonos_ están hechos con giros de **45 grados**.\\\r\n-   Los _triángulos_
        están hechos con giros de **120 grados**."
      courseD_artist_nestedLoops_challenge1_2019: "¿Puedes descifrar cómo hacer una
        imagen como esta?\\\r\n\\\r\n\n-   Ambas formas tienen **lados de 50 pixeles.**\\\r\n-
        \  Los _octágonos_ están hechos con giros de **45 grados**.\\\r\n-   Los _triángulos_
        están hechos con giros de **120 grados**."
      courseD_artist_nestedLoops_challenge2: |-
        ¡Este código está mal! ¿Puedes corregirlo para hacer el dibujo correcto en el espacio de trabajo?

        -   El primer bucle interior debería hacer un octágono.
        -   El segundo bucle interior debería hacer un hexágono.
        -   El tercer bucle interior debería hacer un cuadrado.
      courseD_artist_nestedLoops_challenge2_2018: |-
        ¡Este código está mal! ¿Puedes corregirlo para hacer el dibujo correcto en el espacio de trabajo?

        -   El primer bucle interior debería hacer un octágono.
        -   El segundo bucle interior debería hacer un hexágono.
        -   El tercer bucle interior debería hacer un cuadrado.
      courseD_artist_nestedLoops_challenge2_2019: |-
        ¡Este código está mal! ¿Puedes corregirlo para hacer el dibujo correcto en el espacio de trabajo?

        -   El primer bucle interior debería hacer un octágono.
        -   El segundo bucle interior debería hacer un hexágono.
        -   El tercer bucle interior debería hacer un cuadrado.
      courseD_artist_project1: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“Hola, soy Elsa de Arendelle, ayúdame a dibujar una forma.”_\n\nDibuja una
        forma pequeña, de entre **20 y 50** pixeles de ancho. Puede ser cualquier
        forma que quieras.  \n\n<hr/>\n\nPuedes intentar hacer un polígono como estos:
        \ \n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \n\nO incluso una forma abstracta como estas:  \n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)"
      courseD_artist_project1_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“Hola, soy Elsa de Arendelle, ayúdame a dibujar una forma.”_\n\nDibuja una
        forma pequeña, de entre **20 y 50** pixeles de ancho. Puede ser cualquier
        forma que quieras.  \n\n<hr/>\n\nPuedes intentar hacer un polígono como estos:
        \ \n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \n\nO incluso una forma abstracta como estas:  \n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)"
      courseD_artist_project1_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _“Hola, soy Elsa de Arendelle, ayúdame a dibujar una forma.”_\n\nDibuja una
        forma pequeña, de entre **20 y 50** pixeles de ancho. Puede ser cualquier
        forma que quieras.  \n\n<hr/>\n\nPuedes intentar hacer un polígono como estos:
        \ \n![](https://images.code.org/14e58b3901ca7c13319cc64f18ae5d82-image-1495765942356.21.06.png)\n![](https://images.code.org/8f79d689ea4936a3725a37025f8fda40-image-1495765942357.25.49.png)\n![](https://images.code.org/e5d222ae7356af4811aa153640af135e-image-1495765942357.26.09.png)
        \ \n\nO incluso una forma abstracta como estas:  \n![](https://images.code.org/8471c095219da3044b3830bebeedefb3-image-1496436883704.32.19.png)\n![](https://images.code.org/2fe6ed2db5308f4b34f7632fc6b8a64d-image-1496436883705.40.32.png)\n![](https://images.code.org/abb0947f634bc4b712d47516587a6cb8-image-1496436883705.47.21.png)"
      courseD_artist_project1a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Intentemos algo nuevo. Esta vez, patina en zigzag.\"_\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"
        width=\"200px\" style=\"float: left; margin: 0 15px 15px 0;\" />\n\nDibuja
        un patrón de escalones que use giros de entre 75 y 105 grados. Asegúrate de
        que tus giros hacia la derecha y la izquierda tengan el mismo ángulo.  \n(Verás
        por qué más adelante)"
      courseD_artist_project1a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Intentemos algo nuevo. Esta vez, patina en zigzag.\"_\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"
        width=\"200px\" style=\"float: left; margin: 0 15px 15px 0;\" />\n\nDibuja
        un patrón de escalones que use giros de entre 75 y 105 grados. Asegúrate de
        que tus giros hacia la derecha y la izquierda tengan el mismo ángulo.  \n(Verás
        por qué más adelante)"
      courseD_artist_project1a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Intentemos algo nuevo. Esta vez, patina en zigzag.\"_\n\n<img src=\"https://images.code.org/73b1310fca6cf884ec8fb8b026210212-image-1495839168718.16.10.png\"
        width=\"200px\" style=\"float: left; margin: 0 15px 15px 0;\" />\n\nDibuja
        un patrón de escalones que use giros de entre 75 y 105 grados. Asegúrate de
        que tus giros hacia la derecha y la izquierda tengan el mismo ángulo.  \n(Verás
        por qué más adelante)"
      courseD_artist_project2: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _“Ahora, vamos a dibujar más de una.”_\n\nAhora toma tu forma y dibuja dos
        o tres seguidas aumentando el número de pixeles.  \n\n-   Si aumentas **menos**
        que el ancho de tu forma, puede que se superpongan\n-   Si aumentas **más**
        que el ancho de tu forma, te quedará un espacio\n\n<hr/>\n\nTu fila puede
        terminar recta, como en estos casos:\n\n![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\n![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\n![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\n<br/>
        \ <br/>\n\nO tus formas se pueden mover, como en estos casos: \n\n![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\n![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\n![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _“Ahora, vamos a dibujar más de una.”_\n\nAhora toma tu forma y dibuja dos
        o tres seguidas aumentando el número de pixeles.  \n\n-   Si aumentas **menos**
        que el ancho de tu forma, puede que se superpongan\n-   Si aumentas **más**
        que el ancho de tu forma, te quedará un espacio\n\n<hr/>\n\nTu fila puede
        terminar recta, como en estos casos:\n\n![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\n![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\n![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\n<br/>
        \ <br/>\n\nO tus formas se pueden mover, como en estos casos: \n\n![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\n![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\n![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _“Ahora, vamos a dibujar más de una.”_\n\nAhora toma tu forma y dibuja dos
        o tres seguidas aumentando el número de pixeles.  \n\n-   Si aumentas **menos**
        que el ancho de tu forma, puede que se superpongan\n-   Si aumentas **más**
        que el ancho de tu forma, te quedará un espacio\n\n<hr/>\n\nTu fila puede
        terminar recta, como en estos casos:\n\n![](https://images.code.org/cefc818d8636c7ce185738311870ff1d-image-1495820778762.39.25.png)\n![](https://images.code.org/80dc77914de15685dc696825dff61723-image-1495820778762.39.43.png)\n![](https://images.code.org/00cda078f119b1ddb0af27ae4a44b089-image-1495820778761.39.08.png)\n<br/>
        \ <br/>\n\nO tus formas se pueden mover, como en estos casos: \n\n![](https://images.code.org/0c4066fe7547bc1f4495aacbeecdea6d-image-1496437220447.47.04.png)\n![](https://images.code.org/4069376b784c147a8d443d49e22f783f-image-1496437220446.40.15.png)\n![](https://images.code.org/02704ab3fb3356f76c544bb64c1a7cce-image-1496437220446.32.04.png)"
      courseD_artist_project2a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Ahora vamos a girarnos y volvernos por donde vinimos.\"_\\\r\n\\\r\n¡Gira
        180 grados y dibuja exactamente el mismo patrón de escalera nuevamente!  \\\r\n\\\r\n\n-
        \  El resto de esta etapa será más fácil si pones todo tus códigos dentro
        de un loop para hacer que Elsa dibuje, se gire en 180 grados, dibuje, luego
        gire 180 grados nuevamente.\\\r\n    \\\r\n    <hr/>\r\n    \r\n    Aquí hay
        un ejemplo de escaleras que usan giros de 76 grados:\r\n    \r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project2a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Ahora vamos a girarnos y volvernos por donde vinimos.\"_\\\r\n\\\r\n¡Gira
        180 grados y dibuja exactamente el mismo patrón de escalera nuevamente!  \\\r\n\\\r\n\n-
        \  El resto de esta etapa será más fácil si pones todo tus códigos dentro
        de un loop para hacer que Elsa dibuje, se gire en 180 grados, dibuje, luego
        gire 180 grados nuevamente.\\\r\n    \\\r\n    <hr/>\r\n    \r\n    Aquí hay
        un ejemplo de escaleras que usan giros de 76 grados:\r\n    \r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project2a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Ahora vamos a girarnos y volvernos por donde vinimos.\"_\\\r\n\\\r\n¡Gira
        180 grados y dibuja exactamente el mismo patrón de escalera nuevamente!  \\\r\n\\\r\n\n-
        \  El resto de esta etapa será más fácil si pones todo tus códigos dentro
        de un loop para hacer que Elsa dibuje, se gire en 180 grados, dibuje, luego
        gire 180 grados nuevamente.\\\r\n    \\\r\n    <hr/>\r\n    \r\n    Aquí hay
        un ejemplo de escaleras que usan giros de 76 grados:\r\n    \r\n    ![](https://images.code.org/ceea66fad37e79cc45a850911f90440c-image-1496696286635.16.27.png)"
      courseD_artist_project3: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Vamos a transformarlo en un copo de nieve.\"_\n\nLuego, usa el bloque `saltar
        200 sobre 200` para que Elsa vuelva al centro, y hazla girar para dibujar
        la línea de formas una y otra vez en un montón de direcciones diferentes.
        \  \n\n¡Qué copos de nieve tan maravillosos puedes hacer!\n\n* * *\n\nObserva
        estos ejemplos con polígonos:  \n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\n\nLas
        formas abstractas pueden crear copos de nieve más parecidos estos:  \n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      courseD_artist_project3_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Vamos a transformarlo en un copo de nieve.\"_\n\nLuego, usa el bloque `saltar
        200 sobre 200` para que Elsa vuelva al centro, y hazla girar para dibujar
        la línea de formas una y otra vez en un montón de direcciones diferentes.
        \  \n\n¡Qué copos de nieve tan maravillosos puedes hacer!\n\n* * *\n\nObserva
        estos ejemplos con polígonos:  \n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\n\nLas
        formas abstractas pueden crear copos de nieve más parecidos estos:  \n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      courseD_artist_project3_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Vamos a transformarlo en un copo de nieve.\"_\n\nLuego, usa el bloque `saltar
        200 sobre 200` para que Elsa vuelva al centro, y hazla girar para dibujar
        la línea de formas una y otra vez en un montón de direcciones diferentes.
        \  \n\n¡Qué copos de nieve tan maravillosos puedes hacer!\n\n* * *\n\nObserva
        estos ejemplos con polígonos:  \n![](https://images.code.org/b32ebfb3be559bf8a6d017a854e0b97e-image-1495821528995.42.08.png)\n![](https://images.code.org/08d7155f6829f82d878dfa57ad5dcaf3-image-1495821528996.42.26.png)\n![](https://images.code.org/7d461ee9046871e6993406e558f28176-image-1495821528996.42.58.png)\n\nLas
        formas abstractas pueden crear copos de nieve más parecidos estos:  \n![](https://images.code.org/376d7ba20b6bb86e08b1675370e87b92-image-1496695869798.44.00.png)\n![](https://images.code.org/4f649cc779920632674afac5acce5c95-image-1496695869798.47.51.png)\n![](https://images.code.org/a68f925ffd87241ebc09183acc908b4b-image-1496695869796.31.49.png)"
      courseD_artist_project3a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Vamos a girarlo y a convertirlo en un copo de nieve.\"_\\\r\n\\\r\nHaz
        girar esa forma una 5 ó 6 veces en círculos.\\\r\n\n-   Si escoges 5 veces,
        intenta un giro de 72 grados\\\r\n-   Si escoges 6 veces, intenta un giro
        de 60 grados\\\r\n    <hr/>\r\n    \r\n    Aquí tienes un ejemplo de Elsa
        girando un patrón 6 veces:\r\n    \r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_artist_project3a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Vamos a girarlo y a convertirlo en un copo de nieve.\"_\\\r\n\\\r\nHaz
        girar esa forma una 5 ó 6 veces en círculos.\\\r\n\n-   Si escoges 5 veces,
        intenta un giro de 72 grados\\\r\n-   Si escoges 6 veces, intenta un giro
        de 60 grados\\\r\n    <hr/>\r\n    \r\n    Aquí tienes un ejemplo de Elsa
        girando un patrón 6 veces:\r\n    \r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_artist_project3a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"Vamos a girarlo y a convertirlo en un copo de nieve.\"_\\\r\n\\\r\nHaz
        girar esa forma una 5 ó 6 veces en círculos.\\\r\n\n-   Si escoges 5 veces,
        intenta un giro de 72 grados\\\r\n-   Si escoges 6 veces, intenta un giro
        de 60 grados\\\r\n    <hr/>\r\n    \r\n    Aquí tienes un ejemplo de Elsa
        girando un patrón 6 veces:\r\n    \r\n    ![](https://images.code.org/b0fe02e728f80ae7a4b731f32371a37b-image-1496697582505.19.34.png)"
      courseD_artist_project4: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"¿Qué sucede si dibujamos un copo de nieve uno encima del otro?\"_\\\r\n\\\r\nIntenta
        superponer dos formas diferentes de copos de nieve uno encima del otro con
        un pequeño giro en medio - ¡observa lo que resulta! "
      courseD_artist_project4_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"¿Qué sucede si dibujamos un copo de nieve uno encima del otro?\"_\\\r\n\\\r\nIntenta
        superponer dos formas diferentes de copos de nieve uno encima del otro con
        un pequeño giro en medio - ¡observa lo que resulta! "
      courseD_artist_project4_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"¿Qué sucede si dibujamos un copo de nieve uno encima del otro?\"_\\\r\n\\\r\nIntenta
        superponer dos formas diferentes de copos de nieve uno encima del otro con
        un pequeño giro en medio - ¡observa lo que resulta! "
      courseD_artist_project4a: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Ahora, ¿Qué deberíamos hacer? Exploremos y creemos nuestro propio wonderland
        invernal!\"_\\\r\n\\\r\nIntenta jugar con lo que has creado. ¡Dibuja lo que
        quieras!\\\r\n\n-   ¿Qué sucede si usas dos ángulos diferentes en el patrón
        del escalón de tu escalera?\\\r\n-   ¿Qué sucede si haces el patrón de tu
        diamante más largo o más corto?\\\r\n    \\-¿Cómo luce al dibujar dos copos
        de nieve uno encima del otro?\\\r?"
      courseD_artist_project4a_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Ahora, ¿Qué deberíamos hacer? Exploremos y creemos nuestro propio wonderland
        invernal!\"_\\\r\n\\\r\nIntenta jugar con lo que has creado. ¡Dibuja lo que
        quieras!\\\r\n\n-   ¿Qué sucede si usas dos ángulos diferentes en el patrón
        del escalón de tu escalera?\\\r\n-   ¿Qué sucede si haces el patrón de tu
        diamante más largo o más corto?\\\r\n    \\-¿Cómo luce al dibujar dos copos
        de nieve uno encima del otro?\\\r?"
      courseD_artist_project4a_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        \ _\"Ahora, ¿Qué deberíamos hacer? Exploremos y creemos nuestro propio wonderland
        invernal!\"_\\\r\n\\\r\nIntenta jugar con lo que has creado. ¡Dibuja lo que
        quieras!\\\r\n\n-   ¿Qué sucede si usas dos ángulos diferentes en el patrón
        del escalón de tu escalera?\\\r\n-   ¿Qué sucede si haces el patrón de tu
        diamante más largo o más corto?\\\r\n    \\-¿Cómo luce al dibujar dos copos
        de nieve uno encima del otro?\\\r?"
      courseD_artist_project5: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"¡Vuélvete creativo con las formas y ángulos para ver que tipo de nuevos
        copos de nieve podemos dibujar!\"_\\\r"
      courseD_artist_project5_2018: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"¡Vuélvete creativo con las formas y ángulos para ver que tipo de nuevos
        copos de nieve podemos dibujar!\"_\\\r"
      courseD_artist_project5_2019: "![](https://images.code.org/109aa2afaa3b7b1ecebff518bacdf3c5-image-1500660008987.png)
        _\"¡Vuélvete creativo con las formas y ángulos para ver que tipo de nuevos
        copos de nieve podemos dibujar!\"_\\\r"
      courseD_artist_ramp11: |-
        ¡Grandioso! ¡Ahora hagamos un cuadrado con el artista! Los bloques son un poco diferentes, pero la idea es la misma.

        * * *

        Cada lado del cuadrado tiene una longitud de 200 pixeles, y necesitarás girar 90 grados para hacer cada ángulo.
      courseD_artist_ramp12: |-
        Usa lo que has aprendido para dibujar este triángulo dentro de un cuadrado.

        * * *

        ##### Los lados tienen 200 pixeles de largo cada uno. Necesitarás girar 90 grados para hacer el cuadrado y 120 grados para hacer el triángulo.
      courseD_autorun_binary2_2019: "Esta es una función que toma un hilo binario
        de 1 y 0 e instruye al artista para que los siga de izquierda a derecha, y
        de arriba hacia abajo.  \n\n* * *\n\nEl artista llenará los cuadrados cuando
        vea un 1 y los ignorará cuando vea un 0. \n\n* * *\n\n**Ejecuta este código
        para ver cómo el artista usa el sistema binario para dibujar este patrón.**"
      courseD_bee_conditionals10: |-
        Los condicionales pueden ser útiles, ¡incluso si sabes exactamente qué hay en cada lugar!

        Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals10_2018: |-
        Los condicionales pueden ser útiles, ¡incluso si sabes exactamente qué hay en cada lugar!

        Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals10_2019: |-
        Los condicionales pueden ser útiles, ¡incluso si sabes exactamente qué hay en cada lugar!

        Recoge todo el néctar y haz toda la miel.
      courseD_bee_conditionals1_predict1: |-
        _"¡Esta nube está bloqueando mi vista!"_

        Revisa para ver si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseD_bee_conditionals1_predict1_2018: |-
        _"¡Esta nube está bloqueando mi vista!"_

        Revisa para ver si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseD_bee_conditionals1_predict1_2019: |-
        _"¡Esta nube está bloqueando mi vista!"_

        Revisa para ver si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseD_bee_conditionals2: "¡Más nubes! \n\nRevisa debajo de cada nube para
        ver si hay alguna flor escondida antes de sacar el néctar. Si hay una flor
        debajo de la nube, la abeja necesitará recoger el néctar _una vez_.  \n\n¡Recuerda
        que no todas las nubes esconden lo mismo!"
      courseD_bee_conditionals2_2018: "¡Más nubes! \n\nRevisa debajo de cada nube
        para ver si hay alguna flor escondida antes de sacar el néctar. Si hay una
        flor debajo de la nube, la abeja necesitará recoger el néctar _una vez_.  \n\n¡Recuerda
        que no todas las nubes esconden lo mismo!"
      courseD_bee_conditionals2_2019: "¡Más nubes! \n\nRevisa debajo de cada nube
        para ver si hay alguna flor escondida antes de sacar el néctar. Si hay una
        flor debajo de la nube, la abeja necesitará recoger el néctar _una vez_.  \n\n¡Recuerda
        que no todas las nubes esconden lo mismo!"
      courseD_bee_conditionals3: Solo puedes recoger néctar de las flores, pero puedes
        revisar todos los espacios por si hay alguna flor. Si hay una flor debajo
        de cualquiera de estas nubes, la abeja necesitará recoger el néctar _una vez_.
      courseD_bee_conditionals3_2018: Solo puedes recoger néctar de las flores, pero
        puedes revisar todos los espacios por si hay alguna flor. Si hay una flor
        debajo de cualquiera de estas nubes, la abeja necesitará recoger el néctar
        _una vez_.
      courseD_bee_conditionals3_2019: Solo puedes recoger néctar de las flores, pero
        puedes revisar todos los espacios por si hay alguna flor. Si hay una flor
        debajo de cualquiera de estas nubes, la abeja necesitará recoger el néctar
        _una vez_.
      courseD_bee_conditionals4: |-
        En este desafío, sabemos que cada flor tiene exactamente un néctar, pero las flores no están distribuidas de manera uniforme.

        Obtén todo el néctar con la menor cantidad de bloques posible.
      courseD_bee_conditionals4_2018: |-
        En este desafío, sabemos que cada flor tiene exactamente un néctar, pero las flores no están distribuidas de manera uniforme.

        Obtén todo el néctar con la menor cantidad de bloques posible.
      courseD_bee_conditionals4_2019: |-
        En este desafío, sabemos que cada flor tiene exactamente un néctar, pero las flores no están distribuidas de manera uniforme.

        Obtén todo el néctar con la menor cantidad de bloques posible.
      courseD_bee_conditionals6: |-
        _"Ahora lo único que quiero es hacer miel."_

        Algunas de estas nubes pueden tener panales debajo de ellas. ¡Asegúrate de revisar si se esconde un panal detrás de cada nube! Si hay un panal, la abeja solo necesitará hacer miel _una vez_.
      courseD_bee_conditionals6_2018: |-
        _"Ahora lo único que quiero es hacer miel."_

        Algunas de estas nubes pueden tener panales debajo de ellas. ¡Asegúrate de revisar si se esconde un panal detrás de cada nube! Si hay un panal, la abeja solo necesitará hacer miel _una vez_.
      courseD_bee_conditionals6_2019: |-
        _"Ahora lo único que quiero es hacer miel."_

        Algunas de estas nubes pueden tener panales debajo de ellas. ¡Asegúrate de revisar si se esconde un panal detrás de cada nube! Si hay un panal, la abeja solo necesitará hacer miel _una vez_.
      courseD_bee_conditionals7: |-
        ¡A veces una nube cubre una flor y, a veces, un panal!

        Usa el bloque 'si/si no\` para recoger el néctar de las flores y hacer miel en el panal. Recuerda: si hay una flor, la abeja necesita recoger el néctar _una vez_. Si hay un panal, la abeja necesita hacer miel _una vez_.
      courseD_bee_conditionals7_2018: |-
        ¡A veces una nube cubre una flor y, a veces, un panal!

        Usa el bloque 'si/si no\` para recoger el néctar de las flores y hacer miel en el panal. Recuerda: si hay una flor, la abeja necesita recoger el néctar _una vez_. Si hay un panal, la abeja necesita hacer miel _una vez_.
      courseD_bee_conditionals7_2019: |-
        ¡A veces una nube cubre una flor y, a veces, un panal!

        Usa el bloque 'si/si no\` para recoger el néctar de las flores y hacer miel en el panal. Recuerda: si hay una flor, la abeja necesita recoger el néctar _una vez_. Si hay un panal, la abeja necesita hacer miel _una vez_.
      courseD_bee_conditionals7_predict2: |-
        ¡A veces una nube cubre una flor y, a veces, un panal!

        Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en el panal. Recuerda: solo habrá _un_ panal o _una_ flor detrás de cada nube.
      courseD_bee_conditionals7_predict2_2018: |-
        ¡A veces una nube cubre una flor y, a veces, un panal!

        Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en el panal. Recuerda: solo habrá _un_ panal o _una_ flor detrás de cada nube.
      courseD_bee_conditionals7_predict2_2019: |-
        ¡A veces una nube cubre una flor y, a veces, un panal!

        Usa el bloque `si/si no` para recoger el néctar de las flores y hacer miel en el panal. Recuerda: solo habrá _un_ panal o _una_ flor detrás de cada nube.
      courseD_bee_conditionals8: |-
        **Desafío:** ¡Habrá una flor o un panal debajo de cada una de estas nubes!

        Recoge el néctar una vez si hay una flor.
        De lo contrario, haz miel una vez (porque hay un panal).
      courseD_bee_conditionals8_2018: |-
        **Desafío:** ¡Habrá una flor o un panal debajo de cada una de estas nubes!

        Recoge el néctar una vez si hay una flor.
        De lo contrario, haz miel una vez (porque hay un panal).
      courseD_bee_conditionals8_2019: |-
        **Desafío:** ¡Habrá una flor o un panal debajo de cada una de estas nubes!

        Recoge el néctar una vez si hay una flor.
        De lo contrario, haz miel una vez (porque hay un panal).
      courseD_bee_conditionals9: Recoge todo el néctar o haz toda la miel. Puedes
        recoger el néctar de las flores y hacer miel de los panales. Revisa todos
        los espacios para ver si hay una flor o un panal. Solo habrá una flor o un
        panal detrás de cada nube.
      courseD_bee_conditionals9_2018: Recoge todo el néctar o haz toda la miel. Puedes
        recoger el néctar de las flores y hacer miel de los panales. Revisa todos
        los espacios para ver si hay una flor o un panal. Solo habrá una flor o un
        panal detrás de cada nube.
      courseD_bee_conditionals9_2019: Recoge todo el néctar o haz toda la miel. Puedes
        recoger el néctar de las flores y hacer miel de los panales. Revisa todos
        los espacios para ver si hay una flor o un panal. Solo habrá una flor o un
        panal detrás de cada nube.
      courseD_bee_conditionals_challenge1: Recoge todo el néctar o haz toda la miel.
        Solo puedes recoger el néctar de las flores y hacer miel de los panales. Revisa
        todos los espacios para ver si hay una flor o un panal.
      courseD_bee_conditionals_challenge1_2018: Recoge todo el néctar o haz toda la
        miel. Solo puedes recoger el néctar de las flores y hacer miel de los panales.
        Revisa todos los espacios para ver si hay una flor o un panal.
      courseD_bee_conditionals_challenge1_2019: Recoge todo el néctar o haz toda la
        miel. Solo puedes recoger el néctar de las flores y hacer miel de los panales.
        Revisa todos los espacios para ver si hay una flor o un panal.
      courseD_bee_conditionals_challenge2: Recoge todo el néctar o haz toda la miel.
        Puedes recoger todo el néctar en una flor usando el loop `mientras néctar
        > 0`.
      courseD_bee_conditionals_challenge2_2018: Recoge todo el néctar o haz toda la
        miel. Puedes recoger todo el néctar en una flor usando el loop `mientras néctar
        > 0`.
      courseD_bee_conditionals_challenge2_2019: Recoge todo el néctar o haz toda la
        miel. Puedes recoger todo el néctar en una flor usando el loop `mientras néctar
        > 0`.
      courseD_bee_debugging_challenge1: Observa cómo las abejas obtienen el néctar.
        ¿Puedes usar el mismo tipo de patrón para ayudar a la abeja a hacer toda la
        miel?
      courseD_bee_debugging_challenge1a: "_\"¡Bzz bzz! Sé cómo llegar al néctar, ahora
        ayúdame a hacer miel!\"_\\\r\n\\\r\nObserva cómo la abeja obtiene el néctar.
        ¿Puedes usar el mismo tipo de patrón para ayudar a la abeja a hacer toda la
        miel?"
      courseD_bee_nestedLoops1: "_\"¡Esto va a ser genial!\"_\\\r\n\\\r\nAyuda a la
        abeja a recoger todo el néctar."
      courseD_bee_nestedLoops1_2018: "_\"¡Esto va a ser genial!\"_\\\r\n\\\r\nAyuda
        a la abeja a recoger todo el néctar."
      courseD_bee_nestedLoops1_2019: "_\"¡Esto va a ser genial!\"_\\\r\n\\\r\nAyuda
        a la abeja a recoger todo el néctar."
      courseD_bee_nestedLoops1a: "_\"¡Esto va a ser genial!\"_\\\r\n\\\r\nAyuda a
        la abeja a recoger todo el néctar."
      courseD_bee_nestedLoops1a_2018: "_\"¡Esto va a ser genial!\"_\\\r\n\\\r\nAyuda
        a la abeja a recoger todo el néctar."
      courseD_bee_nestedLoops1a_2019: "_\"¡Esto va a ser genial!\"_\\\r\n\\\r\nAyuda
        a la abeja a recoger todo el néctar."
      courseD_bee_nestedLoops2: Esta vez, ayuda a la abeja a recoger todo el néctar
        usando los menos bloques posible.
      courseD_bee_nestedLoops2_2018: Esta vez, ayuda a la abeja a recoger todo el
        néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_2019: Esta vez, ayuda a la abeja a recoger todo el
        néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_predict1: Esta vez, ayuda a la abeja a recoger todo
        el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_predict1_2018: Esta vez, ayuda a la abeja a recoger
        todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops2_predict1_2019: Esta vez, ayuda a la abeja a recoger
        todo el néctar usando los menos bloques posible.
      courseD_bee_nestedLoops7: "**Desafío:** Descifra cómo obtener todo el néctar
        usando sólo los bloques disponibles."
      courseD_bee_nestedLoops7_2018: "**Desafío:** Descifra cómo obtener todo el néctar
        usando sólo los bloques disponibles."
      courseD_bee_nestedLoops7_2019: "**Desafío:** Descifra cómo obtener todo el néctar
        usando sólo los bloques disponibles."
      courseD_bee_nestedLoops8: 'Recolecta todo el néctar de cada flor y haz miel
        en cada panal. Utiliza un loop anidado. '
      courseD_bee_nestedLoops8_2018: 'Recolecta todo el néctar de cada flor y haz
        miel en cada panal. Utiliza un loop anidado. '
      courseD_bee_nestedLoops8_2019: 'Recolecta todo el néctar de cada flor y haz
        miel en cada panal. Utiliza un loop anidado. '
      courseD_bee_nestedLoops9: Haz toda la miel.
      courseD_bee_nestedLoops9_2018: Haz toda la miel.
      courseD_bee_nestedLoops9_2019: Haz toda la miel.
      courseD_bee_nestedLoops9_predict2: Haz toda la miel.
      courseD_bee_nestedLoops9_predict2_2018: Haz toda la miel.
      courseD_bee_nestedLoops9_predict2_2019: Haz toda la miel.
      courseD_bounce_events10s_2018: "Ahora hay un aro en la parte superior.  \\\r\n\\\r\nAgrega
        el bloque `marcar punto` al evento `cuando la pelota en gol` y el bloque 'marcar
        punto oponente`al evento`cuando pelota no pega mano\\` para hacer un juego.
        \\\r\n\\\r\n\\---\\\r\n\\\r\nObserva cuántos puntos puedes anotar antes que
        tu oponente anote dos veces."
      courseD_bounce_events10s_2019: "Ahora hay un aro en la parte superior.  \\\r\n\\\r\nAgrega
        el bloque `marcar punto` al evento `cuando la pelota en gol` y el bloque 'marcar
        punto oponente`al evento`cuando pelota no pega mano\\` para hacer un juego.
        \\\r\n\\\r\n\\---\\\r\n\\\r\nObserva cuántos puntos puedes anotar antes que
        tu oponente anote dos veces."
      courseD_bounce_events11s_2018: "Ahora, ¡estás en control de la pelota! Agrega
        el bloque  ' lanzar nueva pelota\\` en todos los lugares donde el juego necesita
        una nueva pelota.\\\r\n\\\r\n\\---\\\r\n\\\r\n¡Ve cuántos puntos puedes anotar
        antes que tu oponente anote dos veces!"
      courseD_bounce_events11s_2019: "Ahora, ¡estás en control de la pelota! Agrega
        el bloque  ' lanzar nueva pelota\\` en todos los lugares donde el juego necesita
        una nueva pelota.\\\r\n\\\r\n\\---\\\r\n\\\r\n¡Ve cuántos puntos puedes anotar
        antes que tu oponente anote dos veces!"
      courseD_bounce_events1s_2018: "¡Lleva la pelota al aro!  \\\r\nAgrega un bloque
        al evento 'cuando flecha izquierda' y presiona \"Ejecutar\"para mover al jugador
        hacia la red."
      courseD_bounce_events1s_2019: "¡Lleva la pelota al aro!  \\\r\nAgrega un bloque
        al evento 'cuando flecha izquierda' y presiona \"Ejecutar\"para mover al jugador
        hacia la red."
      courseD_bounce_events2s_2018: Ahora, agrega un bloque al evento 'cuando evento
        derecho' para que la mano pueda obtener ambas cestas.
      courseD_bounce_events2s_2019: Ahora, agrega un bloque al evento 'cuando evento
        derecho' para que la mano pueda obtener ambas cestas.
      courseD_bounce_events5s_2018: Vamos a enviar una pelota de básquetbol hacia
        abajo con dirección a la mano. Agrega un bloque al evento 'cuando la pelota
        golpee la mano' para asegurar que la pelota alcance la cesta.
      courseD_bounce_events5s_2019: Vamos a enviar una pelota de básquetbol hacia
        abajo con dirección a la mano. Agrega un bloque al evento 'cuando la pelota
        golpee la mano' para asegurar que la pelota alcance la cesta.
      courseD_bounce_events6s_2018: "Ahora la cesta está en la punta.  \\\r\n\\\r\nagrega
        un código para hacer que la pelota rebote cuando golpee la muralla y así puedas
        resolver este desafío."
      courseD_bounce_events6s_2019: "Ahora la cesta está en la punta.  \\\r\n\\\r\nagrega
        un código para hacer que la pelota rebote cuando golpee la muralla y así puedas
        resolver este desafío."
      courseD_bounce_events7s_2018: "Agrega bloques de sonido para que la red emita
        un sonido cuando golpees el cesto y haz sonar el silbato cuando la pelota
        no golpee la mano.  \\\r\n\\\r\n\\---\\\r\n\\\r\nHaz rebotar la pelota hasta
        que golpee el blanco final."
      courseD_bounce_events7s_2019: "Agrega bloques de sonido para que la red emita
        un sonido cuando golpees el cesto y haz sonar el silbato cuando la pelota
        no golpee la mano.  \\\r\n\\\r\n\\---\\\r\n\\\r\nHaz rebotar la pelota hasta
        que golpee el blanco final."
      courseD_collector_debugging1: |-
        _"¡Oh, no! Veo un problema."_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging10_predict1: |-
        _"¡Es la isla del tesoro!"_

        Ayuda a Laurel a corregir el código para recoger todo el tesoro.
      courseD_collector_debugging1a_2018: |-
        _"¡Oh, no! Veo un problema."_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging1a_2019: |-
        _"¡Oh, no! Veo un problema."_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging2: |-
        _"¡Puedes hacerlo!"_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging2a_2018: |-
        _"¡Puedes hacerlo!"_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging2a_2019: |-
        _"¡Puedes hacerlo!"_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging3: |-
        _"Sé perseverante y podrás descifrar esto."_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging3a_2018: |-
        _"Sé perseverante y podrás descifrar esto."_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging3a_2019: |-
        _"Sé perseverante y podrás descifrar esto."_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging4: |-
        _"No te frustres. ¡Puedes hacerlo!"_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging4a_2018: |-
        _"No te frustres. ¡Puedes hacerlo!"_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging4a_2019: |-
        _"No te frustres. ¡Puedes hacerlo!"_

        Corrige los errores para recoger todo el tesoro.
      courseD_collector_debugging5: |-
        _"¡Este desafío me está volviendo loco!"_

        Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver este desafío.
      courseD_collector_debugging5a_2018: |-
        _"¡Este desafío me está volviendo loco!"_

        Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver este desafío.
      courseD_collector_debugging5a_2019: |-
        _"¡Este desafío me está volviendo loco!"_

        Todos los comandos que necesitas están aquí... Usa tus habilidades de depuración para descubrir cómo resolver este desafío.
      courseD_collector_debugging6: "**Desafío:** Todos los bloques que necesitas
        están aquí... Usa tus habilidades de depuración para arreglar los errores
        y recoger todo el tesoro."
      courseD_collector_debugging6a_2018: 'Desafío: ¡Usa el código en el área de trabajo
        para obtener al menos **6** piezas del tesoro!'
      courseD_collector_debugging6a_2019: 'Desafío: ¡Usa el código en el área de trabajo
        para obtener al menos **6** piezas del tesoro!'
      courseD_collector_debugging8: |-
        _"¡Cuánto tesoro!"_

        Ayuda a Laurel a corregir el código para recoger todo el tesoro.
      courseD_collector_debugging8a_2018: |-
        _"¡Cuánto tesoro!"_

        Ayuda a Laurel a corregir el código para recoger todo el tesoro.
      courseD_collector_debugging8a_2019: |-
        _"¡Cuánto tesoro!"_

        Ayuda a Laurel a corregir el código para recoger todo el tesoro.
      courseD_collector_debugging9: |-
        _"¡Es la isla del tesoro!"_

        Ayuda a Laurel a corregir el código para recoger todo el tesoro.
      courseD_collector_debugging9a_2018: |-
        _"¡Es la isla del tesoro!"_

        Ayuda a Laurel a corregir el código para recoger todo el tesoro.
      courseD_collector_debugging9a_2019: |-
        _"¡Es la isla del tesoro!"_

        Ayuda a Laurel a corregir el código para recoger todo el tesoro.
      courseD_collector_nested_loops_challenge2: "_\"Vamos a cazar tesoros - ¡usando
        bucles!\"_ \\\r\n\\\r\nAyuda al coleccionista a alcanzar al menos dos pilas
        del tesoro sólo usando los bloques de tu caja de herramientas. Es posible
        recoger los 4."
      courseD_collector_nested_loops_challenge2_2018: "_\"Vamos a cazar tesoros -
        ¡usando bucles!\"_ \\\r\n\\\r\nAyuda al coleccionista a alcanzar al menos
        dos pilas del tesoro sólo usando los bloques de tu caja de herramientas. Es
        posible recoger los 4."
      courseD_collector_nested_loops_challenge2_2019: "_\"Vamos a cazar tesoros -
        ¡usando bucles!\"_ \\\r\n\\\r\nAyuda al coleccionista a alcanzar al menos
        dos pilas del tesoro sólo usando los bloques de tu caja de herramientas. Es
        posible recoger los 4."
      courseD_collector_nested_loops_challenge2a: "_\"¡Vamos a cazar tesoros con los
        bucles!\"_ \n\nAyuda Laurel a recoger al menos dos pilas del tesoro con los
        bloques de tu caja de herramientas. Es posible recoger las 4."
      courseD_collector_ramp10: Mueve a Laurel por este cuadrado para que recoja el
        tesoro a medida que lo encuentra.
      courseD_collector_ramp8: |-
        Este desafío se parece mucho al anterior, ¡pero ahora está protagonizado por Laurel la Aventurera!

        * * *

        Toma el mismo camino que antes pero, esta vez, usa un bucle ´repetir´ para recoger el tesoro cuando llegues a él.
      courseD_collector_ramp9: Ahora hay más tesoro. ¿Puedes ayudar a Laurel a recogerlo
        todo?
      courseD_farmer_condLoops1: |-
        _"¿Me ayudas a cosechar hoy?"_

        Ayuda a la cosechadora a revisar su fila de maíz para ver si ya puede recoger algo. Usa condicionales para mirar cada brote. Cada tallo tendrá sus piezas de **0 o 1** de maíz listas para cosechar.
      courseD_farmer_condLoops1_2018: |-
        _"¿Me ayudas a cosechar hoy?"_

        Ayuda a la cosechadora a revisar su fila de maíz para ver si ya puede recoger algo. Usa condicionales para mirar cada brote. Cada tallo tendrá sus piezas de **0 o 1** de maíz listas para cosechar.
      courseD_farmer_condLoops1_2019: |-
        _"¿Me ayudas a cosechar hoy?"_

        Ayuda a la cosechadora a revisar su fila de maíz para ver si ya puede recoger algo. Usa condicionales para mirar cada brote. Cada tallo tendrá sus piezas de **0 o 1** de maíz listas para cosechar.
      courseD_farmer_condLoops2: "_\"¡La cosechadora recoge ambos cultivos de esta
        fila!\"_\n\nEste jardín está mezclado, ¡tiene **maíz y lechuga**!  \n\nAyuda
        a la cosechadora a recoger los elementos que ya están listos. Cada planta
        tendrá **un** maíz o **una** lechuga."
      courseD_farmer_condLoops2_2018: "_\"¡La cosechadora recoge ambos cultivos de
        esta fila!\"_\n\nEste jardín está mezclado, ¡tiene **maíz y lechuga**!  \n\nAyuda
        a la cosechadora a recoger los elementos que ya están listos. Cada planta
        tendrá **un** maíz o **una** lechuga."
      courseD_farmer_condLoops2_2019: "_\"¡La cosechadora recoge ambos cultivos de
        esta fila!\"_\n\nEste jardín está mezclado, ¡tiene **maíz y lechuga**!  \n\nAyuda
        a la cosechadora a recoger los elementos que ya están listos. Cada planta
        tendrá **un** maíz o **una** lechuga."
      courseD_farmer_condLoops3: |-
        _"¡Maíz, lechuga Y calabazas! Ayúdame a recoger todo."_

        Cada planta tendrá una pieza de maíz, una lechuga o una calabaza.
      courseD_farmer_condLoops3_2018: |-
        _"¡Maíz, lechuga Y calabazas! Ayúdame a recoger todo."_

        Cada planta tendrá una pieza de maíz, una lechuga o una calabaza.
      courseD_farmer_condLoops3_2019: |-
        _"¡Maíz, lechuga Y calabazas! Ayúdame a recoger todo."_

        Cada planta tendrá una pieza de maíz, una lechuga o una calabaza.
      courseD_farmer_condLoops4: "_\"¡Cielos! ¡Ahora la lechuga está creciendo en
        grupos!\"_  \n\nLa cosechadora quiere recoger todo lo que hay en su jardín
        de lechugas. Cada planta ahora tendrá más de una lechuga, así que la granjera
        necesitará seguir recogiendo mientras crece la lechuga.  \n\n##### (Recuerda:
        ¡este jardín solo tiene lechugas!)"
      courseD_farmer_condLoops4_2018: "_\"¡Cielos! ¡Ahora la lechuga está creciendo
        en grupos!\"_  \n\nLa cosechadora quiere recoger todo lo que hay en su jardín
        de lechugas. Cada planta ahora tendrá más de una lechuga, así que la cosechadora
        necesitará seguir recogiendo mientras crece la lechuga.  \n\n##### (Recuerda:
        ¡este jardín solo tiene lechugas!)"
      courseD_farmer_condLoops4_2019: "_\"¡Cielos! ¡Ahora la lechuga está creciendo
        en grupos!\"_  \n\nLa cosechadora quiere recoger todo lo que hay en su jardín
        de lechugas. Cada planta ahora tendrá más de una lechuga, así que la cosechadora
        necesitará seguir recogiendo mientras crece la lechuga.  \n\n##### (Recuerda:
        ¡este jardín solo tiene lechugas!)"
      courseD_farmer_condLoops5: "_\"¡Que cultivo más abundante!\"_\\\r\n\\\r\nEste
        campo tiene racimos de maíz y lechugas creciendo juntos -- con una calabaza
        al final. ¿Puedes cosecharlo todo?"
      courseD_farmer_condLoops5_2018: "_\"¡Que cultivo más abundante!\"_\\\r\n\\\r\nEste
        campo tiene racimos de maíz y lechugas creciendo juntos -- con una calabaza
        al final. ¿Puedes cosecharlo todo?"
      courseD_farmer_condLoops5_2019: "_\"¡Que cultivo más abundante!\"_\\\r\n\\\r\nEste
        campo tiene racimos de maíz y lechugas creciendo juntos -- con una calabaza
        al final. ¿Puedes cosecharlo todo?"
      courseD_farmer_condLoops6: "_\"¡Vamos a dar un paso más!\"_\\\r\n\\\r\n¿Puedes
        descifrar cómo recoger la calabaza?  Asegúrate de recoger todo el maíz a lo
        largo del camino!"
      courseD_farmer_condLoops6_2018: "_\"¡Vamos a dar un paso más!\"_\\\r\n\\\r\n¿Puedes
        descifrar cómo recoger la calabaza?  Asegúrate de recoger todo el maíz a lo
        largo del camino!"
      courseD_farmer_condLoops6_2019: "_\"¡Vamos a dar un paso más!\"_\\\r\n\\\r\n¿Puedes
        descifrar cómo recoger la calabaza?  Asegúrate de recoger todo el maíz a lo
        largo del camino!"
      courseD_farmer_condLoops7: "**Desafío:** Recoge todo el maíz y las lechugas,
        luego recoge la calabaza."
      courseD_farmer_condLoops7_2018: "**Desafío:** Recoge todo el maíz y las lechugas,
        luego recoge la calabaza."
      courseD_farmer_condLoops7_2019: "**Desafío:** Recoge todo el maíz y las lechugas,
        luego recoge la calabaza."
      courseD_farmer_condLoops8: Recoge todo el maíz y todas las lechugas, luego recoge
        la calabaza.
      courseD_farmer_condLoops8_2018: Recoge todo el maíz y todas las lechugas, luego
        recoge la calabaza.
      courseD_farmer_condLoops8_2019: Recoge todo el maíz y todas las lechugas, luego
        recoge la calabaza.
      courseD_farmer_condLoops9: Recoge todo el maíz y todas las lechugas, luego recoge
        la calabaza.
      courseD_farmer_condLoops9_2018: Recoge todo el maíz y todas las lechugas, luego
        recoge la calabaza.
      courseD_farmer_condLoops9_2019: Recoge todo el maíz y todas las lechugas, luego
        recoge la calabaza.
      courseD_farmer_condLoops9_predict1: Recoge todo el maíz y todas las lechugas,
        luego recoge la calabaza.
      courseD_farmer_condLoops9_predict1_2018: Recoge todo el maíz y todas las lechugas,
        luego recoge la calabaza.
      courseD_farmer_condLoops9_predict1_2019: Recoge todo el maíz y todas las lechugas,
        luego recoge la calabaza.
      courseD_farmer_condLoops_challenge1: "Las calabazas marcan el lugar donde deberías
        'girar a la derecha'. De lo contrario sigue derecho hacia adelante, pero recuerda
        recoger todas las lechugas o el maíz a lo largo del camino. \\\r\n\\\r\n**Cada
        cultivo oculto tiene sólo un maíz o una lechuga.**"
      courseD_farmer_condLoops_challenge1_2018: "Las calabazas marcan el lugar donde
        deberías 'girar a la derecha'. De lo contrario sigue derecho hacia adelante,
        pero recuerda recoger todas las lechugas o el maíz a lo largo del camino.
        \\\r\n\\\r\n**Cada cultivo oculto tiene sólo un maíz o una lechuga.**"
      courseD_farmer_condLoops_challenge1_2019: "Las calabazas marcan el lugar donde
        deberías 'girar a la derecha'. De lo contrario sigue derecho hacia adelante,
        pero recuerda recoger todas las lechugas o el maíz a lo largo del camino.
        \\\r\n\\\r\n**Cada cultivo oculto tiene sólo un maíz o una lechuga.**"
      courseD_farmer_condLoops_challenge2: "_\"¡Es un laberinto de vegatales variados!\"_
        \\\r\n\\\r\nGira a la derecha en las calabazas, gira a la derecha en las lechugas.
        Recoge todo para completar el nivel."
      courseD_farmer_condLoops_challenge2_2018: "_\"¡Es un laberinto de vegatales
        variados!\"_ \\\r\n\\\r\nGira a la derecha en las calabazas, gira a la derecha
        en las lechugas. Recoge todo para completar el nivel."
      courseD_farmer_condLoops_challenge2_2019: "_\"¡Es un laberinto de vegatales
        variados!\"_ \\\r\n\\\r\nGira a la derecha en las calabazas, gira a la derecha
        en las lechugas. Recoge todo para completar el nivel."
      courseD_farmer_until_challenge2: Usa bloques si/si no para seguir el camino
        con curvas. En cada esquina, usa el comando 'remover 1' en un loop para limpiar
        los montones.
      courseD_farmer_while1: "_\"Hola, soy una granjera. ¡Necesito tu ayuda para aplanar
        el campo de mi granja para que quede lista para plantar!\"_  \n\\\r\n\\\r\nMuévete
        al montón de tierra y usa el bloque 'remover' para removerla."
      courseD_farmer_while1_2018: "_\"Hola, soy una granjera. ¡Necesito tu ayuda para
        aplanar el campo de mi granja para que quede lista para plantar!\"_  \n\\\r\n\\\r\nMuévete
        al montón de tierra y usa el bloque 'remover' para removerla."
      courseD_farmer_while1_2019: "_\"Hola, soy una granjera. ¡Necesito tu ayuda para
        aplanar el campo de mi granja para que quede lista para plantar!\"_  \n\\\r\n\\\r\nMuévete
        al montón de tierra y usa el bloque 'remover' para removerla."
      courseD_farmer_while3: "_\"Muévete al montón de tierra y dime cuántas paladas
        remover.\"_\\\r\n\\\r\nUsa la menor cantidad de bloques posible para resolver
        el desafío."
      courseD_farmer_while3_2018: "_\"Muévete al montón de tierra y dime cuántas paladas
        remover.\"_\\\r\n\\\r\nUsa la menor cantidad de bloques posible para resolver
        el desafío."
      courseD_farmer_while3_2019: "_\"Muévete al montón de tierra y dime cuántas paladas
        remover.\"_\\\r\n\\\r\nUsa la menor cantidad de bloques posible para resolver
        el desafío."
      courseD_farmer_while4: "_\"¡No sé cuánta tierra hay en este montón!\"_\\\r\n\\\r\nAyuda
        a la granjera a quitar el montón completo usando un loop 'mientras'."
      courseD_farmer_while4_2018: "_\"¡No sé cuánta tierra hay en este montón!\"_\\\r\n\\\r\nAyuda
        a la granjera a quitar el montón completo usando un loop 'mientras'."
      courseD_farmer_while4_2019: "_\"¡No sé cuánta tierra hay en este montón!\"_\\\r\n\\\r\nAyuda
        a la granjera a quitar el montón completo usando un loop 'mientras'."
      courseD_farmer_while4_predict1: "_\"¡No sé cuánta tierra hay en este montón!\"_\\\r\n\\\r\nAyuda
        a la granjera a quitar el montón completo usando un loop 'mientras'."
      courseD_farmer_while4_predict1_2018: "_\"¡No sé cuánta tierra hay en este montón!\"_\\\r\n\\\r\nAyuda
        a la granjera a quitar el montón completo usando un loop 'mientras'."
      courseD_farmer_while4_predict1_2019: "_\"¡No sé cuánta tierra hay en este montón!\"_\\\r\n\\\r\nAyuda
        a la granjera a quitar el montón completo usando un loop 'mientras'."
      courseD_farmer_while6: "¡Mira todos esos hoyos!  Cada uno necesita una cantidad
        diferente de tierra.   \\\r\n\\\r\nPuedes usar el loop 'mientras' ¡para llenarlos
        todos fácilmente!"
      courseD_farmer_while6_2018: "¡Mira todos esos hoyos!  Cada uno necesita una
        cantidad diferente de tierra.   \\\r\n\\\r\nPuedes usar el loop 'mientras'
        ¡para llenarlos todos fácilmente!"
      courseD_farmer_while6_2019: "¡Mira todos esos hoyos!  Cada uno necesita una
        cantidad diferente de tierra.   \\\r\n\\\r\nPuedes usar el loop 'mientras'
        ¡para llenarlos todos fácilmente!"
      courseD_farmer_while8: "**Desafío:** Llena todos estos hoyos usando la menor
        cantidad de bloques posible. "
      courseD_farmer_while8_2018: "**Desafío:** Llena todos estos hoyos usando la
        menor cantidad de bloques posible. "
      courseD_farmer_while8_2019: "**Desafío:** Llena todos estos hoyos usando la
        menor cantidad de bloques posible. "
      courseD_farmer_while_challenge1: Llena todos los hoyos y remueve todos los montones.
      courseD_farmer_while_challenge1_2018: Llena todos los hoyos y remueve todos
        los montones.
      courseD_farmer_while_challenge1_2019: Llena todos los hoyos y remueve todos
        los montones.
      courseD_farmer_while_challenge2: Llena todos los hoyos y remueve todos los montones.
      courseD_harvester_nested_loops_challenge1: _"¡Necesito ayuda en la granja! Ayúdame
        a cosechar este maíz usando sólo los bloques en tu caja de herramientas."_
      courseD_harvester_nested_loops_challenge1_2018: _"¡Necesito ayuda en la granja!
        Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."_
      courseD_harvester_nested_loops_challenge1_2019: _"¡Necesito ayuda en la granja!
        Ayúdame a cosechar este maíz usando sólo los bloques en tu caja de herramientas."_
      courseD_iceage_loops1: "¡Ayuda a Scrat a atravesar el hielo resbaladizo para
        llegar hasta la bellota!"
      courseD_iceage_loops10: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseD_iceage_loops10_2019: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseD_iceage_loops11: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseD_iceage_loops11_2019: "¡Ayuda a Scrat a llegar hasta la bellota!"
      courseD_iceage_loops12: "¡Llega a la bellota como sea!"
      courseD_iceage_loops12_2019: "¡Llega a la bellota como sea!"
      courseD_iceage_loops1_2019: "¡Ayuda a Scrat a atravesar el hielo resbaladizo
        para llegar hasta la bellota!"
      courseD_iceage_loops2: "¡Usa un bloque <xml><block type=\"maze_turn\">\\\r\n
        \   <title name=\"DIR\">turnLeft</title>\\\r\n  </block></xml> para llegar
        a la bellota!"
      courseD_iceage_loops2_2019: "¡Usa un bloque <xml><block type=\"maze_turn\">\\\r\n
        \   <title name=\"DIR\">turnLeft</title>\\\r\n  </block></xml> para llegar
        a la bellota!"
      courseD_iceage_loops3: ¿Puedes llegar a la bellota con sólo un bloque <xml><block
        type="maze_moveForward"/></xml>? ¡Inténtalo usando un bucle!
      courseD_iceage_loops3_2019: ¿Puedes llegar a la bellota con sólo un bloque <xml><block
        type="maze_moveForward"/></xml>? ¡Inténtalo usando un bucle!
      courseD_iceage_loops4: "¡Añade un bloque más para que Scrat llegue hasta la
        bellota!"
      courseD_iceage_loops4_2019: "¡Añade un bloque más para que Scrat llegue hasta
        la bellota!"
      courseD_iceage_loops6: "¿Puedes agregar un bucle para llegar a la bellota?"
      courseD_iceage_loops6_2019: "¿Puedes agregar un bucle para llegar a la bellota?"
      courseD_iceage_loops7: "¡Scrat realmente quiere esa bellota! "
      courseD_iceage_loops7_2019: "¡Scrat realmente quiere esa bellota! "
      courseD_iceage_loops8: "¿Puedes arreglar este código? "
      courseD_iceage_loops8_2019: "¿Puedes arreglar este código? "
      courseD_iceage_loops9: "¡La bellota está muy lejos! ¿Puedes utilizar los bucles
        para ayudar a Scrat a llegar hasta allí?"
      courseD_iceage_loops9_2019: "¡La bellota está muy lejos! ¿Puedes utilizar los
        bucles para ayudar a Scrat a llegar hasta allí?"
      courseD_maze_intro4_2019: '_"Traza la ruta y llevarme al cerdo."_ '
      courseD_maze_intro5a_2019: Pon atención a la secuencia y ve si puedes descifrar
        ¡cómo llegar a ese cerdo!
      courseD_maze_intro5c_2019: "¡Ten cuidado con el TNT! Ayuda a que Red llegue
        hasta el cerdo."
      courseD_maze_nestedLoops3: "_\"¡Zombie hambriento!\"_\\\r\n\\\r\nLleva al zombie
        hasta el girasol usando la menor cantidad de bloques posible."
      courseD_maze_nestedLoops3_2018: "_\"¡Zombie hambriento!\"_\\\r\n\\\r\nLleva
        al zombie hasta el girasol usando la menor cantidad de bloques posible."
      courseD_maze_nestedLoops3_2019: "_\"¡Zombie hambriento!\"_\\\r\n\\\r\nLleva
        al zombie hasta el girasol usando la menor cantidad de bloques posible."
      courseD_maze_nestedLoops4: "¡Lleva al zombie hasta el girasol usando la menor
        cantidad de bloques posible!  "
      courseD_maze_nestedLoops4_2018: "¡Lleva al zombie hasta el girasol usando la
        menor cantidad de bloques posible!  "
      courseD_maze_nestedLoops4_2019: "¡Lleva al zombie hasta el girasol usando la
        menor cantidad de bloques posible!  "
      courseD_maze_nestedLoops6: "_\"¡Debo comer girasol!\"_\\\r\n\\\r\nLleva al zombie
        hasta el girasol sólo usando los bloques disponibles."
      courseD_maze_nestedLoops6_2018: "_\"¡Debo comer girasol!\"_\\\r\n\\\r\nLleva
        al zombie hasta el girasol sólo usando los bloques disponibles."
      courseD_maze_nestedLoops6_2019: "_\"¡Debo comer girasol!\"_\\\r\n\\\r\nLleva
        al zombie hasta el girasol sólo usando los bloques disponibles."
      courseD_maze_ramp1: Para este desafío, encaja todos los bloques juntos y haz
        clic en "Ejecutar" ¡para verlos funcionar!
      courseD_maze_ramp1_2018: Para este desafío, encaja todos los bloques juntos
        y haz clic en "Ejecutar" ¡para verlos funcionar!
      courseD_maze_ramp1_2019: Para este desafío, encaja todos los bloques juntos
        y haz clic en "Ejecutar" ¡para verlos funcionar!
      courseD_maze_ramp2: Arrastra un bloque 'avanzar' extra desde la caja de herramientas,
        luego adjunta todos los bloques al 'cuando ejecute' para finalizar el código.
      courseD_maze_ramp2_2018: Arrastra un bloque 'avanzar' extra desde la caja de
        herramientas, luego adjunta todos los bloques al 'cuando ejecute' para finalizar
        el código.
      courseD_maze_ramp2_2019: Arrastra un bloque 'avanzar' extra desde la caja de
        herramientas, luego adjunta todos los bloques al 'cuando ejecute' para finalizar
        el código.
      courseD_maze_ramp3: "_\"Este cerdo está erizando mis plumas.\"_\n\nHay un bloque
        sobrante que hará chocar al pájaro.  \nQuítalo de los otros bloques y arrástralo
        a la caja de herramientas para descartarlo."
      courseD_maze_ramp3_2018: "_\"Este cerdo está erizando mis plumas.\"_\n\nHay
        un bloque sobrante que hará chocar al pájaro.  \nQuítalo de los otros bloques
        y arrástralo a la caja de herramientas para descartarlo."
      courseD_maze_ramp3_2019: "Ayuda a que el pájaro llegue al cerdo. Hay un bloque
        azul adicional que va a hacer que el pájaro choque. \n\nElimínalo removiéndolo
        de los otros bloques y arrastrándolo de vuelta a la caja de herramientas."
      courseD_maze_ramp4: "_\"Traza el camino y llévame hasta el cerdo tonto.\"_ \n\n¡Evita
        el TNT o volarán plumas!"
      courseD_maze_ramp4_2018: "_\"Traza el camino y llévame hasta el cerdo tonto.\"_
        \n\n¡Evita el TNT o volarán plumas!"
      courseD_maze_ramp4_2019: "_\"Traza el camino y llévame hasta el cerdo tonto.\"_
        \\\r\n\\\r\n¡Evita el Tnt o volarán plumas "
      courseD_maze_ramp5: |-
        _"¡Sigue este camino para llevarme hasta el cerdo!"_

        Evita el TNT.
      courseD_maze_ramp5_2018: |-
        _"¡Sigue este camino para llevarme hasta el cerdo!"_

        Evita el TNT.
      courseD_maze_ramp5_2019: |-
        _"¡Sigue este camino para llevarme hasta el cerdo!"_

        Evita el TNT.
      courseD_maze_ramp5a: Pon atención a la secuencia y ve si puedes descifrar ¡cómo
        llegar a ese cerdo!
      courseD_maze_ramp5a_2018: Pon atención a la secuencia y ve si puedes descifrar
        ¡cómo llegar a ese cerdo!
      courseD_maze_ramp5a_2019: Pon atención a la secuencia y ve si puedes descifrar
        ¡cómo llegar a ese cerdo!
      courseD_maze_ramp5b: "**Desafío:** ¡Navega por este laberinto para ayudar al
        pájaro a encontrar al cerdo!"
      courseD_maze_ramp5b_2018: "**Desafío:** ¡Navega por este laberinto para ayudar
        al pájaro a encontrar al cerdo!"
      courseD_maze_ramp5b_2019: "**Desafío:** ¡Navega por este laberinto para ayudar
        al pájaro a encontrar al cerdo!"
      courseD_maze_ramp5c: Ayuda al pájaro a llegar al cerdo.
      courseD_maze_ramp5c_2018: Ayuda al pájaro a llegar al cerdo.
      courseD_maze_ramp5c_2019: Ayuda al pájaro a llegar al cerdo.
      courseD_maze_ramp5d: Lleva al pájaro hasta el cerdo.
      courseD_maze_ramp5d_2018: Lleva al pájaro hasta el cerdo.
      courseD_maze_ramp5d_2019: Lleva al pájaro hasta el cerdo.
      courseD_maze_ramp6: "_\"Mantén la calma y ayúdame a encontrar a ese cerdo malo.
        ¡De lo contrario podría enojarme!\"_\\\r\n\\\r\nCuando tienes varios de los
        mismos bloques en una fila, intenta usar un loop 'repetir'. ¡Hará lo mismo
        con menos códigos!"
      courseD_maze_ramp7: "_\"¡Es momento de enojarse!\"_  \\\r\n\\\r\n\\\r\nUsa lo
        que has aprendido para llevar al pájaro hasta el cerdo!"
      courseD_maze_until10: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_2018: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_2019: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_predict2: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_predict2_2018: Ayuda al zombie a llegar al girasol.
      courseD_maze_until10_predict2_2019: Ayuda al zombie a llegar al girasol.
      courseD_maze_until4: "_\"Querida persona. Yo zombie. Yo hambriento. Debo....
        llegar.... al girasol...\"_\\\r\n\\\r\n¿Puedes llevar al zombie hasta el girasol
        usando sólo los bloques que están disponibles?"
      courseD_maze_until4_2018: "_\"Querida persona. Yo zombie. Yo hambriento. Debo....
        llegar.... al girasol...\"_\\\r\n\\\r\n¿Puedes llevar al zombie hasta el girasol
        usando sólo los bloques que están disponibles?"
      courseD_maze_until4_2019: "_\"Querida persona. Yo zombie. Yo hambriento. Debo....
        llegar.... al girasol...\"_\\\r\n\\\r\n¿Puedes llevar al zombie hasta el girasol
        usando sólo los bloques que están disponibles?"
      courseD_maze_until5: Usa el bloque 'sí' para ayudar al zombie a decidir cuándo
        girar, luego lleva al zombie hasta el girasol.
      courseD_maze_until5_2018: Usa el bloque 'sí' para ayudar al zombie a decidir
        cuándo girar, luego lleva al zombie hasta el girasol.
      courseD_maze_until5_2019: Usa el bloque 'sí' para ayudar al zombie a decidir
        cuándo girar, luego lleva al zombie hasta el girasol.
      courseD_maze_until6: Ayuda al zombie a llegar al girasol.
      courseD_maze_until6_2018: Ayuda al zombie a llegar al girasol.
      courseD_maze_until6_2019: Ayuda al zombie a llegar al girasol.
      courseD_maze_until7: Ayuda al zombie a llegar al girasol.
      courseD_maze_until7_2018: Ayuda al zombie a llegar al girasol.
      courseD_maze_until7_2019: Ayuda al zombie a llegar al girasol.
      courseD_maze_until8: Ayuda al zombie a llegar al girasol.
      courseD_maze_until9: "**Desafío:** Evita las mordidas y ayuda al zombie a llegar
        hasta el girasol."
      courseD_maze_until9_2018: "**Desafío:** Evita las mordidas y ayuda al zombie
        a llegar hasta el girasol."
      courseD_maze_until9_2019: "**Desafío:** Evita las mordidas y ayuda al zombie
        a llegar hasta el girasol."
      courseD_maze_until_challenge1: Sin pistas, sólo desafío. Lleva al zombie hasta
        el girasol.
      courseD_playLab_cond1: "Para comenzar nuestro juego, el Pirata Pegleg (actor
        1) necesita poder moverse en todas las direcciones. Conecta los bloques a
        los eventos correctos para hacer que Pegleg se mueva.  \\\r\n\\\r\n\\---\\\r\nAyuda
        a Pegleg a juntar las banderas para resolver este desafío."
      courseD_playLab_cond1_2018: "Para comenzar nuestro juego, el Pirata Pegleg (actor
        1) necesita poder moverse en todas las direcciones. Conecta los bloques a
        los eventos correctos para hacer que Pegleg se mueva.  \\\r\n\\\r\n\\---\\\r\nAyuda
        a Pegleg a juntar las banderas para resolver este desafío."
      courseD_playLab_cond2: "¡Momento de agregar puntos!  \\\r\n\\\r\nEdita el código
        pata darle a Pegleg (actor 1) un punto cuando llegue hasta el dragón (actor
        2). "
      courseD_playLab_cond2_2018: "¡Momento de agregar puntos!  \\\r\n\\\r\nEdita
        el código pata darle a Pegleg (actor 1) un punto cuando llegue hasta el dragón
        (actor 2). "
      courseD_playLab_cond3: 'Usa un loop ''repetir siempre'' para hacer que el dragón
        (actor 2) cambie entre emociones al azar cada segundo.  '
      courseD_playLab_cond3_2018: 'Usa un loop ''repetir siempre'' para hacer que
        el dragón (actor 2) cambie entre emociones al azar cada segundo.  '
      courseD_playLab_cond3a: "Es tiempo de usar lo que hemos aprendido acerca de
        los condicionales para hacer este maravilloso juego. \\\r\n\\\r\nAgrega un
        código y así cuando Pegleg llegue al dragón, obtendrá dos puntos _sí_ el dragón
        está feliz. De lo contrario, sólo podría agregar sólo un punto a su puntaje."
      courseD_playLab_cond3a_2018: "Es tiempo de usar lo que hemos aprendido acerca
        de los condicionales para hacer este maravilloso juego. \\\r\n\\\r\nAgrega
        un código y así cuando Pegleg llegue al dragón, obtendrá dos puntos _sí_ el
        dragón está feliz. De lo contrario, sólo podría agregar sólo un punto a su
        puntaje."
      courseD_playLab_cond4: "¡Esto está a punto de ponerse interesante!\\\r\n\\\r\nAgrega
        un código para que así el ninja (actor 3) comience a perseguir a Pegleg tan
        pronto como comience el juego. Finaliza el juego cómo perdida sí el ninja
        lo atrapa."
      courseD_playLab_cond4_2018: "¡Esto está a punto de ponerse interesante!\\\r\n\\\r\nAgrega
        un código para que así el ninja (actor 3) comience a perseguir a Pegleg tan
        pronto como comience el juego. Finaliza el juego cómo perdida sí el ninja
        lo atrapa."
      courseD_playLab_cond5: "Ahora tenemos una forma de ganar.\\\r\n\\\r\nAgrega
        el loop 'repetir por siempre' que revisa constantemente **sí** el puntaje
        es mayor a 5, entonces termina el juego como **ganar** cuando lo es."
      courseD_playLab_cond5_2018: "Ahora tenemos una forma de ganar.\\\r\n\\\r\nAgrega
        el loop 'repetir por siempre' que revisa constantemente **sí** el puntaje
        es mayor a 5, entonces termina el juego como **ganar** cuando lo es."
      courseD_playLab_cond6: "¡Wow, este juego es difícil de ganar!\\\r\n\\\r\nVamos
        a personalizar este juego para hacerlo más divertido. Este desafío tiene dos
        partes:\\\r\n\\_\\_\\_\\\r\n\\\r\n\n1.  Disminuye la velocidad del ninja (actor
        3) antes de ponerlo a perseguir al pirata (actor 1).  \\\r\n    \\\r\n2.  Usa
        un loop 'repetir siempre' para ver sí el pirata está en la 'zona segura' bajo
        la línea de pulpos (mayor a 225 pixeles hacia abajo). Sí lo está, pon al ninja
        a **huir** del pirata.  De lo contrario, pon al ninja a **perseguir** al pirata.
        \ "
      courseD_playLab_cond6_2018: "¡Wow, este juego es díficil de ganar!\\\r\n\\\r\nVamos
        a personalizar este juego para hacerlo más divertido. Este desafío tiene dos
        partes:\\\r\n\\_\\_\\_\\\r\n\\\r\n\n1.  Disminuye la velocidad del ninja (actor
        3) antes de ponerlo a perseguir al pirata (actor1).  \\\r\n    \\\r\n2.  Use
        un bucle 'repetir por siempre' para ver sí el pirata está en la 'zona segura'
        bajo la línea de pulpos (mayor a 225 pixeles hacia abajo). Sí lo está, pon
        al ninja a **huir** del pirata.  De lo contrario, pon al ninja a **perseguir**
        al pirata.  "
      courseD_playLab_cond6a: "¡No queremos que el pirata se quede en la 'zona segura'
        por mucho tiempo!  \\\r\n\\\r\nAgrega el código de afirmación `sí` de más
        abajo para que el pirata (actor 1) esté en la zona segura, el programa esperará
        un segundo, luego deducirá un punto mientras permanezca debajo de la línea
        de pulpos."
      courseD_playLab_cond6a_2018: "¡No queremos que el pirata se quede en la 'zona
        segura' por mucho tiempo!  \\\r\n\\\r\nAgrega el código de afirmación `sí`
        de más abajo para que el pirata (actor 1) esté en la zona segura, el programa
        esperará un segundo, luego deducirá un punto mientras permanezca debajo de
        la línea de pulpos."
      courseD_playLab_condFP_2018: "¡Ahora, construye tu propio juego para mostrárselo
        a tus amigos/as!\n\n\\--\nPuedes:\n\n-   Hacer que el pirata y el ninja trabajen
        juntos para obtener puntos del pulpo\n    \\-Hacer que ambos pulpos sigan
        al pirata, haciendo un daño doble al ninja cuando choquen \n-   Hacer que
        cada personaje desaparezca al ser tocado por el ninja\n-   ¡Inventa tu propio
        juego!"
      courseD_scrat_predict1: "_\"Mantén la calma y ayúdame a encontrar al cerdo malo.
        ¡De lo contrario me puedo enojar!\"_\\\r\n\\\r\nCuando tienes varios bloques
        seguidos, intenta moverlos dentro de un bucle <xml><block type=\"controls_repeat\"><title
        name=\"TIMES\">???</title></block></xml>.  ¡Hará lo mismo con menos código!"
      courseD_scrat_ramp1: Para este desafío, arrastra todos los bloques para juntarlos
        y haz clic en "Ejecutar" para verlo funcionar.
      courseD_scrat_ramp2: Arrastra un bloque 'avanzar' extra desde la caja de herramientas,
        luego adjunta todos los bloques al 'cuando ejecute' para finalizar el código.
      courseD_scrat_ramp3: "_\"Este cerdo me eriza las plumas.\"_\\\r\n\\\r\nHay un
        bloque adicional que va a producir que el pájaro se estrelle.  \\\r\nElimínalo
        arrastrándolo de vuelta a la caja de herramientas."
      courseD_scrat_ramp4: "_\"Traza el camino y llévame hasta el cerdo tonto.\"_
        \n\n¡Evita el TNT o volarán plumas!"
      courseD_scrat_ramp5: |-
        _"¡Sigue este camino para llevarme hasta el cerdo!"_

        Evita el TNT.
      courseD_scrat_ramp6: "_\"Mantén la calma y ayúdame a encontrar al cerdo malo.
        ¡De lo contrario me puedo enojar!\"_\\\r\n\\\r\nCuando tienes varios bloques
        seguidos, intenta moverlos dentro del bucle 'repetir'. ¡Esto hará lo mismo
        con menos códigos!"
      courseD_scrat_ramp7: "_\"¡Es momento de enojarse!\"_\\\r\n\\\r\n**Desafío:**
        ¡Usa lo que has aprendido para llevar al pájaro hasta el cerdo!"
      courseD_scrat_ramp8: "¡Excelente!  ¡Ahora usemos ese loop 'repetir' para hacer
        un cuadrado usando a Artista! Los bloques para artista son un poco diferentes
        a los otros desafíos, pero la idea es la misma.\\\r\n\\_\\_\\_\\\r\n\n#####
        Cada lado del cuadrado tiene una longitud de 200 pixeles, y necesitarás girar
        90 grados para hacer cada ángulo."
      courseD_video_repeatUntil: "Ayuda al agricultor a recorrer el camino para encontrar
        todas las lechugas\\\r\n\\\r\nEn este desafío, las lechugas están creciendo
        al final de cada camino. Si hay un camino frente a ellas, la agricultora puede
        seguir hacia adelante. De lo contrario, necesita recoger todas las lechugas,
        luego girarse para continuar en el camino. \\\r\n\\\r\n\\\r\n\\\r."
      courseE_aboutme_2: |-
        Puedes hacer un póster igual que el de Rikki. Primero debes conseguir un disfraz nuevo para el sprite a continuación. ¡Se supone que ese eres tú!

        <span style="color: #f00">Rikki: "¡Yo te ayudaré! Usa la solapa Disfraces para dibujar o elegir un disfraz que te represente."</span>

        1.  Haz clic en la solapa **Disfraces**.
        2.  Dibuja un disfraz que te represente, o elige uno de la biblioteca.
        3.  En el código a continuación, cambia el disfraz del sprite por el tuyo.
      courseE_artist_concept1: "Recrea esta imagen. \\\r\n\\\r\n\n-   Los hexágonos
        tienen lados de 50 pixeles\\\r\n-   Los hexágonos están separados por 100
        pixeles\\\r\n-   Los anchos de lápiz son de 1 pixel, 4 pixeles y 8 pixeles."
      courseE_artist_concept1_2018: "Recrea esta imagen. \\\r\n\\\r\n\n-   Los hexágonos
        tienen lados de 50 pixeles\\\r\n-   Los hexágonos están separados por 100
        pixeles\\\r\n-   Los anchos de lápiz son de 1 pixel, 4 pixeles y 8 pixeles."
      courseE_artist_concept4: "Recrea este dibujo. \\\r\n\\\r\nCada cuadrado tiene
        una longitud de lado **20 pixeles** y hay **15 cuadrados por fila**."
      courseE_artist_concept4_2018: "Recrea este dibujo. \\\r\n\\\r\nCada cuadrado
        tiene una longitud de lado **20 pixeles** y hay **15 cuadrados por fila**."
      courseE_artist_concept_challenge1: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"
        width=\"200px\"/>\\\r\n\\\r\n¡Ahora a un desafío!\\\r\n\\\r\nAquí hay un diseño
        que usa sólo los bloques que ya se te han mostrado. ¿Puedes descifrar como
        recrearlo? Siente la libertad de usar ensayo y error. No tienes que dibujarlo
        perfecto la primera vez."
      courseE_artist_concept_challenge1_2018: "<img src=\"https://images.code.org/6cac10470af71bbb5d75bf5e2669046f-image-1439939145211.png\"
        width=\"200px\"/>\\\r\n\\\r\n¡Ahora a un desafío!\\\r\n\\\r\nAquí hay un diseño
        que usa sólo los bloques que ya se te han mostrado. ¿Puedes descifrar como
        recrearlo? Siente la libertad de usar ensayo y error. No tienes que dibujarlo
        perfecto la primera vez."
      courseE_artist_concept_challenge2: Crea cinco molinillos usando el código de
        más abajo.
      courseE_artist_concept_challenge2_2018: Crea cinco molinillos usando el código
        de más abajo.
      courseE_artist_functions1: "_\"¡Yo zombie artista. Yo amar dibujar!\"_\\\r\n\\\r\nAyuda
        al zombie a dibujar los anteojos usando los cuadrados con lados de 100 pixeles.
        \ \\\r\nEl puente entre los lentes es de 75 pixeles de largo.\\\r\n\\\r."
      courseE_artist_functions10: "Esta vez, usa las líneas de 8 hexágonos con lados
        de 25 pixeles.\\\r\n\\\r\n\n-   Para hacer cada hexágono, repite el lado 6
        veces, girando 60 grados.\\\r\n-   Salta 25 pixeles entre cada hexágono.\\\r\n-
        \  Para dibujar un diamante, necesitarás alternar entre 60 grados y 120 grados."
      courseE_artist_functions10_2018: "Esta vez, usa las líneas de 8 hexágonos con
        lados de 25 pixeles.\\\r\n\\\r\n\n-   Para hacer cada hexágono, repite el
        lado 6 veces, girando 60 grados.\\\r\n-   Salta 25 pixeles entre cada hexágono.\\\r\n-
        \  Para dibujar un diamante, necesitarás alternar entre 60 grados y 120 grados."
      courseE_artist_functions10_2019: "Esta vez, usa las líneas de 8 hexágonos con
        lados de 25 pixeles.\\\r\n\\\r\n\n-   Para hacer cada hexágono, repite el
        lado 6 veces, girando 60 grados.\\\r\n-   Salta 25 pixeles entre cada hexágono.\\\r\n-
        \  Para dibujar un diamante, necesitarás alternar entre 60 grados y 120 grados."
      courseE_artist_functions2: "¡Las funciones te permiten definir nuevos bloques!\\\r\n\\\r\nHemos
        trasladado los bloques necesarios para dibujar un cuadrado a la función llamada
        'dibujar cuadrado'. Esta vez usa la función 'dibujar cuadrado' para crear
        los anteojos.\\\r\n\\_\\_\\_\\\r\n\\\r\nLos cuadrados están separados por
        75 pixeles."
      courseE_artist_functions2_2018: "Aquí hay una función llamada `dibujar un cuadrado`.
        Úsala para completar este dibujo. \\\r\n\\_\\_\\_\\\r\n\\\r\nLos cuadrados
        están separados por 75 pixeles."
      courseE_artist_functions2_2019: "Aquí hay una función llamada `dibujar un cuadrado`.
        Úsala para completar este dibujo. \\\r\n\\_\\_\\_\\\r\n\\\r\nLos cuadrados
        están separados por 75 pixeles."
      courseE_artist_functions3: "Volveremos a las funciones en breve. Tomémonos un
        descanso para practicar cómo hacer una estrella. \n\nPuedes agregar un bloque
        `repetir` para hacer este dibujo."
      courseE_artist_functions3_2018: "Volveremos a las funciones en breve. Tomémonos
        un descanso para practicar cómo hacer una estrella. \\\r\n\\\r\nPuedes hacer
        este dibujo agregando un bloque de repetición"
      courseE_artist_functions3_2019: "Volveremos a las funciones en breve. Tomémonos
        un descanso para practicar cómo hacer una estrella. \\\r\n\\\r\nPuedes hacer
        este dibujo agregando un bloque de repetición"
      courseE_artist_functions4: |-
        Ahora que puedes dibujar una estrella, ¡intenta dibujar cuatro!

        -   Cada punta de la estrella tiene 25 pixeles de largo
        -   Gira 45 grados entre las puntas
        -   Salta 100 pixeles entre cada estrella
      courseE_artist_functions5: |-
        ¿Cuándo dibujar tres estrellas es más difícil que dibujar cuatro? ¡Cuando también tienes que saltar sobre la luna!

        Dibuja esas tres estrellas para terminar el desafío.
      courseE_artist_functions5_2018: "¿Cuándo dibujar tres estrellas es más díficil
        que dibujar cuatro? ¡Cuándo también tienes que saltar por sobre la luna!\\\r\n\\\r\nDibuja
        sólo esas tres estrellas para terminar el desafío"
      courseE_artist_functions5_2019: "¿Cuándo dibujar tres estrellas es más díficil
        que dibujar cuatro? ¡Cuándo también tienes que saltar por sobre la luna!\\\r\n\\\r\nDibuja
        sólo esas tres estrellas para terminar el desafío"
      courseE_artist_functions6: |-
        ¡Lo estás haciendo muy bien!

        Dibuja un cuadrado para crear esta ventana; luego gira 90 grados antes de dibujar otro, y así sucesivamente.
      courseE_artist_functions7: "Vamos a tomar el código para la ventana y agregarlo
        a la función `dibujar ventana`. Ahora, podemos llamar a la función en cualquier
        momento que necesitemos dibujar una ventana sin tener que escribir el código
        nuevamente. \\\r\n\\\r\n![](https://images.code.org/615a5e93abdaffeed438a976a56fc1f5-image-1497998528859.gif)\\\r\n\\\r\nIntenta
        resolver este desafío creando `dibujar ventana` y llamándola cinco veces.
        ¡Cuidado con la puerta!\\\r\n\\\r\n\n-   Las ventanas de la parte superior
        están a 50 pixeles de distancia la una de la otra.  \\\r\n-   Las ventanas
        de la parte inferior están a 100 pixeles debajo del grupo de arriba."
      courseE_artist_functions7_2018: |-
        ¡Dibujar todas estas ventanas en forma individual sería muy molesto!

        Crea una función `dibujar una ventana` y llámala cinco veces para intentar resolver este desafío. ¡Cuidado con la puerta!

        * * *

        -   Cada ventana está hecha de cuatro cuadrados de **25** pixeles.
        -   Las ventanas superiores están a un salto de **100** pixeles de distancia entre sí.
        -   Las ventanas inferiores están a un salto de **150** pixeles por debajo de las ventanas superiores.
      courseE_artist_functions7_2019: |-
        ¡Dibujar todas estas ventanas en forma individual sería muy molesto!

        Crea una función `dibujar una ventana` y llámala cinco veces para intentar resolver este desafío. ¡Cuidado con la puerta!

        * * *

        -   Cada ventana está hecha de cuatro cuadrados de **25** pixeles.
        -   Las ventanas superiores están a un salto de **100** pixeles de distancia entre sí.
        -   Las ventanas inferiores están a un salto de **150** pixeles por debajo de las ventanas superiores.
      courseE_artist_functions8: "**Desafío:** ¡¿Sabías que puedes llamar otras funciones
        _dentro_ de otras funciones?!\\\r\n\\\r\nCrea tantas funciones como creas
        que necesitas para hacer estos dibujos de cuadrados de 50 pixeles."
      courseE_artist_functions8a_2018: "_\"Funciones fáciles!\"_\\\r\n\\\r\n¡Vamos
        a construir algo elegante! Comienza creando una función para este cuadrado."
      courseE_artist_functions8a_2019: "_\"Funciones fáciles!\"_\\\r\n\\\r\n¡Vamos
        a construir algo elegante! Comienza creando una función para este cuadrado."
      courseE_artist_functions8b_2018: "_\"Zombie se marea.\"_\\\r\n\\\r\n¡Llama la
        función dibuja un cuadrado' desde dentro de la función 'dibuja una línea de
        cuadrados' para hacer esto incluso más fácil!\\\r\n\\\r\n\\---\\\r\n\\\r\n\n-
        \  Los cuadrado están separados por _50_ pixeles."
      courseE_artist_functions8b_2019: "_\"Zombie se marea.\"_\\\r\n\\\r\n¡Llama la
        función dibuja un cuadrado' desde dentro de la función 'dibuja una línea de
        cuadrados' para hacer esto incluso más fácil!\\\r\n\\\r\n\\---\\\r\n\\\r\n\n-
        \  Los cuadrado están separados por _50_ pixeles."
      courseE_artist_functions8c_2018: Agrega una función más que cree esta pila de
        cuadrados escalonados usando la función 'dibujar una línea de cuadrados'.
      courseE_artist_functions8c_2019: Agrega una función más que cree esta pila de
        cuadrados escalonados usando la función 'dibujar una línea de cuadrados'.
      courseE_artist_functions9: "Crea esta imagen usando el limitado número de bloques
        proporcionados. \\\r\n\\\r\n\n-   Cada triángulo tiene lados de **50 pixeles**
        \ \\\r\n-   Para dibujar un diamante, necesitarás alternar entre girar **60
        grados y 120 grados**."
      courseE_artist_functions9_2018: "**Desafío:** Crea esta imagen usando el limitado
        número de bloques proporcionados. \\\r\n\\\r\n\n-   Cada triángulo tiene lados
        de **50 pixeles**  \\\r\n-   Para dibujar un diamante, necesitarás alternar
        entre girar **60 grados y 120 grados**."
      courseE_artist_functions9_2019: "**Desafío:** Crea esta imagen usando el limitado
        número de bloques proporcionados. \\\r\n\\\r\n\n-   Cada triángulo tiene lados
        de **50 pixeles**  \\\r\n-   Para dibujar un diamante, necesitarás alternar
        entre girar **60 grados y 120 grados**."
      courseE_artist_functionsProj_2018: "**Inspiración:** ¡Usa lo que has aprendido
        para hacer lo que quieras! \\\r\n\\\r\n¿Puedes hacer algo como este molinillo?"
      courseE_artist_functionsProj_2019: "**Inspiración:** ¡Usa lo que has aprendido
        para hacer lo que quieras! \\\r\n\\\r\n¿Puedes hacer algo como este molinillo?"
      courseE_artist_functions_challenge1: Una vez que defines una función, puedes
        llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para
        ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      courseE_artist_functions_challenge1_2018: Una vez que defines una función, puedes
        llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para
        ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      courseE_artist_functions_challenge1_2019: Una vez que defines una función, puedes
        llamarla una y otra vez - ¡Cuándo y dónde quieras! Intenta este código para
        ver cómo funciona, ¡luego cámbialo para hacer tu propio diseño impresionante!
      courseE_artist_functions_challenge2: "No sólo puedes slatar algunas ubicaciones
        pre establecidas, como las esquinas del lienzo, también puedes 'saltar a'
        el comando ¡para llegar a absolutalmente cualquier espacio que gustes! Intenta
        este código para ver cómo funciona, luego 'haz tu propio programa!\\\r\n<xml>\\\r\n
        <block type=\"jump_to_xy\">\\\r\n\n <title name=\"XPOS\">???</title>\r\n <title
        name=\"YPOS\">???</title>\r\n </block></xml>"
      courseE_artist_functions_challenge2_2018: "No sólo puedes slatar algunas ubicaciones
        pre establecidas, como las esquinas del lienzo, también puedes 'saltar a'
        el comando ¡para llegar a absolutalmente cualquier espacio que gustes! Intenta
        este código para ver cómo funciona, luego 'haz tu propio programa!\\\r\n<xml>\\\r\n
        <block type=\"jump_to_xy\">\\\r\n\n <title name=\"XPOS\">???</title>\r\n <title
        name=\"YPOS\">???</title>\r\n </block></xml>"
      courseE_artist_functions_challenge2_2019: "No sólo puedes slatar algunas ubicaciones
        pre establecidas, como las esquinas del lienzo, también puedes 'saltar a'
        el comando ¡para llegar a absolutalmente cualquier espacio que gustes! Intenta
        este código para ver cómo funciona, luego 'haz tu propio programa!\\\r\n<xml>\\\r\n
        <block type=\"jump_to_xy\">\\\r\n\n <title name=\"XPOS\">???</title>\r\n <title
        name=\"YPOS\">???</title>\r\n </block></xml>"
      courseE_artist_functions_predict1: "Aquí hay un desafío que usa una función
        que hemos definido.\\\r."
      courseE_artist_functions_predict1_2018: "Aquí hay un desafío que usa una función
        que hemos definido.\\\r."
      courseE_artist_functions_predict1_2019: "Aquí hay un desafío que usa una función
        que hemos definido.\\\r."
      courseE_artist_ramp8: "¡Excelente!  ¡Ahora usemos ese loop 'repetir' para hacer
        un cuadrado usando a Artista! Los bloques para artista son un poco diferentes
        a los otros desafíos, pero la idea es la misma.\\\r\n\\_\\_\\_\\\r\n\n#####
        Cada lado del cuadrado tiene una longitud de 200 pixeles, y necesitarás girar
        90 grados para hacer cada ángulo."
      courseE_artist_ramp8_2: "Usa lo que has aprendido para dibujar este triángulo.\\\r\n\\_\\_\\_\\\r\n\n#####
        Cada lado es de 100 pixeles de largo. Necesitarás girar en 120 grados en cada
        esquina."
      courseE_artist_ramp9: "Usa lo que has aprendido para dibujar este triángulo.\\\r\n\\_\\_\\_\\\r\n\n#####
        Cada lado es de 100 pixeles de largo. Necesitarás girar en 120 grados en cada
        esquina."
      courseE_artist_ramp9_2: "Usa lo que has aprendido para dibujar este triángulo.\\\r\n\\_\\_\\_\\\r\n\n#####
        Cada lado es de 100 pixeles de largo. Necesitarás girar en 120 grados en cada
        esquina."
      courseE_bee_concept1: "_\"¿Puedes creer todas estas lores?\"_\\\r\n\\\r\nRecoge
        todo el néctar de cada flor. "
      courseE_bee_concept1_2018: "_\"¿Puedes creer todas estas lores?\"_\\\r\n\\\r\nRecoge
        todo el néctar de cada flor. "
      courseE_bee_concept2: "Ayuda a la abeja a hacer toda la miel.  \\\r\n\\\r\nSólo
        puedes hacer miel en el panal, pero puedes revisar cualquier espacio para
        ver si hay un panal."
      courseE_bee_concept2_2018: "Ayuda a la abeja a hacer toda la miel.  \\\r\n\\\r\nSólo
        puedes hacer miel en el panal, pero puedes revisar cualquier espacio para
        ver si hay un panal."
      courseE_bee_concept5: "¿Puedes ayudar a la abeja a recoger el néctar de las
        flores? \\\r\n\\\r\nsólo puedes recoger néctar de las flores, pero puedes
        revisar cualquier espacio para ver si hay una flor."
      courseE_bee_concept5_2018: "¿Puedes ayudar a la abeja a recoger el néctar de
        las flores? \\\r\n\\\r\nsólo puedes recoger néctar de las flores, pero puedes
        revisar cualquier espacio para ver si hay una flor."
      courseE_bee_functions10: "_\"¡Muestrame la miel!\"_\\\r\n\\\r\nResuelve este
        desafío creando una función que provoque que la abeja: \\\r\n\n-   Gire hacia
        la rama en el camino\\\r\n-   Se mueva hacia adelante\\\r\n-   Haga toda la
        miel\\\r\n-   Vuelva al camino principal \\\r\n-   Vuelva a la dirección original"
      courseE_bee_functions2: "Las funciones son bloques de códigos que realizan una
        tarea. \n\nUsa la función 'recoger el néctar' para recoger el néctar de cada
        flor."
      courseE_bee_functions3: Las funciones son bloques de código que realizan una
        tarea. Utilice la función "get 5" para obtener 5 néctares a cada momento.
        Asegúrese de utilizar un bucle para obtener un recuento ideal de bloque, también.
      courseE_bee_functions4: "La función 'mover y llegar al néctar' gira a la abeja,
        recoge néctar y luego retorna a la abeja donde comenzó. \\\r\n\\\r\nUsa la
        función 'mover y llegar al néctar' para recoger el néctar."
      courseE_bee_functions8: "**Desafío:** Estas flores pueden tener una cantidad
        diferente de néctar cada vez que ejecutas el desafío.   \\\r\n\\\r\nCrea una
        función que recoja todo el néctar de cada flor."
      courseE_bee_functions_challenge1: Para este desafío debes trabajar solo. ¡Este
        puede ser más difícil de lo que parece!
      courseE_farmer_functions1: "_\"¿Nos hemos conocido antes? ¡Soy la cosechadora!\"_\\\r\n\\\r\nAyuda
        a la cosechadora a llegar a la calabaza y a recogerla."
      courseE_farmer_functions10a1_2018: "**Desafío:** Usa todo lo que has aprendido
        hasta ahora para resolver este desafío ¡en 19 bloques o menos!"
      courseE_farmer_functions10a1_2019: "**Desafío:** Usa todo lo que has aprendido
        hasta ahora para resolver este desafío ¡en 19 bloques o menos!"
      courseE_farmer_functions10b: Usa tu nueva función dos veces para resolver este
        desafío.
      courseE_farmer_functions11_predict: Descifra qué función usar y cuál eliminar,
        después 'resuelve el desafío!
      courseE_farmer_functions11_predict_2018: Descifra qué función usar y cuál eliminar,
        después 'resuelve el desafío!
      courseE_farmer_functions11_predict_2019: Descifra qué función usar y cuál eliminar,
        después 'resuelve el desafío!
      courseE_farmer_functions13_2018: "Resuelve este desafío en 23 bloques o menos.\\\r\n\\_\\_\\_
        \ \\\r\n\\\r\n\n##### Cada brote crecerá como _un_ maíz o como nada."
      courseE_farmer_functions13_2019: "Resuelve este desafío en 23 bloques o menos.\\\r\n\\_\\_\\_
        \ \\\r\n\\\r\n\n##### Cada brote crecerá como _un_ maíz o como nada."
      courseE_farmer_functions1_2018: "_\"¿Nos hemos conocido antes? ¡Soy la cosechadora!\"_\\\r\n\\\r\nAyuda
        a la cosechadora a llegar a la calabaza y a recogerla."
      courseE_farmer_functions1_2019: "_\"¿Nos hemos conocido antes? ¡Soy la cosechadora!\"_\\\r\n\\\r\nAyuda
        a la cosechadora a llegar a la calabaza y a recogerla."
      courseE_farmer_functions1a: "_\"Oooh, ¡los vegetales están creciendo por todos
        lados!\"_\\\r\n\\\r\nAhora ayuda a la cosechadora a recoger todo el maíz en
        camino hacia la calabaza que está al final.\\\r\n\\_\\_\\_\\\r\n\n##### Nota:
        Cada cuadrado en el camino que lleva a la calabaza tendrá _un_ maíz o nada.
        Necesitará usar una oración 'si' ¡para revisar si hay maíz antes que intentes
        recogerlo!"
      courseE_farmer_functions1a_2018: "_\"Oooh, ¡los vegetales están creciendo por
        todos lados!\"_\\\r\n\\\r\nAhora ayuda a la cosechadora a recoger todo el
        maíz en camino hacia la calabaza que está al final.\\\r\n\\_\\_\\_\\\r\n\n#####
        Nota: Cada cuadrado en el camino que lleva a la calabaza tendrá _un_ maíz
        o nada. Necesitará usar una oración 'si' ¡para revisar si hay maíz antes que
        intentes recogerlo."
      courseE_farmer_functions1a_2019: "_\"Oooh, ¡los vegetales están creciendo por
        todos lados!\"_\\\r\n\\\r\nAhora ayuda a la cosechadora a recoger todo el
        maíz en camino hacia la calabaza que está al final.\\\r\n\\_\\_\\_\\\r\n\n#####
        Nota: Cada cuadrado en el camino que lleva a la calabaza tendrá _un_ maíz
        o nada. Necesitará usar una oración 'si' ¡para revisar si hay maíz antes que
        intentes recogerlo."
      courseE_farmer_functions2b: "Ayuda a la cosechadora a recoger el maíz y las
        calabazas.\\\r\n\\_\\_\\_\\\r\n\n##### Cada brote crecerá como _un_ maíz o
        como nada."
      courseE_farmer_functions2b_2018: "Usa la función para ayudar a la cosechadora
        a recoger el maíz y las calabazas.\\\r\n\\_\\_\\_\\\r\n\n##### Cada brote
        crecerá como _un_ maíz o como nada."
      courseE_farmer_functions2b_2019: "Usa la función para ayudar a la cosechadora
        a recoger el maíz y las calabazas.\\\r\n\\_\\_\\_\\\r\n\n##### Cada brote
        crecerá como _un_ maíz o como nada."
      courseE_farmer_functions2ba: "_\"¡Me siento tan funcional!\"_\\\r\n\\\r\n¿Te
        diste cuenta que había un código repetido en el último desafío?  No funciona
        ponerlos todos dentro de un loop, pero **pueden** usar funciones.  \\\r\n\\\r\nPara
        este desafío, debemos mover el código repetido dentro de una función llamada
        'maíz y calabaza'. Ahora, todo lo que necesitas hacer es poner la **función
        llama bloque** 'maíz y calabaza' dentro del código donde lo necesitas.\\\r\n\\\r\n\\_\\_\\_\\\r\n\n#####
        Cada brote crecerá como _un_ maíz o como nada."
      courseE_farmer_functions2ba_2018: "_\"¡Me siento tan funcional!\"_\\\r\n\\\r\n¡Ahora
        hay calabazas múltiples en cada parche!  Mira cuidadosamente las definiciones
        de la función debajo para descifrar cómo usar cada una.\\\r\n\\_\\_\\_\\\r\n\n#####
        Cada brote crecerá como _un_ maíz o como nada."
      courseE_farmer_functions2ba_2019: "_\"¡Me siento tan funcional!\"_\\\r\n\\\r\n¡Ahora
        hay calabazas múltiples en cada parche!  Mira cuidadosamente las definiciones
        de la función debajo para descifrar cómo usar cada una.\\\r\n\\_\\_\\_\\\r\n\n#####
        Cada brote crecerá como _un_ maíz o como nada."
      courseE_farmer_functions3c: "Ahora, completa la función tu mismo sacando los
        bloques desde el código y dejándolos en la \n **definición de función**.  \\\r\n\\\r\nNo
        te olvides de agregar los bloques pequeños **función llamar** para usar la
        función en tu programa cuando estés listo."
      courseE_farmer_functions3c1_2018: "¿Te diste cuenta que había un código repetido
        en ese último desafío? Podemos ahorrar espacio llamando a ese código 'recoger
        por el camino' y ¡usar una nueva función para llamar a las otras funciones!\\\r\n\\\r\nUsa
        el 'recoger por el camino' para resolver este desafío nuevamente usando menos
        bloques."
      courseE_farmer_functions3c1_2019: "¿Te diste cuenta que había un código repetido
        en ese último desafío? Podemos ahorrar espacio llamando a ese código 'recoger
        por el camino' y ¡usar una nueva función para llamar a las otras funciones!\\\r\n\\\r\nUsa
        el 'recoger por el camino' para resolver este desafío nuevamente usando menos
        bloques."
      courseE_farmer_functions3c_2018: "¡Excelente! Prueba tus funciones en un camino
        más largo."
      courseE_farmer_functions3c_2019: "¡Excelente! Prueba tus funciones en un camino
        más largo."
      courseE_farmer_functions4b: Usa tu nueva función para resolver este desafío.
      courseE_farmer_functions5c: Tu función será útil aquí.
      courseE_farmer_functions6c: "_\"¡La lechuga recoge toda la producción!\"_\\\r\n\\\r\nAhora
        los brotes pueden ser de maíz **o** lechuga. ¿Qué necesitas agregar a este
        programa para revisar cada brote antes de recogerlo?\\\r\n\\_\\_\\_\\\r\n\n#####
        Nota: Cada brote se volverá en **un** maíz o en **una lechuga**."
      courseE_farmer_functions7a1_2018: "_\"¡Funciones lechuga hace más con menos
        trabajo!\"_\\\r\n\\\r\nCrea una función que envíe al cosechador a un camino
        cuadrado para recoger una sola lechuga del medio de cada fila."
      courseE_farmer_functions7a1_2019: "_\"¡Funciones lechuga hace más con menos
        trabajo!\"_\\\r\n\\\r\nCrea una función que envíe al cosechador a un camino
        cuadrado para recoger una sola lechuga del medio de cada fila."
      courseE_farmer_functions7b: "_\"¡Esta cosecha es increíble!\"_\\\r\n\\\r\nAyuda
        a la cosechadora a encontrar su camino por esta vía confusa y hacia la calabaza
        girando a la **izquierda** en el maíz y a la **derecha** en la lechuga.  \\\r\n\\\r\n_(¡No
        te olvides de recoger todo los productos a lo largo del camino!)_"
      courseE_farmer_functions8a1_2018: Intenta escribir tu función nuevamente. ¿Aún
        es útil? ¿Cómo puedes hacer que funcione para este desafío?
      courseE_farmer_functions8a1_2019: Intenta escribir tu función nuevamente. ¿Aún
        es útil? ¿Cómo puedes hacer que funcione para este desafío?
      courseE_farmer_functions8b: "**Desafío:** No todas las esquinas están marcadas
        en este laberinto, eso significa que necesitarás usar tu código de navegación
        más de una vez para llegar donde necesitas ir.  \\\r\n\\\r\n¿Puedes descifrar
        lo qué necesitas hacer?"
      courseE_farmer_functions9a1_2018: "\\*¡Este desafío es increíble!\\*\\*\\\r\n\\\r\n¿Es
        tu función aún útil para este desafío?"
      courseE_farmer_functions9a1_2019: "\\*¡Este desafío es increíble!\\*\\*\\\r\n\\\r\n¿Es
        tu función aún útil para este desafío?"
      courseE_farmer_functions9b: Observa bien este desafío. ¿Puedes descifrar el
        patrón?
      courseE_farmer_ramp11a: "¡Oh cielos!  Este montón es tan grande que es díficil
        adivinar cuánta tierra tiene. \\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nHemos agregado
        un nuevo bloque a la caja de herramientas llamado bloque 'mientras haya un
        montón'. ¡Úsalo para remover la tierra sólo mientras haya algo que recoger! "
      courseE_farmer_ramp11a_2018: "¡Oh cielos!  Este montón es tan grande que es
        díficil adivinar cuánta tierra tiene. \\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nHemos
        agregado un nuevo bloque a la caja de herramientas llamado bloque 'mientras
        haya un montón'. ¡Úsalo para remover la tierra sólo mientras haya algo que
        recoger! "
      courseE_farmer_ramp11a_2019: "¡Oh cielos!  Este montón es tan grande que es
        díficil adivinar cuánta tierra tiene. \\\r\n\\\r\n\\_\\_\\_\\\r\n\\\r\nHemos
        agregado un nuevo bloque a la caja de herramientas llamado bloque 'mientras
        haya un montón'. ¡Úsalo para remover la tierra sólo mientras haya algo que
        recoger! "
      courseE_farmer_ramp11b: Recoge todas las lechugas.
      courseE_farmer_ramp11b_2018: Vamos a intentarlo de nuevo, ¡pero con más montones!
      courseE_farmer_ramp11b_2019: Vamos a intentarlo de nuevo, ¡pero con más montones!
      courseE_farmer_ramp12_forswap: Recoge todas las lechugas.
      courseE_farmer_ramp12_forswap_2018: Recoge todas las lechugas.
      courseE_farmer_ramp12_forswap_2019: Recoge todas las lechugas.
      courseE_farmer_ramp12b: "Ayuda al agricultor a recorrer el camino para encontrar
        todas las lechugas\\\r\n\\\r\nEn este desafío, las lechugas están creciendo
        al final de cada camino. Si hay un camino frente a ellas, la agricultora puede
        seguir hacia adelante. De lo contrario, necesita recoger todas las lechugas,
        luego girarse para continuar en el camino. \\\r\n\\\r\n\\\r\n\\\r."
      courseE_farmer_ramp12b_2018: Ahora, la cosechadora necesita recoger todas las
        lechugas. Usa el 'mientras hay lechugas' dentro del loop 'repetir' para recogerlas
        todas!
      courseE_farmer_ramp12b_2019: Ahora, la cosechadora necesita recoger todas las
        lechugas. Usa el 'mientras hay lechugas' dentro del loop 'repetir' para recogerlas
        todas!
      courseE_farmer_ramp12c: "¡Cielos!  Mira todos estos brotes. algunos se volverán
        maíz y otros lechugas.  \\\r\n\\\r\nViaja al final de los caminos para recoger
        la lechuga mientras hay lechugas y recoger el maíz mientras hay maíz. \\\r\n\\\r."
      courseE_farmer_ramp12c_2018: "Las lechugas están ahora al final del camino.
        \ \\\r\nSigue el camino **hasta** que alcances la lechuga luego continúa para
        recoger **mientras** queden más por recoger.  "
      courseE_farmer_ramp12c_2019: "Las lechugas están ahora al final del camino.
        \ \\\r\nSigue el camino **hasta** que alcances la lechuga luego continúa para
        recoger **mientras** queden más por recoger.  "
      courseE_farmer_ramp12d: "¡La misma técnica funciona con el néctar y la miel!
        \ \\\r\n\\\r\nMira todas estas nubes. Algunas de ellas se transformarán en
        miel, y otras en néctar.   \\\r\nAyuda a la abeja a seguir el camino y resolver
        este desafío.\\\r\n\\\r\n\\\r\n\\\r."
      courseE_farmer_ramp12d_2018: "Las lechugas están esparcidas en el jardín  \\\r\nSigue
        por cada camino **hasta** que alcances una lechuga, luego continúa para recogerla
        **mientras** queden más por recoger.  "
      courseE_farmer_ramp12d_2019: "Las lechugas están esparcidas en el jardín  \\\r\nSigue
        por cada camino **hasta** que alcances una lechuga, luego continúa para recogerla
        **mientras** queden más por recoger.  "
      courseE_farmer_ramp12e: "Las lechugas están esparcidas en el jardín  \\\r\nSigue
        por cada camino **hasta** que alcances una lechuga, luego continúa para recogerla
        **mientras** queden más por recoger.  "
      courseE_farmer_ramp12e_2018: "Las lechugas están esparcidas en el jardín  \\\r\nSigue
        por cada camino **hasta** que alcances una lechuga, luego continúa para recogerla
        **mientras** queden más por recoger.  "
      courseE_farmer_ramp12e_2019: "Las lechugas están esparcidas en el jardín  \\\r\nSigue
        por cada camino **hasta** que alcances una lechuga, luego continúa para recogerla
        **mientras** queden más por recoger.  "
      courseE_farmer_ramp12f: "Resuelve este desafío usando sólo los bloques disponibles.
        \\\r\n\\\r\nEste nivel te ayudará a practicar con el bloque 'repetir hasta'.
        Recoge todo el maíz y las lechugas hasta que llegues a la calabaza. (¡No te
        olvides de recoger la calabaza también!)"
      courseE_farmer_ramp12f_2018: "**Desafío**: La única manera de recoger todos
        los cultivos es avanzar hasta llegar a la lechuga, luego girar a la izquierda
        **si** hay un camino a la izquierda. De lo contrario, gira a la derecha."
      courseE_farmer_ramp12f_2019: "**Desafío**: La única manera de recoger todos
        los cultivos es avanzar hasta llegar a la lechuga, luego girar a la izquierda
        **si** hay un camino a la izquierda. De lo contrario, gira a la derecha."
      courseE_farmer_ramp12g: Avanza hasta llegar a la lechuga, luego gira a la izquierda
        **si** hay un camino a la izquierda. De lo contrario gira a la derecha.
      courseE_farmer_ramp12g_2018: Avanza hasta llegar a la lechuga, luego gira a
        la izquierda **si** hay un camino a la izquierda. De lo contrario gira a la
        derecha.
      courseE_farmer_ramp12g_2019: Avanza hasta llegar a la lechuga, luego gira a
        la izquierda **si** hay un camino a la izquierda. De lo contrario gira a la
        derecha.
      courseE_playLab_challenge1: "\\*¡Las **ardillas** están aterrorizadas de ver
        que un **dinosaurio** ha llelgado a la ciudad! ¿Puede el bravo **caballero**
        evitar que entren en pánico?\\*\\\r\n\\\r\nReglas:\\\r\n\n1.  _Tocar a las
        ardillas te da puntos._\\\r\n2.  _Tocar al dinosaurio te quita muchos puntos._\\\r\n
        \   \\\r\n    ¡Aquí hay un tipo de juego diferente que ya ha comenzado para
        ti! Juégalo para ver cómo funciona. \\\r\n    \\\r\n    \\\r\n    Algo debería
        suceder cuando obtengas suficientes puntos o cuando se te acaben los puntos.
        Agrega algún código a las funciones 'ganar juego' y 'perder juego' para hacer
        que el juego funcione de la forma que debería. \\\r\n    ¡Haz clic en pistas
        para ideas!"
      courseE_playLab_scaffold1: "¡Es sorprendente cuánto has aprendido! Vamos a hacer
        un juego paso a paso.\\\r\n\\\r\nUsando nuevos bloques de la caja de herramientas,
        escoge un nuevo fondo, luego escoge un actor para que esté en tu juego."
      courseE_playLab_scaffold2: "Usa bloques como manejadores de eventos y acciones
        para hacer que tu jugador se mueva de acuerdo a las flechas de tu teclado.
        \ \\\r\n\\\r\nLleva al jugador hasta los blancos para completar este desafío."
      courseE_playLab_scaffold3: "¡Agreguemos más personajes a tu juego!\\\r\n\\\r\nUsa
        el bloque 'establecer actor' para agregar más personajes luego mueve el objetivo
        para completar el desafío."
      courseE_playLab_scaffold4: "Personajes múltiples y hacer que los actores se
        muevan es un gran comienzo para un juego, pero necesitamos hacer más para
        hacer que se sienta como un juego real. ¡Agreguemos un puntaje!\\\r\n\\\r\nUsa
        bloques de eventos como el 'cuando actores tocan' para cambiar el puntaje.
        Marca 10 puntos para completar el rompecabezas."
      courseE_playLab_scaffold5: "¡Gran trabajo! Tienes todos los componentes básicos
        de un juego funcionando. Ahora dedica algún tiempo asegurándote que el juego
        funcione de la forma que quieres. Incluye una forma de ganar o perder tu juego,
        luego juega hasta que necesites una de esa condiciones."
      courseE_playLab_scaffold6: "¡Has terminado! Ahora puedes jugar tu juego o compartirlo
        con tus amigos o compañeros!"
      courseF_artist_for1: "**Juego libre:** Experimenta con el loop 'para' y la variable
        'contador'.  \\\r\n\\\r\nArrastra unos pocos bloques y ve lo que sucede.  \\\r."
      courseF_artist_for10: "**Juego libre:** intenta usar la variable 'contador\\`
        con otros elementos de dibujo para hacer imágenes mágicas como esta.\\\r\n\\\r\n![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)"
      courseF_artist_for10_2018: "**Juego libre:** intenta usar la variable 'contador\\`
        con otros elementos de dibujo para hacer imágenes mágicas como esta.\\\r\n\\\r\n![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)"
      courseF_artist_for10_2019: "**Juego libre:** intenta usar la variable 'contador\\`
        con otros elementos de dibujo para hacer imágenes mágicas como esta.\\\r\n\\\r\n![](https://images.code.org/5a4eec10a53aa78ad6b12fb5e48680f8-image-1497991505852.png)"
      courseF_artist_for1_2018: "**Juego libre:** Experimenta con el loop 'para' y
        la variable 'contador'.  \\\r\n\\\r\nArrastra unos pocos bloques y ve lo que
        sucede.  \\\r."
      courseF_artist_for1_2019: "**Juego libre:** Experimenta con el loop 'para' y
        la variable 'contador'.  \\\r\n\\\r\nArrastra unos pocos bloques y ve lo que
        sucede.  \\\r."
      courseF_artist_for2: Usa un loop `repetir`dentro del loop `para` para crear
        este grupo de triángulos que va desde lados de 50 pixeles a 100 pixeles.
      courseF_artist_for2_2018: Usa un loop `repetir`dentro del loop `para` para crear
        este grupo de triángulos que va desde lados de 50 pixeles a 100 pixeles.
      courseF_artist_for2_2019: Usa un loop `repetir`dentro del loop `para` para crear
        este grupo de triángulos que va desde lados de 50 pixeles a 100 pixeles.
      courseF_artist_for3: Crea estos triángulos que van de lados de 20 a 200 pixeles,
        donde cada triángulo es 20 pixeles más grande que el último.
      courseF_artist_for3_2018: Crea estos triángulos que van de lados de 20 a 200
        pixeles, donde cada triángulo es 20 pixeles más grande que el último.
      courseF_artist_for3_2019: Crea estos triángulos que van de lados de 20 a 200
        pixeles, donde cada triángulo es 20 pixeles más grande que el último.
      courseF_artist_for5: "Sólo un pequeño cambio al código de la última imagen puede
        crear este dibujo. ¿Puedes descifrar cuál es el cambio?\\\r\n\\_\\_\\_\\\r\nPista:
        ¡Necesitas remover algo!"
      courseF_artist_for5_2018: "Sólo un pequeño cambio al código de la última imagen
        puede crear este dibujo. ¿Puedes descifrar cuál es el cambio?\\\r\n\\_\\_\\_\\\r\nPista:
        ¡Necesitas remover algo!"
      courseF_artist_for5_2019: "Sólo un pequeño cambio al código de la última imagen
        puede crear este dibujo. ¿Puedes descifrar cuál es el cambio?\\\r\n\\_\\_\\_\\\r\nPista:
        ¡Necesitas remover algo!"
      courseF_artist_for6: "Si giras un poco más o un poco menos de lo que normalmente
        harías para una forma, crea un efecto nítido\\\r \n\\\r\nRecrea tu código
        del último nivel, pero gira 89 grados para crear esta espiral cuadrado torcido."
      courseF_artist_for6_2018: "Si giras un poco más o un poco menos de lo que normalmente
        harías para una forma, crea un efecto nítido\\\r \n\\\r\nRecrea tu código
        del último nivel, pero gira 89 grados para crear esta espiral cuadrado torcido."
      courseF_artist_for6_2019: "Si giras un poco más o un poco menos de lo que normalmente
        harías para una forma, crea un efecto nítido\\\r \n\\\r\nRecrea tu código
        del último nivel, pero gira 89 grados para crear esta espiral cuadrado torcido."
      courseF_artist_for7: "¡Haz tres pequeños cambios al código del último nivel
        para obtener esto!  "
      courseF_artist_for7_2018: "¡Haz tres pequeños cambios al código del último nivel
        para obtener esto!  "
      courseF_artist_for7_2019: "¡Haz tres pequeños cambios al código del último nivel
        para obtener esto!  "
      courseF_artist_for9: "**Inspiración:** Usa el contador al interior del bloque
        `establecer alfa` para obtener algo como este centro desvanecido. \\\r\n(Este
        patrón de hexágono fue hecho usando un giro de 60 grados.)"
      courseF_artist_for9_2018: "**Inspiración:** Usa el contador al interior del
        bloque `establecer alfa` para obtener algo como este centro desvanecido. \\\r\n(Este
        patrón de hexágono fue hecho usando un giro de 60 grados.)"
      courseF_artist_for9_2019: "**Inspiración:** Usa el contador al interior del
        bloque `establecer alfa` para obtener algo como este centro desvanecido. \\\r\n(Este
        patrón de hexágono fue hecho usando un giro de 60 grados.)"
      courseF_artist_for_challenge1: "¿Puedes descifrar cómo recrear este dibujo?
        \\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"
        width=\"350px\"/>"
      courseF_artist_for_challenge1_2018: "¿Puedes descifrar cómo recrear este dibujo?
        \\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"
        width=\"350px\"/>"
      courseF_artist_for_challenge1_2019: "¿Puedes descifrar cómo recrear este dibujo?
        \\\r\n\\\r\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\"
        width=\"350px\"/>"
      courseF_artist_for_challenge2: "¿Puedes descifrar cómo recrear este dibujo con
        un loop simple? \\\r\n\\\r\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"
        width=\"350px\"/>"
      courseF_artist_for_challenge2_2018: "¿Puedes descifrar cómo recrear este dibujo
        con un loop simple? \\\r\n\\\r\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"
        width=\"350px\"/>"
      courseF_artist_for_challenge2_2019: "¿Puedes descifrar cómo recrear este dibujo
        con un loop simple? \\\r\n\\\r\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\"
        width=\"350px\"/>"
      courseF_artist_fwp1: Hoy, vamos a continuar usando el editor de función poderoso.
        Ve si recuerdas cómo editar la función 'dibujar cuadrado' para encontrar los
        bugs.
      courseF_artist_fwp2: "Edita la función para aceptar un parámetro llamado 'longitud'.\\\r\n\\\r\nLos
        lados de cada cuadrado deberían ser de 25 pixeles más largos que el anterior.
        El primer cuadrado tiene lados de 25 pixeles."
      courseF_artist_fwp2_predict1: "Edita la función para aceptar el parámetro llamado
        `longitud`.  \n\nLos lados de cada cuadrado deberían tener 25 pixeles más
        que el anterior. El primer cuadrado tiene lados de 25 pixeles. Reemplaza '???'
        con los valores correctos para dibujar la imagen."
      courseF_artist_fwp3: "¡Ahora intenta crear la función desde cero!\\\r\n\\\r\nCrea
        una función llamada 'dibujar cuadrado' y úsala para delinear estas cuatro
        cajas. \\\r\n\\\r\n\\_\\_\\_\\\r\nComenzando desde el lado superior derecho,
        los anchos de la caja son 50, 100, 150 y 200."
      courseF_artist_fwp4: "¡Excelente trabajo! Ahora edita esta función para agregar
        un parámetro para el número de lados de tu polígono. \n\nLos lados de todas
        las formas tienen 100 pixeles de largo."
      courseF_artist_fwp5: "Usa la función del último desafío para dibujar esta serie
        de formas. \\\r\n\\\r\n\\\r\nEl triángulo tiene lados de 21 pixeles y los
        lados en cada forma de las siguientes son 7 pixeles más largo que  el anterior.
        \\\r\nUsa el bloque 'multiplicación' para hacer que todo suceda sólo con una
        función llamar.\\\r\n\\\r\nEl bloque 'multiplicación' luce así <xml><block
        type=\"math_arithmetic\" inline=\"true\"><title name=\"OP\">MULTIPLICAR</title>\\\r\n</block></xml>"
      courseF_artist_fwp6: "**Desafío:** Edita `dibujar borde en espiral` para usar
        los parámetros `longitud` y `lados`, luego recrea estas formas.\\\r\n\\\r\n\n-
        \  El cuadrado va de 3 pixeles a 90 pixeles.\\\r\n-   El hexágono va de 3
        pixeles a 100 pixeles.\\\r\n-   El triángulo va de 3 pixeles a 95 pixeles."
      courseF_artist_fwp7: "Termina la función 'dibuja borde en espiral' para pedir
        una longitud mínima para el centro del espiral.\\\r\n\\\r\n\n-   El lado más
        pequeño en el centro de este cuadrado es de 50 pixeles de largo\\\r\n-   El
        lado más largo fuera de este espiral es de 200 pixeles de largo"
      courseF_artist_fwp8: "¡Juego libre! ¿Puedes descifrar cómo hacer este dibujo
        usando la función que creaste?\\\r\n\\\r\n\n-   El espiral rojo va de 50 a
        200 pixeles\\\r\n-   El espiral azul va de 25 a 150 pixeles\\\r\n-   El espiral
        verde va de 100 a 350 pixeles"
      courseF_artist_fwp9: "**Juego libre:** Más abajo están las funciones que has
        escrito, y más para que puedas jugar con ellas. Juega con el ancho del lápiz
        para ver ¡qué tan diferente lucen tus dibujos! ¡Las sugerencias están en las
        pistas!"
      courseF_artist_fwp_challenge1: |-
        Intenta ejecutar este programa. Haz cambios para ver qué sucede. ¿Puedes descifrar cómo funciona?
        También puedes borrarlo y reemplazarlo con algo totalmente diferente.
      courseF_artist_fwp_challenge2: "¡Wow! Usa lo que has aprendido en el nivel anterior
        para dibujar una imagen como esta.\\\r\n\\\r\n_Pista: Usa los parámetros para
        hacer tu código más simple._\\\r\n\\\r\n<br/>\\\r\n<img src=\"https://images.code.org/d3d6a51fafdcc0a09a5c6b0e0f3c2b92-image-1446239805818.08.59.png\"
        width=\"300px\"/>\\\r"
      courseF_artist_variables10: "Aquí está tu código del último desafío. Intenta
        editar la variable de otras formas.  \\\r\n\n-   ¿Qué sucede si comienzas
        con una 'longitud' de menos de 150? \\\r\n-   ¿Qué pasa si multiplicamos tu
        variable por 1.25 a través cada vez\\\r\n-   ¿Cuál será tu código si giras
        119 grados?"
      courseF_artist_variables10_2018: "Aquí está tu código del último desafío. Intenta
        editar la variable de otras formas.  \\\r\n\n-   ¿Qué sucede si comienzas
        con una 'longitud' de menos de 150? \\\r\n-   ¿Qué pasa si multiplicamos tu
        variable por 1.25 a través cada vez\\\r\n-   ¿Cuál será tu código si giras
        119 grados?"
      courseF_artist_variables10_2019: "Aquí está tu código del último desafío. Intenta
        editar la variable de otras formas.  \\\r\n\n-   ¿Qué sucede si comienzas
        con una 'longitud' de menos de 150? \\\r\n-   ¿Qué pasa si multiplicamos tu
        variable por 1.25 a través cada vez\\\r\n-   ¿Cuál será tu código si giras
        119 grados?"
      courseF_artist_variables2: "Ahora usa otro loop  para dibujar tres de esos triángulos
        uno al lado del otro. \\\r\n\\\r\nPuedes anidar el código dentro del interior
        de tu último desafío."
      courseF_artist_variables2_2018: "Ahora usa otro loop  para dibujar tres de esos
        triángulos uno al lado del otro. \\\r\n\\\r\nPuedes anidar el código dentro
        del interior de tu último desafío."
      courseF_artist_variables2_2019: "Ahora usa otro loop  para dibujar tres de esos
        triángulos uno al lado del otro. \\\r\n\\\r\nPuedes anidar el código dentro
        del interior de tu último desafío."
      courseF_artist_variables3: "Antes que las cosas se pongan díficiles, ¿Puedes
        mover la longitud de 50 a una variable para que así podamos usarla en el próximo
        desafío?  \\\r\n\\\r\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables3_2018: "Antes que las cosas se pongan díficiles, ¿Puedes
        mover la longitud de 50 a una variable para que así podamos usarla en el próximo
        desafío?  \\\r\n\\\r\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables3_2019: "Antes que las cosas se pongan díficiles, ¿Puedes
        mover la longitud de 50 a una variable para que así podamos usarla en el próximo
        desafío?  \\\r\n\\\r\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables4: Ahora usa la variable 'longitud' para hacer que el
        artista salte hacia adelante y hacia abajo en 'longitud' de los pixeles entre
        los triángulos.
      courseF_artist_variables4_2018: Ahora usa la variable 'longitud' para hacer
        que el artista salte hacia adelante y hacia abajo en 'longitud' de los pixeles
        entre los triángulos.
      courseF_artist_variables4_2019: Ahora usa la variable 'longitud' para hacer
        que el artista salte hacia adelante y hacia abajo en 'longitud' de los pixeles
        entre los triángulos.
      courseF_artist_variables6: "**¡Ups!**  \\\r\n\\\r\nRealmente necesitamos que
        los triángulos sean de 60 pixeles de ancho, con saltos de 60 pixeles.  \\\r\n\\\r\n¿No
        estás feliz de estar usando una variable?"
      courseF_artist_variables6_2018: "**¡Ups!**  \\\r\n\\\r\nRealmente necesitamos
        que los triángulos sean de 60 pixeles de ancho, con saltos de 60 pixeles.
        \ \\\r\n\\\r\n¿No estás feliz de estar usando una variable?"
      courseF_artist_variables6_2019: "**¡Ups!**  \\\r\n\\\r\nRealmente necesitamos
        que los triángulos sean de 60 pixeles de ancho, con saltos de 60 pixeles.
        \ \\\r\n\\\r\n¿No estás feliz de estar usando una variable?"
      courseF_artist_variables6a: Usa lo que has aprendido para construir este diseño
        donde los cuadrados tengan lados de 80 pixeles y el artista salte 80 pixeles
        por sobre y por debajo entre cada uno.
      courseF_artist_variables6a_2018: Usa lo que has aprendido para construir este
        diseño donde los cuadrados tengan lados de 80 pixeles y el artista salte 80
        pixeles por sobre y por debajo entre cada uno.
      courseF_artist_variables6a_2019: Usa lo que has aprendido para construir este
        diseño donde los cuadrados tengan lados de 80 pixeles y el artista salte 80
        pixeles por sobre y por debajo entre cada uno.
      courseF_artist_variables7: "Comencemos esta sección dibujando un triángulo con
        lados de 150 pixeles. \\\r\n\\\r\nAsegúrate de usar la variable 'longitud'
        y un loop repetir."
      courseF_artist_variables7_2018: "Comencemos esta sección dibujando un triángulo
        con lados de 150 pixeles. \\\r\n\\\r\nAsegúrate de usar la variable 'longitud'
        y un loop repetir."
      courseF_artist_variables7_2019: "Comencemos esta sección dibujando un triángulo
        con lados de 150 pixeles. \\\r\n\\\r\nAsegúrate de usar la variable 'longitud'
        y un loop repetir."
      courseF_artist_variables8: "Reconstruye el código del triángulo del último desafío,
        pero esta vez usa el bloque 'establecer longitud a' para re establecer la
        variable 'longitud'+10 al final de cada repetición del loop.\\\r\n\\\r\n<xml>\n<block
        type=\"variables_set\" inline=\"false\">\n\n<title name=\"VAR\">length</title>\n<value
        name=\"VALUE\">\n<block type=\"math_arithmetic\" inline=\"true\">\n<title
        name=\"OP\">ADD</title>\n<value name=\"A\">\n<block type=\"variables_get\">\n<title
        name=\"VAR\">length</title>\n</block>\n</value>\n<value name=\"B\">\n<block
        type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n</block>\n</xml>\n\nLa
        longitud del primer lado del triángulo es de 150 pixeles.\n\nroot -> data
        -> markdown_instructions -> courseF_artist_variables8_markdown\\_instruction."
      courseF_artist_variables8_2018: "Reconstruye el código del triángulo del último
        desafío, pero esta vez usa el bloque 'establecer longitud a' para re establecer
        la variable 'longitud'+10 al final de cada repetición del loop.\\\r\n\\\r\n<xml>\n<block
        type=\"variables_set\" inline=\"false\">\n\n<title name=\"VAR\">length</title>\n<value
        name=\"VALUE\">\n<block type=\"math_arithmetic\" inline=\"true\">\n<title
        name=\"OP\">ADD</title>\n<value name=\"A\">\n<block type=\"variables_get\">\n<title
        name=\"VAR\">length</title>\n</block>\n</value>\n<value name=\"B\">\n<block
        type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n</block>\n</xml>\n\nLa
        longitud del primer lado del triángulo es de 150 pixeles.\n\nroot -> data
        -> markdown_instructions -> courseF_artist_variables8_markdown\\_instruction."
      courseF_artist_variables8_2019: "Reconstruye el código del triángulo del último
        desafío, pero esta vez usa el bloque 'establecer longitud a' para re establecer
        la variable 'longitud'+10 al final de cada repetición del loop.\\\r\n\\\r\n<xml>\n<block
        type=\"variables_set\" inline=\"false\">\n\n<title name=\"VAR\">length</title>\n<value
        name=\"VALUE\">\n<block type=\"math_arithmetic\" inline=\"true\">\n<title
        name=\"OP\">ADD</title>\n<value name=\"A\">\n<block type=\"variables_get\">\n<title
        name=\"VAR\">length</title>\n</block>\n</value>\n<value name=\"B\">\n<block
        type=\"math_number\">\n<title name=\"NUM\">10</title>\n</block>\n</value>\n</block>\n</value>\n</block>\n</xml>\n\nLa
        longitud del primer lado del triángulo es de 150 pixeles.\n\nroot -> data
        -> markdown_instructions -> courseF_artist_variables8_markdown\\_instruction."
      courseF_artist_variables9: "¡Tiempo de hacer algo de arte!  \\\r\n\\\r\n¡Ve
        lo que sucede cuando repites el código del último desafío **30** veces en
        lugar de sólo 3!\\\r\n\\\r\nSiente la libertad de hacer tus líneas de cualquier
        color o patrón para algo de diversión extra."
      courseF_artist_variables9_2018: "¡Tiempo de hacer algo de arte!  \\\r\n\\\r\n¡Ve
        lo que sucede cuando repites el código del último desafío **30** veces en
        lugar de sólo 3!\\\r\n\\\r\nSiente la libertad de hacer tus líneas de cualquier
        color o patrón para algo de diversión extra."
      courseF_artist_variables9_2019: "¡Tiempo de hacer algo de arte!  \\\r\n\\\r\n¡Ve
        lo que sucede cuando repites el código del último desafío **30** veces en
        lugar de sólo 3!\\\r\n\\\r\nSiente la libertad de hacer tus líneas de cualquier
        color o patrón para algo de diversión extra."
      courseF_artist_variablesFP: "**Juego libre:** Toma lo que has aprendido y haz
        tu propio dibujo. \\\r\n\\\r\n¿Cómo puedes usar las variables con cuadrados,
        pentágonos o hexágonos?"
      courseF_artist_variablesFP_2018: "**Juego libre:** Toma lo que has aprendido
        y haz tu propio dibujo. \\\r\n\\\r\n¿Cómo puedes usar las variables con cuadrados,
        pentágonos o hexágonos?"
      courseF_artist_variablesFP_2019: "**Juego libre:** Toma lo que has aprendido
        y haz tu propio dibujo. \\\r\n\\\r\n¿Cómo puedes usar las variables con cuadrados,
        pentágonos o hexágonos?"
      courseF_artist_variables_challenge1: "¡Alerta de desafío! ¿Puedes crear una
        variable de 'longitud' y usarla para crear este interesante patrón?"
      courseF_artist_variables_challenge1_2018: "¡Alerta de desafío! ¿Puedes crear
        una variable de 'longitud' y usarla para crear este interesante patrón?"
      courseF_artist_variables_challenge1_2019: "¡Alerta de desafío! ¿Puedes crear
        una variable de 'longitud' y usarla para crear este interesante patrón?"
      courseF_artist_variables_challenge2: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"
        width=\"250px\"/>\\\r\n\\\r\n¡Has aprendido todo lo que necesitas para saber
        para hacer un patrón como este! Este desafío está hecho para ser difícil.
        ¿Puedes insistir con él hasta descubrir la solución?"
      courseF_artist_variables_challenge2_2018: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"
        width=\"250px\"/>\\\r\n\\\r\n¡Has aprendido todo lo que necesitas para saber
        para hacer un patrón como este! Este desafío está hecho para ser difícil.
        ¿Puedes insistir con él hasta descubrir la solución?"
      courseF_artist_variables_challenge2_2019: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"
        width=\"250px\"/>\\\r\n\\\r\n¡Has aprendido todo lo que necesitas para saber
        para hacer un patrón como este! Este desafío está hecho para ser difícil.
        ¿Puedes insistir con él hasta descubrir la solución?"
      courseF_bee_conditionals10: |-
        Los condicionales pueden ser útiles, ¡incluso si sabes exactamente qué hay en cada lugar!

        Recoge todo el néctar y haz toda la miel.
      courseF_bee_conditionals1_predict1: |-
        _"¡Esta nube está bloqueando mi vista!"_

        Revisa para ver si hay una flor debajo de la nube. Si hay una flor, recoge el néctar.
      courseF_bee_conditionals2: "_\"¡Está muy nublado para ver las flores!\"_\\\r\n\\\r\nRevisa
        debajo de cada nube para ver si hay flores escondidas antes de recoger el
        néctar. Si hay una flor debajo de la nube, la abeja necesitará recoger el
        néctar **una vez**.  \\\r\n\\\r\nRecuerda: ¡No todas las nubes esconden lo
        mismo!"
      courseF_bee_conditionals3: Sólo puedes recoger néctar de las flores, pero puedes
        revisar cualquier espacio para ver si hay una flor. Si hay una flor debajo
        de alguna de estas nubes, la abeja necesitará recoger néctar **una vez**.
      courseF_bee_conditionals4: |-
        En este desafío, sabemos que cada flor tiene exactamente un néctar, pero las flores no están distribuidas de manera uniforme.

        Obtén todo el néctar con la menor cantidad de bloques posible.
      courseF_bee_conditionals7_predict2: "A veces una nube cubre a una flor, ¡a veces
        cubre un panal!\\\r\n\\\r\nUsa el bloque 'sí/si no' para recoger néctar de
        las flores y hacer miel de los panales."
      courseF_bee_conditionals8: "**Desafío:** ¡Habrá una flor o un panal debajo de
        cada una de esas nubes!\\\r\n\\\r\nRecoge néctar una vez si hay una flor.
        De lo contrario, haz miel una vez (porque hay un panal)."
      courseF_bee_for10: "**Desafío;** Toma lo que has aprendido acerca de los loops
        'para' e intenta resolver este problema.\\\r\n\\\r\nRecuerda: Puede que tengas
        que pasar por las soluciones varias veces antes de resolver todos los pasos."
      courseF_bee_for10_2018: "**Desafío;** Toma lo que has aprendido acerca de los
        loops 'para' e intenta resolver este problema.\\\r\n\\\r\nRecuerda: Puede
        que tengas que pasar por las soluciones varias veces antes de resolver todos
        los pasos."
      courseF_bee_for10_2019: "**Desafío;** Toma lo que has aprendido acerca de los
        loops 'para' e intenta resolver este problema.\\\r\n\\\r\nRecuerda: Puede
        que tengas que pasar por las soluciones varias veces antes de resolver todos
        los pasos."
      courseF_bee_for11: "Si tu loop está en cuenta regresiva, el incremento es **sustraído**
        de la variable contador cada vez que se complete una vuelta.\\\r\n\\\r\n¿Cuál
        debería ser tu incremento para recoger 15, luego 12, luego 9, 6, 3 néctares?"
      courseF_bee_for11_2018: "Si tu loop está en cuenta regresiva, el incremento
        es **sustraído** de la variable contador cada vez que se complete una vuelta.\\\r\n\\\r\n¿Cuál
        debería ser tu incremento para recoger 15, luego 12, luego 9, 6, 3 néctares?"
      courseF_bee_for11_2019: "Si tu loop está en cuenta regresiva, el incremento
        es **sustraído** de la variable contador cada vez que se complete una vuelta.\\\r\n\\\r\n¿Cuál
        debería ser tu incremento para recoger 15, luego 12, luego 9, 6, 3 néctares?"
      courseF_bee_for2: "Escribe el código para ayudar a la abeja a recoger todo el
        néctar.\\\r\n\\\r\nNecesitarás muchos bloques para este desafío, pero aprenderemos
        una manera más fácil en el próximo desafío."
      courseF_bee_for2_2018: "Escribe el código para ayudar a la abeja a recoger todo
        el néctar.\\\r\n\\\r\nNecesitarás muchos bloques para este desafío, pero aprenderemos
        una manera más fácil en el próximo desafío."
      courseF_bee_for2_2019: "Escribe el código para ayudar a la abeja a recoger todo
        el néctar.\\\r\n\\\r\nNecesitarás muchos bloques para este desafío, pero aprenderemos
        una manera más fácil en el próximo desafío."
      courseF_bee_for6: "También puedes usar el bucle 'para' para hacer cuenta regresiva.\\\r\n\\\r\nIntenta
        juntar este néctar contando regresivamente de **5** a **1** de **1** en uno."
      courseF_bee_for6_2018: "También puedes usar el bucle 'para' para hacer cuenta
        regresiva.\\\r\n\\\r\nIntenta juntar este néctar contando regresivamente de
        **5** a **1** de **1** en uno."
      courseF_bee_for6_2019: "También puedes usar el bucle 'para' para hacer cuenta
        regresiva.\\\r\n\\\r\nIntenta juntar este néctar contando regresivamente de
        **5** a **1** de **1** en uno."
      courseF_bee_for7: "El último número en tu bucle 'para' se llama **incremento**.
        Cada vez que el bucle es ejecutado, la variable contador cambia por el valor
        del **incremento**.\\\r\n\\\r\nIntenta recoger estas flores usando un **incremento**
        de 2."
      courseF_bee_for7_2018: "El último número en tu bucle 'para' se llama **incremento**.
        Cada vez que el bucle es ejecutado, la variable contador cambia por el valor
        del **incremento**.\\\r\n\\\r\nIntenta recoger estas flores usando un **incremento**
        de 2."
      courseF_bee_for7_2019: "El último número en tu bucle 'para' se llama **incremento**.
        Cada vez que el bucle es ejecutado, la variable contador cambia por el valor
        del **incremento**.\\\r\n\\\r\nIntenta recoger estas flores usando un **incremento**
        de 2."
      courseF_bee_for8: "¡Lo tienes! \\\r\n\\\r\n¿Cuál debería ser tu **incremento**
        para recoger 3, 6, 9, 12, 15 néctars?\\\r"
      courseF_bee_for8_2018: "¡Lo tienes! \\\r\n\\\r\n¿Cuál debería ser tu **incremento**
        para recoger 3, 6, 9, 12, 15 néctars?\\\r"
      courseF_bee_for8_2019: "¡Lo tienes! \\\r\n\\\r\n¿Cuál debería ser tu **incremento**
        para recoger 3, 6, 9, 12, 15 néctars?\\\r"
      courseF_bee_for9: "¡Ahora, combinemos la variable 'contador' con un bloque 'matemática'!\\\r\n\\\r\n¿Cómo
        puedes usar la variable 'contador' para navegar este jardín con la menor cantidad
        posible de bloques?"
      courseF_bee_for9_2018: "¡Ahora, combinemos la variable 'contador' con un bloque
        'matemática'!\\\r\n\\\r\n¿Cómo puedes usar la variable 'contador' para navegar
        este jardín con la menor cantidad posible de bloques?"
      courseF_bee_for9_2019: "¡Ahora, combinemos la variable 'contador' con un bloque
        'matemática'!\\\r\n\\\r\n¿Cómo puedes usar la variable 'contador' para navegar
        este jardín con la menor cantidad posible de bloques?"
      courseF_bee_for_challenge1: "¡Puedes usar este 'bucle para' para recoger todo
        el néctar. Increible!\\\r\n\\\r\nHay unas pocas acciones que querrás 'repetir'contador'
        veces."
      courseF_bee_for_challenge1_2018: "¡Puedes usar este 'bucle para' para recoger
        todo el néctar. Increible!\\\r\n\\\r\nHay unas pocas acciones que querrás
        'repetir'contador' veces."
      courseF_bee_for_challenge1_2019: "¡Puedes usar este 'bucle para' para recoger
        todo el néctar. Increible!\\\r\n\\\r\nHay unas pocas acciones que querrás
        'repetir'contador' veces."
      courseF_bee_for_challenge2: Resuelve este rompecabezas con el menor número de
        bloques posible.
      courseF_bee_for_challenge2_2018: Resuelve este rompecabezas con el menor número
        de bloques posible.
      courseF_bee_for_challenge2_2019: Resuelve este rompecabezas con el menor número
        de bloques posible.
      courseF_bee_functions2: "Para facilitar las cosas, ¡es momento de aprender acerca
        de las funciones!!\\\r\n\\\r\nDe aquí en adelante, estarás usando un nuevo
        _editor de función_. Este editor es una ventana separada que aparecerá cuando
        vayas a editar una función. No verás todo el código de tu función mientras
        estás codificando en el espacio de trabajo, pero no te preocupes...¡Aún está
        ahí!  \\\r\n\\_\\_\\_\\\r\n\\\r\nPractiquemos con esta función que recoge
        néctar sólo si la abeja está en la flor. ¡Para ver el interior del código,
        haz clic en el botón azul \"editar\"!\\\r\n\\\r\nUsa la función 'obtener sólo
        néctar' para recoger el néctar de cada flor."
      courseF_bee_functions3: Ahora es tu turno de hacer una función para obtener
        algo de miel ¡**sólo** si hay un panal! Haz clic en "editar" para construir
        la función 'sólo hacer miel', luego úsala para resolver este desafío.
      courseF_bee_functions3a: "¡Cada nube puede estar escondiendo o una flor o un
        panal! Escribe una función que obtenga néctar si la abeja está en la flor,
        de lo contrario obtiene miel.\\\r\n\\\r\n¡Usa tu función para resolver este
        desafío!"
      courseF_bee_functions4: "¿Sabías que puedes llamar una función desde _dentro_
        de otra función? \\\r\n\\\r\nUsa tu función 'revisar néctar o miel' dentro
        de la nueva función 'mover y revisar' ¡para ayudar a la abeja a girar, ir
        a recoger lo que está debajo de la nube, luego respaldar y devolverse!"
      courseF_bee_functions5a: Ahora construye un 'mover y revisar' para llevar a
        la abeja a la nube cada vez que exista un camino a la derecha, ¡luego úsala
        para resolver este desafío!
      courseF_bee_functions6: "_\"¡Este campo es increíble!\"_\\\r\n\\\r\nConstruye
        tu propia función para ayudar a la abeja a atravesar el laberinto girando
        a la izquierda en las flores y a la derecha en el panal. ¡No te olvides de
        recoger el néctar y hacer miel a lo largo del camino!"
      courseF_bee_functions7: "Reconstruye tu función del último desafío para resolver
        este laberinto.\\\r\n\\\r\nGira a la izquierda en el panal y a la derecha
        en las flores. \\\r\n**Nota:** ¡Algunas esquinas no están marcadas!"
      courseF_bee_functions8a: "Debajo de esta nube, puede haber una flor con una
        cantidad desconocida de néctar, o un panal con una cantidad desconocida de
        miel. \\\r\n\\\r\n¿Puedes escribir un programa que pueda manejar ambos?"
      courseF_bee_functionsPre7: "Ahora intenta construir una función para resolver
        este laberinto. ¿Qué tan diferente es a la última vez? \\\r\n\\\r\nGira a
        la izquierda en el panal y a la derecha en las flores. \\\r\n**Nota:** ¡Algunas
        esquinas no están marcadas!"
      courseF_bee_functions_challenge1: Crea una función para recoger todo el néctar
        y la miel mientras hay un camino por delante. ¡Úsalo para completar el desafío!
      courseF_bee_functions_challenge2: "¡Usa todo lo que has aprendido para completar
        este desafío!"
      courseF_bee_fwp1: "Revisa debajo de las nubes para ver si las flores tienen
        algo de néctar. \\\r\n\\\r\nPara toda esta etapa, cada flor tendrá exactamente
        **una** unidad de néctar, y cada panal necesitará exactamente **una** unidad
        de miel.\\\r\n\\\r\n\\\r."
      courseF_bee_fwp2: "Aquí hay algún código que resuelve el último desafío.  \\\r\nLlevémoslo
        a una función, entonces llama la función para revisar esta fila para el néctar.
        \\\r\n\\_\\_\\_\\\r\nEsto puede parecer un paso extraño ahora, ¡pero pronto
        será muy útil!"
      courseF_bee_fwp3: |-
        ¡Es hora de probar la función!

        Veamos si permite recoger estas tres filas de néctares más fácilmente.
      courseF_bee_fwp4: |-
        _"¿Cómo va tu función?"_

        Necesitamos hacer algunos ajustes aquí. Haz clic en "editar" para agregar un parámetro `longitud` a la función para que aún funcione cuando la fila tenga una longitud diferente.
      courseF_bee_fwp5: "_\"¡Lo estás haciendo muy bien hasta ahora!\"_\\\r\n\\\r\nUsemos
        esta función para recoger el néctar."
      courseF_bee_fwp6: "Puedes hacer el código más corto y más eficiente cuando combinas
        funciones con otros elementos de programación.  \\\r\n\\_\\_\\_\\\r\n¿Qué
        bloques puedes usar con tu función para construir una solución breve y dulce
        para este desafío?"
      courseF_bee_fwp7: "**Desafío:** Algo luce un poco diferente. Modifica tu función
        para también hacer miel."
      courseF_bee_fwp_challenge1: Usa un 'loop para' en una función para recoger todo
        el maíz. El mismo 'loop para' puede contar a valores máximos diferentes usando
        el parámetro 'longitud'.
      courseF_bee_fwp_challenge2: "_\"**Lechuga** ¡ve si puedes manejar esta prueba
        final! ¡Dale todo lo que tienes!\"_\\\r\n\\\r\nUsa un 'loop para' en una función
        para recoger todos los vegetales en la fila. Haz que el 'loop para' cuente
        valores máximos diferentes usando el parámetro 'longitud'. Haz tu programa
        tan corto como sea posible usando el segundo 'loop para' fuera de la función.\\\r\n\\\r\n¡Mucha
        suerte!"
      courseF_bee_variables_3_2018: "_\"¡Que jardín más increíble!\"_\\\r\n\\\r\nEn
        este desafío, cada área necesita la variable para ser menos que el área anterior.
        Sustrae uno de la variable cada vez que pase por el bucle si quieres usar
        la misma función para resolver este nivel."
      courseF_bee_variables_3_2019: "_\"¡Que jardín más increíble!\"_\\\r\n\\\r\nEn
        este desafío, cada área necesita la variable para ser menos que el área anterior.
        Sustrae uno de la variable cada vez que pase por el bucle si quieres usar
        la misma función para resolver este nivel."
      courseF_bee_variables_4_2018: "\\*\"¡Increíble!\"\\\r\n\\\r\nEdita el código
        para hacerlo funcionar para este desafío."
      courseF_bee_variables_4_2019: "\\*\"¡Increíble!\"\\\r\n\\\r\nEdita el código
        para hacerlo funcionar para este desafío."
      courseF_playlab_variables1a: "Las variables pueden ser usadas para almacenar
        el texto que quieres usar más tarde. \\\r\nHaz que Kiki, jugadora de fútbol,
        grite \"¡Gol!\" asignando ese texto a la variable 'gritar'."
      courseF_playlab_variables2b: "Podemos hacer las oraciones más interesantes mezclando
        las piezas del texto con las variables.\\\r\n\\\r\nInserta la variable 'color'
        en medio de una oración poniéndola dentro del espacio vacío en el bloque 'unir'."
      courseF_playlab_variables3b_josh: 'Ayuda a Kiki a tener una conversación con
        Brian usando la variable ''edad'' en todos los lugares don se deba usar edad
        ''12''. '
      courseF_playlab_variables4b: "Ahora, El Pirata Pegleg tiene algunas preguntas
        para Brien.\\\r\n\\\r\nEste código usa un bloque 'preguntar', para que puedas
        escribir las respuestas de Brian después de hacer clic en \"Ejecutar\". \\\r\n\\\r\nPon
        las variables en los lugares correctos para crear esta conversación."
      courseF_playlab_variables5c: "¡Vamos a combinar el bloque 'preguntar' con una
        afirmación 'si/si no' para divertirnos!\\\r\n\\\r\nEl Pirata Pegleg te va
        a hacer una pregunta. Arrastra una copia de la variable 'responder' en el
        condicional para que la afirmación 'si' revise si ingresaste o no el color
        correcto."
      courseF_playlab_variables6c: "En el resto de esta etapa, usaremos bloques múltiples
        'preguntar' y afirmaciones múltiples 'si/si no' para crear un juego que ¡**tú**
        controles!\\\r\n\\\r\nComienza estableciendo la variable 'códigonombre' a
        una palabra que puedas recordar. Luego, usa un bloque 'preguntar' para obtener
        un códigonombre para los usuarios. Necesitarás un bloque 'si/si no' para ver
        sí el códigonombre ingresado sea igual al códigonombre que has establecido."
      courseF_playlab_variables7b: "¡Momento de hacer tu propio proyecto!  \\\r\n\\\r\nCrea
        algunas preguntas y une las respuestas para formar tu propia historia.\\\r\n\\\r\nSi
        necesitas ideas, haz clic en el ícono de pistas."
      courseF_playlab_variables7c: "Agrega otro bloque 'preguntar' para pedirle al
        usuario que adivine un color.  \\\r\n\\\r\nMantén tu afirmación 'si/si no'
        de tal manera que tu códigonombre siempre gane el juego, pero  que códigonombre
        por medio siempre pierda."
      courseF_playlab_variables8c: Usa el bloque 'unir' (en la caja de herramientas
        bajo "Texto") para hacer los mensajes ganar/perder más personales incorporando
        las variables 'códigonombre' y 'color' a las respuestas.
      courseF_playlab_variables_challenge1: Usa estos bloques para hacer que los actores
        compartan un chiste toc/toc. ¡Cambia el remate y establece tu propio chiste!
      courseF_playlab_variables_challenge2: "¡Ahora a un juego de etiqueta! Etiqueta
        Gato (actor 2) para obtener 2 puntos. Etiqueta Pingüino (actor 3) para obtener
        3 puntos.  ¡Obtén exactamente 10 puntos para ganar!  \\\r\n \\\r\nPero ten
        cuidado, cuando Gato y Pingüino se etiqueten el uno al otro, se llevan los
        puntos.\\\r\n\\\r\n\\---\\\r\n\\\r\nAgrega los bloques necesarios para hacer
        este juego funcionar de la forma en que ha sido explicado.\\\r\n\n-   ¿Cómo
        haces que Perro se mueva en todas direcciones usando las teclas de flecha?\\\r\n-
        \  ¿Cómo agregas puntos cuando Perro etiqueta a Gato o a Pingüino?\\\r\n-
        \  ¿Cómo restas puntos cuando Gato y Pingüino se tocan?"
      coursea_maze_ramp1_2018: Para llevar al pájaro hasta el cerdo, encaja el bloque
        <xml><block type="maze_moveEast"/></xml> a la parte inferior del bloque <xml><block
        type="when_run"/></xml> , ¡luego presiona![](https://images.code.org/473d3e1e4a05104502a99048338a45df-image-1522887336604.11.32.png)!
      coursea_maze_ramp1_2019: Para llevar al pájaro hasta el cerdo, encaja el bloque
        <xml><block type="maze_moveEast"/></xml> a la parte inferior del bloque <xml><block
        type="when_run"/></xml> , ¡luego presiona![](https://images.code.org/473d3e1e4a05104502a99048338a45df-image-1522887336604.11.32.png)!
      frozen circle: Un círculo es una figura especial. ¿Puedes adivinar qué número
        debe reemplazar los signos de interrogación para dibujar un círculo?
      frozen circle function: Utiliza el nuevo bloque "Crear un círculo" para crear
        10 círculos superpuestos. No te olvides de saltar hacia adelante entre cada
        círculo.
      frozen circle function in circle: Ahora crearemos 20 círculos superpuestos,
        girando 18 grados entre cada círculo.
      frozen circle function with parameter: Aquí está un bloque "Crear círculo" que
        puede dibujar círculos de diferentes tamaños. ¿Puedes usarlo para dibujar
        un círculo pequeño de tamaño 5 y uno más grande de tamaño 10?
      frozen cross: Cubre un bloque de "Repetir" alrededor de estos comandos para
        crear un signo más. ¿Notaste que Elsa puede moverse hacia adelante y hacia
        atrás?
      frozen cross rotate: Ahora trata de repetirlo 10 veces. ¿Cuántos grados necesitas
        girar entre cada línea?
      frozen cross rotate dense: "¡Ahora repitámoslo 90 veces! ¿Cuántas veces cabe
        90 en 360? Pista: Es un número muy pequeño."
      frozen diamond: Utiliza una repetición alrededor de estos bloques para crear
        un paralelogramo. Es como un rectángulo, pero tiene diferentes ángulos. Éste
        tiene 60 grados y 120 ángulos de grados en lugar de todos los 90 ángulos de
        grados.
      frozen diamond mini snowflake: ¿Sabías que cada copo de nieve tiene una forma
        distinta? Crearemos un nuevo copo de nieve utilizando otro bloque de "Repetir"
        para repetir el paralelogramo 4 veces, girando hacia la derecha 90 grados
        entre cada paralelogramo.
      frozen diamond snowflake: Ahora crearemos un nuevo copo de nieve, utilizando
        el bloque "Repetir" para repetir el paralelogramo 10 veces, girando a la derecha
        36 grados entre cada uno.
      frozen freeplay: "¡Te has convertido oficialmente en un artista maestro! Crea
        un paraíso invernal."
      frozen perpendicular: Ahora veamos si podemos crear dos líneas que se encuentran
        a un ángulo de 90 grados una de la otra. Necesitarás usar tanto el bloque
        de "Giro" como el bloque de "Mover".
      frozen snowflake branch: Intenta utilizar el bloque "Crear una rama de copo
        de nieve" para dibujar 3 ramas, lo que empezará a parecerse a un copo de nieve.
      frozen snowflake full: "¡Ahora repitámoslo 8 veces para dibujar un hermoso copo
        de nieve!"
      frozen snowflower: Formas complejas de nieve pueden crearse usando figuras geométricas
        muy simples. ¿Puedes crear uno repitiendo 5 círculos de tamaño 5 y 5 círculos
        de tamaño 10?
      frozen square iterative: Parece que estamos a la mitad de completar un cuadrado.
        Ahora pongamos 4 líneas juntas para crear un cuadrado.
      frozen square loop: ¡Hola! Soy Anna de Arandelle. Dibujemos un cuadrado con
        el bloque de "Repetir", lo que nos permitirá utilizar menos bloques. ¿Cuántas
        veces (???) se deberían repetir los bloques que están dentro del bloque "Repetir"
        para formar un cuadrado?
      frozen square loop 3x: Ahora crearemos tres cuadrados, girando al terminar cada
        cuadrado. Asegúrate de girar 120 grados antes de iniciar un nuevo cuadrado.
      frozen square snowflake: ¿Puedes dibujar un copo de nieve utilizando el bloque
        "Repetir" para dibujar un cuadrado 10 veces y el bloque "Girar" para girar
        36 grados entre cada cuadrado?
      grade2_collector_10: "¡Casi terminas! \n\n¡Recoge tantos tesoros como puedas
        para finalizar la etapa!"
      grade2_collector_10_2018: "¡Casi terminas! \n\n¡Recoge tantos tesoros como puedas
        para finalizar la etapa!"
      grade2_collector_10_2019: "¡Casi terminas! \n\n¡Recoge tantos tesoros como puedas
        para finalizar la etapa!"
      grade2_collector_A: Ayuda a Laurel a recoger todo el tesoro.
      grade2_collector_A_2018: Ayuda a Laurel a recoger todo el tesoro.
      grade2_collector_A_2019: Ayuda a Laurel a recoger todo el tesoro.
      grade5_artist_variables_triangles1: |-
        Dibujemos un triángulo equilátero.

        Tiene que ser exactamente de 50 pixeles de largo en cada lado.
      grade5_artist_variables_triangles1_2018: |-
        Dibujemos un triángulo equilátero.

        Tiene que ser exactamente de 50 pixeles de largo en cada lado.
      grade5_artist_variables_triangles1_2019: |-
        Dibujemos un triángulo equilátero.

        Tiene que ser exactamente de 50 pixeles de largo en cada lado.
      iceage_free_play: "¡Momento de crear tu propio juego o historia!  \\\r\n\\\r\n¡Cuando
        hayas terminado, haz clic en \"Finalizar\" para que tus amigos prueben tu
        juego en sus teléfonos, tablets o computadores!\\\r\n¿No sabes qué hacer?
        Haz clic en las sugerencias para detalles."
      iceage_hello2: Manny (actor 2) encontró a Sid (actor 1) y quiere invitarlo a
        una aventura. Ayúdalos a saludarse usando el bloque `actor ___ dice` dos veces.
      iceage_move_events: "¡Scrat aún está buscando bellotas! \\\r\nAyúdalo a correr
        alrededor adjuntando el bloque `mover actor 1` a cada uno de los eventos y
        cambiar la dirección para usar cada tecla de flecha. \\\r\nCuando estés listo
        haz clic en \"Ejecutar\" e intenta recoger todas las bellotas."
      iceage_move_to_actor: Diego (actor 1) está buscando a Manny (actor 2). ¿Puedes
        aydudarlos a juntarse? Conecta un bloque al evento `cuando al actor toca`
        para hacer un sonido cuando se encuentren.
      iceage_move_to_flag: "¡Scrat está buscando su bellota! ¿Puedes ayudarlo a moverse
        los últimos 200 pixeles?"
      iceage_repeat: El bloque `repetir siempre` te permite ejecutar un código continuamente.
        ¿Puedes poner los bloques en el interior para ayudar a Granny a hacer algo
        de ejercicio moviéndose hacia la izquierda y la derecha repetidamente?
      iceage_sound_and_points: "Aquí está tú código del último desafío, así como el
        código para mover a Granny a la izquierda y a la derecha. \\\r\n¿Puedes finalizar
        el programa de tal manera que puedas **hacer un sonido** y **marcar un punto**
        cuando Sid y Granny choquen? \\\r\nPresiona \"\"ejecutar\" para jugar el juego."
      iceage_throw_hearts: "Sid quiere decirle a su abuela, Granny, que la ama.   \\\r\n\\\r\n¡Usa
        el comando `actor __ lanza` para hacer que Sid (actor 1) lance corazones a
        Granny (actor 2)! \\\r\nAjusta el humor de Granny en feliz cuando le golpeen
        los corazones."
      iceage_warn_ice_age: "¡Todos necesitan moverse más rápido porque se aproxima
        una tormenta de hielo! \\\r\nCambia la escena a un fondo helado y establece
        la velocidad de Sid (actor 1) en rápido.\\\r\nPresiona \"Ejecutar\" y mueve
        a Sid hacia Diego para que le advierta."
      ramp_artist_loops1: |-
        ¡Que día más hermoso!

        Ayuda a Artista a cubrir sus flores antes del invierno avanzando 60 pixeles.
      ramp_artist_loops1_2018: |-
        ¡Que día más hermoso!

        Ayuda a Artista a cubrir sus flores antes del invierno avanzando 60 pixeles.
      ramp_artist_loops1_2019: |-
        ¡Que día más hermoso!

        Ayuda a Artista a cubrir sus flores antes del invierno avanzando 60 pixeles.
      ramp_artist_loops2: Agrega algo de belleza repitiendo el paso cinco veces, cambiando
        a un color aleatorio entre cada movimiento.
      ramp_artist_loops2_2018: Agrega algo de belleza repitiendo el paso cinco veces,
        cambiando a un color aleatorio entre cada movimiento.
      ramp_artist_loops2_2019: Agrega algo de belleza repitiendo el paso cinco veces,
        cambiando a un color aleatorio entre cada movimiento.
      ramp_artist_loops3: Dibuja la línea de colores 5 veces de nuevo, esta vez usando
        el loop 'repetir'.
      ramp_artist_loops3_2018: Dibuja la línea de colores 5 veces de nuevo, esta vez
        usando el loop 'repetir'.
      ramp_artist_loops3_2019: Dibuja la línea de colores 5 veces de nuevo, esta vez
        usando el loop 'repetir'.
      ramp_artist_loops4: "¿Qué sucede cuando agregas giros a la derecha de 72 grados
        luego de todo lo demás dentro de tu loop?"
      ramp_artist_loops4_2018: "¿Qué sucede cuando agregas giros a la derecha de 72
        grados luego de todo lo demás dentro de tu loop?"
      ramp_artist_loops4_2019: "¿Qué sucede cuando agregas un giro a la derecha \nde
        72 grados después de todo lo demás dentro de tu bucle?"
      ramp_artist_loops5: "¡Los loops de seguro hacen que escribir códigos sea más
        fácil!\n\nUsa loops para dibujar la escalera. \n\n-   Cada escalón es de 50
        pixeles de largo y 50 pixeles de alto\n-   Necesitarás girar en 90 grado en
        cada dirección"
      ramp_artist_loops5_2018: "¡Los loops de seguro hacen que escribir códigos sea
        más fácil!\n\nUsa loops para dibujar la escalera. \n\n-   Cada escalón es
        de 50 pixeles de largo y 50 pixeles de alto\n-   Necesitarás girar en 90 grado
        en cada dirección"
      ramp_artist_loops5_2019: "¡Los loops de seguro hacen que escribir códigos sea
        más fácil!\n\nUsa loops para dibujar la escalera. \n\n-   Cada escalón es
        de 50 pixeles de largo y 50 pixeles de alto\n-   Necesitarás girar en 90 grado
        en cada dirección"
      ramp_artist_loops6: |-
        ¡Esta escalera es mucho más grande, pero se necesita la misma cantidad de código como el último desafío!

        Arregla este loop para completar el desafío.
      ramp_artist_loops6_2018: |-
        ¡Esta escalera es mucho más grande, pero se necesita la misma cantidad de código como el último desafío!

        Arregla este loop para completar el desafío.
      ramp_artist_loops6_2019: |-
        ¡Esta escalera es mucho más grande, pero se necesita la misma cantidad de código como el último desafío!

        Arregla este loop para completar el desafío.
      ramp_artist_loops7: "¡Busca un patrón y haz este código más corto usando loops!"
      ramp_artist_loops7_2018: "¡Busca un patrón y haz este código más corto usando
        loops!"
      ramp_artist_loops7_2019: "¡Busca un patrón y haz este código más corto usando
        loops!"
      ramp_artist_loops8: "**Desafío:** Busca un patrón y haz este código más corto
        usando loops."
      ramp_artist_loops8_2018: "**Desafío:** Busca un patrón y haz este código más
        corto usando loops."
      ramp_artist_loops8_2019: "**Desafío:** Busca un patrón y haz este código más
        corto usando loops."
      ramp_artist_loops9: Resuelve este desafío dibujando un cuadrado de lados de
        200 pixeles.
      ramp_artist_loops9_2018: Resuelve este desafío dibujando un cuadrado de lados
        de 200 pixeles.
      ramp_artist_loops9_2019: Resuelve este desafío dibujando un cuadrado de lados
        de 200 pixeles.
