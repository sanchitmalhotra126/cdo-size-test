---
km-KH:
  data:
    long_instructions:
      2-3 Artist Debugging 10: "The direction pad on my game controller\nis too narrow.
        \\\r\n\\\r\nCan you make it wider by 10 pixels?\\\r\n\\\r\nTry running\nthe
        code first to see what's wrong."
      2-3 Artist Debugging 11: "My snowflake is falling apart!\\\r\n\\\r\nCan\nyou
        figure out what's going wrong?"
      2-3 Artist Debugging 2: "This code for the cat's whiskers is wrong.\n\\\r\n\\\r\nFix
        this code to draw whiskers that are all the same length."
      2-3 Artist Debugging 3: "My boat has a hole! \\\r\n\\\r\nWhat do you\nneed to
        fix to make the ends meet?"
      2-3 Artist Debugging 5: "The code that we have for the leg and\nfoot is wrong.
        \\\r\n\\\r\nCan you fix it?"
      2-3 Artist Debugging 6: "Looks like I'm sitting on a chair that’s\nmissing a
        leg!\\\r\n\\\r\nEdit the code to draw the last leg."
      2-3 Artist Debugging 7: "Looks like the C in code is drawn backwards!\\\r\n\\\r\nCan\nyou
        make it look like a C again?"
      2-3 Artist Debugging 8: "My teacher says that I should finish what\nI start!\\\r\n\\\r\nHelp
        me finish my pinwheel. Can you figure out what's wrong?"
      2-3 Artist Debugging 9: "Something is off!\\\r\n\\\r\nThe code for\nthis stem
        is wrong. Can you figure out how to get the artist to trace the\nstem the
        right way?"
      2-3 Artist Functions 11.5: "Here's that same `draw a hexagon`\nfunction. \\\r\n\\\r\nWhat
        happens if you loop the main program 6 times, turning\n60 degrees each time
        you loop?"
      2-3 Artist Functions 12: "Functions are really great for drawing\ncomplex things
        multiple times. \\\r\n\\\r\nCan you use the `draw a flower` function\nto fill
        the rest of the planter box?\\\r\nThe plants are all 100 pixels apart."
      2-3 Artist Functions 2: "Functions let you define new blocks! \\\r\n\\\r\nWe've\nmoved
        the blocks needed for drawing a square into a function called `draw\na square`.
        This time, use the `draw a square` function to create the glasses.\n\\\r\n\\\r\nThe
        squares are 75 pixels apart."
      2-3 Artist Functions 3: "Edit the function to draw a square with\na side length
        of 115 to draw the bigger glasses. \\\r\n\\\r\nThe squares are now\n45 pixels
        apart."
      2-3 Artist Loops New 13: "We are going to start you with some code\n(in grey)
        to make one diamond. \\\r\n\\\r\nLoop the grey code to create a fun\npattern!"
      2-3 Artist Loops New 2: "Here is the same puzzle that we just solved,\nbut this
        time, we can only use one `move forward` block and one `turn` block\nthis
        time.\\\r\n\\\r\nCan you use a `repeat` to solve this puzzle?"
      2-3 Artist Nested Loops 2: "Now loop the triangle 6 times. \\\r\n\\\r\nAfter\neach
        triangle, you'll need to turn 60 degrees before drawing the next."
      2-3 Artist Nested Loops 4: "Loop this diamond 12 times to draw\na flower!\\\r\n\\\r\nNote:
        We'll use the same angle to loop 12 diamonds as we\ndid for 12 triangles.
        \ \\\r\nHow much do you need to turn after each shape?"
      2-3 Artist Nested Loops 5: "Fill in this building's windows using\na nested
        loop. \\\r\n\\\r\nThe windows are 20 pixels long and 20 pixels apart."
      2-3 Artist Nested Loops 7: "Loop this triangle 10 times to draw\nthe sun. \\\r\n\\\r\nYou'll
        need to move and turn after each triangle. \\\r\n\\\r\nYou\ncan figure out
        how much to turn by dividing the number of degrees in a circle\nby the number
        of triangles that make it up."
      2-3 Artist Nested Loops 8: "Now let's add some grass to our picture.\n\\\r\n\\\r\nEach
        tuft of grass is 50 pixels apart."
      2-3 Artist Nested Loops 9: "We'll finish this picture by adding\nour flower.
        \\\r\n\\\r\nLoop the diamond 12 times to draw the flower."
      2-3 Bee Conditionals 11: "I wonder what's out there!\\\r\n\\\r\nHelp\nme fly
        around the yard and collect nectar only from the flowers that have\nsome. "
      2-3 Bee Conditionals 13: "There's a lot happening here!\\\r\n\\\r\nUse\nwhat
        you've learned to collect all of the nectar and then make the honey."
      2-3 Bee Conditionals 15: "This stair step pattern should look familiar.  \\\r\n\\\r\nCan\nyou
        collect nectar only from the flowers that have some, using as few blocks\nas
        possible?"
      2-3 Bee Conditionals 3: "Look at all of that nectar!\\\r\n\\\r\nHelp\nme collect
        the nectar and make the honey using as few blocks as you can.  "
      2-3 Bee Debugging 3: "Ooh, this one stings!\\\r\n\\\r\nFix the error(s)\nto
        collect all of the nectar."
      2-3 Bee Debugging 6: "What a sweet challenge!\\\r\n\\\r\nFix the error(s)\nto
        collect all of the nectar."
      2-3 Bee Debugging 9: "\"Bee\" patient with this one!\\\r\n\\\r\nYou\nwill need
        to fix a couple of things in this program to collect all of the\nnectar and
        make all of the honey."
      2-3 Bee Functions 10: "Purple flowers change between either 1 or\n0 nectar each
        time you run the puzzle.   \\\r\n\\\r\nCreate a function that collects\nnectar
        only from purple flowers that have nectar."
      2-3 Bee Functions 2: "Functions are blocks of code that perform\na task.  \\\r\n\\\r\nUse
        the `get 5` function to get 5 nectars at a time."
      2-3 Bee Functions 4: "The `move and get nectar` function turns\nthe bee, collects
        nectar, and then returns the bee to where it started.  \\\r\n\\\r\nUse\nthe
        function to collect all of the nectar."
      2-3 Bee Loops 1: "Those flowers look tasty!\\\r\n\\\r\nCollect nectar\nfrom
        each of the flowers using the fewest blocks possible."
      2-3 Bee Loops 4A: "How many times can loops help you in this puzzle?  \\\r\n\\\r\nLoops\nare
        your friend! Use a few of them to complete this puzzle with the fewest\nblocks
        possible."
      2-3 Bee Loops 8: "These purple flowers have different amount of\nnectar each
        time you run the puzzle. \\\r\n\\\r\nUse the `while nectar` loop to\ncollect
        all of the nectar. \\\r\n\\\r\nThis loop will run as long as the condition\nis
        true, in this case `nectar > 0`."
      2-3 Maze Loops 18: "Get me to the sunflower using the fewest blocks\npossible!
        \ \\\r\n\\\r\nTry using one `repeat` loop inside of another to cut down\non
        the amount of code you need."
      4-5 Artist Patterns 1: "Draw this square using a loop.\\\r\n\\\r\nEach\nside
        is 20 pixels long."
      4-5 Artist Patterns 12: "If you create another loop like this one,\nbut turn
        left instead of right, what happens? \\\r\n\\\r\nCan you repeat all of\nthat
        to draw this wave?"
      4-5 Artist Patterns 13: "Now let's loop that whole thing four\ntimes to create
        this picture frame. Watch out for the corners - you can't\njust turn 90 degrees!
        \\\r\n\\\r\nIf looping a 3 degree turn 60 times makes a\nhalf circle, which
        of these blocks of code will make an additional quarter\ncircle for the corners?"
      4-5 Artist Patterns 9: "Now repeat this code 3 times and draw the\nwhole row.
        \\\r\n\\\r\nEach hexagon is 80 pixels wide from the furthest points\nleft
        to right."
      4-5 Bee Conditionals 2: "More clouds! \\\r\n\\\r\nCheck underneath\nevery cloud
        to see if it is hiding a flower before you get nectar.  \\\r\n\\\r\nRemember:\nNot
        all clouds hide the same thing!"
      4-5 Bee Conditionals 5: "There will be either a flower or a honeycomb\nunder
        each of those clouds!\\\r\n\\\r\nUse the `if/else` block to collect nectar\nif
        there is a flower.\\\r\nOtherwise, make honey (because there is a honeycomb)."
      4-5 Bee Conditionals 6: "I am not sure how much nectar this flower\nhas, but
        I know it has either 1, 2, or 3 nectar. \\\r\n\\\r\nCombine the conditional\nblocks
        (`if` and/or `if/else`) to only get as much nectar as the flower has.\n\\\r\n\\\r\nRemember,
        the amount of nectar can change each time you run the puzzle!"
      4-5 Bee Conditionals 7: "These flowers can have 3, 2, or 1 nectar.\n\\\r\n\\\r\nComplete
        the `check purple flower` function and use it to collect\nall of the nectar
        at the flowers."
      4-5 Bee Conditionals 8: "Write the function for `check flower make\nhoney`.
        \\\r\n\\\r\nYour function should check if the purple flower has 3, 2,\nor
        1 nectar and get all of the nectar. \\\r\nThen, move forward and make honey."
      4-5 Bee Conditionals Assessment 1: "**Assessment:** This cloud\nis either hiding
        a flower with one nectar or a honeycomb that needs one honey.  \\\r\n\\\r\nComplete\nthe
        `get nectar or make honey` function, then call it to collect the nectar\nor
        honey. \\\r"
      4-5 Bee Debugging 1: "These blocks are really bugging me. \\\r\n\\\r\nCan\nyou
        fix them?"
      4-5 Bee Debugging 6: "The purple flower has a different amount\nof nectar each
        time you run the puzzle. \\\r\n\\\r\nFix the blocks to get all\nof the nectar
        from the flower each time."
      4-5 Bee Nested Loops 4: "Collect all of the nectar from each flower\nand make
        honey at the honeycomb. \\\r\n\\\r\nUse a nested loop. "
      4-5 Maze 9: "Now we have a new block called `repeat until`.  \\\r\nThis\nwill
        let us keep looping commands until the zombie gets the sunflower.  \\\r\n\\\r\nUse\nthe
        new `repeat until` block to solve this puzzle in as few commands as possible."
      4-5 Maze Conditionals 10: "Can you add just 3 blocks to help the\nzombie solve
        a more complex maze? \\\r\n\\\r\nIf you do it right, he can walk\nany curvy
        path no matter the length!"
      4-5 Maze Conditionals 3: "Use the `if` block to help me decide\nwhen to turn.
        \\\r"
      4-5 Maze Conditionals 5: "\"Me want sunflower!\"  \\\r\n\\\r\nUse an\n`if` statement
        to get the zombie to the sunflower with the fewest number of\nblocks."
      4-5 Maze Conditionals 6: "\"Eat sunflower!\"\\\r\n\\\r\nUse an `if`\nstatement
        to get the zombie to the sunflower with the fewest number of blocks."
      4-5 Maze Conditionals 8: "The `if/else` block checks a condition,\nand then
        does one thing OR another. \\\r\n\\\r\nUse this new block to get me to\nthe
        sunflower."
      4-5 Maze Conditionals 9: "One more practice puzzle with the `if/else`\nblock!\\\r\n\\\r\nTrace
        it with your finger to see if you can figure it out on\nyour first try."
      4-5 Nested Loops 3: "Create a sun by nesting the starter code in\nanother loop.\\\r\n\\\r\nTo
        get this cool design with a hollow center, you'll\nneed to jump forward by
        the length of the triangle before turning."
      4-5 Nested Loops 7: "Loop this design 10 times. \\\r\n\\\r\nHow much\ndo you
        have to turn each time you loop?"
      4-5 Nested Loops 8: "Loop this shape 6 times. \\\r\n\\\r\nHow much\ndo you have
        to turn each time you loop? "
      4-5 While Loops 3: "Use as few blocks as possible to complete this\npuzzle!
        \ \\\r\n\\\r\nMove me to the pile and remove all the dirt, then move to\nthe
        hole and fill it completely."
      4-5 While Loops 4: "Wow, look at that! \\\r\n\\\r\nI don't know how\nmany shovelfuls
        of dirt this hole needs.  \\\r\nCan you write a program that\nkeeps using
        the `fill` block until the ground is even?  "
      Course 4 Play Lab Params 4: "Here's a function called `patrol`.\n\\\r\n\\\r\nEdit
        `patrol` to move Cat up 400 pixels and then down 400 pixels."
      Function intro Ryan: "**មុខងារ**ឈ្មោះ`build bridge`\nដែលនៅក្នុងកន្លែលសរសេរកូដ។
        កូដទាំងអស់របស់អ្នកដែលត្រូវប្រើសំរាប់ឆ្លងទន្លេត្រូវបានរៀបចំ!\\\r\n\\\r\nចុចលើប្លុកតូចពណ៌បៃតងពីរដងនៅក្នុងកន្លែងសរសេរកូដរបស់អ្នកដើម្បីកែតម្រូវនូវផ្លូវនិងអោយ
        {currentPlayerName} ទៅកាន់គប់ភ្លើងថ្មក្រហម [redstone_torch]។"
      Function intro Ryan_2019: "**មុខងារ**ឈ្មោះ`build bridge`\nដែលនៅក្នុងកន្លែលសរសេរកូដ។
        កូដទាំងអស់របស់អ្នកដែលត្រូវប្រើសំរាប់ឆ្លងទន្លេត្រូវបានរៀបចំ!\\\r\n\\\r\nចុចលើប្លុកតូចពណ៌បៃតងពីរដងនៅក្នុងកន្លែងសរសេរកូដរបស់អ្នកដើម្បីកែតម្រូវនូវផ្លូវនិងអោយ
        {currentPlayerName} ទៅកាន់គប់ភ្លើងថ្មក្រហម [redstone_torch]។"
      K-1 Maze Loops 11: "Get me to the pig!  \\\r\nThe `repeat` loop will\nmake this
        easier."
      K-1 Maze Loops 12: "Get me to the pig!  \\\r\nThe `repeat` loop will\nmake this
        easier."
      MC_HOC_2017_01_RETRY: "ទ្វានេះត្រូបានបិទ តែជំនួយការនៅទីនេះដើម្បីជួយ!\\\r\n\\\r\nទាញប្លុក`move
        forward`មួយដែលនៅក្រោមប្លុក`when\nrun` នៅក្នុងនៅក្នុងកន្លែងសរសេរកូដ ដើម្បីឲជំនួយការសង្កត់បន្ទះក្តារ
        [PressurePlate_Up] រួចចុចប៊ូតុង \"Run\" ហើយប្រើប្រាស់គ្រាប់ចុចមានសញ្ញាព្រួញដើម្បីចាកចេញពីផ្ទះហើយប្រមូល**ប្រអប់**
        [chest]។"
      MC_HOC_2017_01_RETRY_2019: "ទ្វានេះត្រូបានបិទ តែជំនួយការនៅទីនេះដើម្បីជួយ!\\\r\n\\\r\nទាញប្លុក`move
        forward`មួយដែលនៅក្រោមប្លុក`when\nrun` នៅក្នុងនៅក្នុងកន្លែងសរសេរកូដ ដើម្បីឲជំនួយការសង្កត់បន្ទះក្តារ
        [PressurePlate_Up] រួចចុចប៊ូតុង \"Run\" ហើយប្រើប្រាស់គ្រាប់ចុចមានសញ្ញាព្រួញដើម្បីចាកចេញពីផ្ទះហើយប្រមូល**ប្រអប់**
        [chest]។"
      MC_HOC_2017_02_Cole: "{currentPlayerName} សំដៅទៅកាន់\nការផ្សងព្រេង! ដើម្បីជាជំនួយ
        ទៅកាន់ **ផែនទី** [map_empty] ដែលនៅខាងក្រោយទ្វារដែលបានចាក់សោរនៅខាងស្តាំ។ \\\r\n
        \\\r\nប្រើប្រាស់កូដនៅក្នុងកន្លែងសរសេរកូដដើម្បីរំកិលជំនួយការ\nដើម្បីសង្កត់បន្ទះក្តារ
        [PressurePlate_Up] ដូច្នេះ {currentPlayerName} អាចឆ្លង\nកាត់បាន។ "
      MC_HOC_2017_02_Cole_2019: "{currentPlayerName} សំដៅទៅកាន់\nការផ្សងព្រេង! ដើម្បីជាជំនួយ
        ទៅកាន់ **ផែនទី** [map_empty] ដែលនៅខាងក្រោយទ្វារដែលបានចាក់សោរនៅខាងស្តាំ។ \\\r\n
        \\\r\nប្រើប្រាស់កូដនៅក្នុងកន្លែងសរសេរកូដដើម្បីរំកិលជំនួយការ\nដើម្បីសង្កត់បន្ទះក្តារ
        [PressurePlate_Up] ដូច្នេះ {currentPlayerName} អាចឆ្លង\nកាត់បាន។ "
      MC_HOC_2017_03_Cole: "{currentPlayerName} បន្ត\nដំណើរផ្សងព្រេង ហើយត្រូវការ **ត្រីវិស័យ**
        [compass] ដើម្បីរៀបចំក្នុងការធ្វើដំណើរ  \\\r\n   \\\r\nសរសេរកូដ\nដើម្បីឲជំនួយការបើករបង។ "
      MC_HOC_2017_03_Cole_2019: "{currentPlayerName} បន្ត\nដំណើរផ្សងព្រេង ហើយត្រូវការ
        **ត្រីវិស័យ** [compass] ដើម្បីរៀបចំក្នុងការធ្វើដំណើរ  \\\r\n   \\\r\nសរសេរកូដ\nដើម្បីឲជំនួយការបើករបង។ "
      MC_HOC_2017_04POINT5_RYAN: "អ្នកបានឲវាឆ្លងកាត់ហើយ!\\\r\n\\\r\nឥលូវ\nទទួល{currentPlayerName}
        ដោយសុវត្ថភាពតាមផ្លូវវង្វេងដោយប្រមូល**ពូថៅ**[diamond_axe]"
      MC_HOC_2017_04POINT5_RYAN_2019: "អ្នកបានឲវាឆ្លងកាត់ហើយ!\\\r\n\\\r\nឥលូវ\nទទួល{currentPlayerName}
        ដោយសុវត្ថភាពតាមផ្លូវវង្វេងដោយប្រមូល**ពូថៅ**[diamond_axe]"
      MC_HOC_2017_04_Cole: "ជំនួយការអាចធ្វើដំណើរឆ្លងកាត់ទឹកបាន!  \\\r\n\n\\\r\nប្រើរង្វិលជុំ
        `repeat` មួយដើម្បីដោះស្រាយរូបផ្គុំនេះ ហើយជួយ {currentPlayerName}\nទៅកាន់ **ធុង**
        [bucket_empty] ដែលនៅខាងក្រោយទ្វារ។ "
      MC_HOC_2017_04_Cole_2019: "ជំនួយការអាចធ្វើដំណើរឆ្លងកាត់ទឹកបាន!  \\\r\n\n\\\r\nប្រើរង្វិលជុំ
        `repeat` មួយដើម្បីដោះស្រាយរូបផ្គុំនេះ ហើយជួយ {currentPlayerName}\nទៅកាន់ **ធុង**
        [bucket_empty] ដែលនៅខាងក្រោយទ្វារ។ "
      MC_HOC_2017_05_Cole: "ទេ ស្ពានត្រូវបានដកចេញហើយ!\\\r\n\\\r\nសរសេរកូដ\nដើម្បីឲជំនួយការសាងសង់ស្ពានឡើងវិញដោយប្រើប្លុក`place`ដូច្នេះ{currentPlayerName}
        អាចទៅយក**ប៉ែល**បាន [diamond_shovel]។"
      MC_HOC_2017_05_Cole_2019: "ទេ ស្ពានត្រូវបានដកចេញហើយ!\\\r\n\\\r\nសរសេរកូដ\nដើម្បីឲជំនួយការសាងសង់ស្ពានឡើងវិញដោយប្រើប្លុក`place`ដូច្នេះ{currentPlayerName}
        អាចទៅយក**ប៉ែល**បាន [diamond_shovel]។"
      MC_HOC_2017_06_Cole: "ទន្លេមួយទៀត តែមួយនេះគឺធំណាស់!\\\r\n\\\r\nកែតម្រូវកូដឡើងវិញដើម្បីជួយជំនួយការក្នុងការសង់ស្ពានដូចនេះ{currentPlayerName}\nអាចទៅយក**ចបជីក**បាន
        [diamond_pickaxe]។ "
      MC_HOC_2017_06_Cole_2019: "ទន្លេមួយទៀត តែមួយនេះគឺធំណាស់!\\\r\n\\\r\nកែតម្រូវកូដឡើងវិញដើម្បីជួយជំនួយការក្នុងការសង់ស្ពានដូចនេះ{currentPlayerName}\nអាចទៅយក**ចបជីក**បាន
        [diamond_pickaxe]។ "
      MC_HOC_2017_07_Cole: "មានដុំទឹកកកនៅតាមផ្លូវ!\\\r\n\\\r\nមុខងារ\n`clear path`អាចជួយអ្នកក្នុងការកំទេចដុំទឹកកកដើម្បីអោយ{currentPlayerName}
        ទៅកាន់ឧបករណ៏ដឹកជញ្ចូនតាមផ្លូវដែក [minecart_normal]! "
      MC_HOC_2017_07_Cole_2019: "មានដុំទឹកកកនៅតាមផ្លូវ!\\\r\n\\\r\nមុខងារ\n`clear
        path`អាចជួយអ្នកក្នុងការកំទេចដុំទឹកកកដើម្បីអោយ{currentPlayerName} ទៅកាន់ឧបករណ៏ដឹកជញ្ចូនតាមផ្លូវដែក
        [minecart_normal]! "
      MC_HOC_2017_10_RETRY: "តើអ្នកអាចស្វែងរកចំនុចខុសគ្នារវាងមុខងារទាំងពីរនៅកន្លែងសរសេរកូដដែរឬទេ?\\\r\n\\\r\nប្រើមុខងារទាំងនេះជាមួយកូដដែលមាននៅក្នុងប្រអប់ឧបករណ៍ដើម្បីសំអាតផ្លូវសំរាប់ឧបករណ៍ដឹកជញ្ជូនតាមផ្លូវដែក
        រួចប្រមូល**ថ្មនិងដែក** [flint_and_steel]។ \\\r "
      MC_HOC_2017_10_RETRY_2019: "តើអ្នកអាចស្វែងរកចំនុចខុសគ្នារវាងមុខងារទាំងពីរនៅកន្លែងសរសេរកូដដែរឬទេ?\\\r\n\\\r\nប្រើមុខងារទាំងនេះជាមួយកូដដែលមាននៅក្នុងប្រអប់ឧបករណ៍ដើម្បីសំអាតផ្លូវសំរាប់ឧបករណ៍ដឹកជញ្ជូនតាមផ្លូវដែក
        រួចប្រមូល**ថ្មនិងដែក** [flint_and_steel]។ \\\r "
      MC_HOC_2017_Ali: "សូមក្រលែកមើលមុខងារខាងក្រោម។ តើអ្នកអាច\nប្រើវាដើម្បីជៀសពី Ghasts
        រួចជួយ{currentPlayerName} ដើម្បីទទួលបាន**សៀវភៅវេទមន្ត** [book_enchanted] ដោយសុវត្ថិភាព។
        \ "
      MC_HOC_2017_Ali_2019: "សូមក្រលែកមើលមុខងារខាងក្រោម។ តើអ្នកអាច\nប្រើវាដើម្បីជៀសពី
        Ghasts រួចជួយ{currentPlayerName} ដើម្បីទទួលបាន**សៀវភៅវេទមន្ត** [book_enchanted]
        ដោយសុវត្ថិភាព។  "
      MC_HOC_2017_FP20x20: |-
        **លេងដោយសេរី**អ្នកអាចធ្វើអ្វីក៏បាន!
        ប្រើកូដរបស់ជំនួយការក្នុងការជួយអ្នកក្នុងការស្វែងយល់ពីពិភពលោកនេះ។
      MC_HOC_2017_FP20x20_2019: |-
        **លេងដោយសេរី**អ្នកអាចធ្វើអ្វីក៏បាន!
        ប្រើកូដរបស់ជំនួយការក្នុងការជួយអ្នកក្នុងការស្វែងយល់ពីពិភពលោកនេះ។
      NEW Course 4 Artist Functions 3: "Here is a new type of Block.\nIt is called
        a `function` block. Click \"edit\" then fill it with the code\nfor drawing
        a square with 100 pixel sides. \\\r\n\\\r\nWhen you're done editing\nthe function,
        click \"Close\" to go back to your program."
      NEW Course 4 Artist Vars 4: "Let's try it again! \\\r\n\\\r\nCan you\nset the
        `length` variable to 60 to make this cool design with hexagons?"
      NEW Course 4 Artist Vars 6: "Draw this pattern of pentagons with\n100 pixel
        sides by setting the right value for `length` and dropping the `length`\nvariable
        into all of the the correct places. \\\r\n\\\r\nSee how you only have\nto
        set the value for `length` once, and the code uses the right value everywhere?"
      courseA_collector_preLoops1: "This is Laurel the Adventurer! \\\r\n\\\r\nPress\n\"Run\"
        to see her walk up to the treasure and grab it."
      courseB_playlab_events6: "Help your knight get all of the flags!\\\r\n\\\r\nTo\ndo
        this, you'll need to add events to help the knight move up, down, left,\nand
        right."
      courseB_playlab_events6_2018: "Help your knight get all of the flags!\\\r\n\\\r\nTo\ndo
        this, you'll need to add events to help the knight move up, down, left,\nand
        right."
      courseB_playlab_events6_2019: "Help your knight get all of the flags!\\\r\n\\\r\nTo\ndo
        this, you'll need to add events to help the knight move up, down, left,\nand
        right."
      courseC_maze_programming4: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseC_maze_programming4_2018: "_\"Trace the path and lead me to\nthe silly
        pig.\"_ \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseC_maze_programming4_2019: "_\"Trace the path and lead me to\nthe silly
        pig.\"_ \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseC_maze_programming5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseC_maze_programming5_2018: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseC_maze_programming5_2019: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_bee_conditionals10: "Conditionals can be helpful,\neven when you know
        exactly what is in each spot!\\\r\n\\\r\nCollect all of the\nnectar and make
        all of the honey."
      courseD_bee_conditionals10_2018: "Conditionals can be helpful,\neven when you
        know exactly what is in each spot!\\\r\n\\\r\nCollect all of the\nnectar and
        make all of the honey."
      courseD_bee_conditionals10_2019: "Conditionals can be helpful,\neven when you
        know exactly what is in each spot!\\\r\n\\\r\nCollect all of the\nnectar and
        make all of the honey."
      courseD_bee_conditionals1_predict1: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseD_bee_conditionals1_predict1_2018: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseD_bee_conditionals1_predict1_2019: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseD_bee_conditionals4: "In this puzzle, we know that\nevery flower has exactly
        one nectar, but the flowers aren't spaced evenly.\\\r\n\\\r\nGet\nall of the
        nectar using as few blocks as possible."
      courseD_bee_conditionals4_2018: "In this puzzle, we know that\nevery flower
        has exactly one nectar, but the flowers aren't spaced evenly.\\\r\n\\\r\nGet\nall
        of the nectar using as few blocks as possible."
      courseD_bee_conditionals4_2019: "In this puzzle, we know that\nevery flower
        has exactly one nectar, but the flowers aren't spaced evenly.\\\r\n\\\r\nGet\nall
        of the nectar using as few blocks as possible."
      courseD_maze_ramp4: "_\"Trace the path and lead me to\nthe silly pig.\"_ \\\r\n\\\r\nAvoid
        TNT or feathers will fly!"
      courseD_maze_ramp4_2018: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseD_maze_ramp4_2019: "_\"Trace the path and lead me to\nthe silly pig.\"_
        \\\r\n\\\r\nAvoid TNT or feathers will fly!"
      courseD_maze_ramp5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_maze_ramp5_2018: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_maze_ramp5_2019: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_scrat_predict1: "_\"Keep calm and help me find the\nbad pig. Otherwise
        I might get angry!\"_\\\r\n\\\r\nWhen you have several blocks\nin a row, try
        moving them inside of a <xml><block type=\"controls_repeat\"><title\nname=\"TIMES\">???</title></block></xml>
        loop.  This will do the same thing\nwith less code!"
      courseD_scrat_ramp2: "Drag a <xml><block type=\"controls_repeat\"><title\nname=\"TIMES\">7</title></block></xml>
        block out of the toolbox and attach\nit to the <xml><block type=\"when_run\"/></xml>
        event.\\\r\n\\\r\nPlace the <xml><block\ntype=\"maze_moveForward\"/></xml>
        block inside the loop to finish your code."
      courseD_scrat_ramp3: "_\"This\npig is ruffling my feathers.\"_\\\r\n\\\r\nThere
        is one extra block that is going\nto cause the bird to crash.  \\\r\nThrow
        it away by dragging it back to the\ntoolbox."
      courseD_scrat_ramp4: "_\"Trace the path and lead me to\nthe silly pig.\"_ \\\r\n\\\r\nAvoid
        TNT or feathers will fly!"
      courseD_scrat_ramp5: "_\"Follow this path to get me to\nthe pig!\"_\\\r\n\\\r\nAvoid
        the TNT."
      courseD_scrat_ramp6: "Great!  Now let's make a square\nusing Artist!  The blocks
        for artist are a little different than other puzzles,\nbut the idea is the
        same.\\\r\n\\_\\_\\_\\\r\nEach side of the square has a length of\n200 pixels,
        and you will need to turn 90 degrees to make each angle."
      courseD_scrat_ramp7: "_\"It's time to get angry!\"_\\\r\n\\\r\n**Challenge:**\nUse
        what you've learned to get the bird to the pig!"
      courseD_scrat_ramp8: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseE_artist_ramp8_2: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseE_artist_ramp9: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseE_artist_ramp9_2: "Use what you've learned to draw\nthis triangle.\\\r\n\\_\\_\\_\\\r\n\n#####
        The sides are each 100 pixels long. You will\n\nneed to turn 120 degrees at
        each corner."
      courseF_artist_variables10: "Here's your code from the\nlast puzzle.  Try editing
        the variable in other ways.  \\\r\n\n-   What happens\n    if you start out
        with `length` less than 150? \\\r\n-   What if you multiply\n    your variable
        by 1.25 each time through?\\\r\n-   What will your code do if you\n    turn
        119 degrees?"
      courseF_artist_variables10_2018: "Here's your code from the\nlast puzzle.  Try
        editing the variable in other ways.  \\\r\n\n-   What happens\n    if you
        start out with `length` less than 150? \\\r\n-   What if you multiply\n    your
        variable by 1.25 each time through?\\\r\n-   What will your code do if you\n
        \   turn 119 degrees?"
      courseF_artist_variables10_2019: "Here's your code from the\nlast puzzle.  Try
        editing the variable in other ways.  \\\r\n\n-   What happens\n    if you
        start out with `length` less than 150? \\\r\n-   What if you multiply\n    your
        variable by 1.25 each time through?\\\r\n-   What will your code do if you\n
        \   turn 119 degrees?"
      courseF_artist_variables2: "Now use another loop to draw\nthree of those triangles
        right next to each other.   \\\r\n\\\r\nYou can nest\nthe code from your last
        puzzle inside."
      courseF_artist_variables2_2018: "Now use another loop to draw\nthree of those
        triangles right next to each other.   \\\r\n\\\r\nYou can nest\nthe code from
        your last puzzle inside."
      courseF_artist_variables2_2019: "Now use another loop to draw\nthree of those
        triangles right next to each other.   \\\r\n\\\r\nYou can nest\nthe code from
        your last puzzle inside."
      courseF_artist_variables3: "Before things get tricky,\ncan you move the length
        of 50 into a variable so we can use it in the next\nfew puzzles?  \\\r\n\\\r\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables3_2018: "Before things get tricky,\ncan you move the
        length of 50 into a variable so we can use it in the next\nfew puzzles?  \\\r\n\\\r\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables3_2019: "Before things get tricky,\ncan you move the
        length of 50 into a variable so we can use it in the next\nfew puzzles?  \\\r\n\\\r\n![expandable](https://images.code.org/73447d004093c6be8ab01a1358155f16-image-1498068386665.gif)"
      courseF_artist_variables6: "**OOPS!**  \\\r\n\\\r\nWe\nactually need the triangles
        to be 60 pixels wide, with 60 pixel jumps.  \\\r\n\\\r\nAren't\nyou glad you're
        using a variable?"
      courseF_artist_variables6_2018: "**OOPS!**  \\\r\n\\\r\nWe\nactually need the
        triangles to be 60 pixels wide, with 60 pixel jumps.  \\\r\n\\\r\nAren't\nyou
        glad you're using a variable?"
      courseF_artist_variables6_2019: "**OOPS!**  \\\r\n\\\r\nWe\nactually need the
        triangles to be 60 pixels wide, with 60 pixel jumps.  \\\r\n\\\r\nAren't\nyou
        glad you're using a variable?"
      courseF_artist_variables7: "Let's start this section\nby drawing a triangle
        with 150 pixel sides. \\\r\n\\\r\nBe sure to use the `length`\nvariable and
        a repeat loop."
      courseF_artist_variables7_2018: "Let's start this section\nby drawing a triangle
        with 150 pixel sides. \\\r\n\\\r\nBe sure to use the `length`\nvariable and
        a repeat loop."
      courseF_artist_variables7_2019: "Let's start this section\nby drawing a triangle
        with 150 pixel sides. \\\r\n\\\r\nBe sure to use the `length`\nvariable and
        a repeat loop."
      courseF_artist_variables8: "Rebuild the triangle\ncode from the last puzzle,
        but this time use the `set length to` block to\nreset the `length` variable
        to `length`+10 at the end of each loop iteration.\\\r\n\\\r\n<xml>\\\r\n<block\ntype=\"variables_set\"
        inline=\"false\">\\\r\n                        <title\nname=\"VAR\">length</title>\\\r\n
        \                       <value name=\"VALUE\">\\\r\n                          <block\ntype=\"math_arithmetic\"
        inline=\"true\">\\\r\n                            <title\nname=\"OP\">ADD</title>\\\r\n
        \                           <value name=\"A\">\\\r\n                              <block\ntype=\"variables_get\">\\\r\n
        \                               <title name=\"VAR\">length</title>\\\r\n                              </block>\\\r\n
        \                           </value>\\\r\n                            <value\nname=\"B\">\\\r\n
        \                             <block type=\"math_number\">\\\r\n                                <title\nname=\"NUM\">10</title>\\\r\n
        \                             </block>\\\r\n                            </value>\\\r\n
        \                         </block>\\\r\n                        </value>\\\r\n
        \                     </block>\\\r\n</xml>\\\r\n\\\r\nThe\nlength of the first
        side of the triangle is 150 pixels."
      courseF_artist_variables8_2018: "Rebuild the triangle\ncode from the last puzzle,
        but this time use the `set length to` block to\nreset the `length` variable
        to `length`+10 at the end of each loop iteration.\\\r\n\\\r\n<xml>\\\r\n<block\ntype=\"variables_set\"
        inline=\"false\">\\\r\n                        <title\nname=\"VAR\">length</title>\\\r\n
        \                       <value name=\"VALUE\">\\\r\n                          <block\ntype=\"math_arithmetic\"
        inline=\"true\">\\\r\n                            <title\nname=\"OP\">ADD</title>\\\r\n
        \                           <value name=\"A\">\\\r\n                              <block\ntype=\"variables_get\">\\\r\n
        \                               <title name=\"VAR\">length</title>\\\r\n                              </block>\\\r\n
        \                           </value>\\\r\n                            <value\nname=\"B\">\\\r\n
        \                             <block type=\"math_number\">\\\r\n                                <title\nname=\"NUM\">10</title>\\\r\n
        \                             </block>\\\r\n                            </value>\\\r\n
        \                         </block>\\\r\n                        </value>\\\r\n
        \                     </block>\\\r\n</xml>\\\r\n\\\r\nThe\nlength of the first
        side of the triangle is 150 pixels."
      courseF_artist_variables8_2019: "Rebuild the triangle\ncode from the last puzzle,
        but this time use the `set length to` block to\nreset the `length` variable
        to `length`+10 at the end of each loop iteration.\\\r\n\\\r\n<xml>\\\r\n<block\ntype=\"variables_set\"
        inline=\"false\">\\\r\n                        <title\nname=\"VAR\">length</title>\\\r\n
        \                       <value name=\"VALUE\">\\\r\n                          <block\ntype=\"math_arithmetic\"
        inline=\"true\">\\\r\n                            <title\nname=\"OP\">ADD</title>\\\r\n
        \                           <value name=\"A\">\\\r\n                              <block\ntype=\"variables_get\">\\\r\n
        \                               <title name=\"VAR\">length</title>\\\r\n                              </block>\\\r\n
        \                           </value>\\\r\n                            <value\nname=\"B\">\\\r\n
        \                             <block type=\"math_number\">\\\r\n                                <title\nname=\"NUM\">10</title>\\\r\n
        \                             </block>\\\r\n                            </value>\\\r\n
        \                         </block>\\\r\n                        </value>\\\r\n
        \                     </block>\\\r\n</xml>\\\r\n\\\r\nThe\nlength of the first
        side of the triangle is 150 pixels."
      courseF_artist_variables9: "Time to make some art!  \\\r\n\\\r\nSee\nwhat happens
        when you repeat the code from the last puzzle **30** times instead\nof only
        3!\\\r\n\\\r\nFeel free to make your lines any color or pattern for some\nextra
        zest."
      courseF_artist_variables9_2018: "Time to make some art!  \\\r\n\\\r\nSee\nwhat
        happens when you repeat the code from the last puzzle **30** times instead\nof
        only 3!\\\r\n\\\r\nFeel free to make your lines any color or pattern for some\nextra
        zest."
      courseF_artist_variables9_2019: "Time to make some art!  \\\r\n\\\r\nSee\nwhat
        happens when you repeat the code from the last puzzle **30** times instead\nof
        only 3!\\\r\n\\\r\nFeel free to make your lines any color or pattern for some\nextra
        zest."
      courseF_artist_variablesFP: "**Freeplay:** Take what\nyou've learned and make
        your own drawing. \\\r\n\\\r\nHow can you use variables\nwith squares, pentagons,
        or hexagons?"
      courseF_artist_variablesFP_2018: "**Freeplay:** Take what\nyou've learned and
        make your own drawing. \\\r\n\\\r\nHow can you use variables\nwith squares,
        pentagons, or hexagons?"
      courseF_artist_variablesFP_2019: "**Freeplay:** Take what\nyou've learned and
        make your own drawing. \\\r\n\\\r\nHow can you use variables\nwith squares,
        pentagons, or hexagons?"
      courseF_artist_variables_challenge2: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      courseF_artist_variables_challenge2_2018: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      courseF_artist_variables_challenge2_2019: "<img src=\"https://images.code.org/7469d6b9aaaae532d864caecb65bd2cc-image-1444706295435.54.39.png\"\nwidth=\"250px\"/>\\\r\n\\\r\nYou've
        now learned everything you need to know to\nmake a pattern like this! This
        puzzle is meant to be difficult.  Can you stick\nwith it until you figure
        out the solution?"
      courseF_bee_conditionals10: "Conditionals can be helpful,\neven when you know
        exactly what is in each spot!\\\r\n\\\r\nCollect all of the\nnectar and make
        all of the honey."
      courseF_bee_conditionals1_predict1: "_\"This cloud is\nblocking my view!\"_\\\r\n\\\r\nCheck
        to see if there's a flower under the cloud.\nIf there's a flower, get nectar."
      courseF_bee_conditionals2: "_\"It's too cloudy to\nsee any flowers!\"_\\\r\n\\\r\nCheck
        underneath every cloud to see if it is hiding\na flower before you get nectar.
        If there is a flower underneath the cloud,\nthe bee will need to get nectar
        **once**.  \\\r\n\\\r\nRemember: Not all clouds\nhide the same thing!"
      courseF_bee_conditionals4: "In this puzzle, we know that\nevery flower has exactly
        one nectar, but the flowers aren't spaced evenly.\\\r\n\\\r\nGet\nall of the
        nectar using as few blocks as possible."
      courseF_bee_conditionals7_predict2: "Sometimes a\ncloud covers a flower, sometimes
        it covers a honeycomb!\\\r\n\\\r\nUse the `if/else`\nblock to collect nectar
        at flowers and make honey at honeycomb."
      courseF_bee_conditionals8: "**Challenge:** There\nwill be either a flower or
        a honeycomb under each of those clouds!\\\r\n\\\r\nCollect\nnectar once if
        there is a flower. Otherwise, make honey once (because there\nis a honeycomb)."
      courseF_bee_for10: "**Challenge:** Take what you've\nlearned about `for` loops
        and try to solve this problem. \\\r\n\\\r\nRemember:\nYou may have to run
        through solutions multiple times before you figure out\nall of the steps."
      courseF_bee_for10_2018: "**Challenge:** Take what you've\nlearned about `for`
        loops and try to solve this problem. \\\r\n\\\r\nRemember:\nYou may have to
        run through solutions multiple times before you figure out\nall of the steps."
      courseF_bee_for10_2019: "**Challenge:** Take what you've\nlearned about `for`
        loops and try to solve this problem. \\\r\n\\\r\nRemember:\nYou may have to
        run through solutions multiple times before you figure out\nall of the steps."
      courseF_bee_for11: "If your loop is counting down, the\nincrement is **subtracted**
        from your counter variable each time through.\n\\\r\n\\\r\nWhat should your
        increment be to collect 15, then 12, then 9, 6, 3\nnectar?"
      courseF_bee_for11_2018: "If your loop is counting down, the\nincrement is **subtracted**
        from your counter variable each time through.\n\\\r\n\\\r\nWhat should your
        increment be to collect 15, then 12, then 9, 6, 3\nnectar?"
      courseF_bee_for11_2019: "If your loop is counting down, the\nincrement is **subtracted**
        from your counter variable each time through.\n\\\r\n\\\r\nWhat should your
        increment be to collect 15, then 12, then 9, 6, 3\nnectar?"
      courseF_bee_for2: "Write the code to help the bee\ncollect all of the nectar.\\\r\n\\\r\nYou
        will need lots of blocks for this challenge,\nbut we'll learn an easier way
        in the next puzzle."
      courseF_bee_for2_2018: "Write the code to help the bee\ncollect all of the nectar.\\\r\n\\\r\nYou
        will need lots of blocks for this challenge,\nbut we'll learn an easier way
        in the next puzzle."
      courseF_bee_for2_2019: "Write the code to help the bee\ncollect all of the nectar.\\\r\n\\\r\nYou
        will need lots of blocks for this challenge,\nbut we'll learn an easier way
        in the next puzzle."
      courseF_bee_for6: "You can also use a `for` loop\nto count down. \\\r\n\\\r\nTry
        gathering this nectar by counting down from **5**\nto **1** by **1**."
      courseF_bee_for6_2018: "You can also use a `for` loop\nto count down. \\\r\n\\\r\nTry
        gathering this nectar by counting down from **5**\nto **1** by **1**."
      courseF_bee_for6_2019: "You can also use a `for` loop\nto count down. \\\r\n\\\r\nTry
        gathering this nectar by counting down from **5**\nto **1** by **1**."
      courseF_bee_for7: "The last number in your `for`\nloop is called the **\"increment\"**.
        \ Each time the loop is run, the counter\nvariable changes by the value of
        the **increment**.\\\r\n\\\r\nTry collecting\nthese flowers using an **increment**
        of 2."
      courseF_bee_for7_2018: "The last number in your `for`\nloop is called the **\"increment\"**.
        \ Each time the loop is run, the counter\nvariable changes by the value of
        the **increment**.\\\r\n\\\r\nTry collecting\nthese flowers using an **increment**
        of 2."
      courseF_bee_for7_2019: "The last number in your `for`\nloop is called the **\"increment\"**.
        \ Each time the loop is run, the counter\nvariable changes by the value of
        the **increment**.\\\r\n\\\r\nTry collecting\nthese flowers using an **increment**
        of 2."
      courseF_bee_for8: "You've got this!  \\\r\n\\\r\nWhat\nshould your **increment**
        be to collect 3, 6, 9, 12, 15 nectar?\\\r"
      courseF_bee_for8_2018: "You've got this!  \\\r\n\\\r\nWhat\nshould your **increment**
        be to collect 3, 6, 9, 12, 15 nectar?\\\r"
      courseF_bee_for8_2019: "You've got this!  \\\r\n\\\r\nWhat\nshould your **increment**
        be to collect 3, 6, 9, 12, 15 nectar?\\\r"
      courseF_bee_for9: "Now, let's combine the `counter`\nvariable with a `math`
        block! \\\r\n\\\r\nHow can you use the `counter` variable\nto navigate this
        garden with the fewest number of blocks possible?"
      courseF_bee_for9_2018: "Now, let's combine the `counter`\nvariable with a `math`
        block! \\\r\n\\\r\nHow can you use the `counter` variable\nto navigate this
        garden with the fewest number of blocks possible?"
      courseF_bee_for9_2019: "Now, let's combine the `counter`\nvariable with a `math`
        block! \\\r\n\\\r\nHow can you use the `counter` variable\nto navigate this
        garden with the fewest number of blocks possible?"
      courseF_bee_for_challenge1: "You can use this `for\nloop` to collect all of
        the nectar. Un-bee-lievable!\\\r\n\\\r\nThere are a few\nactions that you
        will want to `repeat 'counter' times`."
      courseF_bee_for_challenge1_2018: "You can use this `for\nloop` to collect all
        of the nectar. Un-bee-lievable!\\\r\n\\\r\nThere are a few\nactions that you
        will want to `repeat 'counter' times`."
      courseF_bee_for_challenge1_2019: "You can use this `for\nloop` to collect all
        of the nectar. Un-bee-lievable!\\\r\n\\\r\nThere are a few\nactions that you
        will want to `repeat 'counter' times`."
      courseF_bee_functions2: "To make things easier, it's\ntime to learn about functions!\\\r\n\\\r\nFrom
        here on out, you will be using\na new _function editor_.  This editor is a
        separate window that will appear\nwhen you go to edit a function.  You won't
        see all of the code from your\nfunction while you're coding in the workspace,
        but don't worry...it's still\nthere!  \\\r\n\\_\\_\\_\\\r\n\\\r\nLet's practice
        with this function that gets nectar\nonly if the bee is at a flower.  To see
        the code inside, click the blue \"edit\"\nbutton!\\\r\n\\\r\nUse the `get
        only nectar` function to collect the nectar from\neach flower."
      courseF_bee_functions3a: "Each cloud could be hiding\neither one flower or one
        honeycomb!  Write a function that gets nectar if\nthe bee is at a flower,
        otherwise it gets honey.\\\r\n\\\r\nUse your function\nto solve the puzzle!"
      courseF_bee_functions4: "Did you know that you can\ncall a function from _inside_
        another function?  \\\r\n\\\r\nUse your `check nectar\nor honey` function
        inside the new `move and check` function to help the bee\nturn, go get what's
        under the cloud, then back-up and turn back around!"
      courseF_bee_functions6: "_\"This field is a-MAZE-ing!\"_\\\r\n\\\r\nBuild\nyour
        own function to help the bee through the maze by turning left at flowers\nand
        right at honeycomb.  Don't forget to collect nectar and make honey along\nthe
        way!"
      courseF_bee_functions7: "Rebuild your function from\nthe last puzzle to solve
        this maze.\\\r\n\\\r\nTurn left at the honeycomb and\nright at the flowers.
        \ \\\r\n**Note:** Some corners are unmarked!"
      courseF_bee_functions8a: "Underneath\nthis cloud, there might be a flower with
        an unknown amount of nectar, or a\nhoneycomb with an unknown amount of honey.
        \ \\\r\n\\\r\nCan you write a program\nthat can handle either?"
      courseF_bee_functionsPre7: "Now try building a function\nto solve this maze.
        \ How is it different from last time?  \\\r\n\\\r\nTurn left\nat the honeycomb
        and right at the flowers.  \\\r\n**Note:** Some corners are\nunmarked!"
      courseF_bee_fwp1: "Check beneath the clouds to see\nif the flowers have any
        nectar.  \\\r\n\\\r\nFor this whole stage, each flower\nwill have exactly
        **one** unit of nectar, and each honeycomb will need exactly\n**one** unit
        of honey. \\\r\n\\\r\n\\\r"
      courseF_bee_fwp2: "Here's some code that solves\nthe last puzzle.  \\\r\nLet's
        pull it into a function, then call the function\nto check this row for nectar.
        \ \\\r\n\\_\\_\\_\\\r\nThis may seem like a strange step\nnow, but it will
        be really helpful soon!"
      courseF_bee_fwp3: "Time to put the function to the test!\n\\\r\n\\\r\nLet's
        see if it makes collecting these three rows of nectar any easier."
      courseF_bee_fwp4: "_\"How is your function holding up?\"_   \\\r\n\\\r\nWe\nneed
        to make some adjustments here. Click \"edit\" to add a `length` parameter\nto
        the function so that it will still work when the row is a different length."
      courseF_bee_fwp5: "_\"You're doing great so far!\"_\\\r\n\\\r\nLet's\nuse this
        function to collect the nectar."
      courseF_bee_fwp6: "You can make code shorter and\nmore efficient when you combine
        functions with other programming elements.  \\\r\n\\_\\_\\_\\\r\nWhat\nblocks
        can you use with your function to build a short and sweet solution\nto this
        puzzle?"
      courseF_bee_fwp_challenge2: "_\"**Lettuce** see if\nyou can handle this one
        final test! Give it everything you've got!\"_\\\r\n\\\r\nUse\none `for loop`
        in a function to collect all of the vegetables in the row.\nMake the `for
        loop` count to different maximum values by using the `length`\nparameter.
        Make your program as short as possible by using a second `for loop`\noutside
        the function.\\\r\n\\\r\nGood luck!"
      courseF_playlab_variables1a: "Variables can be used\nto store text that you
        want to use later.  \\\r\n\\\r\nHave Kiki, the soccer player,  scream\n\"Goal!\"
        by assigning that text to the `shout` variable."
      courseF_playlab_variables2b: "We can make sentences\nmore interesting by mixing
        pieces of text with variables.\\\r\n\\\r\nInsert the\nvariable `color` into
        the middle of a sentence by putting it into the empty\nslot in the `join`
        block."
      courseF_playlab_variables4b: "Now, Pirate Pegleg\nhas some questions for Brian.\\\r\n\\\r\nThis
        code uses an `ask` block, so you\ncan type Brian's answers after you click
        \"Run\". \\\r\n\\\r\nPut the variables\nin the correct places to create this
        conversation."
      courseF_playlab_variables5c: "Let's combine the\n`ask` block with an `if/else`
        statement to have some fun!\\\r\n\\\r\nPirate Pegleg\nis going to ask you
        a question.  Drag a copy of the `answer` variable into\nthe conditional for
        the `if` statement to check whether or not you entered\nthe correct color."
      courseF_playlab_variables6c: "In the rest of this\nstage, we will use multiple
        `ask` blocks and multiple `if/else` statements\nto create a game that **you**
        control!\\\r\n\\\r\nStart by setting the \"codename\"\nvariable to a word
        that you can remember.  Then, use an `ask` block to get\na codename from the
        users.  You will need an `if/else` block to see if the\ncodename entered matches
        the codename that you have set."
      courseF_playlab_variables7b: "Time to make your own\nproject!  \\\r\n\\\r\nCreate
        some questions and weave the answers together into\nyour very own story.\\\r\n\\\r\nIf
        you need ideas, click the hints icon."
      courseF_playlab_variables7c: "Add another `ask` block\nto ask the user to guess
        a color.  \\\r\n\\\r\nKeep your `if/else` statement such\nthat your codename
        always wins the game, but every other codename always loses."
      courseF_playlab_variables_challenge2: "Now for a\ngame of tag! Tag Cat to get
        2 points. Tag Penguin to get 3 points.  Get exactly\n10 points to win!\\\r\nBut
        be careful, when Cat and Penguin tag each other,\nthey take points away.\\\r\n\\\r\nAdd
        the blocks necessary to make this game work\nthe way it's been explained.\\\r\n\n-
        \  How will you get Dog to move in all directions\n    using the arrow keys?\\\r\n-
        \  How will you add points when Dog tags Cat or Penguin?\\\r\n-   \\-\n    How
        will you subtract points when Cat and Penguin touch?"
      grade2_collector_10: "You're almost done!  \\\r\n\\\r\nCollect\nas many pieces
        of treasure as you can to finish the stage!"
      grade2_collector_10_2018: "You're almost done!  \\\r\n\\\r\nCollect\nas many
        pieces of treasure as you can to finish the stage!"
      grade2_collector_10_2019: "You're almost done!  \\\r\n\\\r\nCollect\nas many
        pieces of treasure as you can to finish the stage!"
      grade5_artist_variables_triangles1: "Let's draw\nan equilateral triangle. \\\r\n\\\r\nIt
        has to be exactly 50 pixels long on each\nside.\\\r\n\\\r"
      grade5_artist_variables_triangles1_2018: "Let's draw\nan equilateral triangle.
        \\\r\n\\\r\nIt has to be exactly 50 pixels long on each\nside.\\\r\n\\\r"
      grade5_artist_variables_triangles1_2019: "Let's draw\nan equilateral triangle.
        \\\r\n\\\r\nIt has to be exactly 50 pixels long on each\nside.\\\r\n\\\r"
      iceage_click_hello: "Can you help Sid call for his\nfriends when you click on
        him? \\\r\nOnce you're done, press \"Run\" to play.  Click\non Sid to see
        your code work!"
      iceage_free_play: "Time to create your own game or story!  \\\r\n\\\r\nWhen\nyou're
        done, click \"Finish\" to let friends try your game on their phones,\ntablets,
        or computers!\\\r\nDon't know what to make? Click the hints for details."
      iceage_hello1: "Sid (actor 1) wants to gather everyone\nfor a new adventure.
        Can you help him say \"Hello!\" by dragging the `say`\nblock out and connecting
        it to the bottom of the `when run` event?   \\\r\n\\\r\nDon't\nforget to type
        \"Hello!\" inside!"
      iceage_move_events: "Scrat is still looking for acorns!\n\\\r\nHelp him scamper
        around by attaching a `move actor 1` block to each of\nthe events and changing
        the direction to work for each arrow key. \\\r\nWhen\nyou’re done, click \"Run\"
        and try to collect all of the acorns."
      iceage_sound_and_points: "Here is your code from the last\npuzzle, as well as
        the code to move Granny left and right. \\\r\nCan you finish\nthe program
        to make it so that you both **play a sound** and **score a point**\nwhen Sid
        and Granny collide? \\\r\nPress \"Run\" to play the game."
      iceage_throw_hearts: "Sid wants to let his grandmother,\nGranny, know that he
        loves her.   \\\r\n\\\r\nUse the `actor __ throw` command\nto have Sid (actor
        1) throw hearts at Granny (actor 2)! \\\r\nSet Granny's\nmood to happy when
        she gets hit with the hearts."
      iceage_warn_ice_age: "Everyone needs to move faster because\nan ice storm is
        coming! \\\r\nChange the scene to an icy background and set\nSid’s (actor
        1) speed to fast.\\\r\nPress \"Run\" and move Sid to Diego to warn\nhim."
      ramp_artist_loops1: "What a lovely day!  \\\r\n\\\r\nHelp\nthe Artist cover
        his flowers before the winter by moving forward by 60 pixels."
      ramp_artist_loops1_2018: "What a lovely day!  \\\r\n\\\r\nHelp\nthe Artist cover
        his flowers before the winter by moving forward by 60 pixels."
      ramp_artist_loops1_2019: "What a lovely day!  \\\r\n\\\r\nHelp\nthe Artist cover
        his flowers before the winter by moving forward by 60 pixels."
      ramp_artist_loops5: "Loops sure make writing code\neasier!\\\r\n\\\r\nUse loops
        to draw this staircase.\\\r\n\n-   Each stairstep is 50\n    pixels long and
        50 pixels tall\\\r\n-   You will need to turn 90 degrees in each\n    direction"
      ramp_artist_loops5_2018: "Loops sure make writing code\neasier!\\\r\n\\\r\nUse
        loops to draw this staircase.\\\r\n\n-   Each stairstep is 50\n    pixels
        long and 50 pixels tall\\\r\n-   You will need to turn 90 degrees in each\n
        \   direction"
      ramp_artist_loops5_2019: "Loops sure make writing code\neasier!\\\r\n\\\r\nUse
        loops to draw this staircase.\\\r\n\n-   Each stairstep is 50\n    pixels
        long and 50 pixels tall\\\r\n-   You will need to turn 90 degrees in each\n
        \   direction"
      ramp_artist_loops6: "This staircase is much bigger,\nbut it takes the same amount
        of code as the last puzzle!\\\r\n\\\r\nFix this loop\nto complete the puzzle."
      ramp_artist_loops6_2018: "This staircase is much bigger,\nbut it takes the same
        amount of code as the last puzzle!\\\r\n\\\r\nFix this loop\nto complete the
        puzzle."
      ramp_artist_loops6_2019: "This staircase is much bigger,\nbut it takes the same
        amount of code as the last puzzle!\\\r\n\\\r\nFix this loop\nto complete the
        puzzle."
