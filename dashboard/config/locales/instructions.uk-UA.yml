"uk":
  data:
    instructions:
      2-3 Artist 1 new_instruction: Привіт, я художник. Можеш написати код, щоб примусити
        мене намалювати що завгодно. Використовуй кілька блоків, щоб примусити мене
        малювати по сірих лініях на малюнку. (Кожна лінія має довжину 100 пікселів)
      2-3 Artist 11_instruction: 'Намалюй межі для знаку зупинки, створивши восьмикутник
        зі сторонами у 100 пікселів. На скільки градусів потрібно повертати? (Підказка:
        скільки буде 360 розділити на 8?) '
      2-3 Artist 12_instruction: Налаштуй блок "Повторити разів", так що він створював
        "коло", для завершення ока. Якщо після кожного переміщення повертати на 1
        градус, скільки поворотів потрібно для створення кола? 180? 360? 500?
      2-3 Artist 2 new_instruction: 'Цей будинок має незавершену стіну. Кожна сторона
        має 100 пікселів, а незавершена - лише 50. Завершіть стіну. '
      2-3 Artist 2_instruction: 'Цей будинок має вальцюванні стіни. Кожній стороні
        є 100, але вальцюванні стіні становить лише 50. Повна стіни. '
      2-3 Artist 3.4_instruction: Блок стрибку переміщує художника без малювання.
        Намалюй пунктирну лінію, використовуючи блоки стрибку і малювання.
      2-3 Artist 3_instruction: Цей капелюх має висоту 100 пікселів. Намалюй капелюх
        на 70 пікселів менший.
      2-3 Artist 3new_instruction: Червоний капелюх є 100 пікселів заввишки. Завершити
        малювання чорного капелюха, який на 70 пікселів коротше. Ширина чорного капелюха
        - 50 пікселів.
      2-3 Artist 4_instruction: Допоможи мені завершити домівку для цього кота.
      2-3 Artist 5_instruction: Замініть цей код блок "Повторити разів" намалювати
        ж будинку, використовуючи тільки 3 блоків.
      2-3 Artist 6_instruction: 'Цей будинок потребує дах! Намалюйте трикутника.  Підказка:
        всі три сторони мають однакову довжину.'
      2-3 Artist 7_instruction: 'Завершити малювання в правій половині минулого вікна.
        Кожного квадрата вікна становить 25 пікселів. '
      2-3 Artist 8_instruction: Завершіть номерів для кожного з тварин, розділення
        прямокутник на 2 однакових за розміром квадратів. Прямокутник є 200 пікселів
        у ширину та 100 пікселів заввишки.
      2-3 Artist 9_instruction: Заверши воздушний змій
      2-3 Artist Assessment 1_instruction: 'Оцінка: Завершити малювання, останньої
        зуба, 25 пікселів у ширину та 25 пікселів заввишки.'
      2-3 Artist Debugging 1_instruction: Чи можете ви зробити цей капелюх з довжиною
        верху 100?
      2-3 Artist Debugging 10_instruction: 'Напрямок накладка на моє ігровий контролер
        є надто вузьким. Підказка: Зробити його більш широкого на 10 пікселів'
      2-3 Artist Debugging 11_instruction: Допоможи мені закінчити моє красиві Сніжинка.
        Скільки разів потрібно "Повторити", щоб закінчити його?
      2-3 Artist Debugging 12_instruction: Я повинен додати океан хвилі на цій сцені.  Ти
        можеш мені допомогти?
      2-3 Artist Debugging 2_instruction: 'Код для трьох вуса, що ви бачите це неправильно.
        Підказка: кожна ниткоподібні становить 75 пікселів довгий. Виправити цей код,
        щоб намалювати вусів.'
      2-3 Artist Debugging 3_instruction: 'Моя човен має отвір! Ви можете виправити
        це, змінивши кут лінії? Підказка: останній кут за вимкнено 15 градусів.'
      2-3 Artist Debugging 4_instruction: Що таке зображення, яке ми намагаємося залучити?
        Закінчити спілкування точки, належного лініями та кутами.
      2-3 Artist Debugging 5_instruction: 'Код для гомілки і стопи, який ви бачите
        є неправильним. Підказка: У ногою занадто довга, ми може знадобитися видалити
        крок (каламбур)'
      2-3 Artist Debugging 6_instruction: Схоже, я сидів на стільці, які відсутні
        у ногою. Редагування блоків малювати у ногою.
      2-3 Artist Debugging 7_instruction: Схоже, що C в коді звертається назад. Ви
        можете зробити його схожим на C?
      2-3 Artist Debugging 8_instruction: Мій Вертушка не закінчена. Скільки разів
        потрібно повторити, щоб закінчити його?
      2-3 Artist Debugging 9_instruction: 'Хибний код для цього стовбурові. Підказка:
        Кут за вимкнено 60 градусів'
      2-3 Artist Debugging Assessment 1_instruction: 'Ця фігура замалий. Ви можете
        зробити його більше? Підказка: вона повинна бути 75 пікселів більше часу на
        кожній стороні.'
      2-3 Artist Free Play_instruction: Гра без правил! Малюй усе що завгодно.
      2-3 Artist Functions 1_instruction: 'Вітаю. Мені зомбі художник. Мені подобається
        малюнок! Допоможи мені звернути квадратних окуляри.  Підказка: міст між окуляри
        становить 25 пікселів коротше квадратної довжини.'
      2-3 Artist Functions 10_instruction: Ось дві функції одне залучити великі передач
        і один, щоб привернути невеликий спорядження. Дають змогу малювати всередині
        машина!
      2-3 Artist Functions 11.5_instruction: Ось що ж функцію "Намалюйте шестикутник".
        Що станеться, якщо ви тільки свою чергу 60 градусів кожного разу, коли ви
        циклу?
      2-3 Artist Functions 11_instruction: Ми призначаємо функцію "намалювати квадрат"
        намалювати "шестикутник", але вона все ще тільки споживає квадратів! Ви можете
        змінити функцію "намалюйте шестикутник" намалювати з 50 пікселів сторін шестикутника
        і зробити зображення за допомогою функції?
      2-3 Artist Functions 12_instruction: 'Функції дійсно чудово підходять для малювання
        складних речей кілька разів. Ви можете використовувати функцію "намалюйте
        квітку" для заповнення інших скриньку сівалки?(Підказка: рослини розділяються
        крапкою довжиною 100 пікселів)  '
      2-3 Artist Functions 13_instruction: Ми умови, що ви з чотирьох функцій. Використовувати
        їх як завгодно всередині одного або кількох петлі зробити фотографії, які
        ви можете поділитися зі своїми друзями. Натисніть кнопку запустити, щоб побачити
        приклад.
      2-3 Artist Functions 2_instruction: Функції дозволяють визначити нові блоки!
        Ми переїхали блоки, щоб намалювати квадрат в функцію під назвою "намалювати
        квадрат". Ви можете використовувати функцію "намалювати квадрат" створити
        очки? Квадрати є 75 пікселів один від одного.
      2-3 Artist Functions 3_instruction: Редагувати функцію, щоб намалювати квадрат
        з боку довжиною 115 і залучити великі окуляри. Квадрати в даний час за 45
        пікселів один від одного.
      2-3 Artist Functions 4_instruction: Використовуйте "Повтор" блок намалювати
        ці 3 квадрата.
      2-3 Artist Functions 7_instruction: 'Функція "намалюйте будинок" намалювати
        два будинки, використовуючи два різні параметри. (Підказка: перший будинок
        є 100 пікселів).'
      2-3 Artist Functions 9_instruction: Тут функція Сніжинка. Поекспериментуйте
        з ним створити зимової сцені! Це рівень вільно грати, тому немає не головоломки
        вирішити. Розважатися!
      2-3 Artist Loops 1_instruction: Ви можете зробити шестикутник зі сторонами,
        100 пікселів, щоб закінчити соти? Пам'ятайте, що це означає, що вам потрібно
        буде тільки повернути на 60 градусів!
      2-3 Artist Loops 10_instruction: Що відбувається з дизайн, коли ми зробити наш
        останній крок вперед половина так довго?
      2-3 Artist Loops 11_instruction: Тепер давайте покласти * ще * петлею нашу весь
        створення!  Не забудьте додати кута в кінці зовнішньої петлею.
      2-3 Artist Loops 2_instruction: Тепер використовувати повторити блок клітинку
        оболонки.
      2-3 Artist Loops 4_instruction: Хочете, щоб побачити, що відбувається, коли
        ми повторюємо цю фігуру, знову і знову, використавши цикл?
      2-3 Artist Loops 5_instruction: Тепер давайте внести незначні зміни до петлі
        і побачити, яким чином різні нашого зображення стає.
      2-3 Artist Loops 6_instruction: Додати один більше рух і черговий поворот всередині
        петлі і побачити, як ваш дизайн змінюється.
      2-3 Artist Loops 7_instruction: Ми можемо використовувати петлі для виготовлення
        всіляких багатокутників.  Ви можете створити rhombus всередині цього шестикутника?
      2-3 Artist Loops 8_instruction: Давай додамо ці елементи в середину циклу.
      2-3 Artist Loops 9_instruction: "Ми збираємося повторювати однакові елементи,
        але тепер ми збираємося додати деякі відстань між ними. \r використовувати
        той же код як і раніше, але додати кроком вперед в кінці зовнішньої петлею."
      2-3 Artist Loops New 1_instruction: Спробуємо провести цей робот голову! Ви
        можете зробити квадрат зі стороною, яка є 100 пікселів?
      2-3 Artist Loops New 10_instruction: Тепер давайте підключення купу V разом,
        намалювавши їх в петлю.
      2-3 Artist Loops New 11_instruction: Цього разу давайте намалювати його 24 рази.
        Додати лівий поворот 30 градусів до цього Кодексу і поклав все це в повторюваного
        блоку.
      2-3 Artist Loops New 12_instruction: 'Намалюйте діаманта з боків 100 пікселів. '
      2-3 Artist Loops New 13_instruction: Тепер нічийних алмаз 3 рази в петлю.
      2-3 Artist Loops New 14_instruction: Тепер давайте малювати алмаз 10 Таймс,
        але повернути на 90 градусів між кожного diamond.
      2-3 Artist Loops New 15_instruction: Намалюй щось цікаве.
      2-3 Artist Loops New 2_instruction: Ось деякі з код, який ви використовували,
        щоб намалювати цю клітинку. Що станеться, якщо ви використовуєте повторення
        блок запустити цей код в 4 рази?
      2-3 Artist Loops New 9_instruction: Намалюйте простий V, де обидві сторони мають
        50 пікселів для завершення стрілку.
      2-3 Artist Match Hex Pic_instruction: 'Порівняння: Допоможіть завершити шестикутник.'
      2-3 Artist Match Rho Pic_instruction: 'Порівняй: Допиши відсутній код.'
      2-3 Artist Match Sq Pic_instruction: 'Матчу: Завершити відсутні код'
      2-3 Artist Match Tri pic_instruction: 'Відповідність: Заповнити відсутні код.'
      2-3 Artist Nested Loops 1_instruction: "Ви використовували петлі малювати фігури
        перед, але чи знаєте ви, ви можете покласти петлю всередині іншого петлю?
        \r петлю весь цей блок коду 3 рази намалювати візерунок."
      2-3 Artist Nested Loops 10_instruction: Циклічне повторення цей код 12 разів
        для завершення візерунок.
      2-3 Artist Nested Loops 11_instruction: Циклічне повторення цей код в 4 рази
        для завершення візерунок, повернути на 90 градусів після кожного кола.
      2-3 Artist Nested Loops 12_instruction: Циклічне повторення цей код 12 разів
        кучері завершити.
      2-3 Artist Nested Loops 2_instruction: Тепер Циклічне повторення трикутник 6
        разів. Після кожного трикутника потрібно буде включити 60 градусів до малювання
        на наступний.
      2-3 Artist Nested Loops 3_instruction: Ви повинні будете петлю трикутник 12
        разів намалювати цю модель. Розділіть число градусів по колу (360) на кількість
        фігур, ви малюєте (12) розрахувати, скільки перетворити після кожної фігури.
      2-3 Artist Nested Loops 4_instruction: 'Циклічне повторення цієї diamond 12
        разів намалювати квітку. Підказка: 12 алмази, як 12 трикутників, ви зробили
        - скільки вам потрібно повернути після кожної фігури?'
      2-3 Artist Nested Loops 5_instruction: Заповніть цю будівлю windows із вкладеного
        циклу. У windows є 20 пікселів довгих і 20 пікселів один від одного.
      2-3 Artist Nested Loops 6_instruction: Це динозавр має 8 шипи підбігаючи хвіст;
        Кожен сплеск є 30 пікселів довгий. Петля трикутник 8 разів, але переконайтеся,
        що для переміщення вперед після кожного з них.
      2-3 Artist Nested Loops 7_instruction: Циклічне повторення цього трикутника
        10 Таймс намалювати сонця. Потрібно буде рухатися і свою чергу, після кожного
        трикутника. Ви можете з'ясувати, в яких перетворити шляхом ділення кількості
        градусів по колу за кількістю фігур, які складають його.
      2-3 Artist Nested Loops 8_instruction: Тепер давайте додамо деякі трави нашу
        картину. Кожен пучок трави становить 50 пікселів один від одного.
      2-3 Artist Nested Loops 9_instruction: Ми будемо закінчити цю картину, додавши
        квітка. Циклічне повторення алмаз 12 разів малювати ваш квітка.
      2-3 Artist Nested Loops Free Play_instruction: Вільна гра, намалюйте щось прохолодне
        з вкладені петель.
      2-3 Bee Conditionals 1_instruction: Привіт! Я Бджілка. Допоможіть мені отримати
        нектар з квітів.
      2-3 Bee Conditionals 10_instruction: "Пурпурні квіти, можливо 1 або 0 нектар.
        Будьте обережні, щоб не збирати нектар з Пурпурна квітка, якщо це не якийсь.
        \r "
      2-3 Bee Conditionals 11_instruction: Збирати нектар, де квіти мають нектар.
      2-3 Bee Conditionals 12_instruction: Використай цикли, щоб перевіряти і збирати
        нектар з усіх цих квітів.
      2-3 Bee Conditionals 13_instruction: 'Збирати нектар і зробити мед. Підказка:
        що станеться, якщо ви використовуєте на "Якщо нектар" в раді директорів Червона
        квітка? Ви можете заповнити це з петлею?'
      2-3 Bee Conditionals 14_instruction: Збирати нектар і зробити мед. Будьте обережні,
        щоб не збирати нектар з Пурпурна квітка, якщо це не якийсь.
      2-3 Bee Conditionals 15_instruction: Збирати нектар з усіх чотирьох квіти.
      2-3 Bee Conditionals 2_instruction: Привіт, я Бджілка! Допоможи мені зібрати
        весь нектар з квітів. Використай цикл.
      2-3 Bee Conditionals 3_instruction: Допоможи мені зібрати всі нектар з квітів
        і зробити мед. Використовувати петлю.
      2-3 Bee Conditionals 4_instruction: Допоможи мені зібрати всі нектар з квітів
        і зробити всі меду.
      2-3 Bee Conditionals 5_instruction: Пурпурні квіти, можливо 1 або 0 нектар,
        але ви не знаєте, який з них! Будьте обережні, щоб не збирати нектар з Пурпурна
        квітка, якщо це не якийсь. Перевірте, якщо нектар дорівнює 1 за допомогою
        if блоку.
      2-3 Bee Conditionals 6_instruction: Перевірити цю квітку з "Якщо" блоку, щоб
        побачити, чи доступна будь-якого нектар.
      2-3 Bee Conditionals 7_instruction: Збирати нектар з кожної квітки, якщо він
        має будь-який.
      2-3 Bee Conditionals 8_instruction: Це поле має червоні та пурпурні квітів.
        Червоні квіти є кількість відомих нектар, але Пурпурна квітка нектар невідомо.
        Зібрати всі нектар.
      2-3 Bee Conditionals 9_instruction: Збирати всі нектар з кожної квітки.
      2-3 Bee Conditionals Assessment 1_instruction: 'Оцінка: Зібрати всі нектар.
        Будьте обережні, щоб не збирати нектар з Пурпурна квітка, якщо це не якийсь.'
      2-3 Bee Debugging 1_instruction: Ці блоки є дійсно давало мені спокою. Виправити
        помилки, щоб зібрати всі нектар і зробити все, що з меді.
      2-3 Bee Debugging 10_instruction: Ці блоки є дійсно давало мені спокою. Виправити
        помилки, щоб зібрати всі нектар і зробити все, що з меді.
      2-3 Bee Debugging 2_instruction: Ці блоки є дійсно давало мені спокою. Виправити
        помилки, щоб зібрати всі нектар і зробити все, що з меді.
      2-3 Bee Debugging 3_instruction: Ці блоки є дійсно давало мені спокою. Виправити
        помилки, щоб зібрати всі нектар і зробити все, що з меді.
      2-3 Bee Debugging 4_instruction: Ці блоки є дійсно давало мені спокою. Виправити
        помилки, щоб зібрати всі нектар і зробити все, що з меді.
      2-3 Bee Debugging 5_instruction: Ці блоки є дійсно давало мені спокою. Виправити
        помилки, щоб зібрати всі нектар і зробити все, що з меді.  Тепер ви можете
        використовувати запустити і крок.
      2-3 Bee Debugging 6_instruction: 'Ці блоки є дійсно не давали мені спокою. Виправи
        помилку(и), щоб зібрати весь нектар і зробити весь мед. '
      2-3 Bee Debugging 7_instruction: Ці блоки є дійсно давало мені спокою. Виправити
        помилки, щоб зібрати всі нектар і зробити все, що з меді.
      2-3 Bee Debugging 8_instruction: Ці блоки є дійсно давало мені спокою. Виправити
        помилки, щоб зібрати всі нектар і зробити все, що з меді.
      2-3 Bee Debugging 9_instruction: Ці блоки є дійсно давало мені спокою. Виправити
        помилки, щоб зібрати всі нектар і зробити все, що з меді.
      2-3 Bee Debugging Assessment 1_instruction: 'Оцінка: Ці блоки є дійсно не давали
        мені спокою. Виправи помилку(и), щоб зібрати весь нектар і зробити весь мед.'
      2-3 Bee Functions 1_instruction: Функції це блоки коду, які виконують завдання.
        Використовуй "отримати 2 нектару", щоб збирати нектар з кожної квітки.
      2-3 Bee Functions 10_instruction: Фіолетові квіти, можуть мати 1 або 0 нектару.  Створи
        функцію, яка збирає нектар тільки з фіолетових квітів, які мають нектар.
      2-3 Bee Functions 2_instruction: Функції це блоки коду, які виконують завдання.
        Використовуй функцію "отримати 5", щоб отримати 5 нектарів одночасно. Також
        переконайся, що використовуєш цикл, щоб отримати ідеальну кількість блоків.
      2-3 Bee Functions 3_instruction: Збирати всі нектар з кожної квітки.
      2-3 Bee Functions 4_instruction: Функція "рухати та отримати нектар" змушує
        Бджілку повертатися, збирати нектар, та потім вертає Бджілку на стартове місце.
        Використай цю функцію, щоб зібрати весь нектар.
      2-3 Bee Functions 5_instruction: |
        Тут є більше нектару на квітках.
        Редагуй задану функцію так, що це набере 4 нектари та використай це, щоб зібрати весь інший нектар з квітів.
      2-3 Bee Functions 6_instruction: Тепер же для функція збирати нектар з трьох
        квіти.
      2-3 Bee Functions 7_instruction: Квіти в даний час подальшого геть. Редагувати
        задану функцію і використовувати його, щоб зібрати всі нектар з квітів.
      2-3 Bee Functions 8_instruction: Створити свій власний функцію, яка отримує
        7 нектар, рухається вперед і робить 7 меду. Функція збирати нектар в кожної
        квітки і зробити мед в кожному honeycomb.
      2-3 Bee Functions 9_instruction: Створи власну функцію, яка спрямовує по шляху,
        бере нектар, робить мед, а потім повертає бджілку на початок шляху.
      2-3 Bee Functions Assessment 1_instruction: 'Оцінка: Використовується функція
        приділено збирати нектар з кожної квітки.'
      2-3 Bee Functions Assessment 2_instruction: 'Оцінка: Створити функцію, щоб зробити
        3 меду в той час.'
      2-3 Bee Loops 1_instruction: 'Кожна квітка містить одну одиницю нектару. Збирати
        нектар з кожного квітів. '
      2-3 Bee Loops 10_instruction: Ви можете використовувати той час циклу всередині
        двох інших петлі, зібрати всі нектар?
      2-3 Bee Loops 11_instruction: Використай цикл "коли" для того, щоб зібрати весь
        нектар з квітів на цьому полі.
      2-3 Bee Loops 12_instruction: Використай цикл "коли" для того, щоб зібрати весь
        нектар з квітів на цьому полі.
      2-3 Bee Loops 13_instruction: 'Оцінка: За допомогою повторюваного блоку зібрати
        всі нектар.'
      2-3 Bee Loops 1A_instruction: 'Привіт, я - Бджілка. Допоможеш мені зібрати нектар
        з цих квітів? '
      2-3 Bee Loops 2_instruction: Використовуй цикл, щоб зібрати нектар та зробити
        мед.
      2-3 Bee Loops 2A_instruction: Можеш зробити це саме завдання більш легше, використовуючи
        цикл?
      2-3 Bee Loops 3_instruction: Збери нектар з кожної квітки та зроби мед на кожній
        соті.
      2-3 Bee Loops 3A_instruction: Можеш використати цикл для того, щоб зібрати весь
        нектар?
      2-3 Bee Loops 3B_instruction: Зараз використовуй новий блок повторення, щоб
        зібрати весь нектар та зробити весь мед.
      2-3 Bee Loops 4_instruction: Використай схожий цикл як в останній головоломці,
        але зроби поворот в це.
      2-3 Bee Loops 4A_instruction: Що станеться, якщо ти повториш циклічно 3 рази?
        Не забудь зробити мед в кінці!
      2-3 Bee Loops 5_instruction: Використай цикл, щоб піти вниз по сходах та зібрати
        нектар.
      2-3 Bee Loops 6_instruction: Використай цикл, щоб зібрати нектар з кожної квітки
        та зробити мед з медових стільників.
      2-3 Bee Loops 7_instruction: Поклади ці блоки в цикл, щоб зібрати нектар з кожної
        квітки.
      2-3 Bee Loops 8_instruction: Ці фіолетові квітки мають невідому кількість нектару.
        Використай цикл "коли нектар", щоб зібрати весь нектар. Цей цикл триватиме
        доти, доки умова є істинною, в цьому випадку Нектар > 0.
      2-3 Bee Loops 9_instruction: Цикл "коли" може виконувати ту саму дію, як констатування
        "якщо" в циклі. Додай цикл "коли" до коду, щоб виконати теж саме завдання.
      2-3 Bee Loops Assessment 1_instruction: Оцінювання - Використай цикл while щоб
        зібрати весь нектар з квітки.
      2-3 Maze 1_instruction: 'Можеш допомогти мені зловити капризну свиню? Склади
        пару з блоків "move forward" разом та натисни "Run". '
      2-3 Maze 10_instruction: Проведіть мене до зеленої лиходійки! (Важайте на динаміт)
      2-3 Maze 11_instruction: Приведи мене до квітки, я - голодний! Скільки разів
        тобі потрібно повторини блок?
      2-3 Maze 12 (copy 1)_instruction: 'Можеш щамінити попередню відповідь  лише
        з двома блоками? (Підказка: Створи цикл використовуючи блок "repeat times".)'
      2-3 Maze 12 (copy 2)_instruction: 'Можеш щамінити попередню відповідь  лише
        з двома блоками? (Підказка: Створи цикл використовуючи блок "repeat times".)'
      2-3 Maze 12 (old)_instruction: Приведи мене до свині, зараз за допомогою блоків
        Repeat times!
      2-3 Maze 12_instruction: 'Можеш замінити ці п''ять блоків лише двома блоками?
        (Підказка: створи цикл використовуючи блоки "repeat times".)'
      2-3 Maze 13 (old)_instruction: Приведи мене до свині, тепер за допомогою блоку
        "повторювати доки"!
      2-3 Maze 13_instruction: Доведи мене до свині використовуючи лише два блоки.
      2-3 Maze 14 (old)_instruction: Доведи мене до свині використовуючи блок "повторювати
        доки"!
      2-3 Maze 14_instruction: Доведи мене до соняшника! (Де ж ці блоки "повторювати
        доки", коли вони так потрібні?)
      2-3 Maze 15 (old)_instruction: Доведи мене до свині використовуючи блок "повторювати
        доки"!
      2-3 Maze 15_instruction: Склади два цикли, щоб дійти до свині, використовуючи
        декілька блоків.
      2-3 Maze 16 (old)_instruction: Доведи мене до свині використовуючи блок "повторювати
        доки"!
      2-3 Maze 16 before_instruction: Доведи мене до свині.
      2-3 Maze 16_instruction: Доведи мене до соняшника. Застосуй циклічну послідовність!
      2-3 Maze 2_instruction: Свиня куйовдить моє пір'я. Домопожи мені добратися до
        неї!
      2-3 Maze 3_instruction: Простеж шлях та проведи мене до лихої свині. Уникай
        вибухівки, або полетить пір'я!
      2-3 Maze 4_instruction: Проведіть мене до зеленої лиходійки! (Важайте на динаміт)
      2-3 Maze 5_instruction: Проведіть мене до зеленої лиходійки! (Важайте на динаміт)
      2-3 Maze 6_instruction: Зберігай спокій та допоможи мені знайти лиху свиню.
        Інакше я можу розсердитися!
      2-3 Maze 7_instruction: Проведіть мене до зеленої лиходійки! (Важайте на динаміт)
      2-3 Maze 8_instruction: Доведи мене до свині!
      2-3 Maze 9_instruction: Проведіть мене до зеленої лиходійки! (Важайте на динаміт)
      2-3 Maze Loops 1_instruction: Ви можете отримати мене свині, використовуючи
        квартали?
      2-3 Maze Loops 17_instruction: Доведи мене до соняшника!
      2-3 Maze Loops 18_instruction: Доведи мене до соняшника!
      2-3 Maze Loops 19_instruction: Доведи мене до соняшника!
      2-3 Maze Loops 20_instruction: Доведи мене до соняшника!
      2-3 Maze Loops 21_instruction: Доведи мене до соняшника!
      2-3 Maze Loops Assessment 1_instruction: 'Оцінювання: доведи мене до соняшника,
        використовуючи лише 5 блоків! '
      2-3 Maze sq1_instruction: |
        This pig is ruffling my feathers.  Help me find
        him!
      2-3 Maze sq10_instruction: Доведи мене до свині! Які блоки потрібно повторити?
      2-3 Maze sq10v2_instruction: Доведи мене до свині! Які блоки потрібно повторити?
      2-3 maze sq11_instruction: Доведи мене до свині! Які блоки потрібно повторити?
      2-3 maze sq12_instruction: Можеш замінити попередню відповідь циклом, використовуючи
        блок "повторити ...разів"?
      2-3 maze sq13_instruction: Шановна людино. Мені зомбі. Мені голодний. Треба
        ... дістатися ... соняшника. Створи цикл за допомогою блоку "повторювати доки".
      2-3 maze sq14_instruction: Можеш добратися до соняшника, використовуючи лише
        4 блоки?
      2-3 maze sq15_instruction: Можеш добратися до соняшника, використовуючи лише
        5 блоків?
      2-3 maze sq16_instruction: Гаразд, це схоже, але дещо відрізняється. Ти можеш
        зробити це за допомогою лише 5 блоків?
      2-3 Maze sq2_instruction: Простеж шлях та проведи мене до лихої свині. Уникай
        вибухівки, або полетить пір'я!
      2-3 Maze sq3_instruction: Проведіть мене до зеленої лиходійки! (Важайте на динаміт)
      2-3 Maze sq4_instruction: Зберігай спокій та допоможи мені знайти лиху свиню.
        Інакше я можу розсердитися!
      2-3 Maze sq5_instruction: Доведи мене до свині! Скільки разів потрібно повторити
        блок?
      2-3 Maze sq6_instruction: 'Можеш замінити попередню відповідь на два блоки?
        (Підказка: використай цикл з блоком "повторити ... разів".)'
      2-3 Maze sq7_instruction: Доведи мене до зеленої порушниці, використовуючи лише
        три блоки.
      2-3 Maze sq8_instruction: Доведи мене до свині! (Де ж блок "повторити ... разів",
        який мені потрібен?)
      2-3 Maze sq9_instruction: Створи цикли, щоб дійти до свині, використовуючи найменше
        блоків.
      2-3_instruction: |
        Purple flowers may have either 1 or 0 nectar. Be careful
        not to collect nectar from a purple flower if it doesn't have any.
      2-3level1_instruction: Допоможи пташці спіймати лихе порося, рухаючи її вперед
      4-5 Artist 1_instruction: 'Допоможи мені домалювати коробку. (Довжина кожної
        лінії - 300 пікселів) '
      4-5 Artist 10_instruction: Натисни "Запустити", щоб випробувати код. Потім повторюй
        це стільки разів, щоб завершити ескіз. Кольори будуть відрізнятися кожного
        разу.
      4-5 Artist 11_instruction: Заверши зелені лінії. Лінії довжиною 300 пікселів
        та 15 пікселів одна від одної.
      4-5 Artist 2_instruction: Можеш створити цикл цього коду, щоб завершити квадрат?
      4-5 Artist 3.5_instruction: Гаразд, спробуй з'ясувати, що відбувається, якщо
        ти запустиш цей код (або натиснеш "Запустити", щоб випробувати його). Потім
        повтори це достатньо разів, щоб завершити ескіз. Кольори будуть (з великою
        ймовірністю) щоразу різними.
      4-5 Artist 3_instruction: Цей прямокутний квітник має периметр 600. Довжина
        сторони - 200. Намалюй прямокутник.
      4-5 Artist 4_instruction: Скільки градусів у колі? Створи цикл з блоків, щоб
        створити коло кольорів.
      4-5 Artist 5_instruction: Який кут використаєш?
      4-5 Artist 6_instruction: Цей рівносторонній трикутник має кути 60, 60 та 60
        градусів. Кожна сторона має 200 пікселів. Заверши ескіз.
      4-5 Artist 7_instruction: Цей прямокутний трикутник має кути 30, 60 та 90 градусів.
        Довжина похилої сторони рівна подвійній висоті зі 100 пікселів. Заверши малюнок.
      4-5 Artist 8_instruction: Лінія по середині футбольного поля перпендикулярна
        до бічних ліній. Це поле має периметр 800 пікселів та 240 пікселів в довжину.
        Якої воно ширини? Намалюй межі та середню лінію.
      4-5 Artist 9_instruction: Намалюй іншу половину так, щоб дизайн був симетричним.
        Трикутники - рівносторонні та в довжину мають 50 пікселів.
      4-5 Artist Assessment 1_instruction: 'Оцінювання: використай цикл, щоб намалювати
        рівносторонній трикутник. Кожна сторона - 300 пікселів.'
      4-5 Artist For Loops 1_instruction: Введи числа від 1 до 10 в блоки ширини та
        запусти код.
      4-5 Artist For Loops 11_instruction: Завершуй блок "для" так, щоб він мав значення
        0, 20, 40, 60, 80... 200.
      4-5 Artist For Loops 12_instruction: 'Що трапиться, якщо ти заміниш чисел "від"
        та "до" навпаки? Заверши блок "для" так, щоб він перелічував числа 200, 180,
        160, 140, 120...0. '
      4-5 Artist For Loops 13_instruction: 'Модель починається без циклу "для" та
        містить дуже багато блоків. Використай блок "для", щоб завершити спіраль.
        Підказка: остання лінія має довжину 250 пікселів.'
      4-5 Artist For Loops 14_instruction: 'Хтось почав писати код, але потім зрозумів,
        що має бути простіший спосіб! Використай блок "для", щоб змінити блоки та
        завершити трикутну спіраль. (Підказка: остання лінія має довжину 300 пікселів.'
      4-5 Artist For Loops 15_instruction: 'Хтось почав писати код, але потім зрозумів,
        що має бути швидший спосіб! Використай блок "для", щоб змінити блоки та завершити
        шестикутну спіраль. (Підказка: остання лінія має довжину 200 пікселів.'
      4-5 Artist For Loops 2_instruction: Це блок "для". Замість введення 1,2,3...
        10, блок "для" може повторювати блоки всередині та перелічити числа. Розмісти
        число 10 в розділ "до" блоку "для".
      4-5 Artist For Loops 3_instruction: Як ми можемо рахувати від 1 до 50? Відредагуй
        блок "для".
      4-5 Artist For Loops 4_instruction: Заповни блок "для" так, що він рахував по
        черзі від 1 до 10.
      4-5 Artist For Loops 6_instruction: Намалюй квадрати зі сторонами 50, 60, 70,
        80 та 90 пікселів. Ти повинен використати функцію "малювати квадрат" п'ять
        разів.
      4-5 Artist For Loops 7_instruction: 'Намалюй такі самі квадрати, але використай
        при цьому блок "розрахувати по" для зміни їх розміру.  Вбудуй блок "Лічильник"
        в функцію "Малювати квадрат". Підказка: Він знаходиться в категорії "Змінні".'
      4-5 Artist For Loops 8_instruction: Можеш заповнити програму шляхом розміщення
        блоків всередині блоків "для", щоб рахувати від 10 до 200 десятками? Блоки
        "для"  знаходяться у категорії Цикли.
      4-5 Artist For Loops 9_instruction: Ці кола мають розмір 5, 10, 15, 20, 25,
        30, та 35. Намалюй кола, використовуючи блок "для".
      4-5 Artist Free Draw 1_instruction: Вільне малювання! Намалюй будь-що, на що
        маєш натхнення творити.
      4-5 Artist Functions 1_instruction: Використай цикл повторення, щоб намалювати
        трикутник.
      4-5 Artist Functions 10a_instruction: Розмісти цей код в функцію 'намалювати
        сніжинку' та заміни 50 параметром 'розмір'. Функція вже викликана, щоб створити
        сніжинку на 100 пікселів.
      4-5 Artist Functions 10b_instruction: 'Використай функцію "намалювати сніжинку",
        щоб створити сніжинки різних розмірів. Підказка: перша сніжинка має довжину
        25 та кожна сніжинка - вдвічі більшого розміру, ніж попередня.'
      4-5 Artist Functions 11_instruction: 'Функція "намалювати шестикутник" використовує
        функцію "намалювати трикутник". Заверши функцію шестикутника. (Підказка: шестикутник
        має 6 сторін, кожна довжиною 100 пікселів)'
      4-5 Artist Functions 12_instruction: 'Заверши функцію "намалювати хвилі". Кожна
        хвиля складається с однієї Верхньої хвилі та однієї Нижньої хвилі. Підказка:
        намалюй 5 синіх хвиль.'
      4-5 Artist Functions 13 Free play_instruction: Тут наведено деякі функції, щоб
        намалювати планети, зорі, ракети та роботів. Використай їх всіх для створення
        малюнка, яким зможеш поділитися з твоїми друзями.
      4-5 Artist Functions 14 Free play_instruction: Тут ми пропонуємо тобі декілька
        функцій. Використай їх будь-яким чином, як тобі подобається всередині одного
        чи більше циклів, щоб створити малюнок, яким ти можеш поділитися з твоїми
        друзями. Натисни "Виконати", щоб побачити приклад.
      4-5 Artist Functions 15 Assessment_instruction: 'Оцінювання: Використай функцію
        "намалювати квадрат", щоб створити квадрати. Квадрати - 50, 100 та 150 пікселів.'
      4-5 Artist Functions 2a_instruction: Зараз помісти ці блоки в нову функцію під
        назвою "намалювати маленький трикутник" та виконай її.
      4-5 Artist Functions 2b_instruction: Тепер створіть функцію під назвою "намалювати
        маленький трикутник" за допомогою даних блоків.
      4-5 Artist Functions 3_instruction: 'Тепер створити функції "намалюйте середній
        трикутник" і "намалюйте великий трикутника". Функція "намалюйте маленький
        трикутник" буде зроблено за вас. Трикутники мають довжинами 50 (мале), 100
        (середній) і 150 (великий). '
      4-5 Artist Functions 4_instruction: Цей новий "намалюйте трикутник" функція
        має параметр і може робити роботу всі три функції перед. Намалюйте ж трикутників
        за допомогою цієї нової функції.
      4-5 Artist Functions 5_instruction: Чи можна змінити функцію "намалюйте трикутник"
        в "намалювати квадрат" функцію, щоб змінити малюнок?
      4-5 Artist Functions 6_instruction: 'Використовуйте "намалювати квадрат" і "намалюйте
        трикутник функції" намалювати будинку. (Підказка: сторін на площі є 200 пікселів)'
      4-5 Artist Functions 6b_instruction: За допомогою жеребкування квадрат та трикутник
        функцій, а також інші блоки для створення будинку, додавши їх до на ' малювати
        будинок "функціонувати, називаючи його.
      4-5 Artist Functions 7_instruction: Функція "намалюйте будинок" намалювати будинків,
        які є 100 пікселів і 50 пікселів. Відокремлені два будинки 50 пікселів.
      4-5 Artist Functions 8_instruction: Функція "Рисование квітка" має параметр,
        який дозволяє встановити висоту стовбура.  Встановіть його на 200 і подивитися,
        що відбувається.
      4-5 Artist Functions 9_instruction: Намалюйте ці 3 квіти. Першим на висоту 100
        і наступного квітка завжди 50 пікселів більше, ніж висота попередній. Квіти,
        також 100 пікселів один від одного.
      4-5 Artist Patterns 1_instruction: Можна зробити цю площу використання в циклі?
        Кожній стороні є 20 пікселів довгий.
      4-5 Artist Patterns 10_instruction: 'Цей код привертає два ряди шестикутників
        - петлю все це 4 рази намалювати весь honeycomb. Підказка: Ви повинні будете
        стрибати назад 120 пікселів в ваш зовнішня петля, щоб переконатися, що художник
        не Намалюйте межі екрана.'
      4-5 Artist Patterns 11_instruction: 'Скільки разів вам потрібно це, щоб звернути
        половину кола петля? Натяк: якщо є 360 градусів по колу і кожну петельку рухається
        3 градуси, скільки разів буде потрібно повторювати намалювати повне коло?'
      4-5 Artist Patterns 12_instruction: Якщо скопіювати цей цикл і повернути ліворуч,
        а не право, що відбувається? Чи можете ви повторити, щоб намалювати цю хвилю?
      4-5 Artist Patterns 13_instruction: Тепер давайте петля що вся справа в чотири
        рази створити цю фотографію рамку. Стежити за куточки - ви не можете просто
        повернути на 90 градусів! Якщо цикл 3 ступеня перетворити 60 разів робить
        півколо, які ці блоки коду зроблять чверті кола для кутів?
      4-5 Artist Patterns 2_instruction: Якщо ви розміщуєте ваш квадратна петля всередині
        іншого петлю, ми називаємо це вкладеного циклу. Що вам потрібно, щоб додати
        до вашої зовнішньої петлею, щоб переконатися, що всі 15 квадрати шикуються
        поруч один з одним?
      4-5 Artist Patterns 3_instruction: Тепер давайте один рівень глибше! Ми вкладені
        що весь блок коду в іншому петлю, але ви повинні отримати художник назад на
        місце, щоб намалювати на наступний рядок. Які ці блоки коду можна розташувати
        в кінці зовнішня петля намалювати всю сітку?
      4-5 Artist Patterns 4_instruction: Цей diamond має 50 пікселів сторін і кутів
        120 і 60 градусів. Намалювати його за допомогою петлю.
      4-5 Artist Patterns 5.5_instruction: Скільки разів потрібно повторити цей блок
        намалювати повну сітки алмази?
      4-5 Artist Patterns 5_instruction: Давайте повторимо це зробити поспіль 6 діамантів.
        Зверніть увагу, що ми змінили наш код diamond повторити 3 рази, а не 2 - чому
        ви думаєте, що це?
      4-5 Artist Patterns 6_instruction: Скільки разів потрібно повторити цей блок
        намалювати повну сітки алмази?
      4-5 Artist Patterns 7_instruction: Давайте змінимо, код від останнього головоломку,
        щоб зробити цей складніший візерунок. Помітити, як алмази перекриваються зараз,
        спробуйте змінити на перший "перейти назад" від 100 до 50 (наполовину далеко)
        - тепер як далеко художник, Ідіть в той другій "перейти назад"?
      4-5 Artist Patterns 8_instruction: Використовувати петлею намалювати цього шестикутника
        з 40 піксель сторонами і кутами 60 градусів.
      4-5 Artist Patterns 9.5_instruction: Давайте петлю цей код намалювати два ряди
        шестикутників. Зверніть увагу, як наш другий рядок зміщується вправо.
      4-5 Artist Patterns 9_instruction: Зараз, повторити, що код 3 рази намалювати
        всю рядка. Натяк, кожен шестикутник є 80 пікселів завширшки та від найвіддаленіші
        точок зліва направо.
      4-5 Artist Patterns Free Play_instruction: Безкоштовно грати - спробувати свої
        сили в робить візерунком свій власний!
      4-5 Bee Conditionals 1 (copy 1)_instruction: |
        The bee can't tell if this is
        a flower or a honeycomb. Gather nectar only from flowers, but first check
        if it is a flower or a honeycomb.
      4-5 Bee Conditionals 1_instruction: Бджоли не можу сказати, якщо це квітка або
        стільники. Збирати нектар з квітів, але спочатку перевірте, якщо є квітка
        або стільники.
      4-5 Bee Conditionals 2 (copy 1)_instruction: |
        The bee only wants nectar right
        now. Remember, not all objects are flowers, so check to gather nectar only
        at flowers.
      4-5 Bee Conditionals 2_instruction: Бджола тільки хоче нектар прямо зараз. Пам'ятайте,
        що не всі об'єкти квіти, тому перевірити збирати нектар тільки на квіти.
      4-5 Bee Conditionals 3_instruction: Тепер бджоли просто хоче зробити мед. Перевірте
        мед тільки на стільник.
      4-5 Bee Conditionals 4 (copy 1)_instruction: |
        The unknown object is either
        a flower or a honeycomb. Use the if/else block to collect nectar if it is
        a flower, else to make honey (because it is a honeycomb).
      4-5 Bee Conditionals 4_instruction: Невідомий об'єкт є квітка або стільники.
        Використання в блокувати if/else збирати нектар, якщо це-квітка, ще можна
        зробити мед (адже стільники).
      4-5 Bee Conditionals 5_instruction: Можливо, квітка або стільникового під ці
        хмари. Використання в блокувати if/else збирати нектар, якщо є квітка, ще
        можна зробити мед (тому що немає стільники).
      4-5 Bee Conditionals 6 (copy 1)_instruction: |
        This purple flower may have either
        3, 2, or 1 nectar. Here an if-else block is combined with another if-else
        block to create an if, else-if, else block. Complete the solution to collect
        the unknown amount of nectar.
      4-5 Bee Conditionals 6_instruction: Цей Пурпурна квітка, можливо, 3, 2 або 1
        нектар. Тут if інакше блоку в поєднанні з іншого if інакше блок для створення
        if, інакше якщо, інше блоку. Комплексне рішення для збору невідома кількість
        нектар.
      4-5 Bee Conditionals 7_instruction: Пам'ятати, що фіолетові квіти можуть 3,
        2 або 1 нектарів. Повна функція "перевірка фіолетовий квітка" і використовувати
        його, щоб зібрати всі нектару на квіти.
      4-5 Bee Conditionals 8_instruction: Написати функцію всередині блок під назвою
        "перевірка квітка зробити мед". Ваші функції повинні перевірити, скільки нектар,
        Пурпурна квітка має і забрати його рухатися вперед а потім зробити мед.
      4-5 Bee Conditionals Assessment 1_instruction: 'Оцінка: Цей код є неправильним.
        Завершити функцію "отримати нектар або зробити мед", а потім називати його,
        щоб зібрати всі нектар і мед. Пам''ятати, що фіолетові квіти можуть 3, 2 або
        1 нектарів.'
      4-5 Bee Debugging 1_instruction: Ці блоки є дійсно давало мені спокою. Ви їх
        можна було виправити?
      4-5 Bee Debugging 10_instruction: Знайди помилки та виправ їх.
      4-5 Bee Debugging 11_instruction: Чи означає це кількість правильно?
      4-5 Bee Debugging 2_instruction: Допомогти отримати нектар і зробити Мед бджоли.
      4-5 Bee Debugging 3_instruction: Знайди помилки та виправ їх.
      4-5 Bee Debugging 4_instruction: Ці блоки не працюють. Що таке шаблон?
      4-5 Bee Debugging 5_instruction: Щось не прямо тут...
      4-5 Bee Debugging 6_instruction: Пурпурна квітка має невідома кількість нектар.
        Виправити блоки, щоб отримати всі нектар з квітів.
      4-5 Bee Debugging 7_instruction: Функція відсутня щось...
      4-5 Bee Debugging 8_instruction: Ця функція є штраф, але це не використовується
        належним чином.
      4-5 Bee Debugging 9_instruction: Чому бджоли не робить достатньо меду?
      4-5 Bee Debugging Assessment 1_instruction: 'Примітка: Виправте код.'
      4-5 Bee Nested Loops 1_instruction: Використовувати петлі, щоб зібрати всі нектар.
      4-5 Bee Nested Loops 2_instruction: 'Зібрати всі нектар з кожної квітки. Використовувати
        Вкладені петлі. '
      4-5 Bee Nested Loops 3_instruction: Зібрати всі нектар, поставивши стартовий
        код в вкладеного циклу.
      4-5 Bee Nested Loops 4_instruction: 'Зібрати всі нектар з кожної квітки і зробити
        мед в кожному honeycomb. Використовувати Вкладені петлі. '
      4-5 Bee Nested Loops 5_instruction: Зібрати всі нектар, створюючи Вкладені петлі.
      4-5 Bee Nested Loops 6_instruction: Зібрати весь нектар.
      4-5 Bee Nested Loops 7_instruction: Поставити цей цикл всередині іншого петля
        для створення вкладеного циклу і зібрати всі нектар з квітів.
      4-5 Bee Nested Loops 8_instruction: 'Зібрати всі нектар з ці квіти Автор гніздиться
        в той час як петлю. Замінити внутрішній блок повторення разів на деякий час
        блоку. '
      4-5 Bee Nested Loops 9_instruction: Зібрати всі нектар з ці квіти Автор гніздиться
        в той час як петлю всередині повторення.
      4-5 Bee Nested Loops Assessment 1_instruction: Оцінка - зібрати всі нектар і
        зробити всі мед за допомогою петель.
      4-5 Bee Nested Loops Rows_instruction: Збирати нектар з рядки квітів! Використовувати
        Вкладені петлі.
      4-5 Maze 1 (copy 1)_instruction: Шановні особи. Мені зомбі. Повинні.... дістатися
        до соняшника.
      4-5 Maze 1_instruction: Шановні особи. Мені зомбі. Повинні.... дістатися до
        соняшника.
      4-5 Maze 10_instruction: Можеш добратися до соняшника, використовуючи лише 4
        блоки?
      4-5 Maze 11_instruction: Ви можете отримати на соняшник, використовуючи тільки
        шість блоки?
      4-5 Maze 12_instruction: Гаразд, це дещо відрізняється. Ви можете зробити це
        тільки шість блоки?
      4-5 Maze 13_instruction: Доведи мене до свині!
      4-5 Maze 14_instruction: Отримати мене свині! Користуватися повторення до блоку.
      4-5 Maze 2 (copy 1)_instruction: Отримати зомбі на соняшник, але уникнути на
        chomper!
      4-5 Maze 2_instruction: Отримати зомбі на соняшник, але уникнути на chomper!
      4-5 Maze 3 (copy 1)_instruction: Повинні... дістатися до соняшника.
      4-5 Maze 3_instruction: Повинні... дістатися до соняшника.
      4-5 Maze 4 (copy 1)_instruction: Спробуйте блоку "Повторити", щоб використовувати
        менше блоків...
      4-5 Maze 4_instruction: Спробуйте блоку "Повторити", щоб використовувати менше
        блоків...
      4-5 Maze 5 (copy 1)_instruction: Ви можете вирішити цю головоломку, використовуючи
        найменшу кількість блоків можливим?
      4-5 Maze 5_instruction: Ви можете вирішити цю головоломку, використовуючи найменшу
        кількість блоків можливим?
      4-5 Maze 6 (copy 1)_instruction: Ви можете вирішити цю головоломку, використовуючи
        найменшу кількість блоків можливим?
      4-5 Maze 6_instruction: Ви можете вирішити цю головоломку, використовуючи найменшу
        кількість блоків можливим?
      4-5 Maze 7_instruction: Шановні особи. Мені зомбі. Повинні.... дістатися до
        соняшника.
      4-5 Maze 8_instruction: Використовувати блок "Повторити", щоб отримати зомбі
        на соняшник. (Щоб уникнути в chompers!)
      4-5 Maze 9_instruction: Створити петлею блоком "Повторити до".
      4-5 Maze Assessment 1_instruction: 'Оцінка: Потрапити на соняшник.'
      4-5 Maze Conditionals 1_instruction: Використовувати повторення до блоку, щоб
        отримати зомбі на соняшник.
      4-5 Maze Conditionals 10_instruction: Зможеш додати ще 3 блоки, щоб допомогти
        мені пройти складніший лабіринт? Якщо все зроблено правильно, я зможу проходити
        по довільному кривому шляху будь-якої довжини.
      4-5 Maze Conditionals 2_instruction: Використовувати повторення до блоку, щоб
        отримати зомбі на соняшник.
      4-5 Maze Conditionals 3_instruction: 'Блок "Якщо" дає змогу самостійно вирішувати,
        коли включити. Підказка: вам потрібно всього лише один більш блокує, але дізнатися,
        як ми його налаштувати так що ви можете зробити це на свій власний наступного
        разу.'
      4-5 Maze Conditionals 4_instruction: Гаразд, це так само, як останній головоломки,
        але ви повинні пам'ятати, як ви використовували блок "Якщо" та "Повтор" блок
        разом.
      4-5 Maze Conditionals 5_instruction: Мене хочуть соняшник! За допомогою "Якщо"
        блок зрозумійте мене там з найменшу кількість блоків.
      4-5 Maze Conditionals 6_instruction: Мене хочуть соняшник! За допомогою "Якщо"
        блок зрозумійте мене там з найменшу кількість блоків.
      4-5 Maze Conditionals 7_instruction: Гаразд, зробимо це ще раз для практики
        - це не дуже відрізняється, але остерігайся пожирачів!
      4-5 Maze Conditionals 8_instruction: "Блок \"якщо-інакше\" перевіряє умову,
        потім \nвиконує одну АБО іншу дію. Щоб направити мене до соняшника, використай
        \nцей новий блок.\n"
      4-5 Maze Conditionals 9_instruction: Ще трохи практики використання блоку "якщо-або".
        Зможеш зробити усе правильно з першої спроби?
      4-5 Maze Conditionals Assessment 1_instruction: Потрапити мене на соняшник в
        як кілька блоків наскільки це можливо за допомогою "Повторити до" і "if інакше"
        блок.
      4-5 Nested Loops 1_instruction: 'Повний код, щоб залучити ці трикутника.  Перший
        буде зроблено за вас.  Підказка: 3 трикутники в 360 градусів обертання.'
      4-5 Nested Loops 10_instruction: Намалювати останній рядок зірок на цьому прапор
        за цикл наданого блоків. Зірки 50 пікселів один від одного, але пам'ятайте,
        що зірки, самі є 30 пікселів по ширині.
      4-5 Nested Loops 11_instruction: Можна зробити ці 10 квадратів цей тротуар,
        за допомогою вкладеного циклу? Кожен площі становить 30 пікселів.
      4-5 Nested Loops 12_instruction: Можна зробити ці 36 трикутника за допомогою
        вкладеного циклу?
      4-5 Nested Loops 2_instruction: 'Тепер гніздо цей цикл всередині іншого петлю
        намалювати 10 трикутники.  Це називається вкладеного циклу.  Підказка: Всі
        10 трикутники повні 360 градусів обертання.  '
      4-5 Nested Loops 3_instruction: "Створити на сонці, гніздиться ще одна петля,
        код для початківців. Це називається Вкладені петлі. \r "
      4-5 Nested Loops 5_instruction: Циклічне повторення даний код для створення
        млині.
      4-5 Nested Loops 6_instruction: Можна зробити шестикутник за цикл трикутник
        код?
      4-5 Nested Loops 7_instruction: 'Циклічне повторення цієї конструкції 10 разів.
        Скільки ви повинні перетворити кожен раз, коли ви циклу? (Підказка: що таке
        360 ділиться на 10?)'
      4-5 Nested Loops 8_instruction: 'Повторювати цей дизайн 6 разів. Скільки ви
        повинні перетворити кожен раз, коли ви циклу? (Підказка: що таке 360 ділиться
        на 6?)'
      4-5 Nested Loops 9_instruction: Намалюйте зубів в рот на "Алігатор"!
      4-5 Nested Loops Assessment 1_instruction: За допомогою вкладеного циклу завершать
        оформлення.
      4-5 While Loops 1_instruction: Рухатися мені отвір і заповнити його з двома
        shovelfuls бруду, використовуючи блок "Заливка".
      4-5 While Loops 2_instruction: Рухатися мені на купу бруду і видаляємо його
        з 5 Лопати совкові за допомогою блока "видалити".
      4-5 While Loops 3_instruction: 'Рухатися мені на купи і видалити все це, потім
        перейти до діри і заповнити його повністю.  Підказка: За допомогою як кілька
        блоків наскільки це можливо.'
      4-5 While Loops 4_instruction: 'Ого, я знайшов дуже глибокі діри! Я не знаю,
        як багато хто shovelfuls бруду, він повинен.  Ви можете написати програму,
        яка наповнює її, поки землі не буде навіть?  Підказка: Спробуйте виконати
        за в той час як петлю це час.'
      4-5 While Loops 5_instruction: Wow, тепер є два глибокі діри! Ви можете написати
        програму, яка заповнює їх обох поки землі не буде навіть?
      4-5 While Loops 6_instruction: Wow, тепер є великі купи бруду! Ви можете написати
        програму, яка видаляє все це, так що землі навіть?
      4-5 While Loops 7_instruction: Wow, в даний час існує три купи забруднень! Ви
        можете написати програму, яка видаляє кожного з них, поки землі не буде навіть?
      4-5 While Loops 8_instruction: ' Існує дійсно глибокі діри і дійсно велику купу
        бруду.  Як багато хто shovelfuls бруду необхідно використовувати з зробити
        землю плоскою?  Підказка: Використання на той час петля для обох сторін.'
      4-5 While Loops Assessment 1_instruction: Є багато дірок і паль.  Допоможи мені
        заповнити і видалити їх, щоб зробити землю плоскою.
      AlgPD DR Free Play_instruction: Create a function based on your own word problem.
      Artist - Nested Loops 1_instruction: |
        Complete the code to draw these triangles.  The
        first one is done for you.  Hint:  3 triangles in a 360 degree rotation.
      Artist - Nested Loops 10_instruction: |
        Draw the last row of stars on this flag
        by looping the provided blocks. The stars are 50 pixels apart, but remember
        that the stars themselves are 30 pixels wide.
      Artist - Nested Loops 11_instruction: |
        Can you draw these 10 squares of this
        sidewalk using a nested loop? Each square is 30 pixels.
      Artist - Nested Loops 12_instruction: |
        Can you draw these 36 triangles using
        a nested loop?
      Artist - Nested Loops 2_instruction: "Now nest this loop inside another loop\nto
        draw 10 triangles.  This is called a nested loop.  Hint: All 10 triangles\ncomplete
        a 360 degree rotation.  \n"
      Artist - Nested Loops 3_instruction: "Create a sun by nesting the starter code\nin
        another loop. This is called a nested loop.\r\n"
      Artist - Nested Loops 5_instruction: Циклічне повторення даний код для створення
        млині.
      Artist - Nested Loops 6_instruction: |
        Can you draw a hexagon by looping the
        triangle code?
      Artist - Nested Loops 7_instruction: |
        Loop this design 10 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 10?)
      Artist - Nested Loops 8_instruction: |
        Loop this design 6 times. How much do
        you have to turn each time you loop? (Hint: What is 360 divided by 6?)
      Artist - Nested Loops 9_instruction: Намалюйте зубів в рот на "Алігатор"!
      Artist - Nested Loops Assessment 1_instruction: За допомогою вкладеного циклу
        завершать оформлення.
      Big Game Animation 1 (copy 1)_instruction: |
        Now that you've learned to write
        simple linear functions, let's work on using them to add some movement to
        our game. Click play to see what your game can currently do (not much!), update
        any variables you like, and then click finish to move on.
      Big Game Animation 1_instruction: |
        Now that you've learned to write simple
        linear functions, let's work on using them to add some movement to our game.
        Click run to see what your game can currently do (not much!), update any variables
        you like, and then click finish to move on.
      Big Game Animation 2 (copy 1)_instruction: |
        The function 'update-target'
        function takes the target's current x value, and returns an updated value.
        Complete the 'update-target' function so that it adds to the x value each
        time it is called. The more you add to x, the faster the target will go.
      Big Game Animation 2_instruction: |
        The update-target function takes the target's
        current x value, and returns an updated value. Complete the update-target
        function so that it adds to the x value each time it is called. The more you
        add to x, the faster the target will go.
      Big Game Animation 3_instruction: |
        The update-danger function should work just
        like update-target, except that the danger should move from the right side
        over towards the left. Complete update-danger to make the danger fly across
        the screen.
      Big Game Animation 4_instruction: |
        At this point your game your danger should
        run across the screen from right to left, and your target should run across
        from left to right. They don't ever come back on screen once they've left,
        but we'll take care of that later. Take a minute to make sure your game is
        working like you want it to, and then click finish to move on.
      Big Game Booleans 1_instruction: Коли ви останній раз працював на вашій грі
        ми отримали наші цілі і небезпека спрайт літати по всьому екрану, але вони
        ніколи не повертається. Посилання запустити, щоб побачити, як ваша гра в даний
        час працює і потім натисніть закінчити, і ми будемо працювати з виготовлення
        цих спрайт, з'являються знову на екрані після того, як вони вийшли.
      Big Game Booleans 2_instruction: |
        Go to the Functions section of the toolbox
        and complete the safe-left? function so that it returns true if the sprite's
        x coordinate is greater than -50. If you're successful you should see the
        Danger go off the left side and then return on right side.
      Big Game Booleans 3_instruction: |
        Now that you've got safe-left?, let's fill
        in safe-right? - it should take in a sprite's x coordinate and return true
        if that coordinate is less than 450. Once your safe-right? is complete you
        should see the Target go off the right side of the screen and return on the
        left.
      Big Game Booleans 4_instruction: |
        Complete the onscreen? function so that it
        checks whether both safe-left? and safe-right? are true.
      Big Game Booleans 5_instruction: |
        At this point your danger should run across
        the screen from right to left, your target should run across from left to
        right, and they should both return to the opposite side, repeatedly. Take
        a minute to make sure your game is working like you want it to, and then click
        Finish to move on.
      Big Game Collision 1 (copy 1)_instruction: Коли ви останній раз працював на
        вашій грі ми отримали наші цілі і небезпека спрайт літати по всьому екрану,
        але вони ніколи не повертається. Посилання запустити, щоб побачити, як ваша
        гра в даний час працює і потім натисніть закінчити, і ми будемо працювати
        з виготовлення цих спрайт, з'являються знову на екрані після того, як вони
        вийшли.
      Big Game Collision 1_instruction: |
        At this point you've programmed a video
        game with a moving target and danger, both of which return to the screen once
        they've left, and a player that responds to keyboard input. Click run to
        see how your game is currently working, and then we'll dig into the final
        missing piece - collision detection!
      Big Game Collision 2_instruction: |
        To move the player up and down, we'll need
        to use a conditional block to figure out which key is pressed and respond
        accordingly. Computers read keypresses as numeric key codes - the up arrow
        is 38 and the down arrow is 40. You can lookup other key codes in your student
        workbook. Edit the 'update-player' function so that if moves the player
        up when the up arrow is pressed, or down when the down arrow is pressed.
      Big Game Collision 3_instruction: |
        Use the Distance Formula, so the distance
        function returns the distance between the player's center coordinates (px,
        py) and another sprite's center coordinates (cx, cy).
      Big Game Collision 4_instruction: |
        Complete the collide? function so that it
        returns true if the distance between two points is less than 100 pixels apart.
      Big Game Complete (copy 1)_instruction: |
        A demo of the completed CS in Algebra
        Big Game project
      Big Game Complete_instruction: Демо завершеного проекту великої гри Інформатика
        в алгебрі
      Big Game Final_instruction: Ви зробили це! Зараз ваша гра має бути повністю
        функціональною, тож можете пограти і внести остаточні виправлення. Коли будете
        задоволені результатом, клацніть Завершити і матимете можливість поділитись
        посиланням на свою гру. Успіхів!
      Big Game Player 1_instruction: |
        We're getting really close to a finished game!Last
        time you worked on your game, you used booleans to make your Target and Danger
        return to the screen once they've left. Click Run to see how your game looks
        right now, and then we'll get to making your Player move up and down.
      Big Game Player 2_instruction: |
        Edit the update-player function so the player
        moves up when the up arrow (keycode 38) is pressed, and moves down (keycode
        40) when the down arrow is pressed.
      Big Game Testing_instruction: Демо завершеного проекту великої гри Інформатика
        в алгебрі
      Big Game Vars 1 (copy 1)_instruction: |
        Let's get started on your Big Game!
        Here you'll see a whole bunch of placeholder code that you'll eventually
        replace with your own, but for now we're only going to worry about defining
        variables. Click "Run" to see what the game looks like with the default
        values.
      Big Game Vars 1_instruction: |
        Let's get started on your Big Game! Here you'll
        see a whole bunch of placeholder code that you'll eventually replace with
        your own, but for now we're only going to worry about defining variables.
        Click "Run" to see what the game looks like with the default values.
      Big Game Vars 2 (copy 1)_instruction: |
        The first step to making this game your
        own is to give it a good Title. Click edit on the 'title' and 'subtitle'
        variables and change them to something new.
      Big Game Vars 2_instruction: |
        The first step to making this game your own is
        to give it a good Title. Click edit on the title and subtitle variables and
        change them to something new.
      Big Game Vars 3 (copy 1)_instruction: |
        Now let's set the background for your
        new game. Edit the 'bg' variable and select a new background Image from
        the dropdown.
      Big Game Vars 3_instruction: |
        Now let's set the background for your new game.
        Edit the bg variable and select a new background Image from the dropdown.
      Big Game Vars 4 (copy 1)_instruction: |
        Awesome, now you can update the variables
        for your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click 'finish'
        when you're done.
      Big Game Vars 4_instruction: |
        Awesome! Now you can update the variables for
        your Player, Target, and Danger. Feel free to play with all of the variables
        at this point to make your game look like you'd like it to. Click "Finish"
        when you're done.
      Building a Foundation Assessment_instruction: |
        Build a three level pyramid,
        there are no other directions, so just play with the pieces until you get
        it!
      C3-Farmer While Loops 1_instruction: |
        Move me to the hole and fill it with
        two shovelfuls of dirt, using the "fill" block.
      C3-Farmer While Loops 2_instruction: |
        Move me to the pile of dirt and remove
        it with 5 shovel scoops, using the 'remove' block.
      C3-Farmer While Loops 3_instruction: |
        Move me to the pile and remove all of
        it, then move to the hole and fill it completely.  Hint:  Use as few blocks
        as possible.
      C3-Farmer While Loops 4_instruction: |
        Wow, I found a really deep hole! I don't
        know how many shovelfuls of dirt it needs.  Can you write a program that fills
        it until the ground is even?  Hint:  Try using the while loop this time.
      C3-Farmer While Loops 5_instruction: |
        Wow, now there are two deep holes! Can
        you write a program that fills them both until the ground is even?
      C3-Farmer While Loops 6_instruction: |
        Wow, now there is a large pile of dirt!
        Can you write a program that removes all of it so the ground is even?
      C3-Farmer While Loops 7_instruction: |
        Wow, now there are three piles of dirt!
        Can you write a program that removes each of them until the ground is even?
      C3-Farmer While Loops 8_instruction: |2
         There is a really deep hole and a really
        large pile of dirt.  How many shovelfuls of dirt need to be moved around to
        make the ground flat?  Hint: Use the while loop for both.
      C3-Farmer While Loops Assessment 1_instruction: |
        There are a lot of holes and
        piles.  Help me to fill and remove them to make the ground flat.
      Calc Circles of Eval .1_instruction: |
        You’ll be writing a kind of code called
        Evaluation Blocks, because each block of code evaluates to a single value.
        Change the ??? in this code so that the block evaluates to 5.
      Calc Circles of Eval .2_instruction: |
        This Evaluation Block is a multiplication
        function which takes two numbers and returns the product of those numbers.
        Edit this block so that it multiplies 2 * 5
      Calc Circles of Eval .3_instruction: |
        Here's a function for Addition which
        takes two numbers and returns their sum. Use this Addition block to add 3
        + 6.
      Calc Circles of Eval .4_instruction: |
        Here we've nested an Addition Block
        inside a Multiplication Block. Complete this code so it multiplies 3 by (4
        + 1)
      Calc Circles of Eval 1 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 1_instruction: |
        Every mathematical operator (+, -, *,
        /, and so on) can be represented by an Evaluation Block in code. Change the
        Evaluation Block to match the expression.
      Calc Circles of Eval 2 (copy 1)_instruction: |
        Convert this statement to <some_shape>
        of evaluation.
      Calc Circles of Eval 2_instruction: |
        Use a multiplication block to complete
        this code.
      Calc Circles of Eval 3_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 4_instruction: |
        This code is missing a couple of Evaluation
        Blocks - make sure you put everything in the right order.
      Calc Circles of Eval 5_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 6_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 7_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval 8_instruction: |
        Complete the Evaluation Blocks to match
        this expression.
      Calc Circles of Eval 9_instruction: |
        Complete the Evaluation Blocks to match
        this statement.
      Calc Circles of Eval Free Play_instruction: |
        Free Play: Try using the Evaluation
        Blocks to write some equations of your own. How does nesting the blocks in
        different ways impact their evaluation?
      Calc Define Funcs 1 (copy 1)_instruction: |
        Let's look at some more algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 1_instruction: |
        Let's look at some more traditional algebraic
        functions now. Here's a function translated from the simple algebraic function
        f(x) = x + 1. What would you expect this function to output if provided an
        input of 15?
      Calc Define Funcs 2_instruction: |
        Write a function f that takes a parameter
        x and returns x - 10. Test your function using f(15).
      Calc Define Funcs 3_instruction: |
        We don't have to call our function 'f'
        every time; create a function called 'times-ten' that should take a parameter
        'x' and return x * 10. Once you've created the function, run times-ten(50).
      Calc Define Funcs 4_instruction: |
        Write a function called half that takes a
        number x and returns half that number. Once you've written the function,
        use it to calculate half(21)
      Calc Define Funcs 5 - multiply 1_instruction: |
        Oh no! We lost our multiply
        block! We'll have to create a function to multiply for us. To start off,
        write a function "f" that takes a parameter "x" and returns x*5. Test
        your function using f(3).
      Calc Design Recipe 1_instruction: |
        Let's use the Design Recipe to create a
        function called cube - this function should have a domain of Number, range
        of Number, and return the given number to the power of 3. Make sure to write
        two example cases! When you're done, use your new function to calculate 7
        cubed.
      Calc Design Recipe 2_instruction: "Your school is holding a bake sale, and\nyou
        need to track the cost of making each cookie, the money paid, and the\ntotal
        profit. Cookies cost $0.25 each to make, and sell for $1.50/cookie.\r\nWrite\nthe
        function cost, which takes in the number of cookies you intend to sell,\nand
        returns the cost of making those cookies."
      Calc Design Recipe 3_instruction: |
        Write the function sales which takes in
        the number of cookies sold, and produces the amount of money customers spent
        to buy those cookies (each cookie is sold at $1.50).
      Calc Design Recipe 4_instruction: |
        Using the two functions we just wrote, write
        the function profit, which takes in the number of cookies you sold, and gives
        you back the total profit you make from selling your cookies, accounting for
        the cost of baking them.
      Calc Free Play_instruction: |
        Free Play: Write functions and algorithms of your
        own design!
      Calc Rocket 1 (copy 1)_instruction: "In the last puzzle you wrote a contract\nfor
        the function \"rocket-height\" that states it has a range of Number, domain\nof
        Number, and should return the height of the rocket traveling at 15 m/s\nafter
        a given number of seconds. Let's write an example case now for the\nheight
        of the rocket at 3 seconds.\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 1_instruction: "In the last puzzle you wrote a contract for the\nfunction
        rocket-height that states it has a range of Number, domain of Number,\nand
        should return the height of the rocket traveling at 15 m/s after a given\nnumber
        of seconds. Let's write an example case now for the height of the\nrocket
        at 3 seconds.\r\n\r\n\r\n\r\n\r\n  \r\n\r\n"
      Calc Rocket 2_instruction: |
        Great, let's do one more example before writing
        the function - what should the rocket height be after 30 seconds?
      Calc Vars 1.1_instruction: |
        Here we've set the age variable to 17 years. Can
        you write an expression that calculates age in days?
      Calc Vars 1_instruction: |
        Variables allow us to name values so that we can
        easily refer to them repeatedly throughout our programs. Here's a variable
        called age. Set its value to your age and click run.
      Calc Vars 2 (copy 1)_instruction: |
        Here we've set the "age" variable to
        17 - can you write an expression that calculates "age" in months?
      Calc Vars 2.1_instruction: |
        Here's a new variable called age-in-months - use
        the variable age to set age-in-months.
      Calc Vars 2_instruction: |
        Can you write an expression that calculates age in
        months?
      Calc Vars 3 (copy 1)_instruction: |
        Can you add to this code so that it calculates
        how many hours there are in "age" years?
      Calc Vars 3_instruction: |
        Can you add to this code so that it uses the "age"
        variable to calculate age in hours?
      Calc Vars 4_instruction: |
        We can also set variables by using other variables.
        Let's say you have a brother who is two years younger than you - can you
        set a new variable "brother-age" using your "age" variable?
      Code Studio Puzzle Challenge 1 - Artist_instruction: "Draw the line. It is\n200
        pixels long. \n"
      Code Studio Puzzle Challenge 1 Artist1_instruction: "Draw the line. It is 200\npixels
        long. \n"
      Code Studio Puzzle Challenge 10 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get all of the nectar.
      Code Studio Puzzle Challenge 10 - Bee_instruction: |
        Move the Bee to the flower
        and get all of the nectar.
      Code Studio Puzzle Challenge 10b - Bee_instruction: |
        Move the Bee to the flowers
        and get all of the nectar at each.
      Code Studio Puzzle Challenge 11 - Artist_instruction: |
        Draw this line by using
        the variable "length". Each line segment is 75 pixels long.
      Code Studio Puzzle Challenge 11b - Artist_instruction: |
        Draw a square by using
        the variable length provided.
      Code Studio Puzzle Challenge 12 - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 12a - Artist_instruction: |
        The code provided draws
        one triangle. Add to it to draw triangles in a hexagon pattern.
      Code Studio Puzzle Challenge 13 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the code to draw six lines that grow from 50, 60, 70,\n80,
        90, to 100 pixels long. \n"
      Code Studio Puzzle Challenge 14 - Artist_instruction: "This is just like a\n\"for\"
        loop. Complete the loop to draw 4 squares that grow from 80, 100,\n120, to
        140 pixels. \n"
      Code Studio Puzzle Challenge 2 - Artist_instruction: |
        Now add a turn and another
        line. The lines are 200 pixels long.
      Code Studio Puzzle Challenge 3 - Artist_instruction: |
        Draw the square. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 4 - Artist_instruction: |
        Draw the octagon. Each
        side is 100 pixels long.
      Code Studio Puzzle Challenge 5 - Bee (copy 1)_instruction: |
        Move the Bee to
        the flower and get the nectar.
      Code Studio Puzzle Challenge 5 - Bee_instruction: |
        Flowers contain a specific
        amount of nectar. Move the Bee to the flower and collect nectar with the get
        nectar block.
      Code Studio Puzzle Challenge 6 - Bee_instruction: |
        Honeycombs can hold a specific
        amount of honey. Get the nectar from the flower and make some honey.
      Code Studio Puzzle Challenge 7 - Bee_instruction: |
        Move the Bee to the flower
        and get the nectar.
      Code Studio Puzzle Challenge 8 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge 9 - Bee_instruction: |
        The cloud could be hiding
        a flower or a honeycomb. Only get nectar from flowers. Only make honey at
        honeycombs.
      Code Studio Puzzle Challenge Artist Screencast (copy 1)_instruction: "Draw\nthe
        line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast 2_instruction: "Complete the\ncode
        to draw the line. Each segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Artist Screencast_instruction: "Draw the line.\nEach
        segment is 100 pixels long. \n"
      Code Studio Puzzle Challenge Bee Screencast_instruction: |
        Move the Bee to the
        flowers and get all of the nectar.
      Code Studio Puzzle Challenge Square - Artist_instruction: |
        Draw a square by
        using the variable length provided.
      Code Studio Puzzle Challenge Var - Artist_instruction: |
        Draw a line by using
        a variable "length" set to 180.
      Course 2 Bee Loops 1_instruction: "Hi, I'm a bee. Can you help me collect\nthe
        nectar from these flowers? \n"
      Course 2 Bee Loops 13_instruction: |
        Assessment: Use the repeat block to collect
        all of the nectar.
      Course 2 Bee Loops 2_instruction: |
        Can you do the same task more easily with
        a loop?
      Course 2 Bee Loops 3_instruction: |
        Now use the new repeat block to collect
        all of the nectar and make all of the honey.
      Course 2 Bee Loops 3__instruction: |
        Can you use a loop to collect all that
        nectar?
      Course 2 Bee Loops 4_instruction: |
        What happens if you loop this sequence 3
        times? Don't forget to make the honey at the end!
      Course 2 Maze Loops 1_instruction: Ви можете отримати мене свині, використовуючи
        квартали?
      Course 4 2_instruction: Бджола тільки хоче нектар прямо зараз. Пам'ятайте, що
        не всі об'єкти квіти, тому перевірити збирати нектар тільки на квіти.
      Course 4 Artist 1_instruction: 'Допоможи мені домалювати коробку. (Довжина кожної
        лінії - 300 пікселів) '
      Course 4 Artist 10_instruction: 'Час гри без правил! Отримуй задоволення і намалюй
        все що ти хотів. '
      Course 4 Artist 2_instruction: Ви можете петлі цей код, щоб накреслити квадрат
        сірим?
      Course 4 Artist 3_instruction: Гаразд, спробувати з'ясувати, що відбувається,
        якщо ви запустити цей код (або натисніть "Виконати", щоб спробувати його).
        Повторіть це достатньо часу для завершення креслення.
      Course 4 Artist 4_instruction: Скільки градусів знаходяться по колу?  Заповніть
        повторити блок з цим числом, щоб створити коло кольорів.
      Course 4 Artist 5_instruction: Намалювати інші половина такої конструкції, тому
        симетрична. Трикутники рівносторонній і 50 пікселів довгий.
      Course 4 Artist 6_instruction: 'Повний код, щоб залучити ці трикутника. Підказка:
        3 трикутники в 360 градусів обертання.'
      Course 4 Artist 7_instruction: 'Тепер гніздо цей цикл всередині іншого петлю
        намалювати 10 трикутники.  Це називається вкладеного циклу.  Підказка: Всі
        10 трикутники повні 360 градусів обертання.  '
      Course 4 Artist 8_instruction: Намалювати цього сонця за цикл весь цей блок
        коду 12 разів.
      Course 4 Artist 9_instruction: 'Цикл Цей дизайн 10 разів і переконайтеся, що
        в свою чергу між кожною фігур, що звертається. Ось підказка для скільки ви
        змушені звертатися: що таке 360 ділиться на 10?'
      Course 4 Artist Binary 1_instruction: Тут є функція, яка приймає бінарні низка
        1 і 0 і інструктує художник перетворити на ходу зліва направо, зверху вниз,
        заповнивши квадрати, коли він бачить 1 і ігноруючи його, коли він бачить 0.
        Запустити цей код, щоб побачити, як художник використовує двійковий намалювати
        цю модель.
      Course 4 Artist Binary 2_instruction: Який з цих двійкові рядків ви могли петля
        з 8 разів намалювати це зображення?
      Course 4 Artist Binary 3_instruction: Можна зробити цю модель за цикл три цифри
        двійкові рядок?
      Course 4 Artist Binary 4_instruction: Кожен двійкові рядок являє собою один
        рядок цієї картини. Може ви переставити їх, так що він звертає смайлик замість
        сумне обличчя?
      Course 4 Artist Binary 5_instruction: Які 6 цифр двійкові рядок, повторив 11
        разів, приверне це зображення?
      Course 4 Artist Binary 6_instruction: Що таке найкоротший двійкові рядок, що
        ви можете намалювати це зображення?
      Course 4 Artist Binary 7_instruction: Завершити цей малюнок.
      Course 4 Artist Binary Free Play 2_instruction: 'Вільна гра: Ось вища роздільна
        здатність полотно малювати на - 16 біт на 16 біт!'
      Course 4 Artist Binary Free Play_instruction: 'Грати безкоштовно: Малювати,
        все, що ви хотіли з двійкове!'
      Course 4 Artist For  Functions 10_instruction: Давайте активізувати його трохи,
        може ви малюєте форму зірки за допомогою функції "Накреслити квадрат лінії"?
        Успіху!
      Course 4 Artist For  Functions 11_instruction: Давайте активізувати його трохи,
        може ви малюєте форму зірки за допомогою функції "Накреслити квадрат лінії"?
        Успіху!
      Course 4 Artist For Loops 1_instruction: 'Намалюйте цей трикутник, який є 50
        pixels у величині. Підказка: за допомогою повторюваного блоку.'
      Course 4 Artist For Loops 10_instruction: Грати безкоштовно час! Отримуйте задоволення,
        малювання, все, що ви хотіли з блоків вам навчилася використовувати
      Course 4 Artist For Loops 11_instruction: 'Пам''ятаю, коли ми використовували
        змінну контролювати кількість сторін у фігурі? Ця картина починається з трикутник
        і додає в той час, поки він звертає decagon (10 сторін) одна сторона. Кожна
        сторона повинна бути 100 пікселів довгий. Підказка: 360 ділиться на кількість
        сторін має фігури — кількість градусів, вам потрібно перетворити.'
      Course 4 Artist For Loops 12_instruction: 'Це виглядає досить прохолодно, але
        тепер я хотів би звернути кожної фігури поруч з останнім. Цього разу кожної
        сторони є 20 пікселів. За допомогою блок стрибок стрибок вперед 40 пікселів
        після кожної фігури. '
      Course 4 Artist For Loops 13_instruction: Ммм, ці фігури стають все більше кожен
        раз! Не ми вже допоміг вирішити цю проблему з змінні? Як ми можемо використовувати
        лічильник змінну щоб зменшити сторін як є більше з них? Замість того, щоб
        рухатися вперед, за певну суму, спробуйте перемістити вперед (100 / лічильники
        відвідувань) пікселів.
      Course 4 Artist For Loops 14_instruction: Якщо ви включаєте трохи менше, ніж
        зазвичай для фігури, він створює акуратні ефекту. Спробуйте активувати 89
        градусів, щоб створити цю кручений квадратних спіраль.
      Course 4 Artist For Loops 15_instruction: 'Вільна гра: Спробуйте зробити деякі
        малюнки свій власний, використовуючи для петель. Ми додали кілька загальних
        змінних для використання як добре.'
      Course 4 Artist For Loops 2_instruction: 'Я поставив код для малювання трикутник
        всередині за для loop, що має значення від 50 до 100 за 10. Погляньте на те,
        як я збудував код, а потім клацніть на "Виконати", коли ви будете готові,
        щоб побачити її в дії. '
      Course 4 Artist For Loops 3_instruction: Найменший трикутник має 20 пікселів
        сторін, найбільший має 200 пікселів сторін, а кожен трикутник більший ніж
        останні 20 пікселів. Оновлення на для петлю намалювати ці трикутника.
      Course 4 Artist For Loops 4_instruction: Використання за для петлю намалювати
        цих квадратів. Вони починаються з 50 пікселів довгий, найбільший 300 пікселів
        довгий, а кожного квадрата більший ніж останні 25 пікселів. Я дав вам майже
        весь код, вам знадобиться - ви втрачаєте 1 квартал, яке є його?
      Course 4 Artist For Loops 5_instruction: 'Хорошу роботу на останній загадка!
        Давайте використовувати цього блоку "Лічильник" змінної знову, також використовувати
        цей прохолодний картину. '
      Course 4 Artist For Loops 6_instruction: Грати безкоштовно! Спробуйте використати
        на для петля для візерунка зростаючий форму власного дизайну.
      Course 4 Artist For Loops 7_instruction: Що станеться, якщо видалити на "Повторити
        3" від цього алгоритму, зберігаючи "Переміщення" і "поворот" блоки на для
        циклі? У цьому спіралевидні трикутник кожної сторони є 20 пікселів довше,
        ніж попередній.
      Course 4 Artist For Loops 8_instruction: Найменший лінії цього квадратних спіраль
        — 10 найбільших становить 200 та кожний рядок представляє 10 пікселів довше,
        ніж попередній. Ви можете заповнити відсутні блоки, щоб завершити цей дивовижний
        малюнок?
      Course 4 Artist For Loops 9_instruction: Ви можете зробити спіралі? Рухатися
        вперед, від 1 до 75 пікселів, збільшення 1 піксель time.
      Course 4 Artist Functions 1_instruction: Можна зробити квадрат, 100 пікселів
        у довжину, використовуючи в циклі?
      Course 4 Artist Functions 10_instruction: Які блок, вам потрібно додати отримати
        трикутник сидіти на вершині площі?
      Course 4 Artist Functions 11_instruction: Від'їзд цей код, який привертає куб
        - ви можете перемістити його в функцію під назвою «Намалювати куб»
      Course 4 Artist Functions 12_instruction: Циклічне повторення квадратних функції,
        щоб Накреслити лінію
      Course 4 Artist Functions 13_instruction: Перевірити це, ми повинні Нова функція
        називається "Накреслити лінію з квадратів". Не соромтеся Погляньте всередині
        даний блок функцій, щоб побачити, як ми побудували його. Натисніть на "Виконати",
        коли ви готові до наступної загадки.
      Course 4 Artist Functions 14_instruction: Ви робите велику! Давайте використовувати
        нову функцію "Накреслити лінію з квадратів" намалювати квадратну форму. Пам'ятайте
        кожного квадрата 40 пікселів у довжину.
      Course 4 Artist Functions 15_instruction: 'Давайте активізувати його трохи,
        можна зробити формою зірки за допомогою функції "Накреслити лінію з квадратів"?
        Успіху! Підказка: ви, можливо, в свою чергу 144 градусів'
      Course 4 Artist Functions 2_instruction: 'Можна зробити 3 квадратів 20 пікселів
        один від одного? Підказка: кожна площі становить 100 pixels у величині'
      Course 4 Artist Functions 3_instruction: "Використовуючи даний блок функцій
        \"Рисование квадрат\", можна зробити цей малюнок? Підказка: кожна площі складає
        120 пікселів apart. \r "
      Course 4 Artist Functions 4_instruction: 'Ви зможете створювати свої власні
        "функція блоку"? Натисніть на вікні інструменту, назва його "намалювати трикутник",
        потім створити трикутник, як ви робили перед дій і петлі блоки, блок «Функції».
        Потім натисніть кнопку Зберегти й закрити у верхньому правому куті. Підказка:
        Створити трикутник, 100 пікселів у довжину!'
      Course 4 Artist Functions 5 OLD_instruction: Давайте спробуємо, щоб використовувати
        наші дві функції намалювати будинку - те, що повинен бути встановлений у цьому
        Кодексі намалювати будинку належним чином?
      Course 4 Artist Functions 5_instruction: "Використовуючи даний блок функцій
        \"Рисование квадрат\", можна зробити цей малюнок? Підказка: кожна площі складає
        120 пікселів apart. \r "
      Course 4 Artist Functions 6_instruction: Які блок, вам потрібно додати отримати
        трикутник сидіти на вершині площі?
      Course 4 Artist Functions 7_instruction: Ви можете намалювати лінію квадратів
        за допомогою квадратного функції? Кожен площі складає 40 пікселів у довжину.
      Course 4 Artist Functions 8_instruction: 'Ви отримуєте повісити як використовувати
        функцію блоки? Давайте змінимо цю площу, так що це 200 pixels у величині.
        Підказка: натисніть "Редагувати", щоб змінити розмір "намалювати квадрат"
        функції редактора. Не забудьте натиснути на "Зберегти й закрити" вийти з функції
        редактора. '
      Course 4 Artist Functions 9_instruction: Ми дали більшу частину коду, щоб створити
        функцію. Проте видається чогось не вистачає. Ви можете зробити цю функцію
        блокування повний?
      Course 4 Artist Inspire_instruction: "Free Play Inspiration: You've now learned\neverything
        you need to know to make a pattern like this!  If this picture\ninspires you,
        try to make something similar.  Otherwise, create something\nall your own.\r\n\r\nWant
        to know how our inspiration pattern was made? Check\nit out here: https://levelbuilder-studio.code.org/c/8781/edit"
      Course 4 Artist Params 1_instruction: Давайте редагувати функція, яка приваблює
        квадрат зі стороною 50 пікселів
      Course 4 Artist Params 10_instruction: 'Ви можете зателефонувати функцій від
        всередині інших функцій! За допомогою "форму" функції як базу, створити 3
        будинок фігури кожен 20 пікселів більший ніж останні починаючи з 50 пікселів
        у довжину. За допомогою лічильник циклу стануть у нагоді. '
      Course 4 Artist Params 11_instruction: |
        How about a function called "pinwheel"
        that takes three parameters - "sides," "length" and "repeat." You can
        calculate how much to turn after each shape using the same math you used to
        figure out the turns for a shape of "sides". Can you recreate this picture?
        Here's a tip each shape is 100 pixel's in length.
      Course 4 Artist Params 12_instruction: Функція вашого «Вертушка» малювати кожен
        з цих фігур. Для кожного зображення, довжина сторони-50.
      Course 4 Artist Params 13_instruction: 'FreePlay: Ось функції, ви написали а
        деякі більше для вас грати з. Намалюйте щось awesome!'
      Course 4 Artist Params 2_instruction: Ця функція трикутника буде набагато більш
        корисною, якщо вона зможе намалювати трикутники різного розміру. Я додав параметр
        для довжини лінії, але він не робить нічого ще. Можете змінити функцію так,
        щоб вона використовувала параметр "довжина", коли вона малює кожну сторону?
        Розміри трикутнику - 150 пікселів, 75 пікселів та 25 пікселів.
      Course 4 Artist Params 3_instruction: 'Awesome, можна зробити кожного з цих
        трикутники з цієї нової функції? По-перше, 25 пікселів довгий, друга – 50
        і по-третє, 75. '
      Course 4 Artist Params 4_instruction: Ви можете додати нові функції, яка називається
        площі? Він також повинні прийняти параметра довжину, так само, як трикутник.
        На цей раз привернути 3 квадратів, 25, 50 і 75 пікселів у довжину, 100 пікселів
        один від одного.
      Course 4 Artist Params 5_instruction: 'Використання обох нових функцій, щоб
        використовувати цю картину. Щоб зробити це простіше використовувати петлі
        з параметром "Лічильник". '
      Course 4 Artist Params 6_instruction: 'Давайте редагувати цю функцію "намалювати
        фігуру". Вона вже має параметру "довжина". Тепер давайте редагувати функція
        також додати параметр "сторони". Пам''ятайте кут перетворити для заданої форми
        360 розділити на сторони, він має. Підказка: довжини для кожної фігури є;
        трикутник становить 100 пікселів, і шестигранною становить 25 пікселів і площі
        становить 50 пікселів. '
      Course 4 Artist Params 7_instruction: 'Можна зробити ці фігури, заповнивши на
        "???" Квадрат та трикутник розміщені 100 pixels у величині, а і шестигранною
        75 pixels у величині. '
      Course 4 Artist Params 8_instruction: 'Ви можете з''ясувати як намалювати цю
        форму? Ось підказка створення нової функції з 6 боки, називають шестикутник. '
      Course 4 Artist Params 9_instruction: Пам'ятаю, коли ми використовували лічильник
        циклу за винятком петля в рамках? Давайте трохи розважитися і скористайтеся
        функцією "малювати фігури" з "сторони" і параметрів "довжина". Можна повторно
        створити ці фігури? Площі лічильника 5/100/5, трикутник лічильника повинно
        бути 10/100/10, а і шестигранною-100/2/2.
      Course 4 Artist Var 9_instruction: 'Ось алгоритм малювати трикутник, змінити
        його, так що він використовує змінну "сторони" замість цього. Замініть № 3
        "сторони" змінної. Підказка: не забудьте використовувати блок "намір сторін".'
      Course 4 Artist Vars 1_instruction: Ви можете допомогти мені звернути трикутник?
        Це 100 пікселів довго на кожній стороні.
      Course 4 Artist Vars 10_instruction: Ось алгоритм, який малює трикутник з менші
        трикутники. Чи можна змінити його так, що він використовує змінну "сторони"
        малювати кожен трикутник? Дивитися через код і кожного разу, коли ви бачите
        № 3, замінити змінну "сторони". Не забувайте використовувати блок "встановити
        сторони".
      Course 4 Artist Vars 11_instruction: Ось той же алгоритм, який ми придумали
        для останнього головоломки - те, що слід встановити змінну "сторони" для того,
        щоб використовувати цю картину квадратів?
      Course 4 Artist Vars 12_instruction: Давайте встановіть змінна "сторони" 5.
        Більше сторін ми додати цей алгоритм, тим більше це вся картина отримує! Давайте
        додати нову змінну під назвою "довжина" і використання, що скрізь, де у вас
        є "рухатися вперед." Встановіть змінна "довжина" 75 за цю фігуру.
      Course 4 Artist Vars 13_instruction: Більше сторонами фігури має, Чим коротше
        кожна сторона повинна бути для того, щоб вся картина вміщується на екрані.
        Замість того, щоб вручну, встановивши змінну "довжина", Давайте використовувати
        змінну "сторони" і математики блок встановити "тривалість". Вибрати правильний
        рівняння на палітрі інструментів для встановлення змінної "довжина" а також
        оновити змінну "сторони".
      Course 4 Artist Vars 14_instruction: 'Вільна гра: Не пропустіть, тепер ваш алгоритм
        вкладено один більше петлю. Експеримент з зміна значень на дві змінні намалювати
        cool візерунки.'
      Course 4 Artist Vars 2_instruction: Замість того, щоб "рухатися вперед, 100,"
        "перемістити" блок тепер посилання змінну "довжина". Ви можете встановити
        "довжина" до 150 намалювати цю нову трикутник?
      Course 4 Artist Vars 3_instruction: 'Ось циклу, що приваблює квадрат, але чогось
        не вистачає. Можна виправити його так, що він використовує змінну "довжина",
        щоб з''ясувати, скільки часу кожна сторона має бути? '
      Course 4 Artist Vars 4_instruction: Тепер я хочу зробити прямокутник, який двічі
        ж високим, як це широкий. У нас є змінна з ім'ям "ширина", що має значення
        100. Ви можете використовувати математики блоків для завершення код?
      Course 4 Artist Vars 5_instruction: За допомогою змінної "сторони" керування
        скільки разів отримує запустити цей цикл.
      Course 4 Artist Vars 6_instruction: Я змінив сторін змінну до 4 з коду в останній
        головоломки, можна за допомогою змінної сторін (разом з математики блок) переконайтеся,
        що я переходжу потрібну кількість? Намалювати регулярних полігонів слід перетворити
        360 / сторін кожного разу.
      Course 4 Artist Vars 7_instruction: Чи можна змінити змінну "сторони" допомогти
        мені звернути цього шестикутника?
      Course 4 Artist Vars 8_instruction: 'Вільна гра: Експериментувати з кількістю
        сторін має ця фігура. Ви можете переключитися алгоритм, так що загальний розмір
        фігури залишається незмінною, незалежно від того, скільки сторін, вона має?
        Підказка: Ви, можливо, використовувати математики блоків (360 розділити на
        "сторони" в двох місцях на цей раз) '
      Course 4 Artist Vars 9_instruction: Змінити цей алгоритм, так що він використовує
        змінну "сторони" замість фіксоване число намалювати трикутник. Використовувати
        блок "встановити сторони".
      Course 4 Artist Vars Inspire_instruction: Inspiriational and stuff
      Course 4 Bee 1_instruction: 'Бджоли не можу сказати, якщо це квітка або стільники.
        Спочатку перевірте, якщо є квітка або бджолині соти а потім тільки збирати
        нектар з нього якщо це-квітка. '
      Course 4 Bee 2_instruction: Перевірити кожен об'єкт, щоб побачити, якщо це-квітка.
        Якщо це так, збирати нектар.. в іншому випадку, ви можете ігнорувати його!
      Course 4 Bee 3_instruction: Невідомий об'єкт є квітка або стільники. Використання
        в якщо/інакше блокувати збирати нектар, якщо це-квітка, ще зробити мед (тому
        що тоді було б стільники).
      Course 4 Bee 4_instruction: Цей Пурпурна квітка, можливо, 3, 2 або 1 нектар.
        Тут if інакше блоку в поєднанні з іншого if інакше блок для створення if,
        інакше якщо, інше блоку. Комплексне рішення для збору невідома кількість нектар.
      Course 4 Bee For Loops 1_instruction: Використовувати петлею збирати нектар
        з кожної квітки.
      Course 4 Bee For Loops 10_instruction: Якщо ваш loop зворотний відлік, приростом
        віднімається від лічильника змінної кожного циклу. Якою має бути ваш приріст
        збирати нектар 9, а потім 6 і потім 3?
      Course 4 Bee For Loops 2_instruction: Ось новий вид петлю, називається "для"
        петлю. Це зокрема за петлю рахувати від 1 до 5 за 1 і запустити вміст петлі
        кожного разу, коли він розраховує. Допомогти отримати бджоли нектар.
      Course 4 Bee For Loops 3_instruction: Ви можете вирішити цю головоломку, використовуючи
        за для петлю рахувати від 1 до 3, 1. Тепер давайте отримати деякі нектар!
      Course 4 Bee For Loops 4_instruction: Зібрати всі нектар з цих квітів. Цікаво,
        якщо є простіший спосіб зробити це...
      Course 4 Bee For Loops 5_instruction: 'Ах, що для петлю робить це набагато простіше!
        Використовуючи змінну "Лічильник" на для циклу до циклу на "отримати нектар"
        блокувати однакову кількість разів як петлі. Ось так! Це багато петель. Весь
        код, потрібно його там, погляньте на як це покласти разом, то натисніть Run
        і подивитися, як це працює. '
      Course 4 Bee For Loops 6_instruction: Ви також можете використовувати за для
        петлю відліку. Спробуйте збору цей нектар на зворотний відлік від 5 до 1 на
        1.
      Course 4 Bee For Loops 7_instruction: Використання вашої для змінної "Лічильник"
        петля контролювати те, як далеко, щоб перемістити по горизонталі.
      Course 4 Bee For Loops 8_instruction: Ви можете використовувати петлю змінну
        для контролю руху і нектар колекції?
      Course 4 Bee For Loops 9_instruction: Останній номер у вашому петлею це називається
        "приріст", і з кожним разом петлі знаходиться у веденні лічильник змінна змінюється
        приростом. Спробуйте збору ці квіти, використовуючи кроком в 2.
      Course 4 Bee Params 1_instruction: Функція "get 3 нектар", який перетворює рухається
        збирати нектар та повертається до вихідного розташування. Написання послідовності,
        щоб зібрати всі нектар, використовуючи "отримати 3 нектар."
      Course 4 Bee Params 2_instruction: Змінити "отримати 3 нектар" функції, так
        що він змушує мене повернути праворуч замість ліворуч, щоб квіти.
      Course 4 Bee Params 3 (copy 1)_instruction: Зараз існує квіти з обох боків!
        Може бути, ви можете використовувати параметр, так що ж функцію працює для
        квітів по обидві сторони. Я додав параметр під назвою «дирекція"у функції.
        Якщо для параметра «дирекція» дорівнює 0 я повинна повернути ліворуч, якщо
        це 1, я повинен повернути праворуч.
      Course 4 Bee Params 3_instruction: Зараз існує квіти з обох боків! Я додав параметр
        під назвою «дирекція"у функції. Використовувати "лівий" і "право" змінні для
        контролю над напрямком. Заповніть решту функція визначення та натисніть кнопку
        "Зберегти й закрити."
      Course 4 Bee Params 4 (copy 1)_instruction: Спробуйте використовувати нову функцію
        збирати всі квіти. Пам'ятайте, 0 = вліво і 1 = вправо.
      Course 4 Bee Params 4 backup_instruction: Не було б непогано, якщо ми могли
        зібрати всі ці нектарів з в одну функцію? Спробуйте додати новий параметр
        до вашого функції, яка називається "нектари", щоб керувати кількістю збирати
        нектар. Можливо, буде потрібно перейменувати функція теж!
      Course 4 Bee Params 4_instruction: Спробуйте використовувати нову функцію збирати
        всі квіти. Не забудьте використовувати ліву та праву змінні.
      Course 4 Bee Params 5_instruction: Почнімо спочатку - зможеш створити нову функцію
        "отримати 5 нектарів" з параметром напрямку?
      Course 4 Bee Params 6 (copy 1)_instruction: Спробуйте використовувати нову функцію
        зібрати всі цей нектар.
      Course 4 Bee Params 6_instruction: Не було б непогано, якщо ми могли зібрати
        всі ці нектарів з в одну функцію? Спробуйте додати новий параметр до вашого
        функції, яка називається "нектари", щоб керувати кількістю збирати нектар.
        Можливо, буде потрібно перейменувати функція теж!
      Course 4 Bee Params 7 (copy 1)_instruction: Спробуйте використовувати нову функцію
        зібрати всі цей нектар.
      Course 4 Bee Params 7_instruction: Спробуйте використовувати нову функцію зібрати
        всі цей нектар.
      Course 4 Bee Params 8_instruction: Oooh, тепер немає мед мати справу з занадто!
        Як ви могли б оновити функцію, щоб отримати нектар або зробити мед.
      Course 4 Binary 1_instruction: Тут функція, яка приймає бінарні низка 1 і 0
        і інструктує фермер перетворити на ходу з зліва направо, зверху вниз, перетворюючи
        на квадрати, де число має нуль. Виконання коду умови, щоб побачити, як фермери
        використовує двійковий малювати зображення.
      Course 4 Binary 2_instruction: 'Що бінарні рядок ви могли петля 8 разів намалювати
        це зображення? Підказка: з цифрою 1 ″ заповнює отвір.'
      Course 4 Binary 3_instruction: Можна зробити цю модель за цикл одиночний шнурок
        двійкові?
      Course 4 Binary 5 (copy 1)_instruction: Які бінарні рядок, повторити 10 разів,
        приверне це зображення?
      Course 4 Binary 5_instruction: Які бінарні рядок, повторити 10 разів, приверне
        це зображення?
      Course 4 Binary 6 (copy 1)_instruction: Які бінарні рядок, повторити 10 разів,
        приверне це зображення?
      Course 4 Binary 6_instruction: Які бінарні рядок, повторити 10 разів, приверне
        це зображення?
      Course 4 Binary 7_instruction: Які бінарні рядок, повторити 10 разів, приверне
        це зображення?
      Course 4 Binary 8_instruction: Ви можете заповнити велику частину цього образу
        за цикл 5 розрядні бінарні номер - то вам знадобиться один більше 4-бітове
        число отримати нижній правий кут.
      Course 4 Maze 1_instruction: Отримати сердитися птиці, щоб свиня!
      Course 4 Maze 2_instruction: Уникнути ТНТ!
      Course 4 Maze 3_instruction: 'Програма сердитися птахів, щоб дістатися до свині. '
      Course 4 Maze 4_instruction: Спробуйте блоку "Повторити", щоб використовувати
        менше блоків...
      Course 4 Maze 5_instruction: Ви можете вирішити цю головоломку, використовуючи
        найменшу кількість блоків можливим?
      Course 4 Maze 6_instruction: Ви можете вирішити цю головоломку, використовуючи
        найменшу кількість блоків можливим?
      Course 4 Play Lab For Loops 2_instruction: Цей час, давайте спробуйте підрахунку
        непарні номери від 1 до 100.
      Course 4 Play Lab Params 1_instruction: Тут є функція називається "стрибка"
        який викликає ваш головний герой схопитися 100 пікселів. Зібрати всі прапори
        використовується функція стрибок.
      Course 4 Play Lab Params 10_instruction: 'Ми додали одну останню функцію для
        вас використовувати. Програма гри для виклику функції у "level_up", якщо "player_points"
        > 10. Грати в гру і зробити це минуле рівня 4, щоб перейти до наступної загадки. '
      Course 4 Play Lab Params 2_instruction: Тепер у нас є прапори, які є занадто
        високі для наших поточних стрибок! Давайте додати параметр для наших стрибок
        функції, яка називається "Висота". Стрілка вгору повинні стрибати 200 пікселів,
        але стрілку вниз повинні стрибати 100 пікселів. Натисніть "Редагувати" на
        функцію стрибка і оновлювати його, так що він використовує параметр висота
        замість того, щоб просто стрибки 100 пікселів.
      Course 4 Play Lab Params 3_instruction: 'Давайте додамо інший параметр стрибок
        функції, так що ми можемо використовувати його з іншими дійовими особами.
        Кожен актор представлена числа, починаючи від одного. Редагувати "стрибка"
        функції, так що включає визначення параметра «актор». '
      Course 4 Play Lab Params 4_instruction: Ось функції, яка називається "патруль."
        Редагувати його, щоб перемістити кішка до 400 пікселів а потім вниз 400 пікселів.
      Course 4 Play Lab Params 5_instruction: Заповніть «актор» для параметра вводу,
        так що ми можемо назвати «патруль» функція для кожного акторів. Пам'ятайте,
        що актори відповідають номери 1, 2 і 3.
      Course 4 Play Lab Params 6_instruction: Додати інший параметр, що називається
        «швидкість» з функцією "патруль". Використовуйте "встановіть швидкість" блок
        із параметром «швидкість».
      Course 4 Play Lab Params 7_instruction: Використовувати клавіші зі стрілками
        для керування собака і зібрати всі прапори.
      Course 4 Play Lab Params 8_instruction: За допомогою "коли дотик" блок відправити
        собаку назад верхній лівій якщо собака торкається будь-який з іншими дійовими
        особами.
      Course 4 Play Lab Params 9_instruction: 'Ось одна з ігор, які ми працювали над
        раніше. Ми додали функцію під назвою "score_points", що приймає параметр "точки".
        Редагувати функцію, щоб параметр "точок" додається до змінної "player_points".
        Доведеться собака оцінка 10 очок перейти до наступної загадки. '
      Course 4 Play Lab Vars 1_instruction: Вам не доведеться писати код, просто натиснути
        "виконати", щоб грати в ігри! У цій грі ви собака, яка намагається зібрати
        більше прапори, ніж кішки. Використовувати стрілку вниз, щоб контролювати
        собаку. Натисніть "Готово", коли ви закінчите грає.
      Course 4 Play Lab Vars 2_instruction: Те, що гонка не була дуже справедливим!
        Поміняти змінну "dog_speed", щоб переконатися, що ви можете отримати більше
        прапори, ніж кіт. Першим, щоб зібрати 10 прапорів перемог!
      Course 4 Play Lab Vars 3_instruction: Ось новий вид гри! Використовувати вліво
        і вправо для переміщення і стрілку вгору, щоб стрибати. Див Якщо ви можете
        зібрати всі прапори.
      Course 4 Play Lab Vars 4_instruction: 'Тепер ми використовуємо змінна з ім''ям
        "Висота" контролювати, як високо може стрибати на собаку. Оновити змінну "Висота",
        тому що собака може стрибати достатньо високий, щоб досягти всі прапори. Підказка:
        нову-прапори є 200 пікселів заввишки.'
      Course 4 Play Lab Vars 5_instruction: 'Давайте побудувати гра! По-перше, ми
        повинні рахунком. Використовувати блок "уставки до" оцінка до 10. '
      Course 4 Play Lab Vars 6 (copy 1)_instruction: Прикольно, тепер у нас є наша
        оцінка змінну, але як ми збираємося зробити його корисним? Як щодо додати
        змінну оцінка кожного разу, коли ви натиснете ворога з вогненна куля? "Коли
        актор 2 торкається нічого" подія дає змогу викликати оновлення на ваш рахунок,
        коли ваш вогняними кулями вдарити кіт. Оцінка може прирощувати, встановивши
        оцінка = оцінка + 1. Отримати ваш рахунок до 10 (буде один час!), щоб пройти
        рівень.
      Course 4 Play Lab Vars 6_instruction: В нашій грі як ми повинні набрати очки?
        Додати 1 змінну "точок" кожен раз, коли собака потрапляє кішка з Кульова блискавка.
        Тригер оновлення на ваш рахунок за допомогою "коли актор 2 торкається нічого"
        подія. Може прирощувати змінну, встановивши "очок = очки + 1." Отримати ваш
        рахунок до 10 (буде один час!), щоб пройти рівень.
      Course 4 Play Lab Vars 7_instruction: Добре, тепер давайте зробити впевнений,
        що ця гра не надто легко - будь-який час, собака (актор 1) отримує удар по
        вогненна куля, вам слід скинути точки. Почати з 10 очок, так що це не надто
        складно. Нехай ваш рахунок, що випадає від 10 до 0, щоб пройти рівень.
      Course 4 Play Lab Vars 8 (copy 1)_instruction: Гаразд, останнє, що для цього
        гра - давайте налаштувати його, так що гравець може виграти (або втратити).
        Назавжди петля для перевірки використовувати значення оцінка - Якщо коли-небудь
        більше, що 20, зробити vanish ворожих оцінка. Якщо на кожен менше 0, зробити
        гравець звертається в нуль. Натисніть кнопку "Готово", коли гра працює як
        вам хотілося б.
      Course 4 Play Lab Vars 8_instruction: Давайте налаштуємо цю гру, так що собака
        може виграти (або втратити). Використовувати назавжди петлю перевірити значення
        оцінка - якщо оцінка ніколи більше цього 20, становлять зникають ворога (кіт).
        Якщо оцінка дедалі менш ніж 0, зробити плеєр (собака) звертається в нуль.
        Натисніть кнопку "Готово", коли гра працює як вам хотілося б.
      Course 4 Play Lab Vars 9_instruction: 'Вільний час грати! Ось всі змінні, ми
        грали з до цих пір, а також дещо більше у випадку, якщо ви хочете їх. Зробити
        гру або історію, яка використовує ці змінні. Підказка: перейдіть вниз, щоб
        побачити всі команди робочий простір.'
      Course 4 Play Lab Vars_instruction: Гаразд, останнє, що для цього гра - давайте
        налаштувати його, так що гравець може виграти (або втратити). Назавжди петля
        для перевірки використовувати значення оцінка - Якщо коли-небудь більше, що
        20, зробити emeny, що зникати оцінка. Якщо на кожен менше 0, зробити гравець
        звертається в нуль.
      Course 4 Play Labs For Loops 1_instruction: Давайте зробимо собака говорити
        кожне число від 1 до 100. Використання в петлю і лічильник блок говорити лічильник
        змінну, кожного разу, коли виконується петлі.
      Course 4 Play Labs For Loops 2_instruction: Цей час, давайте спробуйте підрахунку
        непарні номери від 1 до 100.
      Course 4 Play Labs For Loops 3_instruction: Якщо ми розраховувати на великих
        чисел, ми розраховуємо ще вище в таку ж кількість часу. Спробуйте зробити
        собаці графа від 10 до 1000, на 10 за один раз.
      Course 4 Play Labs For Loops 4_instruction: Змінення приростом може бути корисним,
        але ми як і раніше підрахунку лінійно (кожне число дорівнює такій же відстані
        від останнього) що робити, якщо я хотів, щоб підрахувати експоненціально?
        Не змінюючи параметри в цьому циклі, чи можете ви підрахувати 1, 4, 9, 16,
        25... (лічильник в квадраті)?
      Course 4 Play Labs For Loops 5_instruction: В останньому етапі ми нарахували
        площі кожного номера. Спробуйте змінити "лічильник ^ 2" для "лічильник ^ 3"
        рахувати куб кожен номер (1, 8, 27, 64, 125, 216, 343...)
      Course 4 Play Labs For Loops 6_instruction: Можна нагадати, що просте число
        є ціле число, що тільки кратною себе і 1. Виступати тільки простих чисел від
        1 до 100 використовується функція "is_prime".
      Course 4 Play Labs For Loops 7_instruction: Ви могли б використовувати це для
        петлі, щоб допомогти мені говорити послідовність 1, 4, 7, 10, 13, 16, 19,
        22, 25?
      Course 4 Play Labs For Loops 8_instruction: Навіщо петлю зробить мене говорити
        19, 27, 35, 43, 51?
      Course 4 Variables Assessment_instruction: |
        Can you create this image using
        a variable for sides? Each line should be 50 pixels long.
      Course1BeePuzzle12_instruction: Збери три нектару, а потім зроби два меду
      Course1MazeAssessment1_instruction: "This is a test!\r\nMove one way, then\nanother
        to get me to the pig"
      Course1MazeAssessment2_instruction: "This is a test!\r\nMove one way, then\nanother
        to get me to the pig."
      Eval Booleans 1_instruction: |
        Boolean operators (like >, <, =) allow us to
        compare different values, returning either true or false. Click "Run" to
        see how this expression evaluates.
      Eval Booleans 2_instruction: |
        Can you set the values so that this expression
        evaluates as true?
      Eval Booleans 3_instruction: |
        The string-length function returns the number
        of characters in a string (including spaces!) - make this code evaluate to
        true.
      Eval Booleans 4_instruction: |
        Here's an Evaluation Block called AND - it returns
        true if both of its parameters are true, otherwise it returns false. Edit
        the x variable so that this expression returns true.
      Eval Booleans 5_instruction: |
        This OR block returns true if either of its parameters
        is true. Otherwise, if both parameters are false it will return false. Set
        the y variable to a value that will cause this expression to return false.
      Eval Booleans 6_instruction: |
        Here's one more boolean block called NOT. This
        block flips true to false, or false to true. If you wrap this block of code
        in a NOT block, it should return true (because we are asking if the two expressions
        do NOT produce equal values).
      Eval Booleans Free Play_instruction: |
        Free Play: Try out some creations of
        your own using Booleans.
      Eval Booleans_instruction: |
        Booleans allow us to compare different values,
        returning "true" if the are equal, or "false" if they are not. What do
        you think this code will evaluate to?
      Eval Cond 1_instruction: |
        The cond block checks the boolean expressions in
        the left column, and as soon as it finds one that returns "true" it runs
        the corresponding code on the right. If none of the expressions evaluate to
        "true," it runs the bottom block. Update the "temperature" variable so
        that this block returns "It's just right."
      Eval Cond 2 (copy 1)_instruction: |
        This condition returns a different shape
        based on the value of the "sides" variable - change the value of "sides"
        so that the conditional returns a triangle.
      Eval Cond 2_instruction: |
        This condition returns a different shape based on
        the value of the "sides" variable - change the value of "sides" so that
        the conditional returns a triangle.
      Eval Cond 3 (copy 1)_instruction: |
        Can you write a conditional that checks
        the variable "age" and returns "Old enough to vote and drive" if age >
        17, "Old enough to drive" if age is > 15, and "Can't drive or vote" if
        neither conditions is true. Hint: The first condition to return "true" wins
        - make sure you put your conditions in the right order.
      Eval Cond 3_instruction: |
        Can you write a conditional that checks the variable
        "age" and returns "Old enough to vote and drive" if age > 17, "Old enough
        to drive" if age is > 15, and "Can't drive or vote" if neither conditions
        is true. Hint: The first condition to return "true" wins - make sure you
        put your conditions in the right order.
      Eval Cond 4_instruction: |
        We can use the string=? function to make conditionals
        that respond to text input. Here's a function called green shape that takes
        a string for the type of shape. Complete the conditions so that the correct
        solid green shape is returned when the function is run with "circle", "triangle",
        "square", or "rectangle".
      Eval Cond 5_instruction: |
        Here's a similar function red shape with an additional
        variable for size. Complete the conditionals so the correct solid red image
        of a given size is drawn for "circle", "triangle", and "star".
      Eval Cond 6_instruction: "Write a function called food-critic, which takes\nin
        the name of a food and produces a String that says how you feel about that\nfood.
        For example, (food-critic “pizza”) might evaluate to “delicious”, but\n(food-critic
        “rotten eggs”) might evaluate to “gross!”. Choose at least two\nfoods to review,
        but you can you write more if you like!  Don’t forget to\nadd an “else” clause!\r\nOne
        example - and part of the definition -  has already\nbeen done for you!"
      Eval Cond 7_instruction: "Free Play: Write a function called green-shape, which\ntakes
        in the name of a shape and produces a solid green shape. Your function\nshould
        work with at least “circle”, “star” and “rectangle”, but you can add\nother
        shapes if you like. You can choose the size of each shape. Don’t forget\nto
        add an “else” clause!\r\nOne example - and part of the definition -  has\nalready
        been done for you!\r\n"
      Eval Cond 8_instruction: "Free Play: Suppose you want to own a car at 21, or\nhave
        your own business by 30. Write a function called life-goals, which takes\nin
        an age and produces a string that describes your life goals by then. Don’t\nforget
        to add an “else” clause!\r\n"
      Eval Contracts 1_instruction: |
        Use the "star" function to produce a red star
        with a 60 pixel radius
      Eval Contracts 10A_instruction: |
        Alright let's complete this puzzle with a
        Green Square that is 175 pixels in size.
      Eval Contracts 11A_instruction: |
        Can you complete this puzzle to read "Hello
        World" in the banner?
      Eval Contracts 2_instruction: |
        Check out the "rotate" function - can you
        use it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts 3_instruction: |
        Try using the "text" function to write this
        teal text at size 40.
      Eval Contracts 4 A_instruction: |
        The "scale" function returns an image that
        is scaled either larger or smaller than the input image. Try scaling this
        circle by a factor of 10 - how is the resulting image different than if you'd
        just made a circle of that size in the first place?
      Eval Contracts 4_instruction: |
        The scale function returns an image that is
        either larger or smaller than the input image. Try scaling this circle by
        a factor of 10. How is the returned image different than if you'd just made
        a circle of that size in the first place?
      Eval Contracts 8A_instruction: |
        Can you complete this puzzle? The big-triangle
        is 200 pixels in size and purple?
      Eval Contracts A_instruction: |
        Use the star function to produce a solid red
        star with a 60 pixel radius
      Eval Contracts C_instruction: |
        Check out the rotate function - can you use
        it to rotate this 90 pixel green square by 45 degrees?
      Eval Contracts E_instruction: |
        Try using the text function to write "Hello,
        world!" in teal at size 40.
      Eval Contracts shrink_instruction: "Can you complete this image using the \"shrink\"\nfunction
        block? The radius is 20. \n"
      Eval Define Funcs 1_instruction: |
        Here's a new function called green-triangle
        that takes a single Number for size and produces a green triangle. Use the
        new function to create a 125 pixel green triangle.
      Eval Define Funcs 2_instruction: |
        Let's look inside that green-triangle function
        to see how it works. Can you modify it so that the green-triangle function
        always draws outlined green triangles?
      Eval Define Funcs 3_instruction: |
        Here's the start of another new function
        called purple-circle with a domain of one Number (the radius) and a range
        of Image. The body of the function is broken though - fix it and then make
        a purple circle with 150 pixel radius
      Eval Define Funcs 4_instruction: |
        Create a new function called aqua-star that
        has a Domain of a single Number for radius and returns an aqua star of the
        given radius. Run your new function with a radius of 75.
      Eval Define Funcs 5_instruction: |
        Let's use that aqua-star function to make
        a row of different sized stars. From left to right, the stars should have
        radiuses of 25, 50, and 75.
      Eval Defining Vars Free Play 1_instruction: |
        Free Play: We've provided a function
        that fills your screen with my-image. Change my-image to see what patterns
        you can make.
      Eval Design Recipe .1_instruction: |
        Here's a Design Recipe for a function
        called square-circle with domain Number String and range Image. Click Edit
        to write the function definition (you will see two examples provided).
      Eval Design Recipe 1 (copy 1)_instruction: |
        We're going to write a function
        that draws a solid rectangle of any color that is twice wide as it is high.
        Start with an example - draw a solid green rectangle that has a height on
        100 pixels.
      Eval Design Recipe 1_instruction: |
        Alright, now given the Contract wide-rect:
        Number String -> Image, write an example - draw a solid green rectangle that
        has a height of 100 pixels.
      Eval Design Recipe 2 (copy 1)_instruction: |
        Let's do one more example before
        writing the function definition - this time draw a solid red rectangle with
        a height of 75 pixels.
      Eval Design Recipe 2_instruction: |
        Let's do one more example before writing
        the function definition - this time draw a solid red rectangle with a height
        of 75 pixels.
      Eval Design Recipe 3_instruction: |
        The design recipe for wide-rect already
        has a contract and one example. Can you write a second example and then complete
        the definition. The wide-rect function should produce a rectangle of given
        color that is twice as wide as it is high.
      Eval Design Recipe 4_instruction: |
        Use the Design Recipe to create a function
        starburst that has two domains. 1) a number of points and 2) a radius. starburst
        returns a yellow radial star with given points, and an inner radius that is
        half the outer radius.
      Eval Design Recipe 5_instruction: |
        Using the Design Recipe, write a function
        striped-flag that takes two colors and produces a flag that is 250 pixels
        wide, 150 pixels tall, with three even horizontal stripes of given colors,
        in the order color2, color1, color2.
      Eval Design Recipe 6_instruction: |
        Using the Design Recipe, write a function
        large-polygon that should output a solid polygon of given sides and color
        that takes up most of the window, regardless of the number of sides. To make
        sure that the polygon doesn't get too large as you increase the number of
        sides, side length should be inversely proportional to side number, with a
        length of (800/sides).
      Eval Design Recipe Free Play_instruction: |
        Free Play: Use the design recipe
        to create some functions of your own design
      Eval Free Play_instruction: 'Free Play: Make art with code!'
      Eval Strings Images .1_instruction: |
        So far we've only dealt with a single
        type of data, Numbers. Another type of data is a String, which is any combination
        of letters, numbers, or other characters wrapped in quotation marks. Run the
        String "Hello, world!" and see what happens.
      Eval Strings Images .2_instruction: |
        The string-append function takes two Strings
        and returns a single combined String. Add a String "Universe" to the second
        argument of string-append.
      Eval Strings Images 1_instruction: |
        The third type of data we're going to
        use is an Image. This star function takes in a Number and two Strings, and
        it evaluates to an Image. Use this function to make a solid red star with
        radius of 100.
      Eval Strings Images 2_instruction: |
        Free Play: Every Evaluation Block is color-coded
        to let you know which data type it returns and which types it needs for its
        parameters. The last parameter of the triangle function takes a String that
        controls its color - try some different colors to see what works.
      Eval Strings Images 3_instruction: |
        Some functions can only take a specific
        set of Strings, such as the second argument of this circle function, which
        controls its style. Draw this orange outline circle using the special String
        block with a dropdown to make sure you only use valid styles.
      Eval Strings Images 4_instruction: |
        Try using the rectangle block to draw this
        solid red rectangle - it is 175 pixels wide and 100 pixels tall.
      Eval Strings Images 5_instruction: |
        Try using this new Evaluation Block called
        _overlay_ to place a 100 pixel white triangle on top of a 200 pixel red circle.
      Eval Strings Images 6_instruction: |
        Use the overlay function to place a 75
        pixel radius yellow star on top of a 150 pixel long blue square.
      Eval Strings Images 7_instruction: |
        The offset block lets you move an image
        relative to where it would normally be placed. Use this block to offset the
        square by 100 pixels on the y-axis.
      Eval Strings Images 8_instruction: |
        Here's a different kind of star block
        - it's called radial-star and it allows you to draw stars with any number
        of points! Use it to create a 7 point solid orange star with an inner radius
        of 75 pixels and an outer radius of 175 pixels.
      Eval Strings Images Free Play_instruction: |
        Free Play: Explore the blocks available
        to create something interesting. Make sure to share your favorite creations.
      frozen circle function in circle_instruction: А тепер створимо 20 кіл, котрі
        накладаються, повертаючи на 18 градусів між колами.
      frozen circle function with parameter_instruction: Ось блок "Створити коло",
        який малює кола різних розмірів. Зможеш використати його для створення малого
        кола, розміром 5, та великого кола, розміром 10?
      frozen circle function_instruction: Використай новий блок "Створити коло" для
        малювання 10 кіл, які перекриваються. Не забудь перескакувати між колами.
      frozen circle_instruction: Коло є особливою фігурою. Здогадаєшся, які числа
        потрібно поставити замість знаків питання, щоб намалювати коло?
      frozen cross rotate dense_instruction: 'А повторимо це 90 разів! Скільки разів
        90 входить у 360? Підказка: це дуже мале число.'
      frozen cross rotate_instruction: А тепер спробуємо повторити 10 разів. На скільки
        градусів потрібно повертати між лініями?
      frozen cross_instruction: Використай блок "Повторити" для малювання знаку плюса.
        Ви помітили, що Ельза може рухатись вперед та назад?
      frozen diamond mini snowflake_instruction: Чи знаєш ти, що кожна сніжинка має
        унікальну форму? Створимо нову сніжинку, використавши блок "Повторити" для
        малювання паралелограма 4 рази, повертаючи на 90 градусів після кожної фігури.
      frozen diamond snowflake_instruction: Що ж, створимо нову сніжинку, використавши
        блок повторення, щоб намалювати паралелограм 10 разів, повертаючи на 36 градусів
        між ними.
      frozen diamond_instruction: 'Створимо паралелограм. Це схоже на малювання квадрата,
        але з іншими кутами: 60 та 120 градусів замість 90.'
      frozen freeplay_instruction: Вітаємо офіційного головного художника! Створіть
        свою зимову казку!
      frozen line_instruction: Привіт! Я Ельза з Еренделу. Допоможи мені намалювати
        лінію.
      frozen perpendicular_instruction: А тепер спробуємо створити дві лінії, розміщені
        під кутом 90 градусів між собою. Нам знадобиться блок "Повернути", а також
        блок "Рухатись".
      frozen snowflake branch_instruction: Спробуй використати блок "Створити гілочку
        сніжинки" для побудови трьох гілочок, котрі починають нагадувати сніжинку.
      frozen snowflake full_instruction: А тепер повтори 8 разів, щоб утворилась красива
        сніжинка!
      frozen snowflower_instruction: Складні візерунки можна створити з простих фігур.
        Зможеш створити шаблон, намалювавши 5 кіл розміром 5, а та 5 кіл розміром
        10?
      frozen square iterative_instruction: Схоже, що ми вже на півдорозі до малювання
        квадрата. Складемо 4 лінії, щоб утворився квадрат.
      frozen square loop 3x_instruction: Створимо 3 квадрати, повертаючи після кожного
        із них. Не забудь повернути на 120 градусів перед тим, як малювати наступний
        квадрат.
      frozen square loop_instruction: Привіт, я Анна з Еренделу! Спробуємо намалювати
        квадрат за допомогою блоку "Повторити", що дозволить використати менше блоків.
        Скільки разів ( замість ???) слід виконати дії всередині блоку "Повторити",
        щоб утворився квадрат?
      frozen square snowflake_instruction: Зможеш створити сніжинку за допомогою блоку
        "Повторити", в якому 10 разів малюватиметься квадрат, а блок "Повернути" виконає
        поворот на 36 градусів між фігурами?
      hoc2015_intro_instruction: Хіро "актор 1".  Використовувати Перемістити блок
        для переміщення вправо Хіро доторкнутися до Baymax.
      hoc2015_sandbox_instruction: Хіро "актор 1".  Використовувати Перемістити блок
        для переміщення вправо Хіро доторкнутися до Baymax.
      Infinity_catch_instruction: Можеш допомогти Ельзі (персонаж 2) наздогнати Анну,
        використовуючи клавіші зі стрілками?
      Infinity_finale_instruction: Створи все, що завгодно, і поділись своїм творінням!
      Infinity_move_collide_instruction: Хіро - це персонаж 1. Перемісти його прямо
        до Беймаксу та програй звук, коли вони торкнуться один одного.
      Infinity_move_directions_instruction: Беймакс - це персонаж 2. Додайте блоки
        "Рухатись" та перемістіть Беймакса стрілками. Зробіть так, щоб він торкнувся
        двох інших персонажів.
      Infinity_move_right_instruction: Хіро - це персонаж 1. Скористайся блоком "Рухатись"
        та перемісти Хіро так, щоб він торкнувся Беймаксу.
      Infinity_repeat_instruction: Скористайся блоком "Повторювати завжди", щоб Анна
        рухалась вгору і вниз на 400 пікселів.
      Infinity_say_instruction: Використай блок "Говорити", щоб Анна сказала "Привіт".
      Infinity_shoot_instruction: Беймакс - це персонаж 2. Нехай Беймакс кине ракету
        в Хіро.
      Infinity_shoot_directions_instruction: Хіро - це персонаж 3. Нехай Хіро кине
        снаряди в кожного з чотирьох персонажів. Між кидками зачекай 1 секунду.
      Infinity_test_instruction: Це пробний рівень Infinity.
      Infinity_touch_faster_instruction: Торкнись ще більшої кількості сніжинок!
      Infinity_touch_four_instruction: Перемісти Анну вгору, вниз, ліворуч та праворуч,
        щоб вона торкнулась кожної з чотирьох сніжинок.
      Infinity_touch_score_instruction: Нехай Анна отримує бал щоразу, коли торкається
        сніжинки. Клацни "Запустити" та скеруй її по разу до кожної сніжинки.
      K-1 Artist 1 Assessment 1_instruction: Намалюй коротку лінію вгору і довгу направо!
      K-1 artist 1 level 10_instruction: Намалюй пунктирну лінію, використовуючи обидва
        блоки стрибку і малювання
      K-1 artist 1 level 9_instruction: Намалюйте це, використавши три лінії
      K-1 Artist Loops 1_instruction: Намалюй цю лінію, 4 рази рухаючись на схід.
      K-1 Artist Loops 2_instruction: Можеш намалювати таку ж лінію, використовуючи
        цикл?
      K-1 Artist Loops 3_instruction: Можеш зациклити ці блоки, щоб намалювати 6 ліній?
      K-1 Artist Loops 4_instruction: Цикл може нам допомогти намалювати верх цього
        замку?
      K-1 Artist Loops 5_instruction: Що потрібно виконати 4 рази, щоб намалювати
        верх цих сходів?
      K-1 Artist Loops 6_instruction: 'Тут потрібно два цикли: один, щоб піднятись
        догори. інший - щоб спуститись вниз.'
      K-1 Artist Loops 7_instruction: Можеш завершити цей узор двома циклами?
      K-1 Artist Loops 8_instruction: Ці сходи мають довші сходинки.
      K-1 Artist Loops 9_instruction: 'Оцінювання: Намалюй сходи, використовуючи цикл'
      K-1 Artist Loops Free Play_instruction: Вільна гра, намалюй щось цікаве!
      K-1 Artist1 1_instruction: Намалюй стопу людини однією лінією
      K-1 Artist1 10_instruction: Малюй і перестрибуй, щоб створити пунктирний шлях
        до скарбу X
      K-1 Artist1 2_instruction: Намалюй вусик у кота за допомогою двох ліній!
      K-1 Artist1 3_instruction: Намалюй дві лінії на схід та дві лінії на північ,
        щоб завершити будинок!
      K-1 Artist1 4_instruction: Намалюй лінії вгору, вперед і вниз щоб завершити
        замок!
      K-1 Artist1 5.5_instruction: Завершення третього башта замку за допомогою коротких
        ліній
      K-1 Artist1 5_instruction: Намалюй стебло цієї квітки за допомогою двох ліній!
      K-1 Artist1 6_instruction: Завершуй зображення за допомогою блоку стрибок!
      K-1 Artist1 7_instruction: Використовувати стрибок блок без малюнка. Схопитися
        і провести лінію.
      K-1 Artist1 8_instruction: Намалюй пунктирну лінію використовуючи обидва блоки
        стрибку і малювання
      K-1 Artist1 9_instruction: Малюй і перестрибуй, щоб зробити пунктирну лінію
      K-1 Artist1 Assessment 1_instruction: Малювати лінії коротких і довгих!
      K-1 Artist1 Assessment 2_instruction: Намалюйте короткий пунктирні лінії!
      K-1 Artist2 1_instruction: Намалюй квадрат під трикутником.
      K-1 Artist2 2_instruction: Перестрибни і намалюй квадрат поруч з будинком.
      K-1 Artist2 3_instruction: Намалюй квадрат вище іншого квадрату
      K-1 Artist2 4_instruction: Намалюй прямокутник, щоб завершити міст.
      K-1 Artist2 5_instruction: Намалюй прямокутник, щоб завершити опору моста
      K-1 Artist2 6_instruction: Намалюй два квадрати, щоб створити прямокутник!
      K-1 Artist2 Assessment1_instruction: 'Оцінювання: Намалюй квадрат біля іншого
        квадрату.'
      K-1 Artist2 Free Draw_instruction: Намалюй що завгодно!
      K-1 Artist2_7_instruction: Намалюй прямокутник, щоб додати до комоду верхній
        ящик!
      K-1 Bee 1_instruction: Перемісти мене на квітку, отримай нектар, а потім переміщуй
        мене на медові стільники та зроби мед
      K-1 Bee 10_instruction: Збери чотири нектару, а потім зроби два меду!
      K-1 Bee 11.5_instruction: Збери 4 нектару щоб зробити 4 меду!
      K-1 Bee 11_instruction: Збери три нектару, а потім зроби один мед
      K-1 Bee 12_instruction: Збери три нектару, а потім зроби два меду!
      K-1 Bee 13_instruction: Збери три нектару, а потім зроби один мед!
      K-1 Bee 14_instruction: Приведи мене до нектару, підніми його, приведи мене
        до стільника і зроби мед
      K-1 Bee 15_instruction: Збери два нектару, щоб зробити два меду!
      K-1 Bee 2_instruction: Перемісти мене на квітку, отримай нектар, а потім переміщуй
        мене на медові стільники та зроби мед
      K-1 Bee 3_instruction: Перемісти мене на квітку, отримай нектар, а потім переміщуй
        мене на медові стільники та зроби мед
      K-1 Bee 4_instruction: Збери два нектару, а потім зроби два меду!
      K-1 Bee 5_instruction: Збери три нектару, а потім зроби три меду!
      K-1 Bee 6_instruction: Збери два нектару, а потім зроби два меду!
      K-1 Bee 7_instruction: Збери три нектару, а потім зроби два меду!
      K-1 Bee 8_instruction: Збери два нектару, а потім зроби два меду!
      K-1 Bee 9_instruction: Збери два нектару, а потім зроби два меду!
      K-1 Bee Assessment 1_instruction: Збери нектар щоб зробити мед!
      K-1 Bee Assessment 2_instruction: Збери нектар щоб зробити мед!
      K-1 Bee Loops 1_instruction: Збери нектар, щоб зробити мед!
      K-1 Bee Loops 10_instruction: Використання петлями, щоб отримати нектар, мед
        і рухатися!
      K-1 Bee Loops 11_instruction: 'Оцінка: Використовуйте петель і отримати нектар
        і мед!'
      K-1 Bee Loops 12_instruction: 'Оцінка: Використання петлями, щоб отримати нектар,
        мед і рухатися!'
      K-1 Bee Loops 2_instruction: Використовуй цикл, щоб пересуватись і потім отримай
        нектар і зроби мед!
      K-1 Bee Loops 3_instruction: Використовуй цикли, щоб отримати нектар і зробити
        мед!
      K-1 Bee Loops 4_instruction: Використання петлями, щоб отримати нектар, зробити
        мед і рухатися!
      K-1 Bee Loops 5_instruction: Використовуй цикли, щоб отримати нектар і мед!
      K-1 Bee Loops 6_instruction: Використання петлями, щоб отримати нектар, мед
        і рухатися!
      K-1 Bee Loops 7_instruction: Використовуй цикли, щоб отримати нектар і зробити
        мед!
      K-1 Bee Loops 8_instruction: Використовуй цикли, щоб отримати нектар і мед!
      K-1 Bee Loops 9_instruction: Використання петлями, щоб отримати нектар, мед
        і рухатися!
      K-1 Bee Loops Assessment 1_instruction: Отримати нектар зробити мед і використовувати
        петлі рухатися!
      K-1 Bee Loops Assessment 2_instruction: Отримати нектар зробити мед використання
        петлями!
      K-1 Bee Puzzle 12_instruction: Збери три нектару, а потім зроби два меду
      K-1 Building a Foundation Assessment_instruction: Побудувати три рівні піраміди,
        там не немає інших напрямках, так що просто грати в шматках, поки ви не отримаєте
        його!
      k-1 maze 1_instruction: Ви можете зробити мені рухатися на захід, щоб дістатися
        до свині?
      K-1 Maze 10_instruction: 'Обійти ТНТ мені дістатися до свині! '
      K-1 Maze 11_instruction: 'Простежити шлях, що призводить мене до дурний свиней.
        Уникайте ТНТ або пір''я буде літати! Підказка: Він знаходиться на південь
        від мене.'
      K-1 Maze 2_instruction: Перемістити мене Сходу зрозумійте мене свині!
      K-1 Maze 3_instruction: Перемістити мені Південна зрозумійте мене свині!
      K-1 Maze 4_instruction: Перемістити мені Південна зрозумійте мене свині!
      K-1 Maze 5_instruction: Перемістити мене Сходу зрозумійте мене свині!
      K-1 Maze 6_instruction: Перемістити одну сторону, а потім інший, щоб отримати
        мене свині!
      K-1 Maze 7_instruction: Перемістити одну сторону, а потім інший, щоб отримати
        мене свині!
      K-1 Maze 8_instruction: Перемістити одну сторону, а потім інший, щоб отримати
        мене свині!
      K-1 Maze 9_instruction: Перемістити одну сторону, а потім інший, щоб отримати
        мене свині!
      K-1 Maze Assessment 1_instruction: Оцінки – Зрозумійте мене свині!
      K-1 Maze Assessment 12_instruction: Оцінка рівня
      K-1 Maze Assessment 13_instruction: Оцінка рівня
      K-1 Maze Assessment 2_instruction: Оцінки – Зрозумійте мене свині!
      K-1 maze debug 1_instruction: Змінювати код, щоб отримати мене свині!
      K-1 maze debug 10_instruction: Налагодження цього рівня переставляючи і додати
        блоки, щоб отримати мене свині!
      K-1 maze debug 11_instruction: "Випробування! \r налагодження цього рівня переставляючи
        і додати блоки, щоб отримати мене свині"
      K-1 maze debug 2_instruction: З'ясувати, чого не вистачає а потім додати блоки,
        щоб отримати мене свині!
      K-1 maze debug 3_instruction: З'ясувати, чого не вистачає а потім видалити блоки,
        щоб отримати мене свині!
      K-1 maze debug 4_instruction: Через ці блоки і виправити їх! Я думаю, що я може
        відправитися в неправильному напрямку.
      K-1 maze debug 5_instruction: Налагодження цього рівня переставляючи і додати
        блоки, щоб отримати мене свині!
      K-1 maze debug 6_instruction: Налагодження цього рівня переставляючи і додати
        блоки, щоб отримати мене свині!
      K-1 maze debug 7_instruction: Налагодження цього рівня переставляючи і додати
        блоки, щоб отримати мене свині!
      K-1 maze debug 8_instruction: Налагодження цього рівня переставляючи і додати
        блоки, щоб отримати мене свині!
      K-1 maze debug 9_instruction: Налагодження цього рівня переставляючи і додати
        блоки, щоб отримати мене свині!
      K-1 Maze debug Assessment 1_instruction: Оцінка - Налагодження цього рівня переставляючи
        і додати блоки, щоб отримати мене свині!
      K-1 Maze Loops 1_instruction: Доведи мене до свині!
      K-1 Maze Loops 10_instruction: Приведи мене до свині! Використовуй цикл "повторити".
      K-1 Maze Loops 11_instruction: Приведи мене до свині! Використовуй цикл "повторити".
      K-1 Maze Loops 12_instruction: Приведи мене до свині! Використовуй цикл "повторити".
      K-1 Maze Loops 2_instruction: Використовуй блок "Повторити", щоб привести мене
        до свині!
      K-1 Maze Loops 3_instruction: Приведи мене до свині! Використовуй цикл "повторити".
      K-1 Maze Loops 4_instruction: Доведи мене до свині!
      K-1 Maze Loops 5_instruction: Приведи мене до свині! Використовуй цикл "повторити".
      K-1 Maze Loops 6_instruction: Приведи мене до свині! Використовуй цикл "повторити".
      K-1 Maze Loops 7_instruction: Приведи мене до свині! Використовуй цикл "повторити".
      K-1 Maze Loops 8_instruction: Приведи мене до свині! Використовуй цикл "повторити".
      K-1 Maze Loops 9_instruction: Доведи мене до свині!
      K-1 Maze Loops Assessment 1_instruction: Оцінювання - Використай цикл, щоб привести
        мене до свині!
      K-1 Maze Loops Assessment 2_instruction: Оцінювання - Використай цикл, щоб привести
        мене до свині!
      K-1 Maze Multi 14_instruction: Оцінка рівня
      K-1 Maze Multi 15_instruction: Оцінка рівня
      K-1 Maze Sequence Assessment 1_instruction: "Випробування! \r рухатися так,
        то інше, щоб отримати мене свині"
      K-1 Maze Sequence Assessment 2_instruction: "Випробування! \r рухатися так,
        то інше мені дістатися до свині."
      Luigi's Pizza 1_instruction: |
        Welcome to Luigi's Pizza! To order a pizza,
        type the name of a topping into the cost function, and we'll return the price
        of that pizza. Try ordering a pepperoni pizza to start.
      Luigi's Pizza 2 (copy 1)_instruction: |
        Right now there are only four choices
        available at Luigi's pizza - let's fix that! Add a couple of new toppings
        to the conditional block in the "cost" function. Once you've added your
        toppings, test out the function to make sure it works.
      Luigi's Pizza 2_instruction: |
        Right now there are only four choices available
        at Luigi's pizza - let's fix that! Add a couple of new toppings to the conditional
        block in the cost function. Once you've added your toppings, test out the
        function to make sure it works.
      Luigi's Pizza 3 (copy 1)_instruction: |
        That's better, everyone loves more
        variety in their pizza toppings! But you still can't please everyone, and
        folks are coming in to order toppings that Luigi doesn't have. Instead of
        saying no to those people, could you update the "else" clause so that we
        charge them a premium for toppings that we don't normally offer?
      Luigi's Pizza 3_instruction: |
        That's better, everyone loves more variety in
        their pizza toppings! But you still can't please everyone, and folks are
        coming in to order toppings that Luigi doesn't have. Instead of saying no
        to those people, could you update the else clause so that we charge them a
        premium for toppings that we don't normally offer? Let's charge $10,000
        for a topping we don't carry.
      Luigi's Pizza 4_instruction: |
        Free Play: What can you do to make Luigi's cost
        function even more useful?
      MSM Big Game Empty_instruction: |
        All variables and functions are currently
        empty stubs. Each puzzle progression will be focused on defining and handful
        of them, and therefore adding functionality.
      MSM Big Game Vars 1 (copy 1)_instruction: |
        In the Variables toolbox you'll
        see several variables that define how your game characters look, move, and
        interact
      MSM Big Game Vars 1_instruction: |
        In the Variables toolbox you'll see several
        variables that define how your game characters look, move, and interact
      MSM Big Game Vars Backup_instruction: |
        In the Variables toolbox you'll see
        several variables that define how your game characters look, move, and interact
      MSM Defining Vars 1 (copy 1)_instruction: |
        Write a program that produces a
        50 pixel solid green triangle.
      MSM Defining Vars 1_instruction: |
        Write a program that produces a 50 pixel
        solid green triangle.
      MSM Defining Vars 2 (copy 1)_instruction: |
        If we wanted to make fifty green
        triangles, it would be a pain to repeat that block of code 50 times. Let's
        create a variable called "my-shape" and put the code for a 50 pixel solid
        green triangle inside.
      MSM Defining Vars 2_instruction: |
        If we wanted to make fifty green triangles,
        it would be a pain to repeat that block of code 50 times. Let's create a
        variable called my-shape and put the code for a 50 pixel solid green triangle
        inside.
      MSM Defining Vars 3 (copy 1)_instruction: |
        Take your "my-shape" variable
        and use it with this provided code to draw two identical green triangles.
      MSM Defining Vars 3_instruction: |
        Take your my-shape variable and use it with
        this provided code to draw two identical green triangles that are 50 pixels
        in size.
      MSM Defining Vars 4_instruction: |
        Edit your my-shape variable so that it draws
        75 pixel solid red stars.
      MSM Play Lab Butterfly 1_instruction: |
        Help Sam stay on the screen so that
        you can always see at least a little piece of him. Using the arrow keys, see
        how far Sam can go to the left while still staying onscreen. You’ll find that
        Sam is onscreen as long as his x-coordinate is greater than -50. Then, fill
        in the code to make Sam stay on the screen.
      MSM Play Lab Butterfly 2_instruction: |
        Now make Sam stay on the right side
        of the screen. You'll have to experiment to see how far he can go and still
        be partially visible on the screen.
      MSM Play Lab Butterfly 3_instruction: |
        Now, combine your work to make Sam stay
        on both sides of the screen.
      MSM Play Lab Game 2_instruction: |
        Variables can also be used to control the
        speed of players in a game. Set the player speed and the enemy speed and see
        how the movement changes. Speed can be between 2 and 12.
      NetSim_AddressingMessages_instruction: |
        In this version of the simulator, you
        will connect to a Router instead of directly to another student. Enter an
        address in the "To" box to send a message to another student.
      NetSim_AutomaticDNS_instruction: |
        In this version of the simulator a DNS service
        is provided for you. Send a message in the form GET [hostname] to the DNS
        service at address 15 to get a student's address.
      NetSim_ManualDNS_instruction: |
        In this version of the simulator you can't
        see the other students' addresses.  Instead, one of you must act as a name
        service, to help share addresses with each other.
      NetSim_SendAB_instruction: |
        Connect to another student.  Each of you can set
        the value of the wire between you to "A" or "B".  See if you can send
        a complete message!
      NetSim_SendAscii_instruction: |
        In this version of the simulator, you can send
        numbers or ASCII characters to one another, one bit at a time.
      NetSim_SendBits_instruction: |
        Connect to another student.  You can now set
        your wire to "0" or "1".  Send a message to your partner!
      NetSim_SendingABTest_instruction: |
        This is Sarah's test of making a netsim
        level
      NetSim_SendNumbers_instruction: |
        In this version of the simulator, you can
        view the decimal representations of the binary you are sending.
      NetSim_Superuser_instruction: You have loaded NetSim in superuser mode.
      NetSim_Variant1_instruction: |
        NetSim: Variant 1 allows students to manually
        work out the timing of sending bits back and forth.
      NetSim_Variant2_instruction: |
        NetSim: Variant 2: Students connect directly
        to one another and send entire packets back and forth, exploring systems of
        encoding data.
      NetSim_Variant3_instruction: |
        NetSim: Variant 3: Connects groups of 2-6 students
        with a router, and explores issues in routing and DNS
      New Artist Project_instruction: Намалюйте щось awesome! Ваш код буде збережено
        як проект, який ви можете повернутися до будь-якої миті.
      NEW Course 4 Artist Functions 1_instruction: Можна зробити квадрат, 100 пікселів
        у довжину, використовуючи в циклі?
      NEW Course 4 Artist Functions 10_instruction: Натисніть "Редагувати" для заповнення
        блоків у функція визначення виготовити квадрат 40 піксель.
      NEW Course 4 Artist Functions 11_instruction: У нас є нова функція називається
        "Накреслити лінію з квадратів". Не соромтеся Погляньте всередині даний блок
        функцій, щоб побачити, як ми побудували його. Натисніть на "Виконати", коли
        ви готові до наступної загадки.
      NEW Course 4 Artist Functions 12_instruction: Функція "Накреслити лінію з квадратів"
        від останнього головоломки намалювати цю модель."
      NEW Course 4 Artist Functions 13_instruction: 'Можна зробити формою зірки за
        допомогою функції "Накреслити лінію з квадратів"? Підказка: ви, можливо, рухатися
        вперед 60 пікселів і перетворити 144 градусів'
      NEW Course 4 Artist Functions 14_instruction: 'Вільний час грати! '
      NEW Course 4 Artist Functions 2_instruction: 'Можна зробити 3 квадратів 20 пікселів
        один від одного? Підказка: кожна площі становить 100 pixels у величині'
      NEW Course 4 Artist Functions 3_instruction: 'Ось новий тип блоку. Вона називається
        "блок функцій". Натисніть кнопку "Виконати", щоб побачити, що він може зробити. '
      NEW Course 4 Artist Functions 4_instruction: 'Функція "намалювати квадрат" намалювати
        цю модель. Підказка: Ви повинні використовувати "повернути праворуч на 120
        градусів" блок після кожного квадрата.'
      NEW Course 4 Artist Functions 5_instruction: Як "намалювати квадрат" блок дізнатися
        які команди для запуску? Натисніть "Редагувати" у даний блок функцій "намалювати
        квадрат". Блоки у редакторі функцій є визначення, які складають "намалювати
        квадрат". Коли ви закінчите озираючись, натисніть кнопку "Зберегти та закрити"
        і потім "виконати".
      NEW Course 4 Artist Functions 6_instruction: "Використовуючи даний блок функцій
        \"Рисование квадрат\", можна зробити цей малюнок? Підказка: кожна площі становить
        20 пікселів apart. \r "
      NEW Course 4 Artist Functions 7_instruction: 'Ви отримуєте повісити як використовувати
        функцію блоки? Давайте змінимо цю площу, так що це 200 pixels у величині.
        Підказка: натисніть "Редагувати", щоб змінити розмір "намалювати квадрат"
        функції редактора. Не забудьте натиснути на "Зберегти й закрити" вийти з функції
        редактора. '
      NEW Course 4 Artist Functions 8_instruction: Ми дали більшу частину коду, щоб
        створити функцію. Проте видається чогось не вистачає. Ви можете редагувати
        функція визначення намалювати трикутника?
      NEW Course 4 Artist Functions 9_instruction: Які блок, вам потрібно додати отримати
        трикутник сидіти на вершині площі?
      New Course 4 Artist Functions Level 4_instruction: Функція "намалювати квадрат"
        намалювати цю модель.
      NEW Course 4 Artist Params 1_instruction: Давайте визначимо цю функцію, щоб
        накреслити квадрат зі стороною 50 пікселів. Натисніть кнопку "змінити", щоб
        розпочати роботу.
      NEW Course 4 Artist Params 10_instruction: 'Створити блок "намалюйте шестикутник"
        функція з параметром довжини. Підказка: цей шестикутник є 100 pixels у величині. '
      NEW Course 4 Artist Params 11_instruction: Ви можете з'ясувати як намалювати
        цю форму? Редагувати функцій дозволило використовувати параметр "сторони".
      NEW Course 4 Artist Params 12_instruction: Ви можете завершити цей малюнок?
        Сторони всі фігури є 100 пікселів довгий.
      NEW Course 4 Artist Params 13_instruction: 'Давайте редагувати цю функцію "намалювати
        фігуру". Вона вже має параметру "довжина". Тепер давайте редагувати функція
        також додати параметр "сторони". Пам''ятайте кут перетворити для заданої форми
        360 розділити на сторони, він має. Підказка: довжини для кожної фігури є;
        трикутник становить 100 пікселів, і шестигранною становить 25 пікселів і площі
        становить 50 пікселів.'
      NEW Course 4 Artist Params 14_instruction: 'Можна повторно створити ці фігури?
        Перетягнути параметру "довжина" в функція визначення. '
      NEW Course 4 Artist Params 15_instruction: 'FreePlay: Ось функції, ви написали
        а деякі більше для вас грати з. Намалюйте щось awesome!'
      NEW Course 4 Artist Params 2_instruction: Створи нову функцію "намалювати трикутник
        стороною 50 пікселів"
      NEW Course 4 Artist Params 3_instruction: "Тепер давайте використовується функція
        малювати 3 трикутники з останнього головоломки в ряд. Підказка: кожен трикутник
        — 50 пікселів apart. \r "
      NEW Course 4 Artist Params 4_instruction: Ви помітите, що-небудь інше про ці
        блоки функцій? Натисніть кнопку "Виконати", щоб побачити, що відбувається.
      NEW Course 4 Artist Params 5_instruction: 'Заповніть в?? у вхідний блок параметрів
        довжини. Підказка: Пентагон є 100 pixels у величині. '
      NEW Course 4 Artist Params 6_instruction: Заповнити в параметрі "довжина" для
        створення цих фігур, замінивши на "???" з правильний номерами. Квадрат та
        трикутник розміщені 100 pixels у величині, а і шестигранною 75 pixels у величині.
      NEW Course 4 Artist Params 7_instruction: 'Ви можете завершити цей малюнок?
        Підказка: кожен трикутник становить 25 пікселів більший ніж останні.  Перший
        трикутник є 25 pixels у величині.'
      NEW Course 4 Artist Params 8_instruction: Код для цього трикутника функція порушується.
        Ви можете редагувати функція це виправити і внесіть трикутники з довжиною
        25, 50 і 75?
      NEW Course 4 Artist Params 9_instruction: 'Натисніть "Редагувати" заповнити
        функція визначення "Рисование квадрат" і додати параметр. Він повинен займати
        параметра довжину, так само, як трикутник. На цей раз привернути 3 квадрата:
        25, 50 і 75 пікселів у довжину, кожен 100 пікселів один від одного.'
      NEW Course 4 Artist Vars 1.5_instruction: 'Подивіться на код, ви бачите, як
        блок "встановити тривалість" та "довжина" блокувати робіт разом? Натисніть
        на "Виконати", щоб побачити її в дії. '
      NEW Course 4 Artist Vars 12_instruction: Змінити цей алгоритм, так що він використовує
        змінну "сторони" замість фіксоване число намалювати Пентагон. Замініть число
        5 змінну "сторони" і використовувати блок "намір сторін".
      NEW Course 4 Artist Vars 2.5_instruction: 'Подивіться на код, ви бачите, як
        блок "встановити тривалість" та "довжина" блокувати робіт разом? Натисніть
        на "Виконати", щоб побачити її в дії. '
      NEW Course 4 Artist Vars 2_instruction: 'Перетягніть номер блоку до блоку "встановити
        тривалість" малювати безліч 50 пікселів трикутників. '
      NEW Course 4 Artist Vars 4 5_instruction: Awesome роботу на останній головоломки,
        Давайте спробуємо його знову, цього разу давайте зробити цей прохолодний дизайн
        з з шестигранною 60 пікселів.
      NEW Course 4 Artist Vars 4_instruction: 'Давайте спробуйте знову. Ви можете
        встановити зробити цей прохолодний дизайн з з шестикутників, змінна довжина?
        Підказка: Це кратна 10.'
      NEW Course 4 Artist Vars 6_instruction: Ви можете допомогти мені звернути ця
        картина прохолодно, скидаючи в "довжина" змінний блок на правильні місця?
      NEW Course 4 Bee For Loops 1_instruction: Використовувати петлею збирати нектар
        з кожної квітки.
      NEW Course 4 Bee For Loops 10_instruction: Використання вашої для змінної "Лічильник"
        петля контролювати те, як далеко, щоб перемістити по горизонталі.
      NEW Course 4 Bee For Loops 11_instruction: Ви можете використовувати петлю змінну
        для контролю руху і нектар колекції?
      NEW Course 4 Bee For Loops 2_instruction: Додати код, необхідно переконатися,
        що бджола збирає всі нектар. Подивіться, скільки коду, необхідні для цієї
        головоломки! (Ми будемо вчитися простіший спосіб в наступному головоломки).
      NEW Course 4 Bee For Loops 3_instruction: 'Ах, що для петлю робить це набагато
        простіше! Всі коду, ви повинні є там, поглянути на те, як він зібрав натисніть
        кнопку "Виконати", щоб побачити, як вона працює. '
      NEW Course 4 Bee For Loops 4 4_instruction: 'Ви можете допомогти бджіл збирати
        інші меду, використання цього циклу? '
      NEW Course 4 Bee For Loops 4_instruction: 'Замінити на?? у на на петлі з рекордним
        нектару Бджола має збирати. '
      NEW Course 4 Bee For Loops 5 5_instruction: Ви отримуєте навичку використання
        на для циклі? Довідка бджоли давайте решти нектар.
      NEW Course 4 Bee For Loops 5_instruction: Ви також можете використовувати за
        для петлю відліку. Спробуйте збору цей нектар на зворотний відлік від 5 до
        1 на 1.
      NEW Course 4 Bee For Loops 6_instruction: Останній номер у вашому петлею це
        називається "приріст", і з кожним разом петлі знаходиться у веденні лічильник
        змінна змінюється приростом. Спробуйте збору ці квіти, використовуючи кроком
        в 2.
      NEW Course 4 Bee For Loops 7_instruction: Ви отримуєте навик для заземлення?
        Це схоже на останній головоломки, але ви повинні отримати 2,4,6,8,10 нектару.
        Вам дають для початківців код, за винятком чисел у лічильник петель. Давайте
        збирати деякі нектар!
      NEW Course 4 Bee For Loops 8_instruction: "Якщо ваш петлю підраховуючи, приростом
        буде додано до лічильника змінної кожного циклу. Якою має бути ваш приріст
        зібрати 3, 6, 9 нектар? \r "
      NEW Course 4 Bee For Loops 9_instruction: Якщо ваш loop зворотний відлік, приростом
        віднімається від лічильника змінної кожного циклу. Якою має бути ваш приріст
        збирати нектар 9, а потім 6 і потім 3?
      NEW Course 4 Play Lab Params 11_instruction: 'Пора безкоштовно грати! Удачи
        з всі блоки в ваш ящик для інструментів. '
      NEW Course 4 Play Lab Params 5 5_instruction: 'Заповніть актор параметр входів
        з номери (1, 2 і 3), щоб зробити ці актори патруль. '
      NEW Course 4 Play Lab Vars 4 5_instruction: '"Що ви думаєте цей код буде робити?
        Натисніть "Виконати", щоб побачити, що відбувається."'
      NEW Course 4 Play Labs For Loops 8 Free Play_instruction: 'Пора грати безкоштовно,
        весело з усіма блоками в ваш ящик для інструментів. '
      New Play Lab Project_instruction: Створити свій власний розповідь або гра! Ваш
        код буде збережено як проект можна повернутися в будь-який час.
      Ninjacat Demo B (copy 1)_instruction: "\r\nLet’s begin by exploring a simple\nvideogame,
        and then figuring out how it works. You can use the arrow keys\nto move the
        ninja left, right and jump - try to catch the unicorn and avoid\nthe dragon!\r\n\r\n\r\n\r\n
        \ \r\n\r\n"
      Ninjacat Demo B_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      Ninjacat Demo No Animate_instruction: |
        Let’s begin by exploring a simple videogame,
        and then figuring out how it works. You can use the arrow keys to move the
        ninja up and down - try to catch the unicorn and avoid the dragon! When you
        think you've figured out how the game works, click "Finish"
      PDK5 Conditionals 1_instruction: |
        Purple flowers may have either 1 or 0 nectar,
        but you don't know which one! Be careful not to collect nectar from a purple
        flower if it doesn't have any. Check if the nectar is equal to 1 by using
        the if block.
      PDK5 Conditionals 2_instruction: "Try this puzzle that uses conditionals and\nloops
        together. Use the \"if\" block to decide when to turn. Hint: you only\nneed
        one more block to complete this puzzle. \n"
      PDK5 Events 1_instruction: "So far all of the programs we've written are executed\nin
        order from top to bottom. In this puzzle, we'll use \"Events\" to respond\nto
        an action on demand. Make the octopus say \"Hello\" only when you click\non
        the Octopus. \n"
      PDK5 Functions 1_instruction: |
        Hello. Me zombie artist. Me love drawing! Help
        me draw the square glasses.  Hint:  the bridge between the glasses is 25 pixels
        shorter than the square length.
      PDK5 Functions 2_instruction: Функції дозволяють визначити нові блоки! Ми переїхали
        блоки, щоб намалювати квадрат в функцію під назвою "намалювати квадрат". Ви
        можете використовувати функцію "намалювати квадрат" створити очки? Квадрати
        є 75 пікселів один від одного.
      PDK5 Loops 1_instruction: "Instead of using 5 \"move forward\" blocks, use\nthe
        \"repeat\" block with a \"move forward\" block inside of it. In computer\nscience,
        this is called a \"loop.\" \n"
      PDK5 Loops 3_instruction: |
        Here's another puzzle to practice loops. What happens
        if you use the repeat block to run the code already provided on the workspace
        4 times?
      Pixelation - Lesson 14 - Fix bit offset v.2_instruction: |
        Something happened
        to the bits in this image!  Find error and fix it!  Hint: a few extra bits
        were added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Fix the error_instruction: |
        Something happened to
        the bits in this image!  Find error and fix it!  Hint: a few extra bits were
        added.  You should only need to remove some bits.
      Pixelation - Lesson 14 - Make the Letter A_instruction: |
        Make a 3x5 letter
        'A'.  The widget is setup with the incorrect dimensions. Your first task
        is to set the second byte to the 8-bit binary code for 5: 0000 0101.  Then
        start entering pixel data.
      Pixelation - Lesson 14 - Make your own B and W Image_instruction: |
        Now make
        your own image! We've started you off with a 10x10 canvas but you can make
        it whatever size you want.  Happy pixeling!
      Pixelation - Lesson 14 - Make your own B&W Image_instruction: |
        Now make your
        own image! We've started you off with a 10x10 canvas but you can make it
        whatever size you want.  Happy pixeling!
      Pixelation 2_instruction: |
        Something happened to the bits in this image!  Find
        error and fix it!
      Pixelation 4x4 Empty_instruction: |
        The width and height are now encoded in
        the pixel data. Can you figure out how to adjust the dimensions?
      Play Lab Rocket 1_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second... press "Run" to see how this word problem looks as an animation.
      Play Lab Rocket 2 (copy 1)_instruction: |
        We've added your contract and two
        examples into the Design Recipe for rocket-height. Now write the function
        for rocket-height.
      Play Lab Rocket 2 (copy 2)_instruction: |
        We've started the Design Recipe for
        rocket-height using the contract and examples you just wrote. Complete the
        function definition for rocket-height and run your animation.
      Play Lab Rocket 2_instruction: |
        We've started the Design Recipe for rocket-height
        using the contract and examples you just wrote. Complete the function definition
        for rocket-height and run your animation.
      Play Lab Rocket 2B (copy 1)_instruction: |
        We've started the Design Recipe
        for rocket-height using the contract and examples you just wrote. Complete
        the function definition for rocket-height and run your animation.
      Play Lab Rocket 2B_instruction: |
        A rocket blasts off, traveling at 15 meters
        per second. Using the Design Recipe, write a function called rocket-height
        that takes in a number of  seconds that have passed since the rocket took
        off, and produces the height of the rocket at that time.
      Play Lab Rocket 3 (copy 1)_instruction: |
        Awesome, now can you update that function
        so that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 3_instruction: |
        Awesome, now can you update that function so
        that our rocket moves more quickly? Make sure to update the purpose statement,
        examples, and function definition to launch a rocket at 40 meters per second.
      Play Lab Rocket 4 (copy 1)_instruction: |
        Real rockets start off slowly and
        gain speed over time - let's make ours do the same! Write an exponential
        function that describes a rocket that travels at "seconds" squared meters
        per second.
      Play Lab Rocket 4_instruction: |
        Real rockets start off slowly and gain speed
        over time - so let's add some simple acceleration to ours! Can you write
        a function that describes a rocket that is at 10 meters at 1 second, 40 meters
        at 2 seconds, 90 meters at 3 seconds, 160 at 4 seconds and so on?
      Play Lab Rocket 5_instruction: |
        Much better, but let's write one more function
        with simple acceleration. This time the rocket should be 15 meters at 1 second,
        45 meters at 2 seconds, 95 at 3 seconds, and 165 at 4 seconds.
      Play Lab Rocket Free Play_instruction: |
        Free Play: Experiment with your rocket-height
        function to make the rocket fly in different ways. Click "Finish" when you
        are done.
      Sam the Butterfly 1 (copy 1)_instruction: |
        This butterfly is named Sam, and
        the game area is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels
        tall! As you can see, Sam is free to walk around the yard, and the coordinates
        at the top of the screen update to tell you his location. Use the arrow keys
        to move sam around his yard. Help Sam collect all of the flags to move on.
      Sam the Butterfly 1_instruction: |
        This bat is named Sam, and the game area
        is Sam’s yard. Sam's yard is 400 pixels wide by 400 pixels tall! As you can
        see, Sam is free to walk around the yard, and the coordinates at the top of
        the screen update to tell you his location. Use the arrow keys to move Sam
        around his yard, making note of Sam's coordinates at different locations.
        Click "Finish" when you're ready to move on.
      Sam the Butterfly 2_instruction: |
        Sam's mom wants to make sure that she can
        always see at least a bit of him, so lets write some functions that help make
        sure he doesn't go too far out of the yard. Here's a function called safe-left?
        - it should take a Number for its domain that represents Sam's x-coordinates
        and return true if he's completely visible on screen. If your function works,
        Sam shouldn't be able to leave the yard from the left side.
      Sam the Butterfly 3_instruction: |
        In the last puzzle we kept Sam from leaving
        on the left, now let's do the same thing on the right. Complete the safe-right?
        function to make sure Sam can't go off the right side of the screen.
      Sam the Butterfly 4_instruction: |
        Huh, we can keep Sam from leaving on the
        left, or we can keep him from leaving on the right, but how can we keep him
        from going either direction? Try using the AND block to program the function
        on-screen? to check if Sam is safe-left? AND safe-right?
      Sam the Butterfly 5_instruction: |
        Free Play: Awesome, we've kept Sam safe
        on the left and right! Use this free play stage to experiment with your functions
        and further improve onscreen?
      Sam the Butterfly 6_instruction: |
        We've added a new parameter "y" to the
        "on-screen?" function. Update the function so that it checks that "safe-left?"
        AND "safe-right?" AND "safe-up?" are all true. When you've fixed the
        function, try going out of the yard from the left, right, and top sides.
      Sam the Butterfly 7_instruction: |
        Only one last direction to worry about! Create
        a "safe-down?" function and update the "on-screen?" function so that it
        checks up, down, left, and right.
      Sam the Butterfly Complete_instruction: |
        Only one last direction to worry about!
        Create a "safe-down?" function and update the "on-screen?" function so
        that it checks up, down, left, and right.
      scrat 16 (copy 1)_instruction: |
        Acorn! Acorn! Acorn! Use an "if" block to
        get me there with the fewest number of blocks.
      scrat 16_instruction: Жолудь! Жолудь! Мій жолудь! Скориставшись блоком "якщо"
        скеруй мене найменшою кількістю блоків.
      scrat 17 (copy 1)_instruction: |
        Ok, let's do that again for practice - this
        isn't very different, but watch out for the <insert obstacle name for Scrat>!
      scrat 17_instruction: Гаразд, зробимо це ще раз для практики - це не дуже відрізнятиметься,
        але остерігайся стін!
      scrat 18 (copy 1)_instruction: |
        The "If-else" blocks checks a condition,
        and then does one thing OR another. To get me to the acorn try to use this
        new block.
      scrat 18_instruction: Блок "якщо-інакше" перевіряє умову, потім виконує одну
        АБО іншу дію. Щоб направити мене до жолудя, використай цей новий блок.
      scrat 19 (copy 1)_instruction: |
        One more practice of the "if-else" block,
        can you get it right on your first try?
      scrat 19_instruction: Ще трохи практики використання блоку "якщо-або". Зможеш
        зробити усе правильно з першої спроби?
      scrat 20_instruction: Зможеш додати ще 3 блоки, щоб допомогти мені пройти складніший
        лабіринт? Якщо все буде правильно, я зможу проходити по довільному кривому
        шляху будь-якої довжини. І поспішай - лід тане!
      SpecialFrozenLevel_instruction: Офіційно вітаємо головного художника! Створи
        свою зимову казку.
      Standalone_Artist_1_instruction: Ласкаво просимо до художник! По-перше, Давайте
        спробуємо зробити простий квадрат, використовуючи поворот праворуч блоку і
        перемістити вперед блок. Кожна сторона повинна бути 100 пікселів довгий.
      Standalone_Artist_2_instruction: Намалюйте ромб з кутами 120 та 60 кутів та
        сторонами по 150 пікселів.
      Standalone_Artist_3_instruction: Можна зробити цей шестикутник з 100 пікселів
        сторін і 60 градусів виявляється?
      Standalone_Artist_4_instruction: Тепер у вас є новий блок грати, петлі. Це буде
        повторити набір команд. Що станеться, якщо циклічному повторенні цих команд
        6 разів?
      Standalone_Artist_5.5_instruction: 'Зауважте, як завдяки циклу ми спростили
        код малювання ромба. Тепер можна виконати цикл 12 разів і утвориться квітка.
        Підказка: потрібно повертати на 30 градусів щоразу після малювання ромба,
        щоб не малювати повторно на тому ж місці.'
      Standalone_Artist_5_instruction: Скільки разів ви повинні повторювати цей diamond
        намалювати квітку?
      Standalone_Artist_6_instruction: 'Петля цей код шестикутник 6 разів створення
        дизайну. Скільки градусів буде потрібно перетворити кожен раз? Підказка: розділити
        число градусів по колу за скільки разів ви циклічного відтворення.'
      Standalone_Artist_7_instruction: 'Функція - це інструмент програмування, котрий
        дозволяє уникнути повторів. Ця функція малює квітку, тож її можна використовувати
        щоразу, коли потрібно намалювати квітку. Використайте її, а також новий блок
        "перескочити вперед", щоб намалювати ці квіти. Підказка: відстань між квітами
        - 150 пікселів'
      Standalone_Artist_8_instruction: Ось функція з назвою "намалювати фігуру", яку
        ми запрограмували на малювання шестикутників. Запустіть код і подивіться,
        що відбувається, а тоді поекспериментуйте з функцією. Можете змінити її так,
        щоб малювати узори з квадратів, трикутників чи восьмикутників?
      Standalone_Artist_9_instruction: Тепер ідіть і зробити будь-який малюнок, ви
        б хотіли! У вас ще є порожні функції, які ви можете зробити, робити все, що
        ви хочете!
      Standalone_Artist_v2_instruction: Ласкаво просимо до художник! По-перше, Давайте
        спробуємо зробити простий квадрат, використовуючи поворот праворуч блоку і
        перемістити вперед блок. Кожна сторона повинна бути 100 пікселів довгий.
      Test Play Lab_instruction: This is a test play lab level.
      Text Compression Peter Piper_instruction: Цей вірш було стиснуто, замінивши
        два поширені фрази з символів у словнику. Чи можете ви визначити інший частий
        малюнок для стиснення поеми далі?
      U1L10 NetSim numbers with decimal_instruction: |
        Invent and test a protocol
        for encoding and sending text messages. Your protocol must include the letters
        a-z, spaces, and common punctuation marks. You may add additional characters
        if you wish. See the worksheet handed out by your teacher for more detailed
        instructions!
      U1L11 NetSim numbers with Ascii_instruction: |
        Work with a partner or in a small
        team to develop a protocol that allows you to send formatted text. See the
        worksheet handed out by your teacher for more detailed instructions!
      U1L4 NetSim SendAB_instruction: "Develop, document, and test a protocol that\nallows
        you to use Internet Simulator to relay a message. See the worksheet\nfor more
        detailed instructions.  \n"
      U1L8 NetSim numbers no decimal_instruction: Default instructions
      U1L8 NetSim numbers with decimal_instruction: |
        With your partner, develop a
        protocol or set of rules for communicating a drawing using only bits. See
        the worksheet handed out by your teacher for more detailed instructions!
      U2L05 - NetSim - Packets and Building TCP_instruction: "Develop a Protocol\nfor
        Reliably Sending a Message.\r\n\r\nConstraints:\r\n- Packets may contain\nonly
        6 characters\r\n- Packets may drop with small probability\r\n- Packets\nmay
        not arrive in order"
      U2L10 NetSim Automatic DNS_instruction: |
        In this version of the Internet Simulator,
        a Domain Name System (DNS) is provided for you and knows the IP addresses
        of all connected computers. Send a message in the form GET [hostname] to the
        DNS service at address <yourRouterNumber>.15 to get a student's address.
      U2L10 NetSim Manual DNS_instruction: |
        In this version of the simulator you
        can't see the other students' addresses.  Instead, one of you must act as
        a name service, to help share addresses with each other.
      U2L2 NetSim Hub Mode_instruction: "Now use the Internet Simulator to send the\nbattleship
        moves. For setup, join a Room with your group, and add ships to\nyour paper
        board for each opponent. When playing, all communication must be\ndone through
        the tool, so no talking, but have fun!\r\n"
      U2L3 NetSim Hub Mode_instruction: |
        Use the Internet Simulator to test out your
        group's binary communication protocol for battleship. How short can you make
        the message and response?
      U2L4 NetSim Routers Addresses_instruction: "For this activity, connect to a\nrouter
        with the others in your group. Important note: The router will only\nproperly
        route messages where the first 4 bits are the To: address and the\nsecond
        4 bits are the From: address.\r\n\r\n[TODO: NetSim needs to support\nhierarchical
        addresses. For now, level is set up for 4 bit to and from addresses]"
      U2L5 NetSim Classroom Internet_instruction: "For this activity, connect to\na
        router with the others in your group. The Internet Simulator now provides\na
        place for you to put the To and From addresses, so you don't have to type\nout
        the bits manually.\r\n\r\n"
      U2L7 NetSim Need for Packets_instruction: |
        Transfer your favicon to a partner
        across a network in which the larger a packet grows, the more likely it is
        to be dropped.
      U313 Two Buttons with Ids_instruction: |
        Now you try it! We've given you some
        starting code with two buttons and two event handlers on the screen, but we've
        just left the default Ids of "id".  You need to change the ids to connect
        the right event handler to the right button. (Interestingly, the incorrect
        program does work, but exhibits some bizarre behavior.  We'll discuss this
        more in the next lesson.  Make the buttons work correctly for now).
      U3L03 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.  GIF: U3L3-ProceduresChooseOne.png
      U3L03 Creating Procedures 1_instruction: |
        Write the turnAround() function and
        use it to make the turtle move as depicted. see: U3L03-turnAndDown.gif
      U3L03 Define and use turnAround_instruction: |
        Write the turnAround() function
        and use it to make the turtle move as depicted.
      U3L03 define turnRight and draw a rectangle_instruction: "Create a turnRight()\nfunction
        and draw a rectangle twice as tall as it is wide by having the turtle\nnavigate
        clockwise to draw the rectangle. \n"
      U3L03 Draw a T using turnAround_instruction: |
        The turnAround function is now
        provided for you in the code.  Use the turnAround() function to draw a T as
        depicted.
      U3L03 draw diamond_instruction: "Use any and all of the functions you wrote\npreviously
        to make a 'diamond' shape as shown in the image.\r\n\r\nNOTE:\nthis is another
        tricky one.  The 4 sides of the diamond are made by drawing\nthree steps with
        other movement made between calls.  HINT: you might want\nto make another
        function that handles drawing one side of the diamond. "
      U3L03 Three Steps_instruction: |
        Draw 3 "steps" moving up and to the right.  Notice
        the pattern in the movement. You should define a function called drawStep()
        which draws one of the steps, and then call it 3 times to achieve the effect.
      U3L04 choose your own drawing_instruction: |
        Now choose your own!  Pick one
        of the three drawings shown here and attempt to create it on your own, making
        smart decisions about how to break the problem down into re-usable functions.  You
        will review your work with a peer using "procedures peer review rubric."  Check
        it for the requirements.
      U3L04 diamond solution_instruction: |
        Study this solution to the drawDiamond
        problem.  Notice that the whole program starts by calling drawDiamond() at
        the top.  The program then follows a chain of function calls.  You can trace
        what's happening in the code to see the functions reused.  It's also easy
        to read because the function names describe the expected behavior.
      U3L05_3x3GridEfficiencyChallenge_instruction: |
        Let's revisit the 3x3 grid
        problem you did a few lessons ago.  This time the challenge is to program
        the solution "as efficiently as possible."  Now that you know how to write
        functions, it should be easier to break the problem down, and your code should
        be easier to read and debug.  See the rubric for more details about requirements
        and expectations.
      U3L05_draw3x3GridEfficiently_instruction: |
        Draw a 3x3 grid above and to the
        right of the turtle. Try to do so with the fewest number of commands possible.
        NOTE: This is a very challenging problem.  You may need to play with it for
        a while and tweak it.  You might also consider using pencil and paper to sketch
        your ideas.
      U3L06 Challenge 1 triangle_instruction: |
        Check out the extended Turtle palette
        now made available to you. These new commands accept parameters, allowing
        you to specify precisely how the function operates rather than only being
        able to move or turn a predetermined amount. Make use of these functions to
        draw the triangle as shown.
      U3L06 Challenge 2 purple square_instruction: |
        This time we're going to learn
        a little bit about changing the turtle's pen. Read through the documentation
        for penWidth() and penColor(), and then draw the purple square as shown.
      U3L06 Challenge 3 fill pink_instruction: |
        Now let's try to fill in the entire
        background of the screen. To make it a little easier for you, we can tell
        you the color we chose is one of the 140 named colors.  If you don't know
        what the named colors are, take a closer look at the documentation for penColor()
        again. Hint: you need to use dot().
      U3L06 Challenge 4 bullseye_instruction: |
        Let's try this out one more time.
        This time the colors are NOT named colors - you need to use the hex-color
        number to set the color.  So that you're not randomly guessing, we'll give
        you a hint -- each of the colors shown in the target image is one of these
        one of the five in the following list:  #00ABDC, #CC4400, #1188CC, #006699,
        #11CC00  You might be able to guess correctly if you apply what you know about
        RGB colors.
      U3L06 Challenge 5 overlapping circles_instruction: |
        This image is created just
        using dot() and penColor() but, how are we going to get those circles to be
        transparent?  If you haven't gotten the hint yet: check out the documentation!
      U3L06 Challenge 6 squiggles_instruction: |
        Next we're going to be adding some
        curves to our drawing. Read the documentation for the "arc" commands and
        then draw the squiggles as shown. To make things easier here's a hint: all
        the parameters are multiples of 10, and the colors are from the following
        list of named colors: PowderBlue, lightBlue, Indigo, Purple, Magenta.
      U3L06 Challenge 7 smiley face_instruction: |
        To make this smiley face you'll
        need to look at the documentation for the move() command and then use it with
        the others you've learned.  You can make reasonable guesses about the colors.
      U3L06 Challenge 8 make your own_instruction: |
        Use the tools you've learned
        today to create a drawing of your own creation. If you have time, challenge
        your friends to see if they can duplicate your image.  We'll show you the
        drawing we made for ourselves.  You can try to duplicate that if you want
        to, otherwise, have fun making your own!
      U3L07 - Free Play Loops and Random_instruction: |
        Free Play!  Use what you learned
        from loops and random to make your own little scene.  Have fun.
      U3L07 - Starry Night Starter Code_instruction: "You are going to use loops\nand
        random numbers to generate an image of starry night sky similar to one\nshown
        here.  We have given you some starter code to generate the ground and\nsky
        (just two giant dots), you will add code to this project to make the stars,\ngrass,
        and moon.  All of the effects are clever applications of turtle dots,\nlines,
        and colors.  To get started, follow the series of steps suggested in\nthe
        accompanying worksheet. \n"
      U3L08 - Enchantment Under the Sea_instruction: |
        You have been provided with
        starter code for an “Under the Sea” scene which includes three functions,
        one each for the starfish, sea grass, and fish. Create versions of these functions
        which accept parameters to allow you to add more variation to your scene.  The
        student worksheet provides more details and guidance.
      U3L13 - Button with ID_instruction: |
        Drag a button out onto the screen and
        set its text to "Go forth!".  Run the program to make sure you can see the
        button.
      U3L13 - Debug Id plus logic problem_instruction: "The last problem was an example\nof
        syntax error.  App Lab did not understand which object it should be listening\nto
        for a \"click\" event so it showed an error message in the console to let\nyou
        know.  Another kind of error is a logical error - the program is valid,\nbut
        it's not doing what you want it to do.\r\n\r\nThis program has 2 errors.\nA
        (tricky) syntax error and logical error.  Find them, fix them, and make\nthe
        program work as expected."
      U3L13 - Debug Id Problem_instruction: |
        This program has problem!  Can you figure
        it out?  Run the program and see if you can figure out from the error messages
        in the console what the issue is.  There is not much code, so you might be
        able to figure it out just by reading carefully.  Make a change that will
        make the program work as expected.
      U3L13 - Turtle Driver Project_instruction: |
        Challenge: Create a “turtle driver”
        with at least three buttons on the screen to move the turtle forward, and
        turn the turtle right and left. You can copy/paste code from a previous level
        if you like but it will help build your coding muscles if you create this
        small program from scratch.  If you have time, try adding additional buttons!  You
        can also have fun changing the parameters on the turtle functions, using colors,
        etc.
      U3L13 - Turtle move with button_instruction: "Drag a button out onto the screen\nand
        set its text to \"Go forth!\".  Add an event handler for the button, that\nmakes
        the turtle move forward.  Run the program to make sure it works. \n"
      U3L14 - Unfortunate Events Free Play_instruction: |
        Follow the "Unfortunate
        Events" Worksheet and enter your code here to experiment.  We've pre-loaded
        the code you need to start.
      U3L16 - challenge say hi app_instruction: "In this challenge we give you starter\ncode
        that lays all the elements out on the screen.  Here’s what you need to\ndo:\r\nAdd
        event handler to textInput with the event type ‘input’ that shows\nthe “Say
        hi” button when that event occurs.\r\nAdd event handler to button\nso that
        on click, it writes a hello message to the screen and hides the textInput\nand
        button."
      U3L16 - hideAndShow_instruction: |
        Introducing textInput, getText and write.  First
        run the starter code several times.  Try to change what's written to the
        screen when the button is clicked. Then use getText to write to the screen
        what the user entered in the text box. GIF: U3L16 - useGetText.gif
      U3L16 - hideAndShowPractice_instruction: |
        You are given some starting code
        that puts an image and two buttons on the screen.  The image is initially
        hidden. Add two new event handlers: one for each button, that when clicked
        hide and show the image.
      U3L16 - image and text labels_instruction: |
        Introducing the setPosition command!  Replace
        the moveTo in the button-click event handler to use setPosition to move the
        button itself to a random location when it's clicked.
      U3L16 - images and text labels_instruction: "Introducing objects other than\nbuttons!
        - textLabels and images.  First try replacing your button with a\ntextLabel.
        \ Will the text respond to events just like the button?  Try connecting\nan
        event handler to it.  We've started you out with code similar to the result\nof
        the last level, you can copy your code from that level into here if you\nprefer.
        \n"
      U3L16 - images_instruction: "Introducing Images.  Try replacing the textLabel\nwith
        an image..  Will the image respond to events just like the button?  Try\nconnecting
        an event handler to it.  We've started you out with code similar\nto the result
        of the last level, you can copy your code from that level into\nhere if you
        prefer. \n"
      U3L16 - quick double click_instruction: |
        Mini-Project.  The Quick Double-Click
        game.  In this simple game an object (an image) moves around, or pops up randomly
        on the screen, as the user clicks it.  The goal of our game will be to try
        to double-click the object before it moves.  Part of the challenge (and fun)
        here is creating this app from scratch.  You can look back at your previous
        work for examples, but it's fun to create something from scratch, too.  Try
        it!  For more details see the Activity guide for this lesson.
      U3L16 - setPosition to move button_instruction: |
        Introducing the setPosition
        command!  Replace the moveTo in the button-click event handler to use setPosition
        to move the button itself to a random location when it's clicked.
      U3L16 - setPositionMoveButton_instruction: Use setPositon to moveButton
      U3L16 - setupMoveToRandom_instruction: "We'll be building upon some simple\nstarting
        code throughout this lesson.  Your first task: use moveTo and randomNumber\nto
        get the turtle to move to a random location with each button click.  We've\ngiven
        you starting code for our common setup: a button that moves the turtle\nwhen
        clicked.  You should modify this code.  \n"
      U3L16 - text labels_instruction: "Introducing textLabels.  First try replacing\nyour
        button with a textLabel.  Will the text respond to events just like the\nbutton?
        \ Try connecting an event handler to it.  We've started you out with\ncode
        similar to the result of the last level, you can copy your code from\nthat
        level into here if you prefer. \n"
      U3L16 - textInput getText write_instruction: |
        Introducing textInput, getText
        and write.  First run the starter code several times.  Try to change what's
        written to the screen when the button is clicked. Then use getText to write
        to the screen what the user entered in the text box.
      U3L16 - use images_instruction: |
        Introducing Images.  Try replacing the textLabel
        with an image..  Will the image respond to events just like the button?  Try
        connecting an event handler to it.  We've started you out with code similar
        to the result of the last level, you can copy your code from that level into
        here if you prefer.
      U3L19 - Clicker Game Freeplay Area_instruction: |
        Use this App Lab area to improve
        your clicker game.  You should start by copy/pasting the code from your old
        game here.  We're showing a more full set of blocks in the toolbox - some
        of the things you might not have used yet.  Feel free to explore then and
        experiment if you want to.  Everything else you need should be shown.  Have
        fun!
      U3L19 - Debugging with consoleLog_instruction: |
        This example shows how you
        might insert console.log statements in your code to verify for yourself how
        the values in the variables change during the running of the code.  This is
        an important debugging technique to use when each line in your program doesn't
        have a visual effect on the app that you can see to verify things are working
        right.  Run the code to see the output in the console.
      U3L19 - DEMO up down count practice app_instruction: |
        This is a demonstration
        of a simple App that uses variables, arithmetic and setText.  Play with it
        a little bit here to see what it does.  You can also come back to experiment
        if you want.  You are going to try to create this app yourself on the next
        screen.  Don't worry, we'll start you out with some of the code and leave
        the rest for you to complete.
      U3L19 - do concatenate string with var_instruction: "We've given you a piece\nof
        code from the previous screen.  Try changing the value assigned to foo\nto
        see the string change. \r\nDo this: \r\n1. Try changing the value assigned\nto
        foo to see the string change. \r\n2. By only modifying the lines of code\nthat
        were given to you, try to get the output to say: “The value of foo is:\n9.
        \ And isn’t that fine.” \r\n"
      U3L19 - fix the var name syntax error_instruction: "We've given you some code\nwith
        an error.  It doesn’t recognize the variable.  Can you figure out why?  Fix\nthe
        error and get the program to run.  Also note the error message since it\nmight
        come up at some point later in your life.\r\n\r\n"
      U3L19 - practice with setText_instruction: |
        We've started you out with the
        code shown on the previous screen.  First experiment with the app.  Identify
        where setText is being used.  CHALLENGE: modify the code to also use setText
        to change the text on the button itself when it's clicked.  GIF: U3L19 -
        setTextOfButton.gif
      U3L19 - Target Clicker App_instruction: "# A motivating example\r\n\r\nHere\nis
        an example of the kind of app we want to make.  Study this for the elements\ncontained
        in the app rather than what it is or does.  Things to investigate:\n\r\n\r\n1.
        what happens when you click on the Code.org logo? \r\n2. What happens\nwhen
        you click somewhere else? \r\n3. Try the reset button.   \r\n\r\nThe\nelements
        contained in this app appear to be simple, and they are in some ways.\nHowever,
        the computing principles involved - controlling and keeping track\nof things
        in memory while the program is running - get into some deeper issues\nof programming
        and computer science in general.  There are some devilish details\nand paths
        that can lead to misunderstanding if you're not careful.\r\n\r\nSo,\nkeep
        this app in mind as you go through the different levels in this lesson.  It\nmight
        seem like you need to learn a lot in order to get this simple thing\nworking.
        \ But it's worth taking the time to understand at a deeper level\nwhat is
        going on.  Because this one topic: controlling memory leads to many\npossible
        misunderstandings about coding, and how computers work.  We want\nto make
        sure you get it right from the outset.  \r\n\r\nSo take your time.  Work\nthrough
        the issues.  Read the explanations.  You'll come out on the other\nside a
        better programmer with much deeper knowledge and understanding of how\nthings
        work.  \r\n\r\nAre you ready?  Click 'finish' to move to the next\npage and
        start the lesson."
      U3L19 - test reassignment of two vars_instruction: |
        Why is this happening?
        The code given here is the same as the example from the previous page where
        we asked you to make a prediction about what will happen.  Run this code to
        find out if you were right.  If you weren't, that's okay.  You might experiment  a
        little if you want to, but bon't spend too much time here. We'll explain
        more on the next page.
      U3L19 - three basic ops of variables_instruction: "Do this:\r\nWe've given\nyou
        the three lines of code shown in the previous page.  Add three lines of\ncode
        just below the ones shown here to make your own variable, assign it a\nvalue
        and write it to the screen.  NOTE: change the variable name from the\ndefault
        x to something else.\r\n"
      U3L19 - try out console log_instruction: "Try out console.log.  Do this: replace\nthe
        statement write(\"foo is: \" + foo) with console.log(\"foo is: \" + foo).
        \ Run\nthe program and you should see the output show up in the console area
        below\nthe workspace.  Then try adding a few more console.log statements.
        \ Display\nsome text.  Make another variable and display that.  \r\nThe app
        screen will\nbe blank -- that's the point.  With console.log you can test
        output behind\nthe scenes in a way the user cannot see.  \r\n\r\n\r\nGIF:
        U3L19-useconsolelog.gif"
      U3L19 - up down count practice app_instruction: |
        This app is only SLIGHTLY
        different from the previous one, but much more dynamic.  See if you can figure
        out how and why the count is going up.  Once you've figured it out then you
        should be able to DO THIS: add a button to the app that when clicked makes
        the count go down, and updates the label.  When you're done the app should
        work as shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - updating variables pt1_instruction: |
        This app is only SLIGHTLY different
        from the previous one, but much more dynamic.  See if you can figure out how
        and why the count is going up.  Once you've figured it out then you should
        be able to DO THIS: add a button to the app that when clicked makes the count
        go down, and updates the label.  When you're done the app should work as
        shown in the demonstration.  GIF: U3L19 - upDownCountApp.gif
      U3L19 - variable reassignment challenge pt2_instruction: |
        We've given you
        the code from the previous page.  Right now, because the code only sets the
        values of variables, the app doesn't display anything. DO THIS: insert write
        or console.log statements into the code to figure out what the values of a,
        b, and c are after the code has executed.  You should have first made a prediction
        to see if your mental model of how the computer works is correct.  We'll
        ask for the answer on the next page.
      U3L19 - variable scope problem 2_instruction: |
        First run the program to see
        the problem.  You don't need to write code to solve any problem here.  But
        you do need to investigate the code and come up with an explanation for WHY
        what's happening is happening.  Why aren't 3 things being written to the
        screen?  Why does the variable foo seem to exist once but not the other times?  If
        you switch to code mode you'll see some warning messages next to two lines
        of code -- why do you get those messages?  Once you think you have a good
        answer, continue to the next page.
      U3L19 - variable scoping problem debugging_instruction: "Here is the code from\nprevious
        page that has a subtle problem with it.  FIRST: run the app and try\nit to
        see the problem. NOTE: NaN stands for \"Not a Number\".   DO THIS: figure\nout
        what's happening, where, and fix the problem.  We'll explain the issue\non
        the next page. \n"
      U3L19 - write var and string with same name_instruction: |
        Now look at this
        example. We’ve added another write statement.  Before you run the code, see
        if you can predict what the output will be.  Seriously, write it down. THEN
        run the code, mess with it if you like, and continue to the next page for
        an explanation.
      U3L2 Using Simple Commands_instruction: |
        Draw a square above and to the left
        of the turtle's starting position. [Click to see full instructions]
      U3L2_Turtle3by3Grid_instruction: |
        Draw a 3x3 grid above and to the right of
        the turtle. Try to do so with the fewest number of commands possible. NOTE:
        This is a very challenging problem.  You may need to play with it for a while
        and tweak it.  You might also consider using pencil and paper to sketch your
        ideas.
      U3L2_TurtleSquare_right_instruction: |
        Draw a square ABOVE and to the RIGHT
        of the starting location.
      XML Scratchpad_instruction: Using this test level to grab xml for unit tests
