{
  "script": {
    "name": "csa2-pilot-facilitator",
    "wrapup_video_id": null,
    "login_required": false,
    "properties": {
      "curriculum_umbrella": "CSA",
      "is_migrated": true,
      "hideable_lessons": true,
      "weekly_instructional_minutes": 225,
      "show_calendar": true,
      "include_student_lesson_plans": true,
      "has_verified_resources": true
    },
    "new_name": null,
    "family_name": null,
    "serialized_at": "2021-08-11 21:49:24 UTC",
    "published_state": "in_development",
    "seeding_key": {
      "script.name": "csa2-pilot-facilitator"
    }
  },
  "lesson_groups": [
    {
      "key": "lesson group",
      "user_facing": true,
      "position": 1,
      "properties": {
        "display_name": "Content"
      },
      "seeding_key": {
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "lessonGroup-2",
      "user_facing": true,
      "position": 2,
      "properties": {
        "display_name": "Show What You Know"
      },
      "seeding_key": {
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "lessonGroup-3",
      "user_facing": true,
      "position": 3,
      "properties": {
        "display_name": "Pilot Survey"
      },
      "seeding_key": {
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa2-pilot-facilitator"
      }
    }
  ],
  "lessons": [
    {
      "key": "Defining Attributes",
      "name": "Defining Attributes",
      "absolute_position": 1,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 1,
      "properties": {
        "overview": "In this unplugged lesson, students create objects and represent relevant attributes using instance variables. Students learn the difference between `public` and `private` and the purpose of encapsulation to hide the internal implementation of an object.",
        "preparation": "* Print copies of Defining Attributes - Classes Foldables for each student. These foldables should be printed two-sided, flip on short-edge.\n* Print copies of Defining Attributes - Main Method. Cut in half so each student receives a half sheet.\n* Print copies of the Defining Attributes handout for each student\n* Print and cut out a class set of Quiz, Quiz, Trade cards\n* Prepare 20-25 sticky notes per student\n* Designate an area in the classroom (on the board or a wall) for students to place their sticky notes during the warm up activity\n",
        "student_overview": "Through our experiences in The Neighborhood, we know that classes and objects are key components of the Java programming language. But just how exactly do classes create objects? In this lesson, you explore how an object is created and learn about a process called data encapsulation. \n"
      },
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Using Variables",
      "name": "Using Variables",
      "absolute_position": 2,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 2,
      "properties": {
        "overview": "In this lesson, students investigate the functionality of variables and differentiate between primitive and reference variables. Students use the `Scanner` class to obtain input from the user and define variables to store values provided by the user. These values are used to construct `Painter` objects in The Neighborhood.",
        "preparation": "* Print copies of the Variables Manipulatives (one set per student)\n* Gather scissors (if not pre-cutting the manipulatives), 3 paper clips, 3 sticky notes, and some scrap paper for each student\n* (Optional) Cut out the Variables Manipulatives and place the cutouts, paper clips, sticky notes, and scrap paper in baggies",
        "student_overview": "Variables provide a way for software engineers to store information. The type of information we need to store determines what kind of variable we need to use, how it stores data, and how we can use it. In this lesson, you use variables to store information and use these variables to create `Painter` objects and store information input by a user."
      },
      "seeding_key": {
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Writing Constructors",
      "name": "Writing Constructors",
      "absolute_position": 3,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 3,
      "properties": {
        "overview": "Students are introduced to the Project Mercury Pastries food truck and the owner's need for a program to input and store dessert items. As software engineers, students utilize object-oriented design strategies to identify necessary attributes and appropriate data types for a `Dessert` class. Students write a constructor and use a `Scanner` object to obtain values for the instance variables to initialize a `Dessert` object.",
        "preparation": "* Print copies of the Writing Constructors Guided Notes (one for each student) (optional)",
        "student_overview": "The Project Mercury Pastries food truck needs your help! The owner wants to sell desserts in The Neighborhood but needs to be able to input and store their desserts in a program. You have been asked to use your software engineering skills to create a program that can create dessert objects so the owner can keep track of their inventory. You start by creating a `Dessert` class so the owner can enter the flavor, available quantity, and price of each dessert they sell."
      },
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Adding Multiple Constructors",
      "name": "Adding Multiple Constructors",
      "absolute_position": 4,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 4,
      "properties": {
        "overview": "Students continue to work on the Project Mercury Pastries food truck program. Students write overloaded constructors for the `Dessert` class to provide multiple ways to instantiate `Dessert` objects. Students determine when it is appropriate to establish default values for one or more instance variables and use no-argument constructors. ",
        "preparation": "* Print copies of the Construct an Object Cards (one set of cards for each pair of students)\n* Cut out the pieces of the object for each group of students (optional)",
        "student_overview": "The Project Mercury Pastries food truck has grown in popularity! To help the owner fill orders, you improve the `Dessert` class to create `Dessert` objects more efficiently. To solve this problem, you implement overloaded constructors to simplify your code and add flexibility for creating `Dessert` objects. To fill standard orders, you create a default constructor to use default values for `Dessert`s."
      },
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Manipulating Variables and Object Data",
      "name": "Manipulating Variables and Object Data",
      "absolute_position": 5,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 5,
      "properties": {
        "overview": "In this lesson, students write and evaluate expressions using variables and object data. Students use arithmetic operators (+, -, *, /, %) and compound assignment (+=, -=, *=, /=, %=) operators to perform calculations involving variables and object data.",
        "preparation": "* Print copies of the Vocabulary Crossword warmup (one per student)\n* Print copies of the Exploring Expressions handouts (one version per pair of students)\n* Gather sticky notes (one per student)",
        "student_overview": "You explore the rules that a computer uses to determine the resulting value and type of an expression, similar to the ones you see in math class. You create expressions to get the computer to do the math for you."
      },
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Minimizing Errors in Initialization",
      "name": "Minimizing Errors in Initialization",
      "absolute_position": 6,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 6,
      "properties": {
        "overview": "In this lesson, students implement conditionals and local variables to make decisions about object initialization and verify values passed to the constructor. Students explore the scope of local variables and parameters within a constructor and use the keyword `this` to refer to the current object. These concepts are used to add another constructor to the `Dessert` class.",
        "preparation": "* Gather colored pencils or markers so that each student has access to red, green, and blue colors (optional)\n* Print copies of the Diagramming Scope Activity Guide (one copy for each student)\n* Gather several sticky notes",
        "student_overview": "How can you make sure that the values given to a `Dessert` are correct? Remembering what you learned about edge cases, you add code to check for logic errors in the constructor. In this lesson, you explore where different types of variables are accessible and use these concepts to add another constructor to the `Dessert` class."
      },
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Writing Constructors for Hierarchies",
      "name": "Writing Constructors for Hierarchies",
      "absolute_position": 7,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 7,
      "properties": {
        "overview": "In this lesson, students write constructors for superclasses and subclasses. Students use the `super` keyword to call the superclass constructor and pass any necessary parameters to the superclass constructor to initialize instance variables. The lesson introduces the D.R.Y. (Don’t Repeat Yourself) software development principle to highlight the benefits of using inheritance in object-oriented programming design.",
        "preparation": "* Print copies of the Class Hierarchy Cards (one set of cards for each pair of students)\n* (Optional) Cut out the Class Hierarchy Cards for each group of students",
        "student_overview": "The owner of the Project Mercury food truck is expanding the menu to include different desserts. In this lesson, you use software development techniques to create classes and constructors for `Dessert` subclasses efficiently. To initialize inherited private instance variables, you use the `super` keyword to call the superclass constructor.  "
      },
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Accessing Object Data",
      "name": "Accessing Object Data",
      "absolute_position": 8,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 8,
      "properties": {
        "overview": "Students discover the need for accessor methods to obtain the values stored in the instance variables of a class. Students identify the components of a method signature and explore how methods return values to use in programs. As students write accessor methods for the `Dessert` class and its subclasses, students work with printing these values and using object data within expressions.",
        "preparation": "* Gather at least 3 sticky notes and 1 index card or piece of scrap paper for each student",
        "student_overview": "We have created private instance variables to represent attributes of `Dessert` objects, which means we cannot access these values from outside the class. But what if we needed to use these values in our programs? In this lesson, you explore methods that return values to write accessor methods for your `Dessert` class and its subclasses. You use these values to print out information about `Dessert` objects and within expressions to solve problems."
      },
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Modifying Object Data",
      "name": "Modifying Object Data",
      "absolute_position": 9,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 9,
      "properties": {
        "overview": "Students discover the need for mutator methods to change the values stored in the instance variables of a class. As students write mutator methods for the `Dessert` class and its subclasses, they learn what `void` means, recall edge cases, and practice calling mutator and accessor methods. Students participate in a code review to give and receive feedback to improve their programs.",
        "preparation": "* Gather at least 2 sticky notes for each student",
        "student_overview": "We have created accessor methods to obtain the value of instance variables of `Dessert` objects. What if we needed to change these values in our programs? In this lesson, you explore `void` methods to write mutator methods for your `Dessert` class and its subclasses. You use these methods along with accessor methods to solve problems. You strengthen your software development skills and processes through code reviews to give and use feedback to improve your program."
      },
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Displaying Object Information",
      "name": "Displaying Object Information",
      "absolute_position": 10,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 10,
      "properties": {
        "overview": "In this lesson, students trace `System.out.print()` to explore the results of printing an `Object`. Students override a superclass method by writing `toString()` methods for `Dessert` and `FoodTruck`. Students concatenate instance variables and strings while also using escape sequences to format output.",
        "preparation": "* Prepare sets of Card Sort cards (one set per group of 2-3 students)\n* Gather 20-25 sticky notes and scissors for each group of students\n* Print copies of the Unit 2 Guide (one for each student)",
        "student_overview": "Today we look ‘under the hood’ at some of the built-in classes we use in Java. You investigate `System.out.print()`, the `Object` class, and learn about the `toString()` method. You practice using the DRY principle to refactor your code in `Dessert` and `FoodTruck`. "
      },
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "The Neighborhood Store Management Project - Day 1",
      "name": "The Neighborhood Store Management Project - Day 1",
      "absolute_position": 11,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 11,
      "properties": {
        "overview": "For this project, students work with a partner to create a management program for a business in The Neighborhood. Students begin by planning the superclass and its subclasses using a Unified Modeling Language (UML) diagram and creating the first draft of their superclass.",
        "preparation": "* Review the project setup, requirements, and rubric\n* Print copies of the Neighborhood Store Management Project Planning Guide",
        "student_overview": "For this project, you work with a partner to create a management program for a business in The Neighborhood. You begin by planning the superclass and its subclasses using a Unified Modeling Language (UML) diagram and creating the first draft of your superclass."
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "The Neighborhood Store Management Project - Day 2",
      "name": "The Neighborhood Store Management Project - Day 2",
      "absolute_position": 12,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 12,
      "properties": {
        "overview": "In the previous lesson, students planned their superclass and subclasses and began writing their superclass. Students begin this lesson by individually writing a subclass that extends their superclass. They participate in a code review and self-assess against the project rubric to give and use feedback as they develop their program.",
        "preparation": "* Ensure students are in the appropriate groups for code review. Partners should be in the same group so they can review in pairs.",
        "student_overview": "You continue working through your Neighborhood Store Management Project by writing subclasses that extend your superclass. You complete a code review and review your project against the rubric to gain feedback to continue developing your program."
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "The Neighborhood Store Management Project - Day 3",
      "name": "The Neighborhood Store Management Project - Day 3",
      "absolute_position": 13,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 13,
      "properties": {
        "overview": "In the previous lesson, students created a prioritized list of work to be completed. Students consider this list as they make revisions to their super and subclasses and then complete their main method. Finally, they share their final projects with peers to celebrate their successes.",
        "preparation": "* (Optional) Print copies of the Neighborhood Store Management Project Peer Interview Cards (one set for each project group)",
        "student_overview": "You finalize your super and subclass code using the prioritized list you created yesterday. You write your `main` method to interact with your classes, then you share your final projects with your peers and celebrate your success!"
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "FRQ Day",
      "name": "FRQ Day",
      "absolute_position": 14,
      "lockable": false,
      "has_lesson_plan": true,
      "relative_position": 14,
      "properties": {
        "overview": "Students complete a Free Response Question (FRQ) in this lesson. They annotate a College Board FRQ as a class, then write code to answer an FRQ.\n\nThe goals of this lesson are:\n* Practice reading a College Board FRQ\n* Practice handwriting an FRQ\n* Serve as a summative assessment of the content from Unit 2\n\nWhile the format of this FRQ is not the same as an FRQ on the AP exam, it helps students develop strategies for approaching these questions. ",
        "preparation": "* Print out and post the Combo Class FRQ Print Out \n* Print copies of FRQ Writing (one per student)\n* Print copies of College Board FRQ (one per student)\n* Print copies of FRQ Graphic Organizer (one per student)\n* Print copies of the FRQ Scoring Guide (one per pair of students)\n* Gather 1 index card per student\n* (Optional) Gather a yellow, blue, orange, and pink colored pencil or marker for each student",
        "student_overview": "Today you complete a Free Response Question (FRQ). You do this by first looking and annotating an FRQ with peers, then handwriting code to solve a problem, following up with scoring your solution with a partner. "
      },
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Assessment Day",
      "name": "Assessment Day",
      "absolute_position": 15,
      "lockable": true,
      "has_lesson_plan": true,
      "relative_position": 15,
      "properties": {
        "assessment": true,
        "overview": "In this unit, students developed an understanding of data encapsulation and object-oriented design decisions to build a program to meet the needs of the Project Mercury Pastries food truck. Students created objects with appropriate instance variables based on program needs while exploring data types, variables, and expressions to work with object data. Students also implemented accessor, mutator, and `toString` methods to retrieve, modify, and output object data. Throughout the unit, students used the `Scanner` class to obtain user input to expand the interactivity of their programs. Now, students evaluate achievement of the unit learning objectives and skills on a multiple-choice assessment.",
        "preparation": "* Preview the assessment questions\n* Unlock the assessment questions",
        "student_overview": "In this unit, you created objects and defined instance variables to represent attributes. You explored creating and using constructors to establish values for these attributes and how to work with the data stored in objects. You implemented accessor and mutator methods to access and modify the values stored in the instance variables and wrote `toString` methods to output information about the state of the object. You used the `Scanner` class to obtain user input to use as program data to create and work with your objects. You learned about using data types, operators, and expressions and implementing data encapsulation and object-oriented design. Now, you evaluate your achievement of the unit learning objectives and skills on a multiple-choice assessment."
      },
      "seeding_key": {
        "lesson.key": "Assessment Day",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "Unit 2 Pilot Survey",
      "name": "Unit 2 Pilot Survey",
      "absolute_position": 16,
      "lockable": false,
      "has_lesson_plan": false,
      "relative_position": 16,
      "properties": {
      },
      "seeding_key": {
        "lesson.key": "Unit 2 Pilot Survey",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa2-pilot-facilitator"
      }
    }
  ],
  "lesson_activities": [
    {
      "key": "d0ef9b42-630d-4b26-94a6-a67376f51c13",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "d0ef9b42-630d-4b26-94a6-a67376f51c13",
        "lesson.key": "Defining Attributes",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "fc73de9b-acd5-4bae-a0b5-a10b336ab301",
      "position": 2,
      "properties": {
        "duration": 30,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "fc73de9b-acd5-4bae-a0b5-a10b336ab301",
        "lesson.key": "Defining Attributes",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "7c3e08f3-6655-49c1-b258-da02026fb14c",
      "position": 3,
      "properties": {
        "duration": 10,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "7c3e08f3-6655-49c1-b258-da02026fb14c",
        "lesson.key": "Defining Attributes",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "3c2767da-1c81-411f-ab6d-8e4765da772e",
      "position": 1,
      "properties": {
        "duration": 3,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "3c2767da-1c81-411f-ab6d-8e4765da772e",
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "15fab487-32bf-48d2-93fa-97bc645e4f54",
      "position": 2,
      "properties": {
        "duration": 37,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54",
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "90c06df6-3830-4976-9ca0-b7048daaaa44",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "90c06df6-3830-4976-9ca0-b7048daaaa44",
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "95cd0a83-44cf-4fca-ab9a-7ce678af0a59",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "95cd0a83-44cf-4fca-ab9a-7ce678af0a59",
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb",
      "position": 2,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb",
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "0b631c68-3a1e-4e8a-b231-24c62ce6102c",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "0b631c68-3a1e-4e8a-b231-24c62ce6102c",
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "49ad8de5-41f8-4545-9452-74b780c1e300",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "49ad8de5-41f8-4545-9452-74b780c1e300",
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7",
      "position": 2,
      "properties": {
        "duration": 30,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7",
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "895edf96-72a8-4a39-b732-b8c7b7a2daaf",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "895edf96-72a8-4a39-b732-b8c7b7a2daaf",
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "16beefa5-c11e-4da4-9ac5-45f6752fd32d",
      "position": 1,
      "properties": {
        "duration": 10,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "16beefa5-c11e-4da4-9ac5-45f6752fd32d",
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "5637b717-2c0d-48b1-bfb7-3f858b10dc67",
      "position": 2,
      "properties": {
        "duration": 30,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "5637b717-2c0d-48b1-bfb7-3f858b10dc67",
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "1ba52831-069b-43d9-a982-a9005cd2f4af",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "1ba52831-069b-43d9-a982-a9005cd2f4af",
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "be2d857d-710b-4d75-8017-c71332c0cf8c",
      "position": 1,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "be2d857d-710b-4d75-8017-c71332c0cf8c",
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "91f9a182-4bb0-494f-8b0c-dc004af424a5",
      "position": 2,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5",
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "df05cef0-ea2d-4e47-88f9-b35bcf0b11bd",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "df05cef0-ea2d-4e47-88f9-b35bcf0b11bd",
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "4518bcab-e182-4769-ab0f-32858a8df65c",
      "position": 1,
      "properties": {
        "duration": 4,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "4518bcab-e182-4769-ab0f-32858a8df65c",
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "40dde387-4b41-43c2-8482-4d476667be97",
      "position": 2,
      "properties": {
        "duration": 36,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97",
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "ed41a178-155e-4df0-80b5-b9964a1a87da",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "ed41a178-155e-4df0-80b5-b9964a1a87da",
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "ab401bfc-f4ca-4ac9-b633-ae0f02f7528d",
      "position": 1,
      "properties": {
        "duration": 3,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "ab401bfc-f4ca-4ac9-b633-ae0f02f7528d",
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "5390b85d-6406-4137-8fc0-da2e685ab89c",
      "position": 2,
      "properties": {
        "duration": 37,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c",
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "61f04859-4732-48ec-a390-5bc0b0b05ada",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "61f04859-4732-48ec-a390-5bc0b0b05ada",
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "c015f4e1-9c85-4e77-9bd9-623543233163",
      "position": 1,
      "properties": {
        "duration": 3,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "c015f4e1-9c85-4e77-9bd9-623543233163",
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63",
      "position": 2,
      "properties": {
        "duration": 39,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63",
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "37505638-a5ad-42a1-a4bb-ec868ecf3b2d",
      "position": 3,
      "properties": {
        "duration": 3,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "37505638-a5ad-42a1-a4bb-ec868ecf3b2d",
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "877d900a-af87-4667-ac37-790e0f7153d0",
      "position": 1,
      "properties": {
        "duration": 10,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "877d900a-af87-4667-ac37-790e0f7153d0",
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2",
      "position": 2,
      "properties": {
        "duration": 30,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2",
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "48cf4bd1-3a21-43c4-aecb-3c569dbf8a77",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "48cf4bd1-3a21-43c4-aecb-3c569dbf8a77",
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "9b5c39ee-d887-4f4e-b6b6-7a35616b8283",
      "position": 1,
      "properties": {
        "name": "Project Setup"
      },
      "seeding_key": {
        "lesson_activity.key": "9b5c39ee-d887-4f4e-b6b6-7a35616b8283",
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "2834442e-d56f-4b83-9a0a-9c88ddfe0de9",
      "position": 2,
      "properties": {
        "duration": 5,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "2834442e-d56f-4b83-9a0a-9c88ddfe0de9",
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "43fa29bc-b4dc-4c30-b604-038e43ad959c",
      "position": 3,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "43fa29bc-b4dc-4c30-b604-038e43ad959c",
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "d80a5e32-b009-44c3-b958-ecbcbb0e8310",
      "position": 4,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "d80a5e32-b009-44c3-b958-ecbcbb0e8310",
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "e14a1eab-cef2-4e19-a935-840a225586ec",
      "position": 1,
      "properties": {
        "duration": 40,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "e14a1eab-cef2-4e19-a935-840a225586ec",
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "0185badd-4715-4375-ad75-25c060640f62",
      "position": 2,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "0185badd-4715-4375-ad75-25c060640f62",
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "b4b1d9d2-5a2c-408a-ba51-3806155f2d35",
      "position": 1,
      "properties": {
        "duration": 35,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "b4b1d9d2-5a2c-408a-ba51-3806155f2d35",
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "a0ee1d64-8b45-4de5-bc54-183af30cb430",
      "position": 2,
      "properties": {
        "duration": 10,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "a0ee1d64-8b45-4de5-bc54-183af30cb430",
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "1d0cf061-ec66-4a9c-8959-893e616fe298",
      "position": 1,
      "properties": {
        "duration": 10,
        "name": "Warm Up"
      },
      "seeding_key": {
        "lesson_activity.key": "1d0cf061-ec66-4a9c-8959-893e616fe298",
        "lesson.key": "FRQ Day",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "f7197dfd-8c89-47a9-b1cf-19f50ec74eae",
      "position": 2,
      "properties": {
        "duration": 30,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "f7197dfd-8c89-47a9-b1cf-19f50ec74eae",
        "lesson.key": "FRQ Day",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "aef0e0fa-9f6d-4706-90e5-c3b4c0eb8c88",
      "position": 3,
      "properties": {
        "duration": 5,
        "name": "Wrap Up"
      },
      "seeding_key": {
        "lesson_activity.key": "aef0e0fa-9f6d-4706-90e5-c3b4c0eb8c88",
        "lesson.key": "FRQ Day",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "9a24f269-9f2a-4363-bb9d-968056a80f6c",
      "position": 1,
      "properties": {
        "duration": 45,
        "name": "Activity"
      },
      "seeding_key": {
        "lesson_activity.key": "9a24f269-9f2a-4363-bb9d-968056a80f6c",
        "lesson.key": "Assessment Day",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "871d1fc1-0ef7-4099-9c9f-20783e33ad27",
      "position": 2,
      "properties": {
        "name": "Wrap Up (Optional)"
      },
      "seeding_key": {
        "lesson_activity.key": "871d1fc1-0ef7-4099-9c9f-20783e33ad27",
        "lesson.key": "Assessment Day",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "key": "0227e719-062a-4973-9e6e-fef659365c7d",
      "position": 1,
      "properties": {
      },
      "seeding_key": {
        "lesson_activity.key": "0227e719-062a-4973-9e6e-fef659365c7d",
        "lesson.key": "Unit 2 Pilot Survey",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa2-pilot-facilitator"
      }
    }
  ],
  "activity_sections": [
    {
      "key": "cff238a7-e5df-48a3-b47c-ec0ffb1cc88d",
      "position": 1,
      "properties": {
        "description": "**Do This:** Have students respond to each of the following prompts on an individual sticky note.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> *What do we know about classes and objects?*\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> *What do we know about classes and objects?*\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i>  *What do we wonder about classes and objects?*\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *With a partner, share one ‘know’ and one ‘wonder.’*\n\n**Discussion Goal:** Students recount their understanding of classes, objects, and their relationships from Unit 1 and share questions that may have come up while working with classes and objects.",
        "name": "What We Know, What We Wonder"
      },
      "seeding_key": {
        "activity_section.key": "cff238a7-e5df-48a3-b47c-ec0ffb1cc88d",
        "lesson_activity.key": "d0ef9b42-630d-4b26-94a6-a67376f51c13"
      }
    },
    {
      "key": "b8cfd435-1e1e-40f0-a388-104b5f3b1eeb",
      "position": 2,
      "properties": {
        "description": "During Unit 1, we explored the concept of classes and objects within The Neighborhood. As we move into Unit 2, we will look into classes and objects in more detail to understand how they form the basis for the Java programming language. ",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "b8cfd435-1e1e-40f0-a388-104b5f3b1eeb",
        "lesson_activity.key": "d0ef9b42-630d-4b26-94a6-a67376f51c13"
      }
    },
    {
      "key": "da40de55-a58c-4395-b2ff-275f0d6d0367",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a copy of the Defining Attributes - Classes Foldables, a Defining Attributes - Main Method, and approximately 20 sticky notes. \n\n**Do This:** Share with students that they will be working with the `Shape` class foldable first. Show the following slides:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Instruct students to fold their `Shape` class foldable in half so that side A is facing them.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the animated slide to review the concepts on the front of the foldable. Draw attention to the fact that the class header and the constructor are both `public`, meaning that they are accessible outside of the class.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Ask students to open the foldable and explore the inside of the foldable. What do they notice?\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the animated slide to identify that the `Shape` class has three instance variables.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the animated slide to explain the has-a relationship and define attributes.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the animated slide to demonstrate that all three instance variables are `private`, meaning that they are not accessible outside of the `Shape` class.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Define data encapsulation.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** How do classes use data encapsulation?\n\n**Discussion Goal:** Students identify that designating instance variables of a class as private is an example of data encapsulation.",
        "duration": "12",
        "name": "The Shape Class"
      },
      "seeding_key": {
        "activity_section.key": "da40de55-a58c-4395-b2ff-275f0d6d0367",
        "lesson_activity.key": "fc73de9b-acd5-4bae-a0b5-a10b336ab301"
      }
    },
    {
      "key": "afddb478-6cd2-4220-bea3-d988afb3555c",
      "position": 2,
      "properties": {
        "description": "Now let’s use the foldable to visualize how Java uses a constructor to create an object of a given class through setting instance variables.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "afddb478-6cd2-4220-bea3-d988afb3555c",
        "lesson_activity.key": "fc73de9b-acd5-4bae-a0b5-a10b336ab301"
      }
    },
    {
      "key": "fc81ac58-1c64-4f3b-93cd-fa786fb305fd",
      "position": 3,
      "properties": {
        "description": "**Do This:** Click through the animations on each slide to create a `Shape` object called `mySquare`. Students should be encouraged to follow along on their foldable using the provided sticky notes.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Calling the constructor to create a new `Shape` object called `mySquare`.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Assigning values to each instance variable inside of `Shape`.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Model the output of the object through a sketch of `mySquare`.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "You may choose to demonstrate how to create the `mySquare` object on the `Shape` class foldable in front of the class while working through the slides. The slides demonstrate what is happening in a larger visual, but students may benefit from seeing a physical example. After walking through the animated slides, all students should have a square with a dotted outline drawn on their output sticky note.\n\n"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "fc81ac58-1c64-4f3b-93cd-fa786fb305fd",
        "lesson_activity.key": "fc73de9b-acd5-4bae-a0b5-a10b336ab301"
      }
    },
    {
      "key": "1f434cd1-ee9b-42c5-9503-3fc145ef5a7b",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Instruct students to remove all sticky notes from their `Shape` class foldable.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to model creating a new `Shape` object called `myTriangle`. Instruct students to follow the same steps individually to create a `myTriangle` object using their `Shape` class foldable. Have students work with a partner if they need additional support.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Though students have a partner, they should be working on individual foldables to model how `myTriangle` is created. As students work, monitor their progress to ensure they are hitting the following checkpoints:\n* They write a constructor on their sticky note that creates a new `Shape` object called `myTriangle` that takes three arguments: 3 for sides, \"triangle\" for type, and an outline of their choice.\n* They assign the appropriate values for the instance variables inside the foldable.\n* They return to the front of their foldable and add their implementation of `myTriangle` to reflect their given attributes on top of their constructor sticky note."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "1f434cd1-ee9b-42c5-9503-3fc145ef5a7b",
        "lesson_activity.key": "fc73de9b-acd5-4bae-a0b5-a10b336ab301"
      }
    },
    {
      "key": "622cee91-7f7b-4e45-b4c9-87df2e9acd66",
      "position": 5,
      "properties": {
        "description": "Congratulations! You’ve all successfully implemented a new object of the `Shape` class. Now that we’ve walked through this process using the `Shape class`, you’re going to define your own class - `Dessert`.\n",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "622cee91-7f7b-4e45-b4c9-87df2e9acd66",
        "lesson_activity.key": "fc73de9b-acd5-4bae-a0b5-a10b336ab301"
      }
    },
    {
      "key": "c279c5ca-620d-450b-8762-ca20ba59df8a",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Instruct students to fold their other foldable, the `Dessert` class foldable, similarly to how they created their `Shape` class foldable.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> With their partner, students choose three or four attributes that all desserts have in common. Instruct them to add these attributes to the `Dessert` constructor on the front of the foldable.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Students open the foldable and add a `private` instance variable for each attribute. Remind students that each instance variable should be `private`, and that they should choose a different variable name than is used in the constructor.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> After setting up their foldable, instruct each student to write a call to the constructor on a sticky note. They then pass their constructor call to their partner, who will use their foldable and Main Method to create the object.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *Did your partner create the object you intended?*\n* *If they were, why were they successful?*\n* *If your partner was unable to successfully create the object, why not?*\n\n**Discussion Goal:** Students share how they used the foldable to create their objects.",
        "duration": "10",
        "name": "Let's Build Our Dessert Menu",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students will reuse their foldable in Lessons 8 and 9. Instruct students to hang on to their foldable or you can collect for later use.\n"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "c279c5ca-620d-450b-8762-ca20ba59df8a",
        "lesson_activity.key": "fc73de9b-acd5-4bae-a0b5-a10b336ab301"
      }
    },
    {
      "key": "9ce84b21-c560-49a8-a6d7-7ce1ccb3acb0",
      "position": 7,
      "properties": {
        "duration": "8",
        "name": "Challenge: Create Your Own Class",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Because this lesson introduces many new concepts, it is critical to leave the full ten minutes for the wrap up. If you find you are running short on time, use this challenge as extra practice at a later time.\n"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "9ce84b21-c560-49a8-a6d7-7ce1ccb3acb0",
        "lesson_activity.key": "fc73de9b-acd5-4bae-a0b5-a10b336ab301"
      }
    },
    {
      "key": "ccbd84bc-0e46-4ad2-8300-b692403bf2a1",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Distribute the Defining Attributes Activity Guide to each student. Students should work in pairs to create a class and an object of that class. If time allows, allow students to share their classes and objects with another group.\n"
      },
      "seeding_key": {
        "activity_section.key": "ccbd84bc-0e46-4ad2-8300-b692403bf2a1",
        "lesson_activity.key": "fc73de9b-acd5-4bae-a0b5-a10b336ab301"
      }
    },
    {
      "key": "10d77458-e0ef-4389-af8b-04f747512ee3",
      "position": 1,
      "properties": {
        "description": "**Distribute:** Give each student one Quiz, Quiz, Trade card. Make sure students keep the answer side hidden.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Explain the instructions for Quiz, Quiz, Trade. Students should find a partner, complete their Quiz, Quiz, Trade, and then raise their hand to find a new partner.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Instance Variables and Attributes video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *What concepts from today’s lesson clicked?*\n* *What ideas need more clarification?*\n\n**Discussion Goal:** Students share their understanding of the lesson's concepts and any misconceptions or points of confusion they may still have.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary",
        "name": "Quiz, Quiz, Trade"
      },
      "seeding_key": {
        "activity_section.key": "10d77458-e0ef-4389-af8b-04f747512ee3",
        "lesson_activity.key": "7c3e08f3-6655-49c1-b258-da02026fb14c"
      }
    },
    {
      "key": "08325c57-db4e-4cbc-be1e-e25c36d86084",
      "position": 2,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check For Understanding",
        "progression_name": "Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "08325c57-db4e-4cbc-be1e-e25c36d86084",
        "lesson_activity.key": "7c3e08f3-6655-49c1-b258-da02026fb14c"
      }
    },
    {
      "key": "5111c9d5-719c-46ef-9d88-e2fa6378ff78",
      "position": 1,
      "properties": {
        "description": "In the previous lesson, we learned that we could represent the attributes of an object by defining instance variables in its class. The relationship between an object and its instance variables is referred to as a \"has-a\" relationship.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "5111c9d5-719c-46ef-9d88-e2fa6378ff78",
        "lesson_activity.key": "3c2767da-1c81-411f-ab6d-8e4765da772e"
      }
    },
    {
      "key": "f37bd657-cee3-4537-b536-e06bbfb83ae4",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *For example, one attribute for a cake could be its flavor. Every cake \"has-a\" flavor. What are some attributes of a cake?*\n\n**Discussion Goal:** Students share characteristics of a cake that can be used as attributes to fill in the blanks.\n\n**Do This:** Click through the animated slide to show three examples."
      },
      "seeding_key": {
        "activity_section.key": "f37bd657-cee3-4537-b536-e06bbfb83ae4",
        "lesson_activity.key": "3c2767da-1c81-411f-ab6d-8e4765da772e"
      }
    },
    {
      "key": "52a60b9e-16cb-483b-ad60-c69e50e39108",
      "position": 1,
      "properties": {
        "description": "Variables are containers that can store a single piece of data.",
        "duration": "10",
        "name": "Introduction to Variables",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "52a60b9e-16cb-483b-ad60-c69e50e39108",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "83b16a05-5e13-44e9-8fb2-248bc27c34fe",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to introduce examples of primitive and reference types.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the What is a Variable video."
      },
      "seeding_key": {
        "activity_section.key": "83b16a05-5e13-44e9-8fb2-248bc27c34fe",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "1cf76154-dbe5-484d-bdf8-a49f58e0f0bf",
      "position": 3,
      "properties": {
        "description": "Let's look at primitive variables first. Primitive variables can hold literal values like whole numbers, decimal numbers, and `boolean` values.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "1cf76154-dbe5-484d-bdf8-a49f58e0f0bf",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "03a19f0e-89d0-4520-93eb-724259f389cd",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a set of Variables Manipulatives, scissors, paper clips, sticky notes, and scrap paper.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Have students cut out the manipulatives and fold the `double`, `int`, and `boolean` boxes into cups as directed."
      },
      "seeding_key": {
        "activity_section.key": "03a19f0e-89d0-4520-93eb-724259f389cd",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "b23ae4f1-b423-4940-98dd-826af36b0fef",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Variables are containers that allow us to hold something, like the cups you now have.\n\nWhen you order a drink at a restaurant, you typically say something like, \"I want a medium orange soda.\" Medium is the type of cup we want, and orange soda is the value we want in our cup.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "b23ae4f1-b423-4940-98dd-826af36b0fef",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "378bd864-827e-47e4-821a-5ad45809e0b9",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Discuss specifying a type for a value.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to demonstrate primitive variables.\n* The data type written on the outside of the cup specifies the types of values that the variable can store.\n* Demonstrate that the `double` cup can hold decimal and integer values, but the `int` cup can only hold integer values. Explain that the `boolean` cup can only contain either a `true` or `false` value.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students may wonder why a `double` can hold more than an `int`. While this is covered in more detail in Unit 4, explain to students that a `double` is a \"larger\" data type, as indicated by the size of the cup, so it can hold more data."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "378bd864-827e-47e4-821a-5ad45809e0b9",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "95e72ef6-b6a0-42e9-a699-75615438b755",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Ask students where lines should be drawn to match each value to its corresponding type. Click through the animated slide to reveal the answer for each value."
      },
      "seeding_key": {
        "activity_section.key": "95e72ef6-b6a0-42e9-a699-75615438b755",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "51ec21bf-888d-4e3d-8850-0e7bd25a096a",
      "position": 8,
      "properties": {
        "description": "Not only do we need to tell Java what kind of data we want to store in our variable, but we also need to give our cup a name so that we have a way to refer to it in our program. For example, when I said, \"I want a `double` variable with the value 1.99\", I also need to give a name for this value so that I can use it by saying something like, \"I want a `double` variable named `price` with the value 1.99\".",
        "duration": "10",
        "name": "Creating Variables",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "51ec21bf-888d-4e3d-8850-0e7bd25a096a",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "b8a65846-ff02-4b5c-b610-4c20b3038725",
      "position": 9,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Share that each student will be modeling how to create a variable using the resources in front of them. Then click through the animated slide to introduce the steps for creating a variable.\n* Have students write `cakePrice` on a sticky note and place it on a `double` cup. Explain that variables are declared by creating a name and stating the type.\n* Have students write a decimal value on a slip of paper and place it inside the `cakePrice` cup. Explain that variables can be assigned an initial value using the assignment operator `=`. Since `cakePrice` is a primitive variable, the literal value can be placed inside the container.\n* Explain that declaration and initialization can be written in one line of code.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Define the term literal."
      },
      "seeding_key": {
        "activity_section.key": "b8a65846-ff02-4b5c-b610-4c20b3038725",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "e68b55c5-5747-47f7-91f3-392ccbf3b82e",
      "position": 10,
      "properties": {
        "description": "Reference variables are similar to primitive variables, but instead of storing the data they contain a pointer or address for where the data is stored in memory. They are used when the data we’d like to store is not a simple `double`, `int`, or `boolean`. Let’s look at how this can be visualized with our model.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "e68b55c5-5747-47f7-91f3-392ccbf3b82e",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "c042631f-8d24-49c7-84ad-519be05f1b4f",
      "position": 11,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Have students connect three paper clips to form a chain. Click through the animated slide to introduce reference variables:\n* Explain that reference variables do not contain an object but instead contain a pointer to the location of an object in memory.\n* Have students write a name for a `Painter` object on a sticky note and put it on their reference variable. Explain that since the reference variable is not currently pointing to an object, its value is `null`.\n* When a `Painter` object is created, it is stored in memory and accessed using a reference variable.\n* Have students use their paper clip chain to connect the `Painter` object to the variable. Now the reference variable contains a pointer to the location of the object in memory.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> `String`s are also objects, which means they are accessed using reference variables. `String`s can be created using string literals or by calling the `String` class constructor."
      },
      "seeding_key": {
        "activity_section.key": "c042631f-8d24-49c7-84ad-519be05f1b4f",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "6383cab3-12ee-412a-bf97-e5ee8d0c459b",
      "position": 12,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to work with a partner on Level 1 on Code Studio. Students declare variables and use them to create a new `Painter` object.",
        "progression_name": "Creating Variables"
      },
      "seeding_key": {
        "activity_section.key": "6383cab3-12ee-412a-bf97-e5ee8d0c459b",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "64db6dd6-000e-42aa-81c5-e4cab0da3d43",
      "position": 13,
      "properties": {
        "description": "Variables hold an initial value, and that value can change later in our program. We can use a trace table to keep track of the values of the variables as they change in each step of our program.",
        "duration": "10",
        "name": "Updating Variables",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "64db6dd6-000e-42aa-81c5-e4cab0da3d43",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "3126bfda-07ab-4e0a-b099-d2241f50f947",
      "position": 14,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to demonstrate tracing an algorithm and tracking the value of variables using a trace table.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "As you move through the animation, have students explain what is happening on the line of code that is about to be executed. Ask students for the values to add to the new row of the trace table.\n\nWhile walking through the animation, make sure to point out:\n* Variables can be updated to store new values.\n* When updating values, one variable can get the value stored in a second variable (such as `totalPies = morePies;`).\n* If the second variable changes values later, the first does not change with it.\n\nTo solidify the idea that variables can only hold a single variable type, ask students: *What would happen if we try to update `totalPies = pieFlavor`?* Students should recognize that this would cause an error because `totalPies` can only contain an `int`."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "3126bfda-07ab-4e0a-b099-d2241f50f947",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "60b89d67-ad8e-4212-8f37-983734df4ecb",
      "position": 15,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Give students 2-3 minutes to create a trace table on scratch paper for the code segment with a partner. Review the trace table and final values stored in each variable as a class.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Display the previous slide for students who might need to see the example.When reviewing the trace table as a class, write out the trace table to work through the solution."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "60b89d67-ad8e-4212-8f37-983734df4ecb",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "ccdf6be8-7dac-4e3b-b4f1-d23c4439c033",
      "position": 16,
      "properties": {
        "description": "I mentioned earlier that variables can only store a single piece of data. This means that the container can only hold one value at a time. If I take a value out of the container and place it down on the table, it is lost in memory forever because I have no way to tell Java how to find that value again.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "ccdf6be8-7dac-4e3b-b4f1-d23c4439c033",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "74d49648-a35f-4b56-a064-e50313a1aabe",
      "position": 17,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Have students write `drinkPrice` on a sticky note and place it on a `double` cup and write a decimal value on a slip of paper and place it inside the `drinkPrice` cup.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *We placed the wrong values inside our `cakePrice` and `drinkPrice` containers, and we need to swap them. How could we solve this problem?*\n\n**Discussion Goal:** Students share potential solutions to swap the values, including taking the values out of both cups to swap them or copying the values down to store in temporary cups.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Reinforce to students that the value is lost if it is not stored in another container. Students might share ideas to take the values out of the containers and physically swap them but point out that once the values are removed from the container, they are lost."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "74d49648-a35f-4b56-a064-e50313a1aabe",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "fb92a067-4014-4d47-abd7-d8d004adc5c2",
      "position": 18,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to demonstrate one solution that results in losing one of the values and the solution that uses a temporary variable to store one of the values."
      },
      "seeding_key": {
        "activity_section.key": "fb92a067-4014-4d47-abd7-d8d004adc5c2",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "9ab4206b-5da5-4570-857d-b5620651d2c3",
      "position": 19,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete Levels 2 and 3 on Code Studio.",
        "progression_name": "Updating Variables"
      },
      "seeding_key": {
        "activity_section.key": "9ab4206b-5da5-4570-857d-b5620651d2c3",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "4d1029b0-104a-46d5-bb72-20204c96bf87",
      "position": 20,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the How to Accept User Input video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What are three takeaways you have from this video?*\n\n**Discussion Goal:** Students share concepts from the video, such as:\n* The `Scanner` class accepts input of type `int`, `double`, `boolean`, and `String` from a user.\n* The `Scanner` class contains methods to retrieve input for each data type.\n* `System.out.print()` displays messages and prompts the user to enter a response in the console.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animation to demonstrate the `System.out.print()` Call and Response for the students by saying the words in caps and clapping as indicated: **SYSTEM** (clap while saying **DOT**) **OUT** (clap while saying **DOT**) **PRINT** (clap while saying **DOT**). Have students repeat it as a class.",
        "duration": "7",
        "name": "Storing User Input"
      },
      "seeding_key": {
        "activity_section.key": "4d1029b0-104a-46d5-bb72-20204c96bf87",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "0b82a91b-2af0-40dd-b1a0-07a28aa5726d",
      "position": 21,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Levels 4 and 5 on Code Studio.",
        "progression_name": "Storing User Input"
      },
      "seeding_key": {
        "activity_section.key": "0b82a91b-2af0-40dd-b1a0-07a28aa5726d",
        "lesson_activity.key": "15fab487-32bf-48d2-93fa-97bc645e4f54"
      }
    },
    {
      "key": "7d8799f6-5968-4d9a-9113-ec03502e4df1",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Have students use their variables manipulatives to model the code segment.",
        "name": "Variables Recap",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Collect the Variables Manipulatives. These will be reused in Unit 3."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "7d8799f6-5968-4d9a-9113-ec03502e4df1",
        "lesson_activity.key": "90c06df6-3830-4976-9ca0-b7048daaaa44"
      }
    },
    {
      "key": "810b2b14-b0bf-456c-87fb-b7a5a589805a",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary"
      },
      "seeding_key": {
        "activity_section.key": "810b2b14-b0bf-456c-87fb-b7a5a589805a",
        "lesson_activity.key": "90c06df6-3830-4976-9ca0-b7048daaaa44"
      }
    },
    {
      "key": "fba7645c-e0c2-4652-b1df-3d34a3ece025",
      "position": 3,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding",
        "progression_name": "Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "fba7645c-e0c2-4652-b1df-3d34a3ece025",
        "lesson_activity.key": "90c06df6-3830-4976-9ca0-b7048daaaa44"
      }
    },
    {
      "key": "9db95e5a-2253-487d-8cc1-ad854bb0f3ac",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The Project Mercury Pastries food truck needs your help! The owner wants to sell desserts in The Neighborhood but needs a way to keep track of their inventory.\n\nYou have been asked to use your software engineering skills to create a program that can create dessert objects so the owner can keep track of their inventory.\n\nWe have a problem though! We can't make dessert objects because…\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> No class, \\_\\_\\_\\_\\_\\_\\_\\_\\_\\_ (no object)!\n\nExactly! To help the owner, we're going to need to use some of the things we have learned so far in a new way.",
        "name": "Revisiting the Painter",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "9db95e5a-2253-487d-8cc1-ad854bb0f3ac",
        "lesson_activity.key": "95cd0a83-44cf-4fca-ab9a-7ce678af0a59"
      }
    },
    {
      "key": "840f1a5b-e53d-4120-b7b2-c8824824b081",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What is the relationship between the instance variables and the constructor?*\n\n**Discussion Goal:** Students point out where they see the instance variables appear in the class and within the constructor. Students discuss why these appear in different places and make connections between the variables within the constructor's parentheses and the instance variables.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "The code segment shown is from the `Painter` class and includes the use of the `this` keyword, which has not been covered yet. Keep students focused on the instance variables and their references in the constructor.\n\nStudents may ask about the \". . .\" displayed in the code segment. Since the focus is on the instance variables and the constructor, any additional code is hidden from view on the slide. The dots are to acknowledge that the code segment provided could include additional items.\n\nYou may need to ask additional probing questions to guide students in making these connections, such as:\n* *Where are you seeing the instance variables appear in this code?*\n* *Why do you see them appear in those places?*\n* *What is the connection between what is in the parentheses of the constructor and those instance variables?*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "840f1a5b-e53d-4120-b7b2-c8824824b081",
        "lesson_activity.key": "95cd0a83-44cf-4fca-ab9a-7ce678af0a59"
      }
    },
    {
      "key": "c9c929e7-9d6a-4b08-9583-fed8e9da8a9c",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> When we created `Painter` objects, we called their constructors and gave information to tell Java how to create our `Painter`s.",
        "duration": "19",
        "name": "Writing the Dessert Class",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "c9c929e7-9d6a-4b08-9583-fed8e9da8a9c",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "75328c19-87b9-451f-a87c-f21a0a9fb05c",
      "position": 2,
      "properties": {
        "description": "**Distribute:** Give each student a copy of the Writing Constructors Guided Notes if using. Students should complete this as the components of the constructor and object initialization are discussed within the lesson.\n\n**Do This:** Talk through the components of the `Painter` class constructor:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> A constructor sets the initial state of the object by assigning values to the instance variables.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The constructor is `public` so that other classes access it. Otherwise, we would not be able to create `Painter` objects in our program.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The constructor name must be the same name as the class so Java knows where to find the information for creating the `Painter` object.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The list of parameters are the formal parameters for the constructor. These define the values that need to be passed to the constructor to create the `Painter` object. This entire line now gives us our constructor signature.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The values that are passed to the formal parameters can then be assigned to the instance variables so we can set the initial state of the object and have access to these values outside of the constructor.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The formal parameters are local variables that can only be used inside of the `Painter` constructor. They only exist inside the curly braces.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The first line now makes up the constructor signature, which includes the constructor's name and lists the attributes that can be specified when it is initialized."
      },
      "seeding_key": {
        "activity_section.key": "75328c19-87b9-451f-a87c-f21a0a9fb05c",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "5ce2b154-5947-4f9b-a33e-dfd373dc66f1",
      "position": 3,
      "properties": {
        "description": "The owner wants to keep track of the desserts that the food truck sells, so we need to design a `Dessert` class. As software engineers, we have to make some decisions first before we start writing any code.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "5ce2b154-5947-4f9b-a33e-dfd373dc66f1",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "ee66e194-8368-40f4-828e-951b1925904c",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What are some attributes that all types of desserts share?*\n\n**Discussion Goal:** Students share attributes relevant to desserts, such as type, flavor, or whether it has sprinkles.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Remind students to refer to the dessert objects they created in Lesson 1. Students can share the attributes they used to create their objects and expand on that to brainstorm additional attributes."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "ee66e194-8368-40f4-828e-951b1925904c",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "f741e642-f8bd-4f39-9b4c-90991402f0dc",
      "position": 5,
      "properties": {
        "description": "Desserts have a lot of different attributes! When we are deciding what attributes to use, we have to focus on the ones that make the most sense based on the needs of the user. We also want to make sure we are choosing attributes that are shared by all desserts. Many donuts and cookies have sprinkles, but we wouldn't find them on a pie!\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> In this case, our user is the food truck owner. They want to keep track of the flavor, quantity, and price for each dessert they have. So the `Dessert` class we will write will have a flavor, a quantity, and a price.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "f741e642-f8bd-4f39-9b4c-90991402f0dc",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "2ad7d924-3338-41e8-bc09-62be33ac3a9f",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete Levels 1 and 2 on Code Studio. Students add instance variables and a constructor to the `Dessert` class (but are not yet creating `Dessert` objects).",
        "progression_name": "Writing the Dessert Class"
      },
      "seeding_key": {
        "activity_section.key": "2ad7d924-3338-41e8-bc09-62be33ac3a9f",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "ca7e3b24-c17b-4f5e-bd6d-afa873f713d3",
      "position": 7,
      "properties": {
        "description": "Let's look at our `Dessert` class constructor to see how it has the same components as our `Painter` class constructor.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "ca7e3b24-c17b-4f5e-bd6d-afa873f713d3",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "1722e67a-9e14-47f5-a962-947a79eb7a5c",
      "position": 8,
      "properties": {
        "description": "**Do This:** Talk through the components of the `Dessert` class constructor:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The constructor for the `Dessert` class is `public` so other classes can access it, which will allow the creation of `Dessert` objects.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The constructor is named `Dessert` because that is the name of the class.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The formal parameters are `String newFlavor` to get the flavor of the dessert, `int newQty` to get the quantity of the desserts available, and `double newPrice` to get the price of the dessert. These are local variables for the `Dessert` constructor. This entire line is the constructor signature.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The values that are passed to the constructor are stored in the instance variables.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "When discussing the formal parameters of the `Dessert` class constructor, point out to students that the parameter names do not have to be exactly the same as the example. Remind students of appropriate naming conventions for variables to explain that different names for these parameters is acceptable as long as the names make sense."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "1722e67a-9e14-47f5-a962-947a79eb7a5c",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "19f6a2bd-276e-4478-811e-f0bd12e4cbf0",
      "position": 9,
      "properties": {
        "description": "Now that we have a `Dessert` class, we need to use it to create `Dessert` objects. Let's look back at how we did this when we created `Painter` objects.",
        "duration": "16",
        "name": "Creating a Dessert Object",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "19f6a2bd-276e-4478-811e-f0bd12e4cbf0",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "c6d62b19-df4e-4a6a-9721-67a98308ca21",
      "position": 10,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Which line of code created the `Painter` object?*\n\n**Discussion Goal:** Students identify the constructor call on line 4 of the code snippet. Students identify the name of the `Painter` object and the purpose of the values in the parentheses. Students may recall the purpose of the `new` keyword.\n\n**Do This:** Click through the animated slide to display the solution.\n\n**Display:** Talk through the components of the `Painter` object initialization:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Declare a variable of type `Painter` and give the name `picasso` to the variable.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> This variable will store a `Painter` object.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The `new` keyword tells Java to initialize an object.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Call the `Painter` constructor to initialize the object.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Provide actual parameters, which are the values passed to the constructor.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> These values are copied to the constructor's formal parameters. This is known as call by value.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Creating the `Painter` object is also called instantiating a class because it is creating an instance of the class."
      },
      "seeding_key": {
        "activity_section.key": "c6d62b19-df4e-4a6a-9721-67a98308ca21",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "b6319af6-2ffe-4c2a-a8f2-e1adc37e258c",
      "position": 11,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete Levels 3 and 4 on Code Studio. Students create a `Dessert` object and use Scanner to get user input for values for the instance variables.",
        "progression_name": "Creating a Dessert Object",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "The Documentation tab in Java Lab provides information and examples of Java syntax. Have students look up the `Scanner` class documentation if they need guidance to implement it at this level."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "b6319af6-2ffe-4c2a-a8f2-e1adc37e258c",
        "lesson_activity.key": "34db716a-f5ec-45e9-ba6f-b310f3971bdb"
      }
    },
    {
      "key": "3f0c3a9e-128d-4413-8d69-0e9a98bc8c75",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Constructors video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *What if the owner wanted to sell other items besides desserts from her food truck but still needed to track all of her inventory in one program?*\n* *We could create a FoodTruck class that could help with this. What attributes would this FoodTruck class have?*\n* *How would we make a FoodTruck object?*\n\n**Discussion Goal:** Students consider attributes of the food truck that might make up a `FoodTruck` class, including that the `FoodTruck` object \"has-a\" `Dessert` object and \"has-a\" owner.",
        "name": "Previewing the FoodTruck Class",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "The \"has-a\" relationship between an object and its instance variables should be reinforced during this discussion. Guide students towards that connection between the food truck, its inventory, and owner and what a constructor for a `FoodTruck` class might look like. If time permits, have students write out two to three attributes of the `FoodTruck` class and a constructor for creating a `FoodTruck` object. In Lesson 7, students will be writing a constructor for a FoodTruck class with the attributes `owner` and `Dessert`, however for the purposes of this wrap up it is not necessary that students come to this same conclusion. "
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "3f0c3a9e-128d-4413-8d69-0e9a98bc8c75",
        "lesson_activity.key": "0b631c68-3a1e-4e8a-b231-24c62ce6102c"
      }
    },
    {
      "key": "0b6dcabd-d06f-450b-b914-31f5665e9a72",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary"
      },
      "seeding_key": {
        "activity_section.key": "0b6dcabd-d06f-450b-b914-31f5665e9a72",
        "lesson_activity.key": "0b631c68-3a1e-4e8a-b231-24c62ce6102c"
      }
    },
    {
      "key": "8b74d145-70c7-4b14-8441-94c7dddd45f4",
      "position": 3,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding",
        "progression_name": "Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "8b74d145-70c7-4b14-8441-94c7dddd45f4",
        "lesson_activity.key": "0b631c68-3a1e-4e8a-b231-24c62ce6102c"
      }
    },
    {
      "key": "035824c0-ee14-47b1-84de-c1a7b642ecb9",
      "position": 1,
      "properties": {
        "description": "In the previous lesson, we created a constructor for the `Dessert` class and used it to initialize the instance variables of a `Dessert` object. Let’s review how to call the constructor for the `Dessert` class. Arrange the given cards in the correct order to create the Java statement needed to initialize a `Dessert` object. ",
        "name": "Construct an Object",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "035824c0-ee14-47b1-84de-c1a7b642ecb9",
        "lesson_activity.key": "49ad8de5-41f8-4545-9452-74b780c1e300"
      }
    },
    {
      "key": "1595063a-b90f-41fb-afde-ff35c0c7af6d",
      "position": 2,
      "properties": {
        "description": "**Group:** Place students in pairs.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each pair a stack of the Construct an Object cards.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** With their partner, students look at the constructor on the slide and construct an object with their cards.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Alternative ways to prepare the Construct an Object Cards:\n1. Pass out the card sheets and scissors to each group and have the students cut their own set of cards.\n2. Make several laminated sets of cards that to share between different sections.\n3. Present the cards on the board and ask students to write their answer, using the slide like a word bank."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "1595063a-b90f-41fb-afde-ff35c0c7af6d",
        "lesson_activity.key": "49ad8de5-41f8-4545-9452-74b780c1e300"
      }
    },
    {
      "key": "280f7645-dc13-4d52-8569-5152f103ea76",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i>**Discuss:** Click through the animated slide to display the prompts.\n* *What would happen if we called the constructor without passing arguments?*\n* *What could you do to solve this problem?*\n\n**Discussion Goal:** Students reflect on the parameters in a constructor and the purpose of the values for constructing an object. Students may recall from Unit 1, Lesson 5 that parameterized constructors allow you to specify unique starting values to set the initial values for an object."
      },
      "seeding_key": {
        "activity_section.key": "280f7645-dc13-4d52-8569-5152f103ea76",
        "lesson_activity.key": "49ad8de5-41f8-4545-9452-74b780c1e300"
      }
    },
    {
      "key": "56dc2c54-06d3-4824-9bb7-9a62d412561e",
      "position": 1,
      "properties": {
        "description": "The Project Mercury Pastries food truck has grown in popularity! Now, orders can vary. Some customers want to order just a standard dessert, while other customers want to customize their dessert. \n\nTo help the owner fill orders more quickly, we need to improve the `Dessert` class to create `Dessert` objects more efficiently. To solve this problem, we will add additional constructors to the `Dessert` class.",
        "duration": "13",
        "name": "Introduction to Constructor Overloading",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "56dc2c54-06d3-4824-9bb7-9a62d412561e",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "09e45bff-e6dc-4336-92f6-5cc8e24c4658",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to introduce constructor overloading:\n* For example, donuts can have frosting and sprinkles, or donuts can be plain. The challenge is to improve the `Dessert` class to create these different donuts more efficiently.\n* Constructor overloading can be used to solve this problem.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Introduce the definition of overloading and constructor overloading.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *How can we identify if a class contains an overloaded constructor?*\n\n**Discussion Goal:** Students identify that a class with more than one constructor has overloaded constructors.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Introduce no-argument constructors for default values and constructors that take parameters to initialize the instance variables to specified values.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to demonstrate a no-argument constructor in the `Dessert` class.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Be sure to identify the following:\n* The difference between the two constructors can be seen in the constructor signatures. One constructor signature has parameters while the other does not.\n* Predetermined or default values are built in to the no-argument constructor."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "09e45bff-e6dc-4336-92f6-5cc8e24c4658",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "105f326c-42ef-4a4a-8214-84e3751cf8ec",
      "position": 3,
      "properties": {
        "description": "We are going to continue to develop the `Dessert` class that we wrote in the previous lesson.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "105f326c-42ef-4a4a-8214-84e3751cf8ec",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "c33f69cb-fd6d-43ec-98c3-f35f2ea6bf90",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Instruct students to complete Level 1 on Code Studio. Students expand the `Dessert class` by adding a no-argument constructor.",
        "progression_name": "Constructor Overloading"
      },
      "seeding_key": {
        "activity_section.key": "c33f69cb-fd6d-43ec-98c3-f35f2ea6bf90",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "f51de88a-d49f-437d-b38f-2100c3c5e149",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What do you think would happen if we did not include any constructors in the `Dessert` class and tried to execute the following code?*\n\n**Discussion Goal:** Students think about how Java executes code without a constructor and uses default values in a program.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the solution to the discussion prompt, which explains that Java provides a no-argument constructor that sets the instance variables to default values and the default values that Java uses for each data type.",
        "duration": "2",
        "name": "Default Constructor"
      },
      "seeding_key": {
        "activity_section.key": "f51de88a-d49f-437d-b38f-2100c3c5e149",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "f47f837b-4e5e-4f03-bb5a-0db8166a097d",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What is the importance of default values in the user experience and software design?*\n\n**Discussion Goal:** Students identify various uses and purposes for default values in a program, such as reducing the amount of work users have to do, saving the user from having to select all choices, and reducing errors.",
        "duration": "10",
        "name": "Multiple Constructors",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Have students also consider potential negative effects of using default values. Prompt students to share ideas and examples of when default values might not be ideal."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "f47f837b-4e5e-4f03-bb5a-0db8166a097d",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "8695944b-b9b3-4bb0-b657-44576e75348b",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to demonstrate a constructor with parameters and a default value. You should identify:\n*  The `Dessert` constructor has two parameters, `newFlavor` and `newPrice`.\n* The `quantity` is set to a default value of 2."
      },
      "seeding_key": {
        "activity_section.key": "8695944b-b9b3-4bb0-b657-44576e75348b",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "9eb9bfec-b4bc-42c1-9e77-67c23d0bbb6b",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Instruct students to complete Levels 2 and 3 on Code Studio. ",
        "progression_name": "Multiple Constructors"
      },
      "seeding_key": {
        "activity_section.key": "9eb9bfec-b4bc-42c1-9e77-67c23d0bbb6b",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "b46329a5-d87b-40b8-89ed-072e4aa05f01",
      "position": 9,
      "properties": {
        "description": "The owner just called and has decided to add cupcakes to the inventory. The owner wants the cupcakes to cost $1.50, but she wants to let customers choose their flavor and quantity.",
        "duration": "10",
        "name": "Constructor Overloading with Scanner",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "b46329a5-d87b-40b8-89ed-072e4aa05f01",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "29385e54-54ff-48c8-a5b1-8f76a4124635",
      "position": 10,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What type of constructor would you create?*\n\n**Discussion Goal:** Based on the scenario, students talk about using a constructor with a default value and parameters. Students might state the need for a `Scanner` object to create an object with user input."
      },
      "seeding_key": {
        "activity_section.key": "29385e54-54ff-48c8-a5b1-8f76a4124635",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "11ebe278-8b91-419f-912a-a1a6101e20a9",
      "position": 11,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Instruct students to complete Levels 4 and 5 on Code Studio.",
        "progression_name": "Constructor Overloading with Scanner"
      },
      "seeding_key": {
        "activity_section.key": "11ebe278-8b91-419f-912a-a1a6101e20a9",
        "lesson_activity.key": "ed7ec98a-70e0-4251-8ba0-8e1cb048b7c7"
      }
    },
    {
      "key": "a2d43e0d-62c3-470d-9556-1ed030a36187",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Overloaded Constructors video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to guide students through the process of Closing the Loop:\n* *Which parts of this lesson built off of previous lesson content?*\n* *What is completely new?*\n* *What is the purpose of overloading a constructor?*\n\n**Discussion Goal:** The main goal of this discussion is to normalize the confusion that students are experiencing. Overloading allows the user to choose instance variables that are custom when creating the object. Consider asking students to share strategies they used from previous lessons that they implemented in this lesson. \n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary",
        "name": "Closing the Loop"
      },
      "seeding_key": {
        "activity_section.key": "a2d43e0d-62c3-470d-9556-1ed030a36187",
        "lesson_activity.key": "895edf96-72a8-4a39-b732-b8c7b7a2daaf"
      }
    },
    {
      "key": "4f905ab6-a5cd-4782-a28f-b19b0974ecf6",
      "position": 2,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding",
        "progression_name": "Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "4f905ab6-a5cd-4782-a28f-b19b0974ecf6",
        "lesson_activity.key": "895edf96-72a8-4a39-b732-b8c7b7a2daaf"
      }
    },
    {
      "key": "864bce03-d4ad-4522-9317-520085477dc1",
      "position": 1,
      "properties": {
        "description": "**Distribute:** Give each student a Vocabulary Crossword as they enter the classroom. Encourage students to begin working on the crossword.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:**\n* Give students 5-6 minutes to complete the crossword.\n* Discuss the answers for the sections highlighted in green as a class. If necessary, review the order of operations using PEMDAS: parentheses, exponents, multiplication, division, addition and subtraction.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "The Vocabulary Crossword helps students review vocabulary they have learned so far, but it can take some time to complete. Some scaffolding options include:\n* Keeping or removing the word bank\n* Focusing on the sections highlighted in green first\n\nIt is not necessary for students to complete the entire crossword during the warm up. If students move quickly through the lesson activity, they can continue to work on the crossword as they wait for their peers."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "864bce03-d4ad-4522-9317-520085477dc1",
        "lesson_activity.key": "16beefa5-c11e-4da4-9ac5-45f6752fd32d"
      }
    },
    {
      "key": "da7b5492-555e-448c-a543-4a8333ccf306",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What theme do you notice about the words that are highlighted in green?*\n\n**Discussion Goal:** Students identify themes related to evaluating expressions, such as doing math, values, or types associated with values."
      },
      "seeding_key": {
        "activity_section.key": "da7b5492-555e-448c-a543-4a8333ccf306",
        "lesson_activity.key": "16beefa5-c11e-4da4-9ac5-45f6752fd32d"
      }
    },
    {
      "key": "f5520443-4e96-4d1b-8c78-2b4f8100dcfb",
      "position": 1,
      "properties": {
        "description": "So far, we have developed a `Dessert` class to create `Dessert` objects to represent the Project Mercury Pastries inventory. We would also like to process some of that information for the bakery. Today we are going to explore how we can perform operations on the data we store in Java.",
        "duration": "15",
        "name": "Arithmetic Operations",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "f5520443-4e96-4d1b-8c78-2b4f8100dcfb",
        "lesson_activity.key": "5637b717-2c0d-48b1-bfb7-3f858b10dc67"
      }
    },
    {
      "key": "81f5afde-dcf0-47d9-8f2b-53946b5fa4d1",
      "position": 2,
      "properties": {
        "description": "**Do This:** Click through the animated slides to introduce expressions:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> An expression is a combination of operands and operators that evaluates to a single value.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> When evaluating an expression, it is important to pay attention to both the value of the operand and the type. This will determine the type of the resulting value.\n\n**Group:** Place students in groups of two.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each pair an Exploring Expressions handout. One student in the pair should receive Version A and the other student in the pair should receive Version B.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "The two versions of the worksheet address the same skills. Each version gives students different examples of expressions so they can identify patterns and rules of operators."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "81f5afde-dcf0-47d9-8f2b-53946b5fa4d1",
        "lesson_activity.key": "5637b717-2c0d-48b1-bfb7-3f858b10dc67"
      }
    },
    {
      "key": "c921bebd-450c-40da-b144-b52e396803e3",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Give students 10 minutes to complete the Arithmetic Operations section of the Exploring Expressions handout (pages 1-3). As students are working, use Catch and Release as appropriate to maintain engagement. You may choose to catch to:\n* Ask a student to demonstrate how to use `System.out.print()` to display the result of the expression.\n* Answer the fill-in-the-blank questions for the `+` operator to identify the first blank as addition and the second blank as concatenation. Explain that this means the operator is overloaded (similar to the constructors they wrote earlier in this unit).\n* Answer the free-response questions for the `/` operator.\n* Clarify how to use the `%` operator. You may choose to walk through the process of dividing two numbers and identifying the remainder.\n* Support students with misconceptions involving mathematical concepts.",
        "progression_name": "Expressions Exploration",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Catch and Release is a technique to allow students to explore a concept with intermittent support while preventing students from struggling for too long or disengaging. Give students about two minutes to work on each arithmetic operator. As students work, circulate and make note of any misconceptions. After the two minutes, briefly clarify issues or pose a question to the class that students have been struggling with, then send them back to their work.\n\nIt is not necessary to bring the class back together after every operator. If questions have been addressed individually or students do not need the answer to continue working you may choose to address these questions after the Arithmetic Operators video.\n\nOptional differentiation: Use a public timer to differentiate between independent work and discussion, addressing all student questions after a given amount of time has elapsed."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "c921bebd-450c-40da-b144-b52e396803e3",
        "lesson_activity.key": "5637b717-2c0d-48b1-bfb7-3f858b10dc67"
      }
    },
    {
      "key": "e847d28d-8638-410b-aafd-7e631e0a1134",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Arithmetic Operators video.\n\n**Do This:**\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Display the self check question. Give students one minute to think to themselves before asking students to respond out loud.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Share the correct answer. Give students two minutes to go back and complete the Modulus section of the activity guide if needed.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If you have time and feel students could use a movement break, ask students to move to a different corner of the room corresponding to their answer, where corner one corresponds to answer A, corner two corresponds to answer B, etc. Other options for polling for answers include asking students to raise one finger for answer A, two fingers for answer B, etc."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "e847d28d-8638-410b-aafd-7e631e0a1134",
        "lesson_activity.key": "5637b717-2c0d-48b1-bfb7-3f858b10dc67"
      }
    },
    {
      "key": "acb8ebd1-2d5e-4d1f-aded-2eb4f1d36bec",
      "position": 5,
      "properties": {
        "description": "The food truck owner can use expressions to calculate information, such as the total number of desserts in the truck. We need to be able to store that information somewhere in our program so we can use it again later. To do this, we are going to assign the value of our evaluated expression to a variable.",
        "duration": "15",
        "name": "Expressions with Variables",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "acb8ebd1-2d5e-4d1f-aded-2eb4f1d36bec",
        "lesson_activity.key": "5637b717-2c0d-48b1-bfb7-3f858b10dc67"
      }
    },
    {
      "key": "72506433-6499-4712-9893-636c1c6be84c",
      "position": 6,
      "properties": {
        "description": "**Do This:** Click through the animated slides to demonstrate evaluating expressions and storing the value in a variable.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> When processing assignment expressions, evaluate the statement on the right then store the value in the variable on the left.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> When evaluating multiple expression statements in a row, the updated value that has been stored in the variable is the value that is used in future expression."
      },
      "seeding_key": {
        "activity_section.key": "72506433-6499-4712-9893-636c1c6be84c",
        "lesson_activity.key": "5637b717-2c0d-48b1-bfb7-3f858b10dc67"
      }
    },
    {
      "key": "a3c2c075-fb7e-4943-9718-93fc3fcf2f3d",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students complete the Expressions with Variables section of the Exploring Expressions handout (pages 4-5). As students are working, use Catch and Release as appropriate to maintain engagement. When students have finished this section, direct them to Code Studio to practice writing expressions for the Project Mercury Food Truck.",
        "progression_name": "Evaluating Expressions"
      },
      "seeding_key": {
        "activity_section.key": "a3c2c075-fb7e-4943-9718-93fc3fcf2f3d",
        "lesson_activity.key": "5637b717-2c0d-48b1-bfb7-3f858b10dc67"
      }
    },
    {
      "key": "416da4c3-f246-47b1-a708-341b569bf27b",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Evaluating Expressions video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Lead a Quiz-Quiz-Trade activity.\n* Give each student a sticky note.\n* Students each write a short code segment including at least one variable, three arithmetic operators, and one compound assignment operator. They evaluate the code segment and write the answer on the back.\n* Use a pairing technique to get students to find a partner.\n* Students evaluate their partner’s expression and check their answer by turning over the sticky note.\n* Repeat with 2-3 partner pairs.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary",
        "name": "Quiz-Quiz-Trade"
      },
      "seeding_key": {
        "activity_section.key": "416da4c3-f246-47b1-a708-341b569bf27b",
        "lesson_activity.key": "1ba52831-069b-43d9-a982-a9005cd2f4af"
      }
    },
    {
      "key": "d12f46ba-2446-4b28-8b5e-96777bad18f4",
      "position": 2,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding",
        "progression_name": "Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "d12f46ba-2446-4b28-8b5e-96777bad18f4",
        "lesson_activity.key": "1ba52831-069b-43d9-a982-a9005cd2f4af"
      }
    },
    {
      "key": "698c8850-3132-41b7-8e3f-cf1026903ebf",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students evaluate the four expressions to create a 4-digit code. All of these expressions evaluate to an `int`.  Give students enough time to solve these independently then quietly share with a neighbor when they are done. Ask students to share with the class before clicking through the animated slide to review the solution. Allow students to ask questions they may have.",
        "name": "Crack the Code",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Make note of students who have questions, and circle back to these students to check in during the independent activity in the second half of this lesson."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "698c8850-3132-41b7-8e3f-cf1026903ebf",
        "lesson_activity.key": "be2d857d-710b-4d75-8017-c71332c0cf8c"
      }
    },
    {
      "key": "7b1a68c5-8387-485e-af06-ad84b3eaec78",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students evaluate another expression that evaluates to a `double`. Give students enough time to solve these independently then quietly share with a neighbor when they are done. Ask students to share with the class before clicking through the slide animation to review the solution. Discuss any questions they may have.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "This warm up is a review of the previous lesson on evaluating expressions. Encourage students to reference resources, including previous handouts, to help them recall rules of evaluation."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "7b1a68c5-8387-485e-af06-ad84b3eaec78",
        "lesson_activity.key": "be2d857d-710b-4d75-8017-c71332c0cf8c"
      }
    },
    {
      "key": "0748f8ae-ebbe-4f6b-b536-624e8869c06f",
      "position": 1,
      "properties": {
        "description": "In Unit 1, we learned that an edge case is a situation in a program that produces a different outcome and requires special error handling. Today, we are going to explore edge cases for creating `Dessert` objects. Remember that the `Dessert` class is modeling something in the real world.",
        "duration": "5",
        "name": "Error Checking Constructors",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "0748f8ae-ebbe-4f6b-b536-624e8869c06f",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "19eb35b3-74f0-4b9b-a1db-cdd462d07293",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *What arguments would not make sense to pass to this `Dessert` constructor?* \n* *Why would these arguments not make sense?*\n\n**Discussion Goal:** Students realize that they could pass in values that don’t make sense but still compile. For example, they could pass in a negative `int` for the `newQuantity` parameter. Even though Java will compile and run this code, it doesn’t make sense to have a negative quantity.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students may suggest arguments that will cause the program to not compile. For example, they may try to pass in a `String` for the `newQuantity` parameter. Guide students toward examples that would compile but don't make sense in this scenario. For example, you could ask:\n* *Can you think of arguments that Java would compile but we know don’t make sense?*\n* *Think about desserts in the real world. What are values that don't make sense?*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "19eb35b3-74f0-4b9b-a1db-cdd462d07293",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "aeb16452-ff5e-47fa-a8be-189000f14faf",
      "position": 3,
      "properties": {
        "description": "As software engineers, we need to think not only about how to write code that will compile, but how to write code that  translates real-world rules into code. ",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "aeb16452-ff5e-47fa-a8be-189000f14faf",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "2f7eb4b2-983b-495e-a1e4-cf86b0a21ed0",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *How could we check for values that don't make sense, like a negative value for `newQuantity`?*\n* *What could we do to prevent the negative value from being used for `newQuantity`?*\n\n**Discussion Goal:** Students remember that they can use an `if` statement to check if something is true. They can set the instance variable `quantity` to a different value that makes sense within the `if` statement.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Guide students towards thinking of default values for the instance variables that make sense for the scenario. For example, you could ask: *If someone tried to use a negative value for quantity, what default value would make sense to use instead?*\n\nStudents may confuse writing code for default values with the Java default values from previous lessons. When we specify default values, we make choices based on our knowledge of the object we are modeling. The default values in Java are generic values for all scenarios."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "2f7eb4b2-983b-495e-a1e4-cf86b0a21ed0",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "b52524cf-0687-40e8-a906-04e2ba6931ea",
      "position": 5,
      "properties": {
        "description": "As software engineers, we write code that other software engineers will use. We need to make sure that our code can handle these cases.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "b52524cf-0687-40e8-a906-04e2ba6931ea",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "df9407a6-cb6b-43a9-95be-9f891811b154",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show students a possible solution to handle negative values for quantity. Connect the code to student responses from the previous discussion by pointing out how the instance variable `quantity` is set to 1 within the `if` statement when `newQuantity` is negative.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Although students have not yet been formally introduced to relational operators, they likely have seen the `>=` operator in other classes. Focus on explaining that the expression evaluates to `true` or `false` rather than spending time discussing the `>=` operator."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "df9407a6-cb6b-43a9-95be-9f891811b154",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "14fea87b-2dd3-4886-a621-d5fdb1c106dc",
      "position": 7,
      "properties": {
        "description": "Let's look at some more broken code so we can learn how to fix them!",
        "duration": "10",
        "name": "Scope",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "14fea87b-2dd3-4886-a621-d5fdb1c106dc",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "df485085-2a75-475d-a1f4-f20680c5d073",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 1 on Code Studio. Students run the code to identify the error resulting from using `newQuantity`, then correct the code to use `quantity`.",
        "progression_name": "Debugging Errors"
      },
      "seeding_key": {
        "activity_section.key": "df485085-2a75-475d-a1f4-f20680c5d073",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "73832573-66f2-4214-9c31-c5f38a61f99e",
      "position": 9,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Why did this change fix the error?*\n\n**Discussion Goal:** Students note that changing the variables fixed the error. Using `newQuantity` caused the error while using `quantity` did not cause an error.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Guide students to notice that `newQuantity` is a local variable declared within the constructor, while `quantity` is an instance variable. Although students have not learned the term scope yet, they may share ideas about where a variable can be used."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "73832573-66f2-4214-9c31-c5f38a61f99e",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "1a2bc954-6697-4fab-9131-ea5eed28b91f",
      "position": 10,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to introduce scope and discuss the prompt.\n* *What do you think scope means?*\n\n**Discussion Goal:** Students guess that scope refers to where a variable can be used. \n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to explain that a parameter can only be used within the constructor or method that is defined.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Will this code compile? Why or why not?*\n\n**Discussion Goal:** Students have not seen this type of scope error. Students make predictions and justify their answers.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Not all of the code fits on the slide. An option is to have students open the code in the corresponding level while discussing. However, ensure that students do *not* run the code before the discussion. Level 2 has compiler errors that may be obvious once Code Studio is open."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "1a2bc954-6697-4fab-9131-ea5eed28b91f",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "d94f7403-887d-4578-9856-145b600cb3f0",
      "position": 11,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 2 on Code Studio. Students run the previous code to check their prediction.",
        "progression_name": "Scope Error"
      },
      "seeding_key": {
        "activity_section.key": "d94f7403-887d-4578-9856-145b600cb3f0",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "0c12c8f6-6d9b-415a-a3d0-231f98c1f19a",
      "position": 12,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Did the code compile? Why do you think this happened?*\n\n**Discussion Goal:** Students discover that the code doesn’t compile and share ideas about the cause.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Encourage students to make connections to the errors encountered so far. The compiler error message will also give them hints. Guide students towards thinking about the scope of the local variable `isValid`."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "0c12c8f6-6d9b-415a-a3d0-231f98c1f19a",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "59d9efd6-09b7-4ef0-904e-f3c7f691ef53",
      "position": 13,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Click through the animated slide to explain that a local variable can only be used in the constructor or method after it was defined.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Ask a student volunteer to add a sticky note to the Debugging Wall describing a strategy to debug scope errors. "
      },
      "seeding_key": {
        "activity_section.key": "59d9efd6-09b7-4ef0-904e-f3c7f691ef53",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "39e2186b-9dec-4d15-b7a1-f59d515fefa7",
      "position": 14,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a Diagramming Scope handout and red, green, and blue colored pencils or markers.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students work on the Diagramming Scope handout with a partner. After they are finished, they find another pair to compare.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Any questions? Did any groups disagree on scope?*\n\n**Discussion Goal:** Students clarify any misconceptions they may have about scope.",
        "duration": "5",
        "name": "Diagramming Scope"
      },
      "seeding_key": {
        "activity_section.key": "39e2186b-9dec-4d15-b7a1-f59d515fefa7",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "e0dc2f4d-7db3-4589-b066-bf188b5587c3",
      "position": 15,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What do you think `printInfo()` does?*\n\n**Discussion Goal:** Students share that it looks like the values of the `Dessert` object's instance variables are printed.\n\n**Do This:** Click through the animated slide to show the answer.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What is the output of this code segment?*\n\n**Discussion Goal:** Students have not seen variables with the same name before. Students make predictions rather about the output of the code segment.",
        "duration": "15",
        "name": "this Keyword",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Guide students towards noticing that there are two variables with the same name – one is an instance variable and the other is a local variable. Possible questions to ask include:\n* *What do you think happens when there are two variables of the same name?*\n* *Which one is being referenced?*\n* *Do you think this will compile?*\n* *Do you think this will run?*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "e0dc2f4d-7db3-4589-b066-bf188b5587c3",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "6f34ee85-7b45-4241-b9e0-19a0a762d780",
      "position": 16,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 3 on Code Studio. Students run the previous code to check their prediction.",
        "progression_name": "Scope"
      },
      "seeding_key": {
        "activity_section.key": "6f34ee85-7b45-4241-b9e0-19a0a762d780",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "1f59eaa1-0862-42a0-bed6-808121f5b784",
      "position": 17,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *What happened when you ran the code?*\n* *Why do you think this happened?*\n\n**Discussion Goal:** Students share the output of the code segment and provide their best guesses as to why. Note that `quantity = 0` even though the intent was for it to be set to 1.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Explain to students why `quantity = 0`.\n\n**Discuss:** Have students respond to the following prompts.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> *The updated code sets the instance variable to the parameter. What changed?*\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> *Why did this change fix the code?*\n\n**Discussion Goal:** Students notice that line 11 changed. The code on the right uses the `this` keyword to refer to instance variables. Students predict that `this` keyword fixes the error.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What do you think `this` means?*\n\n**Discussion Goal:** Students guess that `this` is used to reference instance variables.\n\n**Do This:** Click through the animated slide to display the definition.\n\n**Do This:**\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Explain that to refer to the instance variable when there is a local variable with the same name, use the `this` keyword.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Show the open-source example of the `this` keyword. Explain that some software engineers use the `this` keyword so they don’t have to rename variables.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Given the `Dessert` class, predict the output of the code segment.*\n\n**Do This:** Click through the animated slide to show the code side by side.\n\n**Discussion Goal:** Students have just been introduced to the `this` keyword but have not had as much experience running code using it. Students make predictions rather than determine the correct answer.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Guide students towards noticing that the code now uses the `this` keyword on the right-hand side of the assignment expression instead of the left. Possible questions to ask include:\n* *What is the difference between this code and the last?*\n* *What difference do you think that will make when we run the code if any?*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "1f59eaa1-0862-42a0-bed6-808121f5b784",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "2e720e90-3961-49a6-a899-d4551cf33171",
      "position": 18,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 4 on Code Studio. Students run the previous code to check their prediction.",
        "progression_name": "Scope"
      },
      "seeding_key": {
        "activity_section.key": "2e720e90-3961-49a6-a899-d4551cf33171",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "2e52828c-2fd6-453a-976d-7c0bea239743",
      "position": 19,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *What happened when you ran the code?*\n* *Why do you think this happened?*\n\n**Discussion Goal:** Students share out the output and provide their best guesses as to why. Note that `quantity = 0` even though the intent was for it to be set to 1."
      },
      "seeding_key": {
        "activity_section.key": "2e52828c-2fd6-453a-976d-7c0bea239743",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "d4fc935d-06ea-4e41-a8f2-1025bef7dbfb",
      "position": 20,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students back to Level 4 on Code Studio. Students now debug the code."
      },
      "seeding_key": {
        "activity_section.key": "d4fc935d-06ea-4e41-a8f2-1025bef7dbfb",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "7e694ce6-f00f-4a16-835b-4718942219a6",
      "position": 21,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Before, `quantity = this.quantity;` was incorrect because it assigned the value of the instance variable to the parameter, which meant the instance variable was never updated. The instance variable `quantity` was never set, and remained the default value of 0.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "7e694ce6-f00f-4a16-835b-4718942219a6",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "d604679e-f23f-449e-b130-c27c0b0285d8",
      "position": 22,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Ask a student volunteer to add a sticky note to the Debugging Wall describing a strategy to debug scope errors."
      },
      "seeding_key": {
        "activity_section.key": "d604679e-f23f-449e-b130-c27c0b0285d8",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "0ca5f4f6-4b45-4fbf-91b6-b4def3161106",
      "position": 23,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 5 on Code Studio. Students update the constructor then complete a vocabulary matching level.",
        "progression_name": "Constructor"
      },
      "seeding_key": {
        "activity_section.key": "0ca5f4f6-4b45-4fbf-91b6-b4def3161106",
        "lesson_activity.key": "91f9a182-4bb0-494f-8b0c-dc004af424a5"
      }
    },
    {
      "key": "726ff043-08b1-49d5-bc59-dab062c64e40",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Scope video.",
        "name": "Closing the Loop"
      },
      "seeding_key": {
        "activity_section.key": "726ff043-08b1-49d5-bc59-dab062c64e40",
        "lesson_activity.key": "df05cef0-ea2d-4e47-88f9-b35bcf0b11bd"
      }
    },
    {
      "key": "f6b6f9c7-98ef-4b7e-90ef-cfb554ed561d",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to guide students through a Closing the Loop discussion.\n* *What are the key takeaways of this lesson?*\n* *Which parts of this lesson built off of previous lesson content? What is completely new?*\n* *What words would you use to describe our learning as a class today?*\n\n**Discussion Goal:** This discussion should help reinforce the important beats of the lesson, allowing students to check their understanding and support one another in cementing their understanding of the day’s objectives.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary"
      },
      "seeding_key": {
        "activity_section.key": "f6b6f9c7-98ef-4b7e-90ef-cfb554ed561d",
        "lesson_activity.key": "df05cef0-ea2d-4e47-88f9-b35bcf0b11bd"
      }
    },
    {
      "key": "0e6a84e7-0680-4d0a-83d1-e5c9b954ba77",
      "position": 3,
      "properties": {
        "description": "Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket. ",
        "name": "Assessment: Check for Understanding",
        "progression_name": "Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "0e6a84e7-0680-4d0a-83d1-e5c9b954ba77",
        "lesson_activity.key": "df05cef0-ea2d-4e47-88f9-b35bcf0b11bd"
      }
    },
    {
      "key": "591f9f60-950e-4768-9b63-bf1ea4a083e7",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to introduce class hierarchies.\n* Each class in a class hierarchy inherits from the class above it.\n* All classes implicitly inherit from a universal subclass called `Object`.\n\n**Group:** Place students in pairs.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each pair a set of Class Hierarchy cards.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** With their partner, students arrange the cards to create a class hierarchy of the `Painter`.",
        "name": "Constructing a Class Hierarchy",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Alternatives to prepare the Class Hierarchy Cards:\n* Pass out the card sheets and scissors to each group and have students cut their own set of cards.\n* Make several laminated sets of cards to share between different sections."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "591f9f60-950e-4768-9b63-bf1ea4a083e7",
        "lesson_activity.key": "4518bcab-e182-4769-ab0f-32858a8df65c"
      }
    },
    {
      "key": "61728430-2bf6-4e32-9e2e-8cfbf75f6991",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to review the solution."
      },
      "seeding_key": {
        "activity_section.key": "61728430-2bf6-4e32-9e2e-8cfbf75f6991",
        "lesson_activity.key": "4518bcab-e182-4769-ab0f-32858a8df65c"
      }
    },
    {
      "key": "d96683c9-fb40-46f2-8d10-b992f692283d",
      "position": 1,
      "properties": {
        "description": "Let’s review how to create a constructor by completing the `FoodTruck` class. Every food truck has an owner and a specialized dish. ",
        "duration": "5",
        "name": "Writing a FoodTruck Constructor",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "d96683c9-fb40-46f2-8d10-b992f692283d",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "6ba5556d-0f38-4708-a14e-8955bfc93ad2",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to work in pairs on Level 1 on Code Studio. Students write a constructor for the `FoodTruck` class.  ",
        "progression_name": "Writing a FoodTruck Constructor"
      },
      "seeding_key": {
        "activity_section.key": "6ba5556d-0f38-4708-a14e-8955bfc93ad2",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "1fc67349-43f4-4b83-a361-9ce4d8dd7fab",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What is inheritance?*\n\n**Discussion Goal:** Students recall the definition of inheritance from Unit 1.\n\n**Do This:** Click through the animated slide to reveal the definition.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Talk through an example of inheritance using the `StampPainter`, `SprayPainter`, and `PainterPlus` classes. \n\n**Do This:** Talk through how to use `super()` to initialize inherited instance variables:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Subclasses cannot initialize inherited private instance variables.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Initialize inherited private instance variables using `super()`, which calls the superclass constructor. \n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the animated slide to explain that Java automatically calls `super()` if the subclass does not include it as the first line of the subclass constructor.",
        "duration": "7",
        "name": "Using super() for Initialization",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "When discussing `super()`, reinforce that the subclass constructor must call `super()` on its first line."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "1fc67349-43f4-4b83-a361-9ce4d8dd7fab",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "4986dcb3-74fe-4bd3-a480-74f27c7a6e39",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Introduce and explain the DRY principle.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Does the code on the next slide follow the DRY principle? Where are there redundancies?*\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** `Car` and `Truck` classes\n* Click through the animation to reveal the solution.\n\n**Discussion Goal:** Students points out where they see redundancies between the two classes.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Using inheritance, how can we refactor the code to follow the DRY principle?*\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** `Car` and `Truck` classes\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** `Vehicle`, `Car`, and `Truck` classes\n\n**Discussion Goal:** Students discuss how to refactor the code using inheritance, where the superclass contains the repeated attributes and methods from which `Car` and `Truck` can inherit.",
        "duration": "10",
        "name": "The DRY Principle"
      },
      "seeding_key": {
        "activity_section.key": "4986dcb3-74fe-4bd3-a480-74f27c7a6e39",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "25ff8b14-5175-416c-bee0-a156fedcf263",
      "position": 5,
      "properties": {
        "description": "To reduce repetition in our program, we can create a superclass called `Vehicle` from which `Car` and `Truck` can inherit.\n\nThe superclass called `Vehicle` contains the shared instance variables and methods between `Car` and `Truck`. \n\nIn the `Vehicle` class, we store shared instance attributes, like `wheels` and `seats`, and methods, like `move()`, that all objects of type `Vehicle` have. \n\nA `Car` “is-a” `Vehicle`. A `Truck` “is-a” `Vehicle`.\n\nIn the `Car` class, we left behind the instance variable `sunRoof` because it was not an attribute all vehicles have. The same applies to the `capacity` in the `Truck` class.\n\nWe also made our constructors more DRY by using `super()` to initialize the shared inherited instance variables. We only need to initialize the instance variables within the class.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "25ff8b14-5175-416c-bee0-a156fedcf263",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "97268e54-937b-4406-aa66-a02c3bf6de41",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show The Importance of Code Refactoring video."
      },
      "seeding_key": {
        "activity_section.key": "97268e54-937b-4406-aa66-a02c3bf6de41",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "bee9f45b-dabc-4154-acbd-29c5574d0e67",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 2 on Code Studio. Students independently complete the Check for Understanding on Level 2, then complete Levels 3 and 4 in pairs, where they apply the DRY principle by refactoring the `Cake` class into a subclass of `Dessert`.",
        "progression_name": "Extending the Dessert Class"
      },
      "seeding_key": {
        "activity_section.key": "bee9f45b-dabc-4154-acbd-29c5574d0e67",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "7cf2ccf3-5d5a-47a4-838b-9977a15345ac",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> While desserts have unique attributes, such as crusts, fillings, and toppings, they share many attributes. When implementing different desserts into our program, we can extend the `Dessert` class.",
        "duration": "7",
        "name": "Create Dessert Subclasses",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "7cf2ccf3-5d5a-47a4-838b-9977a15345ac",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "56685081-85f6-450d-bde5-9a5a085f2264",
      "position": 9,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students Levels 5 and 6 on Code Studio. Students complete the Check for Understanding on Level 5 then complete Level 6, where they choose a `Dessert` subclass to implement. Level 6 is a choice level. There are four options from which to choose. If students finish early, encourage them to complete an additional level.",
        "progression_name": "Creating Dessert Subclasses"
      },
      "seeding_key": {
        "activity_section.key": "56685081-85f6-450d-bde5-9a5a085f2264",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "ae41b0cd-2774-421e-aef6-3a85e4359442",
      "position": 10,
      "properties": {
        "description": "Let's take a moment to provide feedback to each other. Don't forget to follow ART – ask questions, raise flags about confusing code, and tag awesome code! Also, consider the questions on the next slide.",
        "duration": "7",
        "name": "Code Review",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "ae41b0cd-2774-421e-aef6-3a85e4359442",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "d2f9221a-16e9-4eb9-84c2-843b654a2bac",
      "position": 11,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Pair students within a review group to review each other's projects in Code Studio. Students request, receive and review feedback on Level 5. Students should reference the Code Review Guide to review the steps of the code review process as needed."
      },
      "seeding_key": {
        "activity_section.key": "d2f9221a-16e9-4eb9-84c2-843b654a2bac",
        "lesson_activity.key": "40dde387-4b41-43c2-8482-4d476667be97"
      }
    },
    {
      "key": "5b47be4b-70ef-4369-843e-cf13933d04ae",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Inheritance and Constructors video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animated slide to have students participate in the Three W's.",
        "name": "Three W's",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Three W’s is a closure strategy where students reflect on their learning by answer the following:\n* *What? (What did we learn today?)*\n* *So what? (What is the relevancy, importance, or usefulness?)*\n* *Now what? (How does it fit into what we are learning?  Does it affect our thinking?  Can we predict where we are going?)*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "5b47be4b-70ef-4369-843e-cf13933d04ae",
        "lesson_activity.key": "ed41a178-155e-4df0-80b5-b9964a1a87da"
      }
    },
    {
      "key": "08b39464-7672-4317-b960-f857ffa2807e",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary"
      },
      "seeding_key": {
        "activity_section.key": "08b39464-7672-4317-b960-f857ffa2807e",
        "lesson_activity.key": "ed41a178-155e-4df0-80b5-b9964a1a87da"
      }
    },
    {
      "key": "28fb05be-013c-4e8a-b168-05e66d3869e1",
      "position": 3,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding",
        "progression_name": "Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "28fb05be-013c-4e8a-b168-05e66d3869e1",
        "lesson_activity.key": "ed41a178-155e-4df0-80b5-b9964a1a87da"
      }
    },
    {
      "key": "15a058c8-c6a7-4edc-a8c7-b70c52ac1d9e",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Have students take out their `Shape` class foldable and Main Method from Lesson 1.",
        "name": "Accessing Instance Variables",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If students misplace their foldable or Main Method, have them share with a partner."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "15a058c8-c6a7-4edc-a8c7-b70c52ac1d9e",
        "lesson_activity.key": "ab401bfc-f4ca-4ac9-b633-ae0f02f7528d"
      }
    },
    {
      "key": "4aa45547-26d6-4949-9013-6b79a795b96b",
      "position": 2,
      "properties": {
        "description": "When we created the `Dessert` class, we declared `private` instance variables to represent attributes of a `Dessert` object. In Lesson 1, we learned that `private` means that these instance variables are only accessible inside the class. But what if other classes needed to know the values of these instance variables?",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "4aa45547-26d6-4949-9013-6b79a795b96b",
        "lesson_activity.key": "ab401bfc-f4ca-4ac9-b633-ae0f02f7528d"
      }
    },
    {
      "key": "ee4f252b-1146-41eb-9b40-85ef8ff6ecc7",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Look at your `Shape` class foldable. Are we able to get the value of one of the instance variables when looking at the outside of the foldable? Why or why not?*\n\n**Discussion Goal:** Looking at the outside of the foldable is the same as being on the outside of the class. Students realize that we cannot see the values of the instance variables from outside of the class.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Why are we able to use the constructor from outside of the class? Why is it designed that way?*\n\n**Discussion Goal:** The constructor is `public` to allow access from outside of the class. Students recall that `public` means it is accessible from outside of the class, enabling us to call the constructor to create an object.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What does that tell us about what we need to get the values in the instance variables?*\n\n**Discussion Goal:** Students make the connection between the constructor set as `public` and the need for something `public` to access the values in the instance variables."
      },
      "seeding_key": {
        "activity_section.key": "ee4f252b-1146-41eb-9b40-85ef8ff6ecc7",
        "lesson_activity.key": "ab401bfc-f4ca-4ac9-b633-ae0f02f7528d"
      }
    },
    {
      "key": "cdbf5141-5087-43cb-9bb5-fbc20a41d98a",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *On the outside of our foldable, we have a constructor that we called to create an object. What can we add to the outside of the foldable to get the values in the instance variables?*\n\n**Discussion Goal:** Students suggest adding something `public` that can get the values in the instance variables.",
        "duration": "7",
        "name": "Accessor Methods Introduction"
      },
      "seeding_key": {
        "activity_section.key": "cdbf5141-5087-43cb-9bb5-fbc20a41d98a",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "96b8f40a-4270-477f-8e2f-dbf024ba9c90",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Classes can have methods to perform behaviors. These are often `public` so that other classes can call these behaviors. Accessor methods allow us to get the values stored in an object’s instance variables. An accessor method is `public`, allowing it to get the value stored in the instance variable and give it to the outside class asking for this information. Let's add an accessor method to our foldable.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "96b8f40a-4270-477f-8e2f-dbf024ba9c90",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "9add54dc-5377-41a2-af04-6fd2e9a41cfb",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student two sticky notes.\n\n**Do This:** Demonstrate adding an accessor method for the `sides` instance variable:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> On the outside of the `Shape` class foldable, write `public int getSides()` under Methods. This method can get the value stored in the `sides` instance variable.\n\n**Do This:** Demonstrate calling the accessor method for the `sides` instance variable:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> On a sticky note, write `myTriangle.getSides()`. Place this sticky note in the Code section of the Main Method to call this method from the `Shape` class.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Open the `Shape` class foldable to find the `sides` instance variable. Write the value stored in this instance variable on a new sticky note.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Close the foldable and place this sticky note on the Output section of the Main Method."
      },
      "seeding_key": {
        "activity_section.key": "9add54dc-5377-41a2-af04-6fd2e9a41cfb",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "62116386-321d-4ca8-90cb-0d5e15b8126e",
      "position": 4,
      "properties": {
        "description": "Now that we see how accessor methods work, we will add some to the `Dessert` class so the owner can easily get information about her `Dessert` objects.\n\nLet's take a closer look at how these methods work.",
        "duration": "15",
        "name": "Dessert Class Accessor Methods",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "62116386-321d-4ca8-90cb-0d5e15b8126e",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "61203010-15a3-4ce3-ad06-06f4e1907da6",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Methods That Return video.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "This video discusses the components of a method signature and the syntax for accessor methods. The `return` keyword and return types are introduced, including `void`, which is explored further in the next lesson."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "61203010-15a3-4ce3-ad06-06f4e1907da6",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "6e9e48f9-6fce-4f13-abfd-b0796990fdda",
      "position": 6,
      "properties": {
        "description": "**Do This:** Have students identify the missing component before clicking through the animation to reveal the answer.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> This method is missing the parameter list. Even if parameters are not needed for the method, it must include empty parentheses.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> This method is missing the method name. Without the method name, there is no way to call it.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> This method is missing the `return` keyword. The `return` keyword is what exists the method and provides the value to where the method was called.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> This method is missing the return type. The return type states what type of data should be given from this method.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What similarities and differences do you notice between these method signatures?*\n\n**Discussion Goal:** Students identify that each method is `public` to allow access from outside the class. Each method signature has a method name, empty parameters lists, and a return type. Students notice that the `void` return type is not a data type and may wonder about its purpose, which is discussed in the next lesson."
      },
      "seeding_key": {
        "activity_section.key": "6e9e48f9-6fce-4f13-abfd-b0796990fdda",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "17f33a67-c0dd-4e22-b8e7-6d2998d82304",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 1 on Code Studio. Students write accessor methods for each instance variable in the `Dessert` class.",
        "progression_name": "Dessert Class Accessor Methods"
      },
      "seeding_key": {
        "activity_section.key": "17f33a67-c0dd-4e22-b8e7-6d2998d82304",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "0287e98e-e4a0-4b42-a73a-983534e606a0",
      "position": 8,
      "properties": {
        "description": "We have now developed accessor methods, but how do we use them? We've been calling `public` methods and using them with our `Painter` objects. Let's take a moment to look at what is actually happening in the code when we do this.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "0287e98e-e4a0-4b42-a73a-983534e606a0",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "c5a83f0f-6b3b-4332-9b2d-243be4a428eb",
      "position": 9,
      "properties": {
        "description": "**Do This:** Demonstrate the process that occurs when calling a method:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The dot operator is used to call a method in the class.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> When calling a method on the object, Java looks for the method inside the class.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The method then executes to perform its task. In this case, the method sends a copy of the resulting value to where it was called. This process is known as return by value."
      },
      "seeding_key": {
        "activity_section.key": "c5a83f0f-6b3b-4332-9b2d-243be4a428eb",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "0dbeb3cc-377e-4e4c-98bc-09bacbb7b414",
      "position": 10,
      "properties": {
        "description": "We learned how to print information to the console using . . .",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "0dbeb3cc-377e-4e4c-98bc-09bacbb7b414",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "8b2406e6-ec68-43a2-b6ab-24c08490c80c",
      "position": 11,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Click through the animation to review how to write `System.out.print` using the Call and Response."
      },
      "seeding_key": {
        "activity_section.key": "8b2406e6-ec68-43a2-b6ab-24c08490c80c",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "c551247d-a257-4705-b23c-a3ba7ed395ad",
      "position": 12,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> We can call an accessor method inside of `System.out.print` to print the stored value inside the instance variable. As software engineers, it is helpful to know the current state of our objects by viewing the values in the instance variables when we are debugging our programs.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "c551247d-a257-4705-b23c-a3ba7ed395ad",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "0716b372-6396-4faa-9417-9efe9c4d253c",
      "position": 13,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Have students navigate to Level 2 on Code Studio and run the code.",
        "progression_name": "Printing Dessert Information",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Alternatively, run the code on Level 2 for the class rather than each student doing this individually."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "0716b372-6396-4faa-9417-9efe9c4d253c",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "2cfa3561-ca63-4849-bacb-259816bf2d7d",
      "position": 14,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What did you notice about the output of this program? Why did this happen?*\n\n**Discussion Goal:** Students notice that the information is printed on one line together with no spaces or lines in between. Students recall that `System.out.print` does not move to the next line after printing."
      },
      "seeding_key": {
        "activity_section.key": "2cfa3561-ca63-4849-bacb-259816bf2d7d",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "7657b563-037b-4179-bffa-85dd7cfb118a",
      "position": 15,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> To fix this problem, we can use `System.out.println`, which moves the cursor to the next line after printing. We can use this and concatenation to make our output clearer and useful when we need to see information about the object.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "7657b563-037b-4179-bffa-85dd7cfb118a",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "4f660bf2-22f2-4a47-9f44-a9bc3ab7acaa",
      "position": 16,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to modify the code on Level 2 on Code Studio to change the `System.out.print` to `System.out.println` and concatenate text with the calls to the accessor methods to label the data. Have students proceed to Level 3 to complete the Check for Understanding.",
        "progression_name": "Printing Dessert Information"
      },
      "seeding_key": {
        "activity_section.key": "4f660bf2-22f2-4a47-9f44-a9bc3ab7acaa",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "f73a5635-db64-4d0d-b5cc-5c3d0cfe7b39",
      "position": 17,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> When we extended the `Painter` class, we only needed to write code for the new methods we wanted to add. The new classes were also able to do everything that the parent class could do. The subclasses we created yesterday only need accessor methods for their additional attributes.",
        "duration": "5",
        "name": "Subclass Accessor Methods",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "f73a5635-db64-4d0d-b5cc-5c3d0cfe7b39",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "ec8eaff6-edb9-4db2-8eae-0c774c95ee2a",
      "position": 18,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 4 on Code Studio to write accessor methods for the `Cake` class, create a `Cake` object, and print the values of its instance variables.",
        "progression_name": "Accessor Methods for the Subclasses"
      },
      "seeding_key": {
        "activity_section.key": "ec8eaff6-edb9-4db2-8eae-0c774c95ee2a",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "442db13a-b98b-49a3-b9c2-19060e8bb534",
      "position": 19,
      "properties": {
        "description": "We have been calling our accessor methods to print information about our objects to the console. Since accessor methods return values, we can also store the value returned in a variable or use it within an expression.",
        "duration": "10",
        "name": "Using Accessor Methods",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "442db13a-b98b-49a3-b9c2-19060e8bb534",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "7f6979fa-45ca-4917-b7a1-1860ebe291a5",
      "position": 20,
      "properties": {
        "description": "**Do This:** Demonstrate calling accessor methods and storing the result in a variable:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> The owner wants to know how much all of the cakes in her inventory are worth. This problem can be solved by multiplying the number of cakes times the price of each cake. Accessor methods can get those values to do this calculation.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> First, get the number of cakes in her inventory and store it in a variable called `numCakes`.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Then get the price of each cake and store it in a variable called `cakePrice`.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Finally, calculate the total and print out the result.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Accessor methods can also be called within the expression to perform this calculation."
      },
      "seeding_key": {
        "activity_section.key": "7f6979fa-45ca-4917-b7a1-1860ebe291a5",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "4050db5b-0c29-4ce8-bccb-8a143b924a78",
      "position": 21,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 5 on Code Studio. Students write accessor methods for their other Dessert subclass and create an object of this subclass. Students use the accessor methods in all of their classes to solve the given problem.",
        "progression_name": "The Owner's Inventory"
      },
      "seeding_key": {
        "activity_section.key": "4050db5b-0c29-4ce8-bccb-8a143b924a78",
        "lesson_activity.key": "5390b85d-6406-4137-8fc0-da2e685ab89c"
      }
    },
    {
      "key": "ccdb72ed-5848-463d-9b2a-fc566a909915",
      "position": 1,
      "properties": {
        "description": "**Distribute:** Give each student an index card or piece of scrap paper.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Have students choose one of the question stems. Students write the question stem on an index card or piece of scrap paper and fill in the blank to complete the question. Have students then turn to the person next to them and take turns asking and answering their questions.",
        "name": "Question Stems"
      },
      "seeding_key": {
        "activity_section.key": "ccdb72ed-5848-463d-9b2a-fc566a909915",
        "lesson_activity.key": "61f04859-4732-48ec-a390-5bc0b0b05ada"
      }
    },
    {
      "key": "afe69253-ae2f-4788-8c93-6f7fc245b874",
      "position": 2,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding",
        "progression_name": "Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "afe69253-ae2f-4788-8c93-6f7fc245b874",
        "lesson_activity.key": "61f04859-4732-48ec-a390-5bc0b0b05ada"
      }
    },
    {
      "key": "1b1563f6-c83e-4fcb-8936-d25cd10dbbd5",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students trace the code to predict the output. Give students enough time to solve independently then quietly share with a neighbor. Ask students to share with the class before clicking through the slide animation to review the solution. Discuss any questions they may have.",
        "name": "Predict the Output",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "This warm up is a review of the previous lessons. Encourage students to reference resources, including previous handouts, to help them recall rules of evaluation, accessor methods, and the difference between `System.out.print` and `System.out.println`. Remind students that an `int` combined with a `double` results in a `double`."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "1b1563f6-c83e-4fcb-8936-d25cd10dbbd5",
        "lesson_activity.key": "c015f4e1-9c85-4e77-9bd9-623543233163"
      }
    },
    {
      "key": "13382f43-62ac-42d5-8a43-e3c0989e35e7",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student two sticky notes. Have students take out their `Shape` class foldable and Main Method.",
        "duration": "7",
        "name": "Mutator Methods Introduction",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If students misplace their foldable or Main Method, have them share with a partner."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "13382f43-62ac-42d5-8a43-e3c0989e35e7",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "74e44812-07a3-4e4e-91b4-b96abf487e76",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** You learned how to get the value of `private` instance variables using accessors. If you wanted to change the value of the `private` instance variable `myOutline`, what could you do?\n\n**Discussion Goal:** Students realize that there is currently no way to update instance variables from outside the class. Students may suggest adding another method.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students may suggest opening up the foldable. Remind students that since the instance variables are `private`, the values are only accessible from inside the class. Students may suggest creating a new object with the updated price, but remind them that this approach would not follow the DRY principle.\n\nStudents may also suggest making the instance variables `public`. While this does solve the problem at hand, it creates a host of new problems related to the security of any value in an instance variable. By making an instance variable `public`, any program can change the value."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "74e44812-07a3-4e4e-91b4-b96abf487e76",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "c517783d-dd53-4233-b3f4-250204d55d4f",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Just like how we added accessor methods to get values, we can add mutator methods to change values. A mutator method is `public`, which means we can access it from outside of the class, unlike the `private` instance variables. Let's add a mutator method to our foldable.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "c517783d-dd53-4233-b3f4-250204d55d4f",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "35c263b5-326f-4157-8e5e-5010f64366fd",
      "position": 4,
      "properties": {
        "description": "**Do This:** Demonstrate adding a mutator method for the `outline` instance variable:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> On the outside of the `Shape` class foldable, write `public void setOutline(String s)` under Methods. This method can change the value stored in the `outline` instance variable.\n\n**Do This:** Demonstrate calling the mutator method for the `outline` instance variable:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> On a sticky note, write `myTriangle.setOutline(\"squiggly\")`. Place this sticky note in the Code section of the Main Method to call this method from the `Shape` class.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Open the foldable to find the `outline` instance variable. Cross out the previous `outline` value and replace it with `\"squiggly\"`.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Fold the `\"squiggly\"` sticky note and close the foldable.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *What are the similarities between the foldable activity for accessors and mutators?* \n* *What are the differences?*\n\n**Discussion Goal:** Students note the parallels between the foldable activity for accessors and mutators. Both methods start on the outside since these are `public`. Both open the foldable because the methods have access to the class’s instance variables. However, only the accessor foldable placed a sticky note on the outside when it returned a value, while only the mutator foldable changes a sticky note inside."
      },
      "seeding_key": {
        "activity_section.key": "35c263b5-326f-4157-8e5e-5010f64366fd",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "e06c5f4b-e15e-4148-a9f8-1f11184eef15",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Mutator Methods video.",
        "duration": "10",
        "name": "Dessert Class Mutator Methods"
      },
      "seeding_key": {
        "activity_section.key": "e06c5f4b-e15e-4148-a9f8-1f11184eef15",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "b903dccb-45fa-4e9a-9f13-99020af78b0c",
      "position": 6,
      "properties": {
        "description": "Now that we see how mutator methods work, let's see how we can use them in the `Dessert` class so the owner can easily change information about her `Dessert` objects after she makes more!",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "b903dccb-45fa-4e9a-9f13-99020af78b0c",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "8c920980-c01c-4ed7-966a-01c08fddc74f",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 1 on Code Studio. Students write mutator methods for each instance variable in the `Dessert` class, then call the mutator to update `quantity` on Level 2. Have students proceed to Level 3 to complete the Check for Understanding.",
        "progression_name": "Dessert Class Mutator Methods"
      },
      "seeding_key": {
        "activity_section.key": "8c920980-c01c-4ed7-966a-01c08fddc74f",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "77f77107-570f-48b4-bee5-00ef8b3314b0",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What values would not make sense for the `quantity` instance variable?*\n\n**Discussion Goal:** Students share that a negative `quantity` does not make sense.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What could we do to make sure that `quantity` is not set to a negative value?*\n\n**Discussion Goal:** Students share that the mutator should check for negative values before updating the `quantity` instance variable.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show students a possible solution to handle a negative value for `quantity`. Connect to how we dealt with this in the constructor, but we should also check in the mutator method. Remind students that initializing an object calls the constructor only once, but we can call a mutator method multiple times.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "This discussion is similar to a previous one around invalid arguments in the constructor. Do not spend too much time here to ensure students have enough time to code review at the end of the lesson."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "77f77107-570f-48b4-bee5-00ef8b3314b0",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "a3764c3a-b623-41d2-af6b-f82c199c6b7d",
      "position": 9,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What is printed?*\n\n**Discussion Goal:** This is the same question as the warmup, but with an accessor call replaced with a mutator call. Although students have not seen this compiler error before, students make connections with the foldable activity.\n\n**Do This:** Click through the animated slide to show the solution.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Explain why there is a compiler error. `void` methods do not return a value, and therefore cannot be part of an expression or in `System.out.print`. Connect to the mutator foldable that did not have a new sticky note on the outside as a return value."
      },
      "seeding_key": {
        "activity_section.key": "a3764c3a-b623-41d2-af6b-f82c199c6b7d",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "64db2d0e-5325-4950-867d-1119a1e3f0cb",
      "position": 10,
      "properties": {
        "description": "Remember that we only needed to add accessor methods for the additional attributes of the `Cake` class because `Dessert` inherited all the other accessor methods from `Dessert`. Similarly, we only need to write mutator methods for those additional attributes.",
        "duration": "10",
        "name": "Subclass Mutator Methods",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "64db2d0e-5325-4950-867d-1119a1e3f0cb",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "a20fd066-dc8b-4c19-a42b-cd6e23944a74",
      "position": 11,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *When we write the mutators for `Cake`, which attributes should we check for values that don't make sense?*\n\n**Discussion Goal:** Students share that the mutator method should check `layers` for negative values before updating the instance variable.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *The owner wants the price of a `Cake` to be based on the number of layers. `Cake`s must have at least one layer. For example, suppose a `Cake` has 2 layers, and the `price` is $1.00. When she updates the `layers` to 3, the new `price` should be $1.50. Explain in pseudocode how to solve this problem.*\n\n**Discussion Goal:** Students share that the mutator method should check `layers` for negative values. They use the previous value of `layers` and the argument to the mutator method to calculate and update the `price`. Finally, they update the `layers` instance variable.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Although students haven’t learned casting yet, students should remember that dividing two `int`s will equal an `int`; therefore, they need to first multiply the `price` since it’s a `double`. Their pseudocode expression should look like `price * newLayers / oldLayers`."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "a20fd066-dc8b-4c19-a42b-cd6e23944a74",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "2b0222d7-51ba-4db4-8855-4ebaf7d14106",
      "position": 12,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show students pseudocode to solve this problem. Explain that students will be translating this to code in their next level."
      },
      "seeding_key": {
        "activity_section.key": "2b0222d7-51ba-4db4-8855-4ebaf7d14106",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "9b35b465-0ef3-4fb7-97c4-9fdd9954bd04",
      "position": 13,
      "properties": {
        "description": "**Do This:**\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Direct students to Level 4 on Code Studio. Students translate the pseudocode to solve the previous problem, then call the mutator method on Level 5 to test their code.\n* When students run into bugs accessing the `private` instance variables of the superclass, move onto the discussion.",
        "progression_name": "Mutator Methods for the Subclass"
      },
      "seeding_key": {
        "activity_section.key": "9b35b465-0ef3-4fb7-97c4-9fdd9954bd04",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "6589c1ed-94bd-45b5-b7c1-d250407e9de5",
      "position": 14,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Some of you may have tried to update the `price` by accessing it directly. Why do you think this causes a compiler error?*\n\n**Discussion Goal:** Although students have not seen this compiler error before, students realize that `price` is `private` to the superclass `Dessert` and not accessible in `Cake`.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Explain to students that because instance variables are `private`, we cannot access them outside the class, even in subclasses. We must use accessors and mutators to access the `private` instance variables of a superclass."
      },
      "seeding_key": {
        "activity_section.key": "6589c1ed-94bd-45b5-b7c1-d250407e9de5",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "1e977b13-4aa1-4740-93fd-412aa4cd808d",
      "position": 15,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students resume Level 4 on Code Studio. Students translate the pseudocode to solve the previous problem, then call the mutator method on Level 5 to test their code.",
        "progression_name": "Mutator Methods for the Subclass"
      },
      "seeding_key": {
        "activity_section.key": "1e977b13-4aa1-4740-93fd-412aa4cd808d",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "65890ccb-5a05-438b-b5e7-c5d45e680f42",
      "position": 16,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *Why would you not want to add a mutator for a private instance variable? Give an example from `Dessert` or `Cake`.*\n\n**Discussion Goal:** Students share that other classes should not change some private instance variables after initialization. For example, the owner may not want to change the `flavor` since the `flavor` might be the core of a dessert."
      },
      "seeding_key": {
        "activity_section.key": "65890ccb-5a05-438b-b5e7-c5d45e680f42",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "ef7d62ef-8b3f-4d99-a903-4f68c1282c20",
      "position": 17,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 6 on Code Studio. Students add mutators for the subclasses that they implemented (`Cookie`, `Pie`, `Donut`, or `Cupcake`) as necessary. For each private instance variable that they do not add a mutator, they leave a comment next to the variable explaining why. One of the mutators must call a superclass’s accessor and call a superclass’s mutator.",
        "progression_name": "Mutator Methods for the Subclass"
      },
      "seeding_key": {
        "activity_section.key": "ef7d62ef-8b3f-4d99-a903-4f68c1282c20",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "6333ffcd-3443-4a4a-b850-c437bde40c66",
      "position": 18,
      "properties": {
        "description": "You have used code reviews before to improve code and share knowledge. Let's take a moment to provide feedback to each other. Don't forget to follow ART – ask questions, raise flags about confusing code, and tag awesome code!",
        "duration": "7",
        "name": "Code Review",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "6333ffcd-3443-4a4a-b850-c437bde40c66",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "96542202-9b4e-4b7e-96c0-5925ffccb16b",
      "position": 19,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Pair students within a review group to review each other's projects in Code Studio. Students request, receive, and review feedback on Level 6."
      },
      "seeding_key": {
        "activity_section.key": "96542202-9b4e-4b7e-96c0-5925ffccb16b",
        "lesson_activity.key": "dd3d54c7-c86b-4aba-8f2c-dffc4baa1e63"
      }
    },
    {
      "key": "98056f77-3e62-478a-a369-8a833d300a3d",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** After receiving feedback during the peer review, they reflect in the form of Glows, Grows, and Want-to-Knows.",
        "name": "Glows, Grows, Want-to-Knows",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students have already done a Glows, Grows, and Want-to-Knows activity to give feedback. Now students are reflecting on the feedback they receive. Students should choose to share one or more of the following:\n* *Glow: What is awesome about writing your code?*\n* *Grow: What is one action you can take to improve your code?*\n* *Want-to-Know: What questions do you have about today?*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "98056f77-3e62-478a-a369-8a833d300a3d",
        "lesson_activity.key": "37505638-a5ad-42a1-a4bb-ec868ecf3b2d"
      }
    },
    {
      "key": "0e9cd505-9e02-4d15-9059-f56385fd24b6",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Key Vocabulary"
      },
      "seeding_key": {
        "activity_section.key": "0e9cd505-9e02-4d15-9059-f56385fd24b6",
        "lesson_activity.key": "37505638-a5ad-42a1-a4bb-ec868ecf3b2d"
      }
    },
    {
      "key": "78db9c4d-d9e0-49d3-962e-0be172c05fb2",
      "position": 3,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding",
        "progression_name": "Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "78db9c4d-d9e0-49d3-962e-0be172c05fb2",
        "lesson_activity.key": "37505638-a5ad-42a1-a4bb-ec868ecf3b2d"
      }
    },
    {
      "key": "b6242d8c-7d2e-4c66-bea3-f0b4a27450f9",
      "position": 1,
      "properties": {
        "description": "We have learned a lot of new vocabulary in this unit. Today, we will start by doing a card sort to review all of the new terms we have learned.",
        "duration": "8",
        "name": "Vocabulary Card Sort",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "b6242d8c-7d2e-4c66-bea3-f0b4a27450f9",
        "lesson_activity.key": "877d900a-af87-4667-ac37-790e0f7153d0"
      }
    },
    {
      "key": "0bcc4cff-6f87-4037-806e-5533f5a2e228",
      "position": 2,
      "properties": {
        "description": "**Group:** Place students in pairs or groups of three.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each group a set of code segment cards and 15-20 sticky notes. Distribute a pair of scissors to each group. As you are giving directions, students cut out the card sets.\n\n**Do This:**\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Describe the card sort gameplay.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Click through the slide animations to display category themes and prompt students to discuss their vocabulary choices by sharing with the class. \n    * Method Type - Possible categories include: constructor, accessor, mutator\n    * Accessibility - Possible categories include: `public`, `private`\n    * Output - Possible categories include: `void`, `int`, `double`, `boolean`\n    * Operators - Possible categories include: arithmetic operators, compound operators, neither, both",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "While students are grouping their cards, circulate the classroom to notice different category choices highlighted in the share out. For example, one group may choose to identify constructor, accessor and mutator as their method type categories while another may choose to identify `void` methods vs methods that return. Calling on several groups will increase the vocabulary terms shared between members of the class."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "0bcc4cff-6f87-4037-806e-5533f5a2e228",
        "lesson_activity.key": "877d900a-af87-4667-ac37-790e0f7153d0"
      }
    },
    {
      "key": "bc144532-d32e-44d1-b8c3-1395510d01ec",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *Which categories were difficult to sort methods into?*\n* *What additional clarity do you need?*\n\n**Discussion Goal:** Students share terms and categories that they struggled with and ask questions to obtain clarification.",
        "duration": "2",
        "name": "Debrief"
      },
      "seeding_key": {
        "activity_section.key": "bc144532-d32e-44d1-b8c3-1395510d01ec",
        "lesson_activity.key": "877d900a-af87-4667-ac37-790e0f7153d0"
      }
    },
    {
      "key": "ad5589d8-d5fa-4a78-82d1-d23088469191",
      "position": 1,
      "properties": {
        "description": "In the last few lessons, we focused on individual components of a class: constructors, accessor methods, and mutator methods. Our goal today is to think about objects and how we would like to visualize object information. When we want to see the value stored in an instance variable, we print the return value of our accessor method. ",
        "duration": "12",
        "name": "Printing an Object",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "ad5589d8-d5fa-4a78-82d1-d23088469191",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "26c62399-a02a-4b06-83e0-fea060eef258",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Lead students through the following questions by clicking through the animated slide. Take a minute to let students hypothesize what happens when printing an object.\n* *When you pass a flavor into `System.out.print()`, what is printed?*\n* *When you pass a price into `System.out.print()`, what is printed?*\n* `What do you think would print if we tried to pass a `Dessert` as the argument to `System.out.print()`?*\n\n**Discussion Goal:** Students share ideas about the potential output of each statement, such as the specific values for the instance variable. Students become curious about how printing an object would work. ",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Guide students towards noticing that `System.out.print()` always prints a `String` to the console. There are many ways to present the information of an object. Possible questions to ask include:\n* *What makes printing a `Dessert` (an object) different from printing `flavor` or `price` (an instance variable)?*\n* *What is one possible output?  Can you think of another? How does Java choose one?*\n* *Do you think this statement would compile and run?*"
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "26c62399-a02a-4b06-83e0-fea060eef258",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "5c1b9edd-4111-4ff5-9486-b5fad3d9a66a",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 1 on Code Studio. Students run code printing a `Dessert` object to check their prediction.",
        "progression_name": "Printing an Object",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Alternatively, run the code for the class for students to compare with their predictions."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "5c1b9edd-4111-4ff5-9486-b5fad3d9a66a",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "472debad-b121-41c2-b19a-a1ca2de80dcf",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *What did you notice about the output of this program?*\n* *Why did this happen?*\n\n**Discussion Goal:** Students identify a pattern in the output and recognize the numbers at the end are unique for each object and each student. They cannot predict the numbers based on the attributes of the object.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show The `toString` Method video.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What kind of information would we want `Dessert`’s `toString()` to return?*\n\n**Discussion Goal:** Students outline a solution to override the `Object toString()` method within `Dessert`.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students may question the purpose of `toString()` when they already have `printInfo()`. The subtle difference is that `printInfo()` always prints a `String`, while `toString()` creates a `String` but does not print it. This concept is addressed later in the lesson, but it may be necessary to preview here if students need motivation."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "472debad-b121-41c2-b19a-a1ca2de80dcf",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "66f78ad6-a46b-423c-af2e-3c03fe426e7e",
      "position": 5,
      "properties": {
        "description": "You have likely noticed that the return of `toString()` is starting to look a lot like `Dessert`’s `printInfo()`. Given that `toString()` is already built into Java and software engineers apply the DRY principle whenever possible, let’s take some time to override `Object`’s `toString()` and refactor our code to use it.",
        "duration": "18",
        "name": "Writing toString()",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "66f78ad6-a46b-423c-af2e-3c03fe426e7e",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "78c650e6-2bdc-4e9d-99dc-037c5876f143",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 2 on Code Studio. Students write a `toString()` method to override the `Object`’s `toString()` and refactor `printInfo()` to call the `toString()` using this.",
        "progression_name": "Overriding toString()"
      },
      "seeding_key": {
        "activity_section.key": "78c650e6-2bdc-4e9d-99dc-037c5876f143",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "265674d5-2944-440f-94cb-83e12d2d1b12",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** After students have written their `toString()` method and refactored `printInfo()`, remind students how to print information to the console using the `System.out.print()` Call and Response.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Return students to Level 2 on Code Studio to test their implementations."
      },
      "seeding_key": {
        "activity_section.key": "265674d5-2944-440f-94cb-83e12d2d1b12",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "c1dc52c0-e389-49f9-a80e-b1cbb2149831",
      "position": 8,
      "properties": {
        "description": "**Do This:**\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Introduce formatted output using escape sequences.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Define escape sequences.\n* Have students predict the output before clicking through the animated slides to reveal the answer.\n    * <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> String formatted with a quote\n    * <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> String formatted with new lines\n    * <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> String formatted with backslashes"
      },
      "seeding_key": {
        "activity_section.key": "c1dc52c0-e389-49f9-a80e-b1cbb2149831",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "9ee545bc-2eb8-4618-b7c0-7d0e3e8c98af",
      "position": 9,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 3 on Code Studio. Students refactor `toString()` and `printInfo()` to include formatting. Have students proceed to Level 4 to complete the Check for Understanding.",
        "progression_name": "Formatting toString()"
      },
      "seeding_key": {
        "activity_section.key": "9ee545bc-2eb8-4618-b7c0-7d0e3e8c98af",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "ddff338d-92e7-4dba-9912-70ca54e0b1cb",
      "position": 10,
      "properties": {
        "description": "While `printInfo()` always prints the string, `toString()` creates the string. This subtle difference is something we can leverage to write DRY code: When writing `toString()` methods for objects with a “has-a” relationship, we can call the `toString()` of objects stored as instance variables when writing the class’s own `toString()`.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "ddff338d-92e7-4dba-9912-70ca54e0b1cb",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "e489842f-5592-4b8f-bc6e-c7b4b896905b",
      "position": 11,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 5 on Code Studio. Students write a `toString()` method for `FoodTruck`, which calls the `toString()` of the `Dessert`.",
        "progression_name": "FoodTruck toString()"
      },
      "seeding_key": {
        "activity_section.key": "e489842f-5592-4b8f-bc6e-c7b4b896905b",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "8b034afa-0cd7-4d91-9cee-11f38cbb78bb",
      "position": 12,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Discuss the alternate approach to Level 5. Instead of calling `toString()` of the `Dessert`, when an object is concatenated with a `String`, the object’s `toString()` is implicitly called."
      },
      "seeding_key": {
        "activity_section.key": "8b034afa-0cd7-4d91-9cee-11f38cbb78bb",
        "lesson_activity.key": "0d439666-0e5c-4204-b738-0e63c5a6a2e2"
      }
    },
    {
      "key": "71bfe194-0df2-4dd0-a543-55ca35191d90",
      "position": 1,
      "properties": {
        "description": "Over the next week, you will Show What You Know! Like in the last unit, we will begin with the unit project, then we will spend a day practicing how to answer AP-style free-response questions. We will then wrap up the unit with a multiple-choice assessment.",
        "name": "Project Introduction",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "71bfe194-0df2-4dd0-a543-55ca35191d90",
        "lesson_activity.key": "48cf4bd1-3a21-43c4-aecb-3c569dbf8a77"
      }
    },
    {
      "key": "a0e0e0ef-1124-4fd8-a87f-8c8592e1ddd3",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Share an overview of the Neighborhood Store Management Project with the students:\n* Just as students have helped the Project Mercury Pastries Food Truck with their inventory, another business would like to develop a store management system.\n* Students will be able to work for a business of their choice.\n* Students will define an object for what the business would offer along with two subclasses.\n\n**Distribute:** Give each student several sticky notes.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Ask students to brainstorm possible businesses and inventory items. They should include one business and item per sticky. Ask students to share a few ideas with classmates and then post all of their stickies in a group in the classroom. Keep these brainstorming notes for the next class, where students will use them as an ideas bank to begin working.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a copy of the Unit 2 Guide."
      },
      "seeding_key": {
        "activity_section.key": "a0e0e0ef-1124-4fd8-a87f-8c8592e1ddd3",
        "lesson_activity.key": "48cf4bd1-3a21-43c4-aecb-3c569dbf8a77"
      }
    },
    {
      "key": "a6d05658-b7bc-4ff8-bbc2-4820808c8f44",
      "position": 3,
      "properties": {
        "description": "The Unit 2 Guide will help you remember what you have learned in this unit. Go over all of the lessons and think to yourself if you can say \"I can..\" with each lesson objective. Review the vocabulary. Look over the reference section for code. You don't need to memorize any particular class for the assessment, but it's helpful to remember how everything works together. ",
        "remarks": true,
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "The unit guide provides a review of the objectives, vocabulary, and programming concepts to help students prepare for the assessment. If time permits, you can choose to quickly review any parts of the unit that are still confusing for students."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "a6d05658-b7bc-4ff8-bbc2-4820808c8f44",
        "lesson_activity.key": "48cf4bd1-3a21-43c4-aecb-3c569dbf8a77"
      }
    },
    {
      "key": "df6f5d62-31f2-4edc-8295-cddfac810ebe",
      "position": 4,
      "properties": {
        "description": "*Check For Understanding Question(s) and solutions can be found in each lesson on Code Studio. These questions can be used for an exit ticket.*",
        "name": "Assessment: Check for Understanding",
        "progression_name": "Check for Understanding"
      },
      "seeding_key": {
        "activity_section.key": "df6f5d62-31f2-4edc-8295-cddfac810ebe",
        "lesson_activity.key": "48cf4bd1-3a21-43c4-aecb-3c569dbf8a77"
      }
    },
    {
      "key": "8d752129-433a-4902-9786-6e05bb30f366",
      "position": 1,
      "properties": {
        "description": "The unit assessment project assesses proficiency in the knowledge and skills developed in this unit. It is completed in three class periods to plan and create the program, including implementing a superclass to represent an item sold by the chosen business and two subclasses that extend the superclass. Student participation in planning and feedback activities to improve their programs and solve problems reinforce software development practices and self-image as a software engineer. Lessons 11, 12, and 13 collectively include instructions for the three-day project.\n\nIf there is not enough time for the three-day project, a one-day option is available that achieves the targeted learning objectives and goals. If using this option, refer to the [Neighborhood Store Management Project 1 Day Lesson Plan](https://docs.google.com/document/d/1o4Lopm_hRu-067bpJsfMU7zD4bb-kbYcSmhSdvvAw3g/edit?usp=sharing), which includes a one-day version of the [Neighborhood Store Management Project Planning Guide](https://docs.google.com/document/d/13ZeJe_Ocd-jgrclC6L0fJKifuv11v3LWTk5Lr410R_E/edit?usp=sharing). Direct students to develop their program on Lesson 13 so they can submit their project. While the one-day option covers the learning objectives and goals, it shortens planning and reflection time. Consider this tradeoff when deciding which version to use."
      },
      "seeding_key": {
        "activity_section.key": "8d752129-433a-4902-9786-6e05bb30f366",
        "lesson_activity.key": "9b5c39ee-d887-4f4e-b6b6-7a35616b8283"
      }
    },
    {
      "key": "587522d7-aea4-4497-bb1b-1179209ff1e8",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Display:** Show the Project Mercury Pastries Food Truck UML.",
        "name": "Project Mercury Pastries Food Truck UML"
      },
      "seeding_key": {
        "activity_section.key": "587522d7-aea4-4497-bb1b-1179209ff1e8",
        "lesson_activity.key": "2834442e-d56f-4b83-9a0a-9c88ddfe0de9"
      }
    },
    {
      "key": "77f75d64-e1ea-49b4-ab33-0eb9f99e8dc9",
      "position": 2,
      "properties": {
        "description": "This is a UML diagram for the Project Mercury Pastries Food Truck that we developed throughout this unit. A UML diagram is a visual representation of a class. It is an easy template for software engineers to follow to organize their classes.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "77f75d64-e1ea-49b4-ab33-0eb9f99e8dc9",
        "lesson_activity.key": "2834442e-d56f-4b83-9a0a-9c88ddfe0de9"
      }
    },
    {
      "key": "ed92d219-1d84-443a-a4dd-0a6eb384a0a0",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to display the prompts.\n* *What do you notice?* \n* *What do you wonder?* \n* *How might this UML relate to your project?*\n\n**Discussion Goal:** Students should highlight how the UML diagram organizes information. Points to bring out include:\n* Each super or subclass has a box divided into three sections. The top section has the class name, the following section includes class attributes, and the bottom section includes class methods.\n* \\+ signs designate public attributes and methods, while - signs designate private attributes and methods.\n* Subclasses are documented in their own boxes, and we show an inheritance relationship by drawing an open arrow from the subclass to the superclass.\n* Students realize they could use a UML to plan out their Neighborhood Store Management Project.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Students may ask what UML stands for. UML stands for Unified Modeling Language, which provides a way for software engineers to visualize their programs."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "ed92d219-1d84-443a-a4dd-0a6eb384a0a0",
        "lesson_activity.key": "2834442e-d56f-4b83-9a0a-9c88ddfe0de9"
      }
    },
    {
      "key": "31314c5f-6c26-4b11-a0df-be677986ca6f",
      "position": 1,
      "properties": {
        "description": "**Group:** Pair students or allow students to choose their partners. If you have an odd number of students, a student may choose to work individually or form a group of three.",
        "duration": "5",
        "name": "Introduction"
      },
      "seeding_key": {
        "activity_section.key": "31314c5f-6c26-4b11-a0df-be677986ca6f",
        "lesson_activity.key": "43fa29bc-b4dc-4c30-b604-038e43ad959c"
      }
    },
    {
      "key": "1aa3adb6-77fe-4be9-919b-dde2bea766c7",
      "position": 2,
      "properties": {
        "description": "Yesterday, you brainstormed different businesses and their products that might exist in The Neighborhood. Over the next three days, you will work with a partner to write your own store management program for a business of your choosing. Your first task with your partner is to choose your business. ",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "1aa3adb6-77fe-4be9-919b-dde2bea766c7",
        "lesson_activity.key": "43fa29bc-b4dc-4c30-b604-038e43ad959c"
      }
    },
    {
      "key": "17d8a036-2701-41ad-b3b4-d1a24b78b096",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Each pair should choose a sticky note from yesterday’s wrap up. Students may choose one they wrote, choose one from another student, or develop a new idea entirely. Students return to their seats after selecting an idea.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give each student a copy of the Neighborhood Store Management Project Planning Guide to each student. \n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** As a class, read through the Project Description on the first page of the Neighborhood Store Management Project Planning Guide and review the rubric on the last page."
      },
      "seeding_key": {
        "activity_section.key": "17d8a036-2701-41ad-b3b4-d1a24b78b096",
        "lesson_activity.key": "43fa29bc-b4dc-4c30-b604-038e43ad959c"
      }
    },
    {
      "key": "35acf9e0-0c29-4e51-a21e-291b906409d8",
      "position": 4,
      "properties": {
        "description": "Before you begin writing your program, you will need to plan out your class. Your first task is to fill in a UML diagram for the business you’ve chosen, similar to the Project Mercury Pastries Food Truck UML that we reviewed during the warm up.",
        "duration": "7",
        "name": "Planning Your Class: UML",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "35acf9e0-0c29-4e51-a21e-291b906409d8",
        "lesson_activity.key": "43fa29bc-b4dc-4c30-b604-038e43ad959c"
      }
    },
    {
      "key": "2cce4157-734b-4788-a08b-eb73af0723f5",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students work with their partners to complete the UML diagram template for their business. If students finish early, encourage them to check their UML against the rubric to ensure they have all necessary methods, constructors, and subclasses represented."
      },
      "seeding_key": {
        "activity_section.key": "2cce4157-734b-4788-a08b-eb73af0723f5",
        "lesson_activity.key": "43fa29bc-b4dc-4c30-b604-038e43ad959c"
      }
    },
    {
      "key": "b7778848-4c02-4737-bb92-59c46126d4f5",
      "position": 6,
      "properties": {
        "description": "Once our UML is complete, our next step is to provide structure to our class using comments. When you log into Code Studio, you will find a template that refers to a generic store management class. With your partner, edit this template to reflect the class, subclasses, constructors, methods, and instance variables from your UML diagram.",
        "duration": "8",
        "name": "Structuring Your Code",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "b7778848-4c02-4737-bb92-59c46126d4f5",
        "lesson_activity.key": "43fa29bc-b4dc-4c30-b604-038e43ad959c"
      }
    },
    {
      "key": "83d573bd-2ee0-4756-90fc-6876e9a6ade9",
      "position": 7,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Code Studio to edit the template to be specific to the class they planned with their UML diagram. ",
        "progression_name": "Store Management Project",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Encourage students to move on to write their class if they finish editing the template early."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "83d573bd-2ee0-4756-90fc-6876e9a6ade9",
        "lesson_activity.key": "43fa29bc-b4dc-4c30-b604-038e43ad959c"
      }
    },
    {
      "key": "6a2f3fcf-bdd5-45a5-896e-75ee81f79ecd",
      "position": 8,
      "properties": {
        "description": "Now that you have planned your class, you will now begin writing your program. While the final version of this project includes writing subclasses and working in `main`, your goal for today is to complete your first draft of your superclass.",
        "duration": "18",
        "name": "Writing Your Class",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "6a2f3fcf-bdd5-45a5-896e-75ee81f79ecd",
        "lesson_activity.key": "43fa29bc-b4dc-4c30-b604-038e43ad959c"
      }
    },
    {
      "key": "614c3c3b-a97f-400c-a1b1-b878a903bc26",
      "position": 9,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to continue developing their class on Level 1 in Code Studio."
      },
      "seeding_key": {
        "activity_section.key": "614c3c3b-a97f-400c-a1b1-b878a903bc26",
        "lesson_activity.key": "43fa29bc-b4dc-4c30-b604-038e43ad959c"
      }
    },
    {
      "key": "e4ca1656-17b4-4a22-aa46-4ab2b6021b67",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students complete the Day 1 Daily Reflection section in their Project Planning Guide.",
        "name": "Daily Reflection",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "This modified version of a daily Scrum meeting allows students to process their accomplishments so far, where they want to focus on during the next lesson, and identify obstacles they may need to overcome to move forward. Scrum is an agile project management methodology used in software development."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "e4ca1656-17b4-4a22-aa46-4ab2b6021b67",
        "lesson_activity.key": "d80a5e32-b009-44c3-b958-ecbcbb0e8310"
      }
    },
    {
      "key": "9398a92a-9ed2-41c6-a7e2-1753f678632d",
      "position": 2,
      "properties": {
        "description": "**Neighborhood Store Management Project Planning Guide:** You can use pages 2-3 of the Store Management Project Planning Guide as an optional completion assessment. Additionally, you can review students’ daily reflections to check in on any obstacles that may need attention in the coming days.",
        "name": "Assessment (Optional)"
      },
      "seeding_key": {
        "activity_section.key": "9398a92a-9ed2-41c6-a7e2-1753f678632d",
        "lesson_activity.key": "d80a5e32-b009-44c3-b958-ecbcbb0e8310"
      }
    },
    {
      "key": "ef812af6-c377-4789-9702-12f95834ca0f",
      "position": 1,
      "properties": {
        "description": "Today you will continue to develop your Neighborhood Store Management program. Yesterday, we created our superclass, and today, you will individually write a subclass that extends the superclass. If you’re in a group of two, each person will write a subclass. Review the Project Planning Guide to make sure you meet the project requirements.\n\nOf course, as a software engineer, it is important to give and receive feedback on your programs, so we will be taking a moment to do code reviews after about 15 minutes of development work.",
        "duration": "15",
        "name": "Subclass Development",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "ef812af6-c377-4789-9702-12f95834ca0f",
        "lesson_activity.key": "e14a1eab-cef2-4e19-a935-840a225586ec"
      }
    },
    {
      "key": "c70179f7-df9f-4312-9a87-8f01168495d1",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Level 1 on Code Studio to continue developing their program for their Neighborhood Store Management Project. Remind students to commit their code as they write their subclass regularly.",
        "progression_name": "Store Management Project",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Depending on your class size, you may have students working on this project individually or in a group of three. If students are working individually, they should only be responsible for one subclass. Similarly, groups of three would be responsible for three subclasses - one per student.\n\nStudents will need to share their superclass code with their partner to copy and paste into their individual Java Lab workspace."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "c70179f7-df9f-4312-9a87-8f01168495d1",
        "lesson_activity.key": "e14a1eab-cef2-4e19-a935-840a225586ec"
      }
    },
    {
      "key": "00f73f94-4c80-419b-a4bc-190aa35bf9f4",
      "position": 3,
      "properties": {
        "description": "Let's take a moment to provide feedback to each other through a code review. Don't forget to follow ART – ask questions, raise flags about confusing code, and tag awesome code! ",
        "duration": "10",
        "name": "Code Review"
      },
      "seeding_key": {
        "activity_section.key": "00f73f94-4c80-419b-a4bc-190aa35bf9f4",
        "lesson_activity.key": "e14a1eab-cef2-4e19-a935-840a225586ec"
      }
    },
    {
      "key": "be20b290-9571-4159-a62a-0efe5c4c9bc4",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Pair students within a review group to review each other's projects in Code Studio. Students request, receive, and review feedback on their Neighborhood Store Management Project."
      },
      "seeding_key": {
        "activity_section.key": "be20b290-9571-4159-a62a-0efe5c4c9bc4",
        "lesson_activity.key": "e14a1eab-cef2-4e19-a935-840a225586ec"
      }
    },
    {
      "key": "30dca54d-a9a6-43a4-b75a-07fbaa7c38d7",
      "position": 5,
      "properties": {
        "description": "While feedback from peers is important, software engineers always check to make sure they’ve met the requirements specified by their clients. Take the next five minutes to check the code you’ve written so far against the rubric in the project guide. If your project was scored today, which requirements have you met? Which still needs work?",
        "duration": "5",
        "name": "Rubric Review",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "30dca54d-a9a6-43a4-b75a-07fbaa7c38d7",
        "lesson_activity.key": "e14a1eab-cef2-4e19-a935-840a225586ec"
      }
    },
    {
      "key": "396276d8-8290-4741-a051-e52c17e9acc5",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students work in pairs to assess their project against the rubric outlined in the Project Planning Guide."
      },
      "seeding_key": {
        "activity_section.key": "396276d8-8290-4741-a051-e52c17e9acc5",
        "lesson_activity.key": "e14a1eab-cef2-4e19-a935-840a225586ec"
      }
    },
    {
      "key": "8e8d29b9-f0d1-4d9f-a087-43188bbbec86",
      "position": 7,
      "properties": {
        "description": "Between the code review and your review of the rubric, you have a lot of feedback to help improve your code! Software engineers are constantly making improvements to their code and often have to prioritize different updates.",
        "duration": "10",
        "name": "Revisions, Updates, and Reviews",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "8e8d29b9-f0d1-4d9f-a087-43188bbbec86",
        "lesson_activity.key": "e14a1eab-cef2-4e19-a935-840a225586ec"
      }
    },
    {
      "key": "d7a4fadb-300b-48b2-95ac-3dc976c44b76",
      "position": 8,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What are some factors that software engineers might need to consider as they prioritize which changes to make to their code?*\n\n**Discussion Goal:** Students identify that software engineers may have limited time, money, or resources to make every possible change to their code. Students may have different ideas of how to prioritize work. Some items to highlight are prioritizing requirements outlined by the client (in this case, the rubric requirements), prioritizing work based on time, or prioritizing certain items because they have dependencies.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students review feedback from both the code review process and their self-assessment against the rubric to create a prioritized list of upgrades, changes, and things they still need to complete. They should complete this process on page 4 of the Project Planning Guide, which outlines steps for prioritizing their list.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If students finish their prioritized list early, encourage them to start working on their #1 priority."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "d7a4fadb-300b-48b2-95ac-3dc976c44b76",
        "lesson_activity.key": "e14a1eab-cef2-4e19-a935-840a225586ec"
      }
    },
    {
      "key": "9d466810-171d-407a-a7c7-172dd6b67979",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students should complete the Day 2 Daily Reflection section in their Project Planning Guide.",
        "name": "Daily Reflection"
      },
      "seeding_key": {
        "activity_section.key": "9d466810-171d-407a-a7c7-172dd6b67979",
        "lesson_activity.key": "0185badd-4715-4375-ad75-25c060640f62"
      }
    },
    {
      "key": "4c228773-8c90-43a7-8ace-b471e5b17c3c",
      "position": 2,
      "properties": {
        "description": "Tomorrow you will finish writing your program. Think about the prioritized list you and your partner created as you decide how to finalize and submit your program.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "4c228773-8c90-43a7-8ace-b471e5b17c3c",
        "lesson_activity.key": "0185badd-4715-4375-ad75-25c060640f62"
      }
    },
    {
      "key": "2d18c1fe-1715-4273-bdb1-c01ea127d5ad",
      "position": 3,
      "properties": {
        "description": "**Neighborhood Store Management Project Planning Guide:** You can collect the Daily Reflection and Prioritized Lists as an optional completion assessment.",
        "name": "Assessment (Optional)"
      },
      "seeding_key": {
        "activity_section.key": "2d18c1fe-1715-4273-bdb1-c01ea127d5ad",
        "lesson_activity.key": "0185badd-4715-4375-ad75-25c060640f62"
      }
    },
    {
      "key": "3c9a7aa8-e155-4da6-be88-64592839a59b",
      "position": 1,
      "properties": {
        "description": "Yesterday, you created a prioritized list of changes and upgrades to make to your Neighborhood Store Management Project. Take the next 10 minutes to finalize your super and subclass code to reflect the feedback you received yesterday.",
        "duration": "10",
        "name": "Revising Classes",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "3c9a7aa8-e155-4da6-be88-64592839a59b",
        "lesson_activity.key": "b4b1d9d2-5a2c-408a-ba51-3806155f2d35"
      }
    },
    {
      "key": "c890f348-990c-4f0d-97c5-8963c86e53e7",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to page 4 of their Project Planning Guide to review their list. Direct them to Code Studio to finish developing both their superclass and subclasses. If students finish early, direct them to work on their `main` method.",
        "progression_name": "Store Management Project",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Remind students that they may not get to everything on their prioritized list, and that is okay! Software engineers have to make decisions all the time about which features are most important. We made a prioritized list to ensure that we complete the most important changes and upgrades first, resulting in some of the less important changes not being made at this point."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "c890f348-990c-4f0d-97c5-8963c86e53e7",
        "lesson_activity.key": "b4b1d9d2-5a2c-408a-ba51-3806155f2d35"
      }
    },
    {
      "key": "02dadf37-70bd-4c02-b30e-fb06a18491c4",
      "position": 3,
      "properties": {
        "description": "Now that you have written your classes, you will finish developing your program by writing your main method to provide user interaction. You should also revisit the rubric in the Project Planning Guide to make sure you have included everything you need to meet the project requirements.",
        "duration": "25",
        "name": "Development",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "02dadf37-70bd-4c02-b30e-fb06a18491c4",
        "lesson_activity.key": "b4b1d9d2-5a2c-408a-ba51-3806155f2d35"
      }
    },
    {
      "key": "a53e6318-51fa-491c-af34-7a1c94618d5b",
      "position": 4,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to Code Studio to develop main for their Neighborhood Store Management Project. Have students submit their projects at the end of the allotted time."
      },
      "seeding_key": {
        "activity_section.key": "a53e6318-51fa-491c-af34-7a1c94618d5b",
        "lesson_activity.key": "b4b1d9d2-5a2c-408a-ba51-3806155f2d35"
      }
    },
    {
      "key": "26f5fb43-3048-4f3b-9ec6-e43a2051180f",
      "position": 1,
      "properties": {
        "description": "Congratulations! You have completed your Neighborhood Store Management Project, and you should be proud of the work you have done. We will show off our work through peer presentations to share what you created with your classmates.",
        "name": "Peer Presentations",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "26f5fb43-3048-4f3b-9ec6-e43a2051180f",
        "lesson_activity.key": "a0ee1d64-8b45-4de5-bc54-183af30cb430"
      }
    },
    {
      "key": "6ec86414-80fc-4f4b-8fd6-d95fce0a1bda",
      "position": 2,
      "properties": {
        "description": "**Group:** Place students into groups of three.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students take turns demonstrating their program to the other pairs in their group. After each demonstration, observers ask questions and share feedback with presenters.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Consider using the interview cards to provide structure to this feedback or if you have additional time."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "6ec86414-80fc-4f4b-8fd6-d95fce0a1bda",
        "lesson_activity.key": "a0ee1d64-8b45-4de5-bc54-183af30cb430"
      }
    },
    {
      "key": "2e659e98-029f-4dc9-a836-3cacd2991d10",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to complete the End of Project Self-Reflection on page 5 of the Project Planning Guide. "
      },
      "seeding_key": {
        "activity_section.key": "2e659e98-029f-4dc9-a836-3cacd2991d10",
        "lesson_activity.key": "a0ee1d64-8b45-4de5-bc54-183af30cb430"
      }
    },
    {
      "key": "4f722eee-4064-4538-991c-d3568afa7e24",
      "position": 4,
      "properties": {
        "description": "**Neighborhood Store Management Project:** Use the rubric on the last page of the Store Management Project Planning Guide to assess student projects.",
        "name": "Assessment: Grading the Project"
      },
      "seeding_key": {
        "activity_section.key": "4f722eee-4064-4538-991c-d3568afa7e24",
        "lesson_activity.key": "a0ee1d64-8b45-4de5-bc54-183af30cb430"
      }
    },
    {
      "key": "d0c52bc0-6603-4b8b-84f0-fcbfc02c3d64",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What were some strategies you used while reading the FRQ in Unit 1? What were some keywords you looked for to assist you in answering the question?*\n\n**Discussion Goal:** Students recall using the Close Reading strategy and scoring guidelines in Unit 1.",
        "name": "FRQ Annotate"
      },
      "seeding_key": {
        "activity_section.key": "d0c52bc0-6603-4b8b-84f0-fcbfc02c3d64",
        "lesson_activity.key": "1d0cf061-ec66-4a9c-8959-893e616fe298"
      }
    },
    {
      "key": "97f90472-cc2e-4074-bedd-f19451b0b96b",
      "position": 2,
      "properties": {
        "description": "To get started, we will walk through annotating a free response question from the 2019 AP Computer Science A exam. As we go through it, use the Close Reading strategy to pick out keywords that would assist you in answering the question.",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "97f90472-cc2e-4074-bedd-f19451b0b96b",
        "lesson_activity.key": "1d0cf061-ec66-4a9c-8959-893e616fe298"
      }
    },
    {
      "key": "4cf59115-4f39-42f3-9777-b1347ce29d89",
      "position": 3,
      "properties": {
        "description": "**Group:** Place students in pairs.\n\n**Do This:**\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Distribute a copy of the College Board 2019 FRQ #2 - StepTracker.\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Direct students to annotate the question based on the annotation guide on the slide.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What is the main goal of the overall code segment presented? What concepts and/or information stands out to you?*\n\n**Discussion Goal:** Students identify the goal of the FRQ is to write a class that implements a fitness tracking system. Students point out that the FRQ requires them to create an object to define the minimum number of steps taken in a day to be considered active. Students share and discuss the table that contains sample code as information that stands out.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What questions do you have about approaching this Free Response Question?*\n\n**Discussion Goal:** Students may be unsure about where to begin with the problem. Students ask the following questions:\n* How to start the problem?\n* What skill will the question focus on?\n* Will sample code be provided?\n* How will the FRQ be graded?  ",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Describe the structure of an FRQ. You should identify:\n* There are always four FRQs on the exam, each of which focuses on one skill. Today we practice writing a class and its methods.\n* FRQs are graded using scoring guidelines.\n* FRQs are completed on paper, so students write code by hand.\n\nStudents practice annotating FRQs to develop a structure and plan for developing its solution. More information about the annotation strategy used is available in the CSA FRQ Close Reading resource."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "4cf59115-4f39-42f3-9777-b1347ce29d89",
        "lesson_activity.key": "1d0cf061-ec66-4a9c-8959-893e616fe298"
      }
    },
    {
      "key": "40e48d81-0616-47c8-abef-7331a32d45a5",
      "position": 1,
      "properties": {
        "description": "**Do This:** Describe the structure of today’s activity while moving through the slides. There are three parts:\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> FRQ Social\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Writing\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Scoring",
        "duration": "2",
        "name": "Planning"
      },
      "seeding_key": {
        "activity_section.key": "40e48d81-0616-47c8-abef-7331a32d45a5",
        "lesson_activity.key": "f7197dfd-8c89-47a9-b1cf-19f50ec74eae"
      }
    },
    {
      "key": "47ab29e7-6440-4c81-ad6f-e811467d0697",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Distribute a copy of the FRQ Graphic Organizer to each student.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Students use the following protocol for this activity:\n* Students find an FRQ posted within the room.\n* Students read and share possible solutions to the FRQ with peers.\n* Students complete their FRQ Graphic organizer to track and organize their thoughts and ideas.",
        "duration": "10",
        "name": "FRQ Social",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "There are three different handouts for this lesson. To prevent confusion, distribute each handout when indicated. Distribute the handouts to follow the pace of the lesson.\n\nDuring the FRQ social, make sure students have conversations focused on keywords in the FRQ or develop possible solutions. You may choose to use a ten-minute timer to help students pace themselves. To create a “social” atmosphere, you may choose to play soft music in the background.\n\nAfter students socialize for about 5 mins, you may want to suggest:\n* Use the same annotation protocols they did earlier for the graphic organizer.\n* Start writing pseudocode to develop their solution."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "47ab29e7-6440-4c81-ad6f-e811467d0697",
        "lesson_activity.key": "f7197dfd-8c89-47a9-b1cf-19f50ec74eae"
      }
    },
    {
      "key": "0a4f3e44-0c03-48ac-a1a2-f9a17a46d8df",
      "position": 3,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Give a copy of the FRQ Writing handout to each student.",
        "duration": "10",
        "name": "FRQ Writing"
      },
      "seeding_key": {
        "activity_section.key": "0a4f3e44-0c03-48ac-a1a2-f9a17a46d8df",
        "lesson_activity.key": "f7197dfd-8c89-47a9-b1cf-19f50ec74eae"
      }
    },
    {
      "key": "327b2feb-1717-472d-a936-2a1857e48045",
      "position": 4,
      "properties": {
        "description": "Return to your seats and complete the FRQ. Use your graphic organizer as you write your solution. You will have ten minutes to complete this task. ",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "327b2feb-1717-472d-a936-2a1857e48045",
        "lesson_activity.key": "f7197dfd-8c89-47a9-b1cf-19f50ec74eae"
      }
    },
    {
      "key": "32271cd3-92a3-4acb-be1f-284210edd76e",
      "position": 5,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Have students return to their seats and complete the FRQ Writing handout.",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "As students work, you may choose to use a ten-minute timer to help students pace themselves. At this point, the classroom should be quiet so students can focus on writing their solution to the FRQ. If students finish early, you may want to suggest:\n* Trace their code to ensure it's correct.\n* Check their graphic organizer to ensure they used all notes to write their solution.\n\nDifferentiation Suggestions:\n* Students who need more time should complete the constructor and choose one of the methods to write. \n* Students who are unsure of where to start should begin writing pseudocode for their solution."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "32271cd3-92a3-4acb-be1f-284210edd76e",
        "lesson_activity.key": "f7197dfd-8c89-47a9-b1cf-19f50ec74eae"
      }
    },
    {
      "key": "0eb14fe0-473a-4ed7-b3ea-60c141415c13",
      "position": 6,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Distribute:** Pair students and distribute a copy of the FRQ Scoring Guide to each student.\n\n**Do This:** Ask students to evaluate their work with their partner using the Scoring Guide and complete the reflection on the last page of the FRQ Writing handout. Display the solution while moving through the slides: \n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Implementation of the `Combo` superclass and constructor\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Implementation, construction, and return for the `getName()` method\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Implementation, construction, and return for the `getPrice()` method\n* <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> Implementation, construction, and return for the `toString()` method\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** *What were you confident about? Are there some things you left out that could have brought up your score?*\n\n**Discussion Goal:** Help students process the solution to this particular problem. Take a moment to celebrate their successes and validate their frustrations.",
        "duration": "8",
        "name": "FRQ Scoring",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Encourage those who finish early to write full responses in their reflections and share their reflection with their partner. "
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "0eb14fe0-473a-4ed7-b3ea-60c141415c13",
        "lesson_activity.key": "f7197dfd-8c89-47a9-b1cf-19f50ec74eae"
      }
    },
    {
      "key": "6ba1cc57-fd1c-48db-9cc5-780ceb827722",
      "position": 1,
      "properties": {
        "description": "**Distribute:** Give one index card to each student.\n\n<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Discuss:** Click through the animated slide to guide students through the process of the Three W’s.\n* *What FRQ area did you complete today?*\n* *So what? (relevance, importance, usefulness)*\n* *Now what? (Can we predict where we are going?)*\n\n**Discussion Goal:** This discussion helps students process the methods, control structures, and class design of this FRQ. Students should discuss the relevance and predict what’s next. Take a moment to celebrate their successes and validate their frustrations.",
        "name": "Three W's",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "If you are short on time, use index cards as an exit ticket to complete the wrap up."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "6ba1cc57-fd1c-48db-9cc5-780ceb827722",
        "lesson_activity.key": "aef0e0fa-9f6d-4706-90e5-c3b4c0eb8c88"
      }
    },
    {
      "key": "4d4706e8-e027-40df-9091-b54d5e6767fb",
      "position": 1,
      "properties": {
        "description": "Congratulations, you have made it to the end of Unit 2! You learned a lot about designing and developing objects to help the Project Mercury Pastries food truck owner keep track of their desserts inventory. Today, you will complete an assessment to put your skills to the test.",
        "name": "Unit 2 Assessment",
        "remarks": true
      },
      "seeding_key": {
        "activity_section.key": "4d4706e8-e027-40df-9091-b54d5e6767fb",
        "lesson_activity.key": "9a24f269-9f2a-4363-bb9d-968056a80f6c"
      }
    },
    {
      "key": "b2e6ee94-22c0-466b-ae48-7b4d45b2f0ec",
      "position": 2,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Direct students to the Unit 2 Assessment on Code Studio. Make sure to unlock the assessment following instructions [**here**](https://support.code.org/hc/en-us/articles/115001331951-Using-lock-settings-for-assessments-and-surveys).",
        "progression_name": "Unit 2 Assessment"
      },
      "seeding_key": {
        "activity_section.key": "b2e6ee94-22c0-466b-ae48-7b4d45b2f0ec",
        "lesson_activity.key": "9a24f269-9f2a-4363-bb9d-968056a80f6c"
      }
    },
    {
      "key": "620d18c5-5c1b-4966-bcee-4056a62885b0",
      "position": 1,
      "properties": {
        "description": "<i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i> **Do This:** Review the answers to the assessment with the class.",
        "name": "Assessment Review",
        "tips": [
          {
            "type": "teachingTip",
            "markdown": "Discuss any questions that come up and take note of topics where students may need extra review.\n\nAs you review answers with students, consider the following suggested strategies:\n* Students write down solutions to questions in their journals that they answered incorrectly.\n* Identify mostly missed questions and review as a class.\n* Review answers asynchronously and allow students to complete corrections.\n* Place students in pairs to review answers and share areas that need extra review.\n\nIf you do not have time to review answers with students, create a data chart that includes assessment results. For students who did not meet the learning expectations, follow up to ensure they learn from errors made on the assessment."
          }
        ]
      },
      "seeding_key": {
        "activity_section.key": "620d18c5-5c1b-4966-bcee-4056a62885b0",
        "lesson_activity.key": "871d1fc1-0ef7-4099-9c9f-20783e33ad27"
      }
    },
    {
      "key": "c8a1761c-e528-4679-8268-0daec0aeb865",
      "position": 1,
      "properties": {
        "progression_name": "CSA Pilot Survey Unit 2"
      },
      "seeding_key": {
        "activity_section.key": "c8a1761c-e528-4679-8268-0daec0aeb865",
        "lesson_activity.key": "0227e719-062a-4973-9e6e-fef659365c7d"
      }
    }
  ],
  "script_levels": [
    {
      "chapter": 1,
      "position": 1,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L1-L1"
        ],
        "lesson.key": "Defining Attributes",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "08325c57-db4e-4cbc-be1e-e25c36d86084"
      },
      "level_keys": [
        "CSA U2L1-L1"
      ]
    },
    {
      "chapter": 2,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Creating Variables"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L2-L1"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "6383cab3-12ee-412a-bf97-e5ee8d0c459b"
      },
      "level_keys": [
        "CSA U2L2-L1"
      ]
    },
    {
      "chapter": 3,
      "position": 2,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Updating Variables"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L2-L2"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9ab4206b-5da5-4570-857d-b5620651d2c3"
      },
      "level_keys": [
        "CSA U2L2-L2"
      ]
    },
    {
      "chapter": 4,
      "position": 3,
      "activity_section_position": 2,
      "assessment": false,
      "properties": {
        "progression": "Updating Variables"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L2-L3"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9ab4206b-5da5-4570-857d-b5620651d2c3"
      },
      "level_keys": [
        "CSA U2L2-L3"
      ]
    },
    {
      "chapter": 5,
      "position": 4,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Storing User Input"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L2-L4"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0b82a91b-2af0-40dd-b1a0-07a28aa5726d"
      },
      "level_keys": [
        "CSA U2L2-L4"
      ]
    },
    {
      "chapter": 6,
      "position": 5,
      "activity_section_position": 2,
      "assessment": false,
      "properties": {
        "progression": "Storing User Input"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L2-L5"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0b82a91b-2af0-40dd-b1a0-07a28aa5726d"
      },
      "level_keys": [
        "CSA U2L2-L5"
      ]
    },
    {
      "chapter": 7,
      "position": 6,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L2-L6"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "fba7645c-e0c2-4652-b1df-3d34a3ece025"
      },
      "level_keys": [
        "CSA U2L2-L6"
      ]
    },
    {
      "chapter": 8,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Writing the Dessert Class"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L3-L1"
        ],
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "2ad7d924-3338-41e8-bc09-62be33ac3a9f"
      },
      "level_keys": [
        "CSA U2L3-L1"
      ]
    },
    {
      "chapter": 9,
      "position": 2,
      "activity_section_position": 2,
      "assessment": true,
      "properties": {
        "progression": "Writing the Dessert Class"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L3-L2"
        ],
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "2ad7d924-3338-41e8-bc09-62be33ac3a9f"
      },
      "level_keys": [
        "CSA U2L3-L2"
      ]
    },
    {
      "chapter": 10,
      "position": 3,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Creating a Dessert Object"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L3-L3"
        ],
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "b6319af6-2ffe-4c2a-a8f2-e1adc37e258c"
      },
      "level_keys": [
        "CSA U2L3-L3"
      ]
    },
    {
      "chapter": 11,
      "position": 4,
      "activity_section_position": 2,
      "assessment": true,
      "properties": {
        "progression": "Creating a Dessert Object"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L3-L4"
        ],
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "b6319af6-2ffe-4c2a-a8f2-e1adc37e258c"
      },
      "level_keys": [
        "CSA U2L3-L4"
      ]
    },
    {
      "chapter": 12,
      "position": 5,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L3-L5"
        ],
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "8b74d145-70c7-4b14-8441-94c7dddd45f4"
      },
      "level_keys": [
        "CSA U2L3-L5"
      ]
    },
    {
      "chapter": 13,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Constructor Overloading"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L4-L1"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "c33f69cb-fd6d-43ec-98c3-f35f2ea6bf90"
      },
      "level_keys": [
        "CSA U2L4-L1"
      ]
    },
    {
      "chapter": 14,
      "position": 2,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Multiple Constructors"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L4-L2"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9eb9bfec-b4bc-42c1-9e77-67c23d0bbb6b"
      },
      "level_keys": [
        "CSA U2L4-L2"
      ]
    },
    {
      "chapter": 15,
      "position": 3,
      "activity_section_position": 2,
      "assessment": false,
      "properties": {
        "progression": "Multiple Constructors"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L4-L3"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9eb9bfec-b4bc-42c1-9e77-67c23d0bbb6b"
      },
      "level_keys": [
        "CSA U2L4-L3"
      ]
    },
    {
      "chapter": 16,
      "position": 4,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Constructor Overloading with Scanner"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L4-L4"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "11ebe278-8b91-419f-912a-a1a6101e20a9"
      },
      "level_keys": [
        "CSA U2L4-L4"
      ]
    },
    {
      "chapter": 17,
      "position": 5,
      "activity_section_position": 2,
      "assessment": true,
      "properties": {
        "progression": "Constructor Overloading with Scanner"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L4-L5"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "11ebe278-8b91-419f-912a-a1a6101e20a9"
      },
      "level_keys": [
        "CSA U2L4-L5"
      ]
    },
    {
      "chapter": 18,
      "position": 6,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L4-L6"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "4f905ab6-a5cd-4782-a28f-b19b0974ecf6"
      },
      "level_keys": [
        "CSA U2L4-L6"
      ]
    },
    {
      "chapter": 19,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Expressions Exploration"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L5-L1"
        ],
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "c921bebd-450c-40da-b144-b52e396803e3"
      },
      "level_keys": [
        "CSA U2L5-L1"
      ]
    },
    {
      "chapter": 20,
      "position": 2,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Evaluating Expressions"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L5-L2"
        ],
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "a3c2c075-fb7e-4943-9718-93fc3fcf2f3d"
      },
      "level_keys": [
        "CSA U2L5-L2"
      ]
    },
    {
      "chapter": 21,
      "position": 3,
      "activity_section_position": 2,
      "assessment": false,
      "properties": {
        "progression": "Evaluating Expressions"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L5-L3"
        ],
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "a3c2c075-fb7e-4943-9718-93fc3fcf2f3d"
      },
      "level_keys": [
        "CSA U2L5-L3"
      ]
    },
    {
      "chapter": 22,
      "position": 4,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L5-L4"
        ],
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "d12f46ba-2446-4b28-8b5e-96777bad18f4"
      },
      "level_keys": [
        "CSA U2L5-L4"
      ]
    },
    {
      "chapter": 23,
      "position": 5,
      "activity_section_position": 2,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L5-L5"
        ],
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "d12f46ba-2446-4b28-8b5e-96777bad18f4"
      },
      "level_keys": [
        "CSA U2L5-L5"
      ]
    },
    {
      "chapter": 24,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Debugging Errors"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L6-L1"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "df485085-2a75-475d-a1f4-f20680c5d073"
      },
      "level_keys": [
        "CSA U2L6-L1"
      ]
    },
    {
      "chapter": 25,
      "position": 2,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Scope Error"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L6-L2"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "d94f7403-887d-4578-9856-145b600cb3f0"
      },
      "level_keys": [
        "CSA U2L6-L2"
      ]
    },
    {
      "chapter": 26,
      "position": 3,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Scope"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L6-L3"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "6f34ee85-7b45-4241-b9e0-19a0a762d780"
      },
      "level_keys": [
        "CSA U2L6-L3"
      ]
    },
    {
      "chapter": 27,
      "position": 4,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Scope"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L6-L4"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "2e720e90-3961-49a6-a899-d4551cf33171"
      },
      "level_keys": [
        "CSA U2L6-L4"
      ]
    },
    {
      "chapter": 28,
      "position": 5,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Constructor"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L6-L5"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0ca5f4f6-4b45-4fbf-91b6-b4def3161106"
      },
      "level_keys": [
        "CSA U2L6-L5"
      ]
    },
    {
      "chapter": 29,
      "position": 6,
      "activity_section_position": 2,
      "assessment": true,
      "properties": {
        "progression": "Constructor"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L6-L6"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0ca5f4f6-4b45-4fbf-91b6-b4def3161106"
      },
      "level_keys": [
        "CSA U2L6-L6"
      ]
    },
    {
      "chapter": 30,
      "position": 7,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L6-L7"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0e6a84e7-0680-4d0a-83d1-e5c9b954ba77"
      },
      "level_keys": [
        "CSA U2L6-L7"
      ]
    },
    {
      "chapter": 31,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Writing a FoodTruck Constructor"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L7-L1"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "6ba5556d-0f38-4708-a14e-8955bfc93ad2"
      },
      "level_keys": [
        "CSA U2L7-L1"
      ]
    },
    {
      "chapter": 32,
      "position": 2,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Extending the Dessert Class"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L7-L2"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "bee9f45b-dabc-4154-acbd-29c5574d0e67"
      },
      "level_keys": [
        "CSA U2L7-L2"
      ]
    },
    {
      "chapter": 33,
      "position": 3,
      "activity_section_position": 2,
      "assessment": false,
      "properties": {
        "progression": "Extending the Dessert Class"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L7-L3"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "bee9f45b-dabc-4154-acbd-29c5574d0e67"
      },
      "level_keys": [
        "CSA U2L7-L3"
      ]
    },
    {
      "chapter": 34,
      "position": 4,
      "activity_section_position": 3,
      "assessment": false,
      "properties": {
        "progression": "Extending the Dessert Class"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L7-L4"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "bee9f45b-dabc-4154-acbd-29c5574d0e67"
      },
      "level_keys": [
        "CSA U2L7-L4"
      ]
    },
    {
      "chapter": 35,
      "position": 5,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Creating Dessert Subclasses"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L7-L5"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "56685081-85f6-450d-bde5-9a5a085f2264"
      },
      "level_keys": [
        "CSA U2L7-L5"
      ]
    },
    {
      "chapter": 36,
      "position": 6,
      "activity_section_position": 2,
      "assessment": false,
      "properties": {
        "progression": "Creating Dessert Subclasses"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L7-L6"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "56685081-85f6-450d-bde5-9a5a085f2264"
      },
      "level_keys": [
        "CSA U2L7-L6"
      ]
    },
    {
      "chapter": 37,
      "position": 7,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L7-L7"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "28fb05be-013c-4e8a-b168-05e66d3869e1"
      },
      "level_keys": [
        "CSA U2L7-L7"
      ]
    },
    {
      "chapter": 38,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Dessert Class Accessor Methods"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L8-L1"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "17f33a67-c0dd-4e22-b8e7-6d2998d82304"
      },
      "level_keys": [
        "CSA U2L8-L1"
      ]
    },
    {
      "chapter": 39,
      "position": 2,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Printing Dessert Information"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L8-L2"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0716b372-6396-4faa-9417-9efe9c4d253c"
      },
      "level_keys": [
        "CSA U2L8-L2"
      ]
    },
    {
      "chapter": 40,
      "position": 3,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Printing Dessert Information"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L8-L3"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "4f660bf2-22f2-4a47-9f44-a9bc3ab7acaa"
      },
      "level_keys": [
        "CSA U2L8-L3"
      ]
    },
    {
      "chapter": 41,
      "position": 4,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Accessor Methods for the Subclasses"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L8-L4"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "ec8eaff6-edb9-4db2-8eae-0c774c95ee2a"
      },
      "level_keys": [
        "CSA U2L8-L4"
      ]
    },
    {
      "chapter": 42,
      "position": 5,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "The Owner's Inventory"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L8-L5"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "4050db5b-0c29-4ce8-bccb-8a143b924a78"
      },
      "level_keys": [
        "CSA U2L8-L5"
      ]
    },
    {
      "chapter": 43,
      "position": 6,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L8-L6"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "afe69253-ae2f-4788-8c93-6f7fc245b874"
      },
      "level_keys": [
        "CSA U2L8-L6"
      ]
    },
    {
      "chapter": 44,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Dessert Class Mutator Methods"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L9-L1"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "8c920980-c01c-4ed7-966a-01c08fddc74f"
      },
      "level_keys": [
        "CSA U2L9-L1"
      ]
    },
    {
      "chapter": 45,
      "position": 2,
      "activity_section_position": 2,
      "assessment": false,
      "properties": {
        "progression": "Dessert Class Mutator Methods"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L9-L2"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "8c920980-c01c-4ed7-966a-01c08fddc74f"
      },
      "level_keys": [
        "CSA U2L9-L2"
      ]
    },
    {
      "chapter": 46,
      "position": 3,
      "activity_section_position": 3,
      "assessment": true,
      "properties": {
        "progression": "Dessert Class Mutator Methods"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L9-L3"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "8c920980-c01c-4ed7-966a-01c08fddc74f"
      },
      "level_keys": [
        "CSA U2L9-L3"
      ]
    },
    {
      "chapter": 47,
      "position": 4,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Mutator Methods for the Subclass"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L9-L4"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9b35b465-0ef3-4fb7-97c4-9fdd9954bd04"
      },
      "level_keys": [
        "CSA U2L9-L4"
      ]
    },
    {
      "chapter": 48,
      "position": 5,
      "activity_section_position": 2,
      "assessment": false,
      "properties": {
        "progression": "Mutator Methods for the Subclass"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L9-L5"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9b35b465-0ef3-4fb7-97c4-9fdd9954bd04"
      },
      "level_keys": [
        "CSA U2L9-L5"
      ]
    },
    {
      "chapter": 49,
      "position": 6,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Mutator Methods for the Subclass"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L9-L6"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "ef7d62ef-8b3f-4d99-a903-4f68c1282c20"
      },
      "level_keys": [
        "CSA U2L9-L6"
      ]
    },
    {
      "chapter": 50,
      "position": 7,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L9-L7"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "78db9c4d-d9e0-49d3-962e-0be172c05fb2"
      },
      "level_keys": [
        "CSA U2L9-L7"
      ]
    },
    {
      "chapter": 51,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Printing an Object"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L10-L1"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "5c1b9edd-4111-4ff5-9486-b5fad3d9a66a"
      },
      "level_keys": [
        "CSA U2L10-L1"
      ]
    },
    {
      "chapter": 52,
      "position": 2,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Overriding toString()"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L10-L2"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "78c650e6-2bdc-4e9d-99dc-037c5876f143"
      },
      "level_keys": [
        "CSA U2L10-L2"
      ]
    },
    {
      "chapter": 53,
      "position": 3,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Formatting toString()"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L10-L3"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9ee545bc-2eb8-4618-b7c0-7d0e3e8c98af"
      },
      "level_keys": [
        "CSA U2L10-L3"
      ]
    },
    {
      "chapter": 54,
      "position": 4,
      "activity_section_position": 2,
      "assessment": true,
      "properties": {
        "progression": "Formatting toString()"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L10-L4"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9ee545bc-2eb8-4618-b7c0-7d0e3e8c98af"
      },
      "level_keys": [
        "CSA U2L10-L4"
      ]
    },
    {
      "chapter": 55,
      "position": 5,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "FoodTruck toString()"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L10-L5"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "e489842f-5592-4b8f-bc6e-c7b4b896905b"
      },
      "level_keys": [
        "CSA U2L10-L5"
      ]
    },
    {
      "chapter": 56,
      "position": 6,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L10-L6"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "df6f5d62-31f2-4edc-8295-cddfac810ebe"
      },
      "level_keys": [
        "CSA U2L10-L6"
      ]
    },
    {
      "chapter": 57,
      "position": 7,
      "activity_section_position": 2,
      "assessment": true,
      "properties": {
        "progression": "Check for Understanding"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L10-L7"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "df6f5d62-31f2-4edc-8295-cddfac810ebe"
      },
      "level_keys": [
        "CSA U2L10-L7"
      ]
    },
    {
      "chapter": 58,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Store Management Project"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L11-L1"
        ],
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "83d573bd-2ee0-4756-90fc-6876e9a6ade9"
      },
      "level_keys": [
        "CSA U2L11-L1"
      ]
    },
    {
      "chapter": 59,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "Store Management Project"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L12-L1"
        ],
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "c70179f7-df9f-4312-9a87-8f01168495d1"
      },
      "level_keys": [
        "CSA U2L12-L1"
      ]
    },
    {
      "chapter": 60,
      "position": 1,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Store Management Project"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA U2L13-L1"
        ],
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "c890f348-990c-4f0d-97c5-8963c86e53e7"
      },
      "level_keys": [
        "CSA U2L13-L1"
      ]
    },
    {
      "chapter": 61,
      "position": 1,
      "activity_section_position": 1,
      "assessment": true,
      "properties": {
        "progression": "Unit 2 Assessment"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA Unit 2 Pilot MCQ Assessment 2021"
        ],
        "lesson.key": "Assessment Day",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "b2e6ee94-22c0-466b-ae48-7b4d45b2f0ec"
      },
      "level_keys": [
        "CSA Unit 2 Pilot MCQ Assessment 2021"
      ]
    },
    {
      "chapter": 62,
      "position": 1,
      "activity_section_position": 1,
      "assessment": false,
      "properties": {
        "progression": "CSA Pilot Survey Unit 2"
      },
      "bonus": false,
      "seeding_key": {
        "script_level.level_keys": [
          "CSA Pilot Survey Unit 2"
        ],
        "lesson.key": "Unit 2 Pilot Survey",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "c8a1761c-e528-4679-8268-0daec0aeb865"
      },
      "level_keys": [
        "CSA Pilot Survey Unit 2"
      ]
    }
  ],
  "levels_script_levels": [
    {
      "seeding_key": {
        "level.key": "CSA U2L1-L1",
        "script_level.level_keys": [
          "CSA U2L1-L1"
        ],
        "lesson.key": "Defining Attributes",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "08325c57-db4e-4cbc-be1e-e25c36d86084"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L2-L1",
        "script_level.level_keys": [
          "CSA U2L2-L1"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "6383cab3-12ee-412a-bf97-e5ee8d0c459b"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L2-L2",
        "script_level.level_keys": [
          "CSA U2L2-L2"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9ab4206b-5da5-4570-857d-b5620651d2c3"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L2-L3",
        "script_level.level_keys": [
          "CSA U2L2-L3"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9ab4206b-5da5-4570-857d-b5620651d2c3"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L2-L4",
        "script_level.level_keys": [
          "CSA U2L2-L4"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0b82a91b-2af0-40dd-b1a0-07a28aa5726d"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L2-L5",
        "script_level.level_keys": [
          "CSA U2L2-L5"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0b82a91b-2af0-40dd-b1a0-07a28aa5726d"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L2-L6",
        "script_level.level_keys": [
          "CSA U2L2-L6"
        ],
        "lesson.key": "Using Variables",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "fba7645c-e0c2-4652-b1df-3d34a3ece025"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L3-L1",
        "script_level.level_keys": [
          "CSA U2L3-L1"
        ],
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "2ad7d924-3338-41e8-bc09-62be33ac3a9f"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L3-L2",
        "script_level.level_keys": [
          "CSA U2L3-L2"
        ],
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "2ad7d924-3338-41e8-bc09-62be33ac3a9f"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L3-L3",
        "script_level.level_keys": [
          "CSA U2L3-L3"
        ],
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "b6319af6-2ffe-4c2a-a8f2-e1adc37e258c"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L3-L4",
        "script_level.level_keys": [
          "CSA U2L3-L4"
        ],
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "b6319af6-2ffe-4c2a-a8f2-e1adc37e258c"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L3-L5",
        "script_level.level_keys": [
          "CSA U2L3-L5"
        ],
        "lesson.key": "Writing Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "8b74d145-70c7-4b14-8441-94c7dddd45f4"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L4-L1",
        "script_level.level_keys": [
          "CSA U2L4-L1"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "c33f69cb-fd6d-43ec-98c3-f35f2ea6bf90"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L4-L2",
        "script_level.level_keys": [
          "CSA U2L4-L2"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9eb9bfec-b4bc-42c1-9e77-67c23d0bbb6b"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L4-L3",
        "script_level.level_keys": [
          "CSA U2L4-L3"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9eb9bfec-b4bc-42c1-9e77-67c23d0bbb6b"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L4-L4",
        "script_level.level_keys": [
          "CSA U2L4-L4"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "11ebe278-8b91-419f-912a-a1a6101e20a9"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L4-L5",
        "script_level.level_keys": [
          "CSA U2L4-L5"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "11ebe278-8b91-419f-912a-a1a6101e20a9"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L4-L6",
        "script_level.level_keys": [
          "CSA U2L4-L6"
        ],
        "lesson.key": "Adding Multiple Constructors",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "4f905ab6-a5cd-4782-a28f-b19b0974ecf6"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L5-L1",
        "script_level.level_keys": [
          "CSA U2L5-L1"
        ],
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "c921bebd-450c-40da-b144-b52e396803e3"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L5-L2",
        "script_level.level_keys": [
          "CSA U2L5-L2"
        ],
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "a3c2c075-fb7e-4943-9718-93fc3fcf2f3d"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L5-L3",
        "script_level.level_keys": [
          "CSA U2L5-L3"
        ],
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "a3c2c075-fb7e-4943-9718-93fc3fcf2f3d"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L5-L4",
        "script_level.level_keys": [
          "CSA U2L5-L4"
        ],
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "d12f46ba-2446-4b28-8b5e-96777bad18f4"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L5-L5",
        "script_level.level_keys": [
          "CSA U2L5-L5"
        ],
        "lesson.key": "Manipulating Variables and Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "d12f46ba-2446-4b28-8b5e-96777bad18f4"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L6-L1",
        "script_level.level_keys": [
          "CSA U2L6-L1"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "df485085-2a75-475d-a1f4-f20680c5d073"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L6-L2",
        "script_level.level_keys": [
          "CSA U2L6-L2"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "d94f7403-887d-4578-9856-145b600cb3f0"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L6-L3",
        "script_level.level_keys": [
          "CSA U2L6-L3"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "6f34ee85-7b45-4241-b9e0-19a0a762d780"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L6-L4",
        "script_level.level_keys": [
          "CSA U2L6-L4"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "2e720e90-3961-49a6-a899-d4551cf33171"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L6-L5",
        "script_level.level_keys": [
          "CSA U2L6-L5"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0ca5f4f6-4b45-4fbf-91b6-b4def3161106"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L6-L6",
        "script_level.level_keys": [
          "CSA U2L6-L6"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0ca5f4f6-4b45-4fbf-91b6-b4def3161106"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L6-L7",
        "script_level.level_keys": [
          "CSA U2L6-L7"
        ],
        "lesson.key": "Minimizing Errors in Initialization",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0e6a84e7-0680-4d0a-83d1-e5c9b954ba77"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L7-L1",
        "script_level.level_keys": [
          "CSA U2L7-L1"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "6ba5556d-0f38-4708-a14e-8955bfc93ad2"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L7-L2",
        "script_level.level_keys": [
          "CSA U2L7-L2"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "bee9f45b-dabc-4154-acbd-29c5574d0e67"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L7-L3",
        "script_level.level_keys": [
          "CSA U2L7-L3"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "bee9f45b-dabc-4154-acbd-29c5574d0e67"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L7-L4",
        "script_level.level_keys": [
          "CSA U2L7-L4"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "bee9f45b-dabc-4154-acbd-29c5574d0e67"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L7-L5",
        "script_level.level_keys": [
          "CSA U2L7-L5"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "56685081-85f6-450d-bde5-9a5a085f2264"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L7-L6",
        "script_level.level_keys": [
          "CSA U2L7-L6"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "56685081-85f6-450d-bde5-9a5a085f2264"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L7-L7",
        "script_level.level_keys": [
          "CSA U2L7-L7"
        ],
        "lesson.key": "Writing Constructors for Hierarchies",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "28fb05be-013c-4e8a-b168-05e66d3869e1"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L8-L1",
        "script_level.level_keys": [
          "CSA U2L8-L1"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "17f33a67-c0dd-4e22-b8e7-6d2998d82304"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L8-L2",
        "script_level.level_keys": [
          "CSA U2L8-L2"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "0716b372-6396-4faa-9417-9efe9c4d253c"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L8-L3",
        "script_level.level_keys": [
          "CSA U2L8-L3"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "4f660bf2-22f2-4a47-9f44-a9bc3ab7acaa"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L8-L4",
        "script_level.level_keys": [
          "CSA U2L8-L4"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "ec8eaff6-edb9-4db2-8eae-0c774c95ee2a"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L8-L5",
        "script_level.level_keys": [
          "CSA U2L8-L5"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "4050db5b-0c29-4ce8-bccb-8a143b924a78"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L8-L6",
        "script_level.level_keys": [
          "CSA U2L8-L6"
        ],
        "lesson.key": "Accessing Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "afe69253-ae2f-4788-8c93-6f7fc245b874"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L9-L1",
        "script_level.level_keys": [
          "CSA U2L9-L1"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "8c920980-c01c-4ed7-966a-01c08fddc74f"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L9-L2",
        "script_level.level_keys": [
          "CSA U2L9-L2"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "8c920980-c01c-4ed7-966a-01c08fddc74f"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L9-L3",
        "script_level.level_keys": [
          "CSA U2L9-L3"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "8c920980-c01c-4ed7-966a-01c08fddc74f"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L9-L4",
        "script_level.level_keys": [
          "CSA U2L9-L4"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9b35b465-0ef3-4fb7-97c4-9fdd9954bd04"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L9-L5",
        "script_level.level_keys": [
          "CSA U2L9-L5"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9b35b465-0ef3-4fb7-97c4-9fdd9954bd04"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L9-L6",
        "script_level.level_keys": [
          "CSA U2L9-L6"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "ef7d62ef-8b3f-4d99-a903-4f68c1282c20"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L9-L7",
        "script_level.level_keys": [
          "CSA U2L9-L7"
        ],
        "lesson.key": "Modifying Object Data",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "78db9c4d-d9e0-49d3-962e-0be172c05fb2"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L10-L1",
        "script_level.level_keys": [
          "CSA U2L10-L1"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "5c1b9edd-4111-4ff5-9486-b5fad3d9a66a"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L10-L2",
        "script_level.level_keys": [
          "CSA U2L10-L2"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "78c650e6-2bdc-4e9d-99dc-037c5876f143"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L10-L3",
        "script_level.level_keys": [
          "CSA U2L10-L3"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9ee545bc-2eb8-4618-b7c0-7d0e3e8c98af"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L10-L4",
        "script_level.level_keys": [
          "CSA U2L10-L4"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "9ee545bc-2eb8-4618-b7c0-7d0e3e8c98af"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L10-L5",
        "script_level.level_keys": [
          "CSA U2L10-L5"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "e489842f-5592-4b8f-bc6e-c7b4b896905b"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L10-L6",
        "script_level.level_keys": [
          "CSA U2L10-L6"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "df6f5d62-31f2-4edc-8295-cddfac810ebe"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L10-L7",
        "script_level.level_keys": [
          "CSA U2L10-L7"
        ],
        "lesson.key": "Displaying Object Information",
        "lesson_group.key": "lesson group",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "df6f5d62-31f2-4edc-8295-cddfac810ebe"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L11-L1",
        "script_level.level_keys": [
          "CSA U2L11-L1"
        ],
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "83d573bd-2ee0-4756-90fc-6876e9a6ade9"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L12-L1",
        "script_level.level_keys": [
          "CSA U2L12-L1"
        ],
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "c70179f7-df9f-4312-9a87-8f01168495d1"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA U2L13-L1",
        "script_level.level_keys": [
          "CSA U2L13-L1"
        ],
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "c890f348-990c-4f0d-97c5-8963c86e53e7"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA Unit 2 Pilot MCQ Assessment 2021",
        "script_level.level_keys": [
          "CSA Unit 2 Pilot MCQ Assessment 2021"
        ],
        "lesson.key": "Assessment Day",
        "lesson_group.key": "lessonGroup-2",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "b2e6ee94-22c0-466b-ae48-7b4d45b2f0ec"
      }
    },
    {
      "seeding_key": {
        "level.key": "CSA Pilot Survey Unit 2",
        "script_level.level_keys": [
          "CSA Pilot Survey Unit 2"
        ],
        "lesson.key": "Unit 2 Pilot Survey",
        "lesson_group.key": "lessonGroup-3",
        "script.name": "csa2-pilot-facilitator",
        "activity_section.key": "c8a1761c-e528-4679-8268-0daec0aeb865"
      }
    }
  ],
  "resources": [
    {
      "name": "[KEY] College Board FRQ",
      "url": "https://docs.google.com/document/d/1sfwKOEf7Wp1Bwd2Mo81I-4tAbi8M9rpFW0QQ-FIp8kw/edit",
      "key": "_key_college_board_frq",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_college_board_frq"
      }
    },
    {
      "name": "[KEY] Construct an Object Cards",
      "url": "https://docs.google.com/document/d/1kMfDP6rlD1NB_T8MaF33Iq_bkfba0Uo55eGzpzMqtpM/edit?usp=sharing",
      "key": "_key_construct_an_object_cards",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_construct_an_object_cards"
      }
    },
    {
      "name": "[KEY] Defining Attributes",
      "url": "https://docs.google.com/document/d/11kEvOxuygD9By8YSP9kezKkaDbUXuJ7PnIrBE0vLo4I/edit?usp=sharing",
      "key": "_key_defining_attributes",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_defining_attributes"
      }
    },
    {
      "name": "[KEY] Diagramming Scope",
      "url": "https://docs.google.com/document/d/1DUZaRcBzsr1EgUwfMW0H9HCufKR40o8RMTz0zIe-qCg/edit",
      "key": "_key_diagramming_scope",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_diagramming_scope"
      }
    },
    {
      "name": "[KEY] Exploring Expressions Version A",
      "url": "https://docs.google.com/document/d/1aBxSZLeaH3r60ceyj7yFkj4skVi6hDAAeP8wYMhrnSI/edit?usp=sharing",
      "key": "_key_exploring_expressions_version_a",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_exploring_expressions_version_a"
      }
    },
    {
      "name": "[KEY] Exploring Expressions Version B",
      "url": "https://docs.google.com/document/d/19ymYGh-7Q6SdpKf1T1HAPdA7FqtapSPNoI5q0tKMhTc/edit",
      "key": "_key_exploring_expressions_version_b",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_exploring_expressions_version_b"
      }
    },
    {
      "name": "[KEY] FRQ Graphic Organizer",
      "url": "https://docs.google.com/document/d/1wnSXd6bkEkyDHL5xB9IRPlxO3pf8Ufj6SJDNeF4sMhs/edit?usp=sharing",
      "key": "_key_frq_graphic_organizer",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_frq_graphic_organizer"
      }
    },
    {
      "name": "[KEY] FRQ Writing",
      "url": "https://docs.google.com/document/d/1S957n2yvo3Z8313gD0q9od2y4skpT47VDqnolLZVXEA/edit?usp=sharing",
      "key": "_key_frq_writing",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_frq_writing"
      }
    },
    {
      "name": "[KEY] U2L10 Extra Practice",
      "url": "https://docs.google.com/document/d/1-3fg4PJ6RZNbRSYGwcQ0IdFza4Z31N7p2DLRJ9cfRlk/edit?usp=sharing",
      "key": "_key_u2l10_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u2l10_extra_practice"
      }
    },
    {
      "name": "[KEY] U2L1 Extra Practice",
      "url": "https://docs.google.com/document/d/1uS6LHb6YUgAPII0wW8PWjT7fRkd1LrgHVG5YunSPqMs/edit?usp=sharing",
      "key": "_key_u2l1_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u2l1_extra_practice"
      }
    },
    {
      "name": "[KEY] U2L2 Extra Practice",
      "url": "https://docs.google.com/document/u/2/d/1hfTBO8HGWv25LCdXUp8KGVP6sV_yASXg3j69STJHkZ4/edit",
      "key": "_key_u2l2_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u2l2_extra_practice"
      }
    },
    {
      "name": "[KEY] U2L3 Extra Practice",
      "url": "https://docs.google.com/document/d/1_T4D2W3Erk80Az9auTymxzlUPEU863ARrH9fqthXbfs/edit?usp=sharing",
      "key": "_key_u2l3_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u2l3_extra_practice"
      }
    },
    {
      "name": "[KEY] U2L4 Extra Practice",
      "url": "https://docs.google.com/document/d/1YHxcaWVxO7j1dJHWvY5xEzCZfZnBQMT-5ULWhrPRFCY/edit?usp=sharing",
      "key": "_key_u2l4_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u2l4_extra_practice"
      }
    },
    {
      "name": "[KEY] U2L5 Extra Practice",
      "url": "https://docs.google.com/document/d/1y7s4q-hAw37m155j7AZAhU0_M7_RE4EZx-yxcKLYW0Q/edit#",
      "key": "_key_u2l5_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u2l5_extra_practice"
      }
    },
    {
      "name": "[KEY] U2L6 Extra Practice",
      "url": "https://docs.google.com/document/d/1Z3AaEnAEN_0Aop_U51i-kr1qNVjKEcwk99G8W6yhbAE/edit",
      "key": "_key_u2l6_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u2l6_extra_practice"
      }
    },
    {
      "name": "[KEY] U2L7 Extra Practice",
      "url": "https://docs.google.com/document/d/1tiqjMPq1RWhgNVz43RjY2vPz17OtlyELQL4wjEPuOOQ/edit",
      "key": "_key_u2l7_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u2l7_extra_practice"
      }
    },
    {
      "name": "[KEY] U2L8 Extra Practice",
      "url": "https://docs.google.com/document/d/1Z71tm624GiTDSPXVPydY51semtue1Flh4kHAZ-mU3Bo/edit?usp=sharing",
      "key": "_key_u2l8_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u2l8_extra_practice"
      }
    },
    {
      "name": "[KEY] U2L9 Extra Practice",
      "url": "https://docs.google.com/document/d/17TkAhTIZuk80n7OTiIYSJzgj4XWMlOWWjC13VXQr5fU/edit",
      "key": "_key_u2l9_extra_practice",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_u2l9_extra_practice"
      }
    },
    {
      "name": "[KEY] Vocabulary Crossword",
      "url": "https://docs.google.com/presentation/d/1Op_DvPrHFjFi-0h1mrTnontH9WgBOBxO48_TJ0uwVG0/edit#slide=id.p",
      "key": "_key_vocabulary_crossword",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_vocabulary_crossword"
      }
    },
    {
      "name": "[KEY] Writing Constructors Guided Notes",
      "url": "https://docs.google.com/document/d/15a8LPjxmhUUFkSrHb89ZEzRV2UI5WP9ZF9Z4MSaxuTs/edit?usp=sharing",
      "key": "_key_writing_constructors_guided_notes",
      "properties": {
        "type": "Answer Key",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "_key_writing_constructors_guided_notes"
      }
    },
    {
      "name": "Accepting User Input",
      "url": "https://drive.google.com/file/d/1Br1FmQ4g7mlX5U7lRounjuMczwXoXHuf/view?usp=sharing",
      "key": "accepting_user_input",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "accepting_user_input"
      }
    },
    {
      "name": "All Resources",
      "url": "/s/csa2-pilot/resources",
      "key": "all_resources_1",
      "properties": {
        "is_rollup": true
      },
      "seeding_key": {
        "resource.key": "all_resources_1"
      }
    },
    {
      "name": "All Standards",
      "url": "/s/csa2-pilot/standards",
      "key": "all_standards_1",
      "properties": {
        "is_rollup": true
      },
      "seeding_key": {
        "resource.key": "all_standards_1"
      }
    },
    {
      "name": "All Vocabulary",
      "url": "/s/csa2-pilot/vocab",
      "key": "all_vocabulary_1",
      "properties": {
        "is_rollup": true
      },
      "seeding_key": {
        "resource.key": "all_vocabulary_1"
      }
    },
    {
      "name": "Arithmetic Operators",
      "url": "https://drive.google.com/file/d/1d0opG89VXlYLNaSx47qLJNogC5n6mOQZ/view?usp=sharing",
      "key": "arithmetic_operators",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "arithmetic_operators"
      }
    },
    {
      "name": "Card Sort",
      "url": "https://docs.google.com/presentation/d/1PPqhis5fMdGtoPXWl8S5yRWeHaMBZMDnTYBpAoGy6Oc/edit#slide=id.gd042471297_0_68",
      "key": "card_sort",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "card_sort"
      }
    },
    {
      "name": "Class Hierarchy Cards",
      "url": "https://docs.google.com/presentation/d/1Ihkko5zmxClfxaRxdplFwywh7siGl_jfCsP1f9Ui-fk/edit?usp=sharing",
      "key": "class_hierarchy_cards",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "class_hierarchy_cards"
      }
    },
    {
      "name": "College Board FRQ",
      "url": "https://drive.google.com/file/d/1rrggcOwUzIzbBLqCPEomrevozpYo09AB/view?usp=sharing",
      "key": "college_board_frq",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "college_board_frq"
      }
    },
    {
      "name": "Combo Class FRQ Print Out",
      "url": "https://docs.google.com/document/d/1Vhwh3WWjpzYYC9B0aIuGapty1X6Zzf7bf1My9Hc0F-Y/edit?usp=sharing",
      "key": "combo_class_frq_print_out",
      "properties": {
        "type": "Resource",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "combo_class_frq_print_out"
      }
    },
    {
      "name": "Construct an Object Cards",
      "url": "https://docs.google.com/presentation/d/17TySKn5znJbjAerFkctXL54iVz6ZnhJCEKwLkWT6Wo4/edit?usp=sharing",
      "key": "construct_an_object_cards_1",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "construct_an_object_cards_1"
      }
    },
    {
      "name": "Constructors",
      "url": "https://drive.google.com/file/d/1hFJo6GDKW1AitQlF1aCEqaLr0VeemuD9/view?usp=sharing",
      "key": "constructors",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "constructors"
      }
    },
    {
      "name": "Creating Variables",
      "url": "https://drive.google.com/file/d/1grm0gWBhw0DAw6G4eUxZ6VWdlY7UoJC-/view?usp=sharing",
      "key": "creating_variables",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "creating_variables"
      }
    },
    {
      "name": "Create Your Own Class",
      "url": "https://docs.google.com/document/d/1O6ScN52Cdi70Hz4vifCAcIcySoB2Wpw0z3DivFOi9ug/edit?usp=sharing",
      "key": "defining_attributes",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "defining_attributes"
      }
    },
    {
      "name": "Defining Attributes - Classes Foldables",
      "url": "https://drive.google.com/file/d/1DjctdSw-oAtpSKFKj9uz4oyqEduORhIk/view?usp=sharing",
      "key": "defining_attributes_-_classes_foldables",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "defining_attributes_-_classes_foldables"
      }
    },
    {
      "name": "Defining Attributes - Main Method",
      "url": "https://drive.google.com/file/d/1aD0rS9pTNyxJ_ymN4fNboZsAuus5PQ_c/view?usp=sharing",
      "key": "defining_attributes_-_main_method",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "defining_attributes_-_main_method"
      }
    },
    {
      "name": "Diagramming Scope",
      "url": "https://docs.google.com/document/d/1l1O-YQ00HoqcJaZpyyCrXAhZ3wFrfoFHT4Jj43QVTAs/edit",
      "key": "diagramming_scope",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "diagramming_scope"
      }
    },
    {
      "name": "Evaluating Expressions",
      "url": "https://drive.google.com/file/d/1WpOX29P5FWYT4Z5VsPZQRwgj73hVVih6/view?usp=sharing",
      "key": "evaluating_expressions",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "evaluating_expressions"
      }
    },
    {
      "name": "Exploring Expressions Version A",
      "url": "https://docs.google.com/document/d/10AmwHOT2NA5JujTKj41EvzbmRfrKJbkSFyC8Veic274/view",
      "key": "exploring_expressions_version_a",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "exploring_expressions_version_a"
      }
    },
    {
      "name": "Exploring Expressions Version B",
      "url": "https://docs.google.com/document/d/1VvJKwMk2L-QQcdDskj9eSpw9mIKvZNJk946FBfoD5Rc/edit?usp=sharing",
      "key": "exploring_expressions_version_b",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "exploring_expressions_version_b"
      }
    },
    {
      "name": "FRQ Graphic Organizer",
      "url": "https://docs.google.com/document/d/134kZS6h1LG_Epr3w0ZA5zZeUJf3h3G1P3loA3syxfG8/edit?usp=sharing",
      "key": "frq_graphic_organizer",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "frq_graphic_organizer"
      }
    },
    {
      "name": "FRQ Scoring Guide",
      "url": "https://docs.google.com/document/d/1Ly_jDtjcrItGJBTQ_O6lVkgU-NbvG-8vWJTxYLph5dE/edit?usp=sharing",
      "key": "frq_scoring_guide",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "frq_scoring_guide"
      }
    },
    {
      "name": "FRQ Writing",
      "url": "https://docs.google.com/document/d/1ScZdiH6Y872_qLMET0lzucPvkzA0S8j-my0eq7ITv4c/edit?usp=sharing",
      "key": "frq_writing",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "frq_writing"
      }
    },
    {
      "name": "Instance Variables and Attributes",
      "url": "https://drive.google.com/file/d/1hwFuwfki5mZbfWViqlDc5_HitC6qefrM/view?usp=sharing",
      "key": "instance_variables_and_attributes",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "instance_variables_and_attributes"
      }
    },
    {
      "name": "Methods That Return",
      "url": "https://drive.google.com/file/d/1u68PpKgybNz45Oh0HwtH8A3T19yur8Wm/view?usp=sharing",
      "key": "methods_that_return",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "methods_that_return"
      }
    },
    {
      "name": "Mutator Methods",
      "url": "https://drive.google.com/file/d/1FaxnNgnL0zEbWNgDNUL-5RWFG15tQPQp/view?usp=sharing",
      "key": "mutator_methods",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "mutator_methods"
      }
    },
    {
      "name": "Neighborhood Store Management Project Peer Interview Cards",
      "url": "https://docs.google.com/document/d/1OWtZ9NBepU91hBB8OngMoEBiM1RS1b5RDA3ivEh9hDI/edit?usp=sharing",
      "key": "neighborhood_store_management_project_peer_interview_cards",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "neighborhood_store_management_project_peer_interview_cards"
      }
    },
    {
      "name": "Neighborhood Store Management Project Planning Guide",
      "url": "https://docs.google.com/document/d/1hnwKcVP2keAA2N11gGjLOiHJ8vOvitTktc5FmuTot44/edit?usp=sharing",
      "key": "neighborhood_store_management_project_planning_guide",
      "properties": {
        "type": "Exemplar",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "neighborhood_store_management_project_planning_guide"
      }
    },
    {
      "name": "Neighborhood Store Management Project Planning Guide",
      "url": "https://docs.google.com/document/d/1ayg5Z5kdt5Pra6uXtRpRQXE2dQh5ZWL3IuJ0CgRERcY/edit?usp=sharing",
      "key": "neighborhood_store_management_project_planning_guide_1",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "neighborhood_store_management_project_planning_guide_1"
      }
    },
    {
      "name": "Overloaded Constructors",
      "url": "https://drive.google.com/file/d/11OlCi3rX9StSEXRO8Yz-FYNDxYSgtvvG/view?usp=sharing",
      "key": "overloaded_constructors",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "overloaded_constructors"
      }
    },
    {
      "name": "Quiz, Quiz, Trade",
      "url": "https://docs.google.com/document/d/1OZltNkaoYF7gkHsaEUnYovjg6MceYGFan__UMCjOJeM/edit?usp=sharing",
      "key": "quiz_quiz_trade",
      "properties": {
        "type": "Handout",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "quiz_quiz_trade"
      }
    },
    {
      "name": "Scope",
      "url": "https://drive.google.com/file/d/1szlGRNm7MEr9cD_QFi3nqzryqmDMsLK1/view?usp=sharing",
      "key": "scope",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "scope"
      }
    },
    {
      "name": "The Importance of Code Refactoring",
      "url": "https://drive.google.com/file/d/16zBidkT4rlee-9ti4j_UYZXeeOVkK37w/view?usp=sharing",
      "key": "the_importance_of_code_refactoring",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "the_importance_of_code_refactoring"
      }
    },
    {
      "name": "The toString Method",
      "url": "https://drive.google.com/file/d/1OelF88p0Tr_wQazfwVL_fUYoAaWI0EVW/view?usp=sharing",
      "key": "the_tostring_method",
      "properties": {
        "type": "Video",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "the_tostring_method"
      }
    },
    {
      "name": "U2L10 Extra Practice",
      "url": "https://docs.google.com/document/d/1ESdmV6hSHu7NkSA2folLcorX84RrBpmF_kEWhEWm7jM/edit?usp=sharing",
      "key": "u2l10_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u2l10_extra_practice"
      }
    },
    {
      "name": "U2L1 Extra Practice",
      "url": "https://docs.google.com/document/d/1tDn_h4BVavcFY-_YFUsxV6W4OUHk0OgRZKTNrHRI8NA/edit?usp=sharing",
      "key": "u2l1_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u2l1_extra_practice"
      }
    },
    {
      "name": "U2L2 Extra Practice",
      "url": "https://docs.google.com/document/u/2/d/1kQFOmOfKMGpbBp68XCRgsFmG_h_tWxJaLGONpKADdwQ/edit",
      "key": "u2l2_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u2l2_extra_practice"
      }
    },
    {
      "name": "U2L3 Extra Practice",
      "url": "https://docs.google.com/document/d/1b8J0XpAotSxPPK2AvnBPOZIA1GhKgwaio5Hswj6GRuY/edit?usp=sharing",
      "key": "u2l3_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u2l3_extra_practice"
      }
    },
    {
      "name": "U2L4 Extra Practice",
      "url": "https://docs.google.com/document/d/12YjXgxnQNdmWvs9Q5KzeVemm8lBnx-EfEe_1R0QsGTU/edit?usp=sharing",
      "key": "u2l4_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u2l4_extra_practice"
      }
    },
    {
      "name": "U2L5 Extra Practice",
      "url": "https://docs.google.com/document/d/1Sng7ML-9DYoPyqF64de2aI1wCii5Tai0mtaEn4bidZA/edit#",
      "key": "u2l5_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u2l5_extra_practice"
      }
    },
    {
      "name": "U2L6 Extra Practice",
      "url": "https://docs.google.com/document/d/1fzeOD9y0KpGqCYgmTfO3ZQgk7nlnGvKSYg4NMzTiAGM/edit",
      "key": "u2l6_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u2l6_extra_practice"
      }
    },
    {
      "name": "U2L7 Extra Practice",
      "url": "https://docs.google.com/document/d/1ABYjTxmUhmPDUOqmQ-LXtVvDcGZgeONHtPh-RFxQk7c/edit",
      "key": "u2l7_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u2l7_extra_practice"
      }
    },
    {
      "name": "U2L8 Extra Practice",
      "url": "https://docs.google.com/document/d/1mOczdDWDouHfpRdlngTOobfMb3AS3oIoLADV5vhTju0/edit?usp=sharing",
      "key": "u2l8_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u2l8_extra_practice"
      }
    },
    {
      "name": "U2L9 Extra Practice",
      "url": "https://docs.google.com/document/d/1_XHrhBK2o1vYFtfgv5HGAq86STYCr4IC9qh7CU3h5IY/edit",
      "key": "u2l9_extra_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "u2l9_extra_practice"
      }
    },
    {
      "name": "Unit 2 Guide",
      "url": "https://docs.google.com/document/d/1z7Ez37_PTZizTX65qKHHcQX6U9FSTs6RFGZ7vXf6Hsg/edit?usp=sharing",
      "key": "unit_2_guide",
      "properties": {
        "type": "Resource",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "unit_2_guide"
      }
    },
    {
      "name": "Unit 2 Presentation Slides",
      "url": "https://docs.google.com/presentation/d/1kfzkThzPNV9xM1IJca8ySP7T2spBvzw03kze9k46H4I/edit?usp=sharing",
      "key": "unit_2_presentation_slides",
      "properties": {
        "type": "Slides",
        "audience": "Verified Teacher"
      },
      "seeding_key": {
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "name": "Variables Manipulatives",
      "url": "https://docs.google.com/presentation/d/1GgW8Cj9mjcym6DmUw5Rd83yIR4-9EtaSZIr7hOPa0QM/edit?usp=sharing",
      "key": "variables_manipulatives",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "variables_manipulatives"
      }
    },
    {
      "name": "Vocabulary Crossword",
      "url": "https://docs.google.com/presentation/d/1ZJceJ7K_tj-Yszt81_uM1gY3oD0XprkTtdG5r5hDql8/edit#slide=id.p",
      "key": "vocabulary_practice",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "vocabulary_practice"
      }
    },
    {
      "name": "Writing Constructors Guided Notes",
      "url": "https://docs.google.com/document/d/1Ffi0kn764VV99v_6jFKOdh_anzc8wmLIJnL59EN_KZQ/edit?usp=sharing",
      "key": "writing_constructors_guided_notes",
      "properties": {
        "type": "Handout",
        "audience": "Student"
      },
      "seeding_key": {
        "resource.key": "writing_constructors_guided_notes"
      }
    }
  ],
  "lessons_resources": [
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "resource.key": "_key_u2l8_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "resource.key": "methods_that_return"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "resource.key": "u2l8_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "resource.key": "_key_construct_an_object_cards"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "resource.key": "_key_u2l4_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "resource.key": "construct_an_object_cards_1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "resource.key": "overloaded_constructors"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "resource.key": "u2l4_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Assessment Day",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "resource.key": "_key_defining_attributes"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "resource.key": "_key_u2l1_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "resource.key": "defining_attributes"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "resource.key": "defining_attributes_-_classes_foldables"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "resource.key": "defining_attributes_-_main_method"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "resource.key": "instance_variables_and_attributes"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "resource.key": "quiz_quiz_trade"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "resource.key": "u2l1_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "resource.key": "_key_u2l10_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "resource.key": "card_sort"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "resource.key": "the_tostring_method"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "resource.key": "u2l10_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "resource.key": "unit_2_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "_key_college_board_frq"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "_key_frq_graphic_organizer"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "_key_frq_writing"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "college_board_frq"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "combo_class_frq_print_out"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "frq_graphic_organizer"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "frq_scoring_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "frq_writing"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "_key_exploring_expressions_version_a"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "_key_exploring_expressions_version_b"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "_key_u2l5_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "_key_vocabulary_crossword"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "arithmetic_operators"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "evaluating_expressions"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "exploring_expressions_version_a"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "exploring_expressions_version_b"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "u2l5_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "resource.key": "vocabulary_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "resource.key": "_key_diagramming_scope"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "resource.key": "_key_u2l6_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "resource.key": "diagramming_scope"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "resource.key": "scope"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "resource.key": "u2l6_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "resource.key": "_key_u2l9_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "resource.key": "mutator_methods"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "resource.key": "u2l9_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "resource.key": "neighborhood_store_management_project_planning_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "resource.key": "neighborhood_store_management_project_planning_guide_1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "resource.key": "neighborhood_store_management_project_planning_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "resource.key": "neighborhood_store_management_project_planning_guide_1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "resource.key": "neighborhood_store_management_project_peer_interview_cards"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "resource.key": "neighborhood_store_management_project_planning_guide"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "resource.key": "neighborhood_store_management_project_planning_guide_1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "resource.key": "_key_u2l2_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "resource.key": "accepting_user_input"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "resource.key": "creating_variables"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "resource.key": "u2l2_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "resource.key": "variables_manipulatives"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "resource.key": "_key_u2l7_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "resource.key": "class_hierarchy_cards"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "resource.key": "the_importance_of_code_refactoring"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "resource.key": "u2l7_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "resource.key": "_key_u2l3_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "resource.key": "_key_writing_constructors_guided_notes"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "resource.key": "constructors"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "resource.key": "u2l3_extra_practice"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "resource.key": "unit_2_presentation_slides"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "resource.key": "writing_constructors_guided_notes"
      }
    }
  ],
  "scripts_resources": [
    {
      "seeding_key": {
        "resource.key": "all_resources_1",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "seeding_key": {
        "resource.key": "all_standards_1",
        "script.name": "csa2-pilot-facilitator"
      }
    },
    {
      "seeding_key": {
        "resource.key": "all_vocabulary_1",
        "script.name": "csa2-pilot-facilitator"
      }
    }
  ],
  "scripts_student_resources": [

  ],
  "vocabularies": [
    {
      "key": "public",
      "word": "public",
      "definition": "Indicates that an instance variable or method is accessible from outside of the class",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "public"
      }
    },
    {
      "key": "private",
      "word": "private",
      "definition": "Indicates that an instance variable or method is accessible only from within the class",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "private"
      }
    },
    {
      "key": "instance_variable",
      "word": "Instance Variable",
      "definition": "A variable defined in a class which represents an attribute of an object",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "instance_variable"
      }
    },
    {
      "key": "attribute",
      "word": "Attribute",
      "definition": "A characteristic of an object",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "attribute"
      }
    },
    {
      "key": "has_a_relationship",
      "word": "Has-A Relationship",
      "definition": "The relationship between an object and its instance variables",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "has_a_relationship"
      }
    },
    {
      "key": "data_encapsulation",
      "word": "Data Encapsulation",
      "definition": "An object-oriented programming concept where the details of a class are hidden from the user; also referred to as information hiding",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "data_encapsulation"
      }
    },
    {
      "key": "boolean",
      "word": "Boolean",
      "definition": "A data type that can either be `true` or `false`",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "boolean"
      }
    },
    {
      "key": "variable",
      "word": "Variable",
      "definition": "A container that stores a value in memory",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "variable"
      }
    },
    {
      "key": "declaration",
      "word": "Declaration",
      "definition": "Giving a name and data type to a variable",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "declaration"
      }
    },
    {
      "key": "initialization",
      "word": "Initialization",
      "definition": "Giving a starting value to a variable using the assignment operator (`=`)",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "initialization"
      }
    },
    {
      "key": "data_type",
      "word": "Data Type",
      "definition": "The format of the data that can be stored in a variable",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "data_type"
      }
    },
    {
      "key": "primitive_type",
      "word": "Primitive Type",
      "definition": "A basic data type that is predefined by Java",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "primitive_type"
      }
    },
    {
      "key": "reference_type",
      "word": "Reference Type",
      "definition": "A data type that contains a pointer to the memory location of an object",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "reference_type"
      }
    },
    {
      "key": "assignment",
      "word": "Assignment",
      "definition": "Using the assignment operator (`=`) to initialize or change the value stored in a variable",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "assignment"
      }
    },
    {
      "key": "literal",
      "word": "Literal",
      "definition": "A source code representation of a value, such as a number or text",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "literal"
      }
    },
    {
      "key": "int",
      "word": "int",
      "definition": "A data type that can store integers, or whole numbers",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "int"
      }
    },
    {
      "key": "double",
      "word": "double",
      "definition": "A data type that can store a decimal number",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "double"
      }
    },
    {
      "key": "string",
      "word": "String",
      "definition": "A data type that contains a sequence of characters enclosed in double quotations (`\" \"`)",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "string"
      }
    },
    {
      "key": "null",
      "word": "null",
      "definition": "Indicates that the variable does not refer to any object",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "null"
      }
    },
    {
      "key": "constructor",
      "word": "Constructor",
      "definition": "A block of code in the class that tells the computer how to create a new object",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "constructor"
      }
    },
    {
      "key": "initialize",
      "word": "Initialize",
      "definition": "Create a new object with a specific name and starting values for its attributes",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "initialize"
      }
    },
    {
      "key": "constructor_signature",
      "word": "Constructor Signature",
      "definition": "The first line of the constructor, which includes the constructor name and lists the object's attributes that can be specified when it is initialized",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "constructor_signature"
      }
    },
    {
      "key": "formal_parameter",
      "word": "Formal Parameter",
      "definition": "The name of the attribute in the constructor signature",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "formal_parameter"
      }
    },
    {
      "key": "actual_parameter",
      "word": "Actual Parameter",
      "definition": "The value given to an attribute when initializing an object",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "actual_parameter"
      }
    },
    {
      "key": "call_by_value",
      "word": "Call By Value",
      "definition": "Copying the value of the actual parameter to the constructor's formal parameter",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "call_by_value"
      }
    },
    {
      "key": "instantiate",
      "word": "Instantiate",
      "definition": "Calling the constructor to create an object",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "instantiate"
      }
    },
    {
      "key": "local_variable",
      "word": "Local Variable",
      "definition": "A variable declared and accessible within a specific block of code",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "local_variable"
      }
    },
    {
      "key": "default_value",
      "word": "Default Value",
      "definition": "A predefined value that is used by a program when the user does not provide a value",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "default_value"
      }
    },
    {
      "key": "overloading",
      "word": "Overloading",
      "definition": "Defining two or more methods with the same name but different signatures",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "overloading"
      }
    },
    {
      "key": "constructor_overloading",
      "word": "Constructor Overloading",
      "definition": "Defining more than one constructor in a class with different signatures",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "constructor_overloading"
      }
    },
    {
      "key": "no_argument_constructor",
      "word": "No-Argument Constructor",
      "definition": "A constructor with no parameters",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "no_argument_constructor"
      }
    },
    {
      "key": "evaluate",
      "word": "Evaluate",
      "definition": "Determining the value of an expression",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "evaluate"
      }
    },
    {
      "key": "expression",
      "word": "Expression",
      "definition": "A combination of data and operators that evaluates to a single value",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "expression"
      }
    },
    {
      "key": "concatenation",
      "word": "Concatenation",
      "definition": "Merging two strings into one",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "concatenation"
      }
    },
    {
      "key": "compound_assignment_operator",
      "word": "Compound Assignment Operator",
      "definition": "Shortcut syntax (+=, -=, \\*=, /=, %=) to perform an operation (+, -, \\*, /, or %) on both operands and store the result into the operand on the left",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "compound_assignment_operator"
      }
    },
    {
      "key": "arithmeticexception",
      "word": "ArithmeticException",
      "definition": "An error caused by dividing by zero",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "arithmeticexception"
      }
    },
    {
      "key": "operand",
      "word": "Operand",
      "definition": "The data that is operated on",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "operand"
      }
    },
    {
      "key": "scope",
      "word": "Scope",
      "definition": "Where a variable can be used",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "scope"
      }
    },
    {
      "key": "this_keyword",
      "word": "this keyword",
      "definition": "Used to refer to the current object in a method or constructor",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "this_keyword"
      }
    },
    {
      "key": "inheritance",
      "word": "Inheritance",
      "definition": "An object-oriented programming principle where a subclass inherits the instance variables and methods of a superclass",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "inheritance"
      }
    },
    {
      "key": "super",
      "word": "super",
      "definition": "A keyword used to refer to the superclass",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "super"
      }
    },
    {
      "key": "dry_principle",
      "word": "DRY Principle",
      "definition": "Stands for \"Don't Repeat Yourself\"; A software development principle to reduce repetition in code",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "dry_principle"
      }
    },
    {
      "key": "refactoring",
      "word": "Refactoring",
      "definition": "Improving the readability, reusability, or structure of program code without altering its functionality",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "refactoring"
      }
    },
    {
      "key": "accessor_method",
      "word": "Accessor Method",
      "definition": "Gives the value stored in an instance variable",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "accessor_method"
      }
    },
    {
      "key": "method_signature",
      "word": "Method Signature",
      "definition": "Consists of a name and parameter list",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "method_signature"
      }
    },
    {
      "key": "return_keyword",
      "word": "return Keyword",
      "definition": "Exits a method and provides the value to where the method is called",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "return_keyword"
      }
    },
    {
      "key": "return_type",
      "word": "Return Type",
      "definition": "A copy of the value is given to where the method is called",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "return_type"
      }
    },
    {
      "key": "dot_operator",
      "word": "Dot Operator",
      "definition": "Used to call a method in a class",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "dot_operator"
      }
    },
    {
      "key": "state",
      "word": "State",
      "definition": "The attributes of an object that are represented by its instance variables",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "state"
      }
    },
    {
      "key": "return_by_value",
      "word": "Return By Value",
      "definition": "A copy of the value is given to where the method is called",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "return_by_value"
      }
    },
    {
      "key": "mutator_method",
      "word": "Mutator Method",
      "definition": "Changes the value stored in an instance variable",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "mutator_method"
      }
    },
    {
      "key": "void_method",
      "word": "void Method",
      "definition": "Does not return a value",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "void_method"
      }
    },
    {
      "key": "override",
      "word": "Override",
      "definition": "Defining a method in a subclass with the same method signature as a method inherited from a superclass",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "override"
      }
    },
    {
      "key": "escape_sequence",
      "word": "Escape Sequence",
      "definition": "Starts with a `\\` to indicate how to display a `String`",
      "properties": {
      },
      "seeding_key": {
        "vocabulary.key": "escape_sequence"
      }
    }
  ],
  "lessons_vocabularies": [
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "vocabulary.key": "public"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "vocabulary.key": "private"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "vocabulary.key": "instance_variable"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "vocabulary.key": "attribute"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "vocabulary.key": "has_a_relationship"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "vocabulary.key": "data_encapsulation"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "boolean"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "variable"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "declaration"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "initialization"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "data_type"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "primitive_type"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "reference_type"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "assignment"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "literal"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "int"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "double"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "string"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "vocabulary.key": "null"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "vocabulary.key": "constructor"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "vocabulary.key": "initialize"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "vocabulary.key": "constructor_signature"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "vocabulary.key": "formal_parameter"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "vocabulary.key": "actual_parameter"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "vocabulary.key": "call_by_value"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "vocabulary.key": "instantiate"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "vocabulary.key": "local_variable"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "vocabulary.key": "default_value"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "vocabulary.key": "overloading"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "vocabulary.key": "constructor_overloading"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "vocabulary.key": "no_argument_constructor"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "vocabulary.key": "evaluate"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "vocabulary.key": "expression"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "vocabulary.key": "concatenation"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "vocabulary.key": "compound_assignment_operator"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "vocabulary.key": "arithmeticexception"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "vocabulary.key": "operand"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "vocabulary.key": "scope"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "vocabulary.key": "this_keyword"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "vocabulary.key": "inheritance"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "vocabulary.key": "super"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "vocabulary.key": "dry_principle"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "vocabulary.key": "refactoring"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "vocabulary.key": "accessor_method"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "vocabulary.key": "method_signature"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "vocabulary.key": "return_keyword"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "vocabulary.key": "return_type"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "vocabulary.key": "dot_operator"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "vocabulary.key": "state"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "vocabulary.key": "return_by_value"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "vocabulary.key": "mutator_method"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "vocabulary.key": "void_method"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "vocabulary.key": "override"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "vocabulary.key": "escape_sequence"
      }
    }
  ],
  "lessons_programming_expressions": [

  ],
  "objectives": [
    {
      "key": "59c53edd-455d-46de-b698-72916b171240",
      "properties": {
        "description": "Create instance variables to represent attributes"
      },
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "objective.key": "59c53edd-455d-46de-b698-72916b171240"
      }
    },
    {
      "key": "950ba953-e2d2-4041-b6ef-0d7498241ec1",
      "properties": {
        "description": "Describe the process and purpose of encapsulation"
      },
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "objective.key": "950ba953-e2d2-4041-b6ef-0d7498241ec1"
      }
    },
    {
      "key": "f4453adb-d7a3-4eca-88c9-3afdbe8609a9",
      "properties": {
        "description": "Understand the difference between `public` and `private` access"
      },
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "objective.key": "f4453adb-d7a3-4eca-88c9-3afdbe8609a9"
      }
    },
    {
      "key": "e9307721-5698-4cb2-bffb-a4418cbaaddc",
      "properties": {
        "description": "Declare and assign a value of type `int`, `double`, `boolean`, `String`, or `Painter` to a variable"
      },
      "seeding_key": {
        "lesson.key": "Using Variables",
        "objective.key": "e9307721-5698-4cb2-bffb-a4418cbaaddc"
      }
    },
    {
      "key": "3bd87706-7634-4d80-bcf2-7f65c53aa82c",
      "properties": {
        "description": "Construct a trace table to track the changing values of variables"
      },
      "seeding_key": {
        "lesson.key": "Using Variables",
        "objective.key": "3bd87706-7634-4d80-bcf2-7f65c53aa82c"
      }
    },
    {
      "key": "d856ac30-193a-4902-9ec5-0b6c9917c2b8",
      "properties": {
        "description": "Accept user input for different data types using a `Scanner` object"
      },
      "seeding_key": {
        "lesson.key": "Using Variables",
        "objective.key": "d856ac30-193a-4902-9ec5-0b6c9917c2b8"
      }
    },
    {
      "key": "b171fb5d-347e-45b5-ac16-2fd9d0324610",
      "properties": {
        "description": "Write a class with instance variables and a constructor"
      },
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "objective.key": "b171fb5d-347e-45b5-ac16-2fd9d0324610"
      }
    },
    {
      "key": "cd51b357-afd5-4e60-b2a8-bbef9bdc78a3",
      "properties": {
        "description": "Identify the components of a constructor and its signature"
      },
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "objective.key": "cd51b357-afd5-4e60-b2a8-bbef9bdc78a3"
      }
    },
    {
      "key": "57c93b82-1eeb-4fc7-bf14-f97a93f4a0b7",
      "properties": {
        "description": "Use input to obtain values to initialize an object"
      },
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "objective.key": "57c93b82-1eeb-4fc7-bf14-f97a93f4a0b7"
      }
    },
    {
      "key": "82d6d504-7376-4a98-b2d1-56e4aee950a7",
      "properties": {
        "description": "Identify the components of a constructor call"
      },
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "objective.key": "82d6d504-7376-4a98-b2d1-56e4aee950a7"
      }
    },
    {
      "key": "1f699f47-c498-4f34-9e1e-79419cbf33be",
      "properties": {
        "description": "Identify, using its signature, the correct constructor being called"
      },
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "objective.key": "1f699f47-c498-4f34-9e1e-79419cbf33be"
      }
    },
    {
      "key": "09ff1724-18bb-4032-9388-e5fbe4eb18ef",
      "properties": {
        "description": "Create overloaded constructors"
      },
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "objective.key": "09ff1724-18bb-4032-9388-e5fbe4eb18ef"
      }
    },
    {
      "key": "a2fc05d0-1f9e-4af5-bf5e-7a59c2210912",
      "properties": {
        "description": "Construct a no-argument constructor to assign default values to the instance variables"
      },
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "objective.key": "a2fc05d0-1f9e-4af5-bf5e-7a59c2210912"
      }
    },
    {
      "key": "73d4dcc9-6379-4eaa-8af3-869959275cea",
      "properties": {
        "description": "Analyze an expression to determine the resulting value and type"
      },
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "objective.key": "73d4dcc9-6379-4eaa-8af3-869959275cea"
      }
    },
    {
      "key": "8d442a07-3e92-4ee4-b2c4-42520bc64360",
      "properties": {
        "description": "Describe and apply Java’s operator precedence"
      },
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "objective.key": "8d442a07-3e92-4ee4-b2c4-42520bc64360"
      }
    },
    {
      "key": "19abd6ad-bda4-4415-a246-31f024dc2541",
      "properties": {
        "description": "Use arithmetic operators to write and evaluate Java expressions"
      },
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "objective.key": "19abd6ad-bda4-4415-a246-31f024dc2541"
      }
    },
    {
      "key": "c765c215-d050-4a84-b8d1-4bc676199f1b",
      "properties": {
        "description": "Identify cases that result in an `ArithmeticException`"
      },
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "objective.key": "c765c215-d050-4a84-b8d1-4bc676199f1b"
      }
    },
    {
      "key": "774d9751-953c-4ad8-8c8c-2f3a32411c76",
      "properties": {
        "description": "Identify the scope of variables"
      },
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "objective.key": "774d9751-953c-4ad8-8c8c-2f3a32411c76"
      }
    },
    {
      "key": "6eac911d-8cb4-4c31-a253-23e88ab3828f",
      "properties": {
        "description": "Determine when to use the this keyword to refer to instance variables"
      },
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "objective.key": "6eac911d-8cb4-4c31-a253-23e88ab3828f"
      }
    },
    {
      "key": "22ca2480-ff44-4ccd-a19c-9599e0881394",
      "properties": {
        "description": "Construct class hierarchies"
      },
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "objective.key": "22ca2480-ff44-4ccd-a19c-9599e0881394"
      }
    },
    {
      "key": "e2a86939-8607-4bf3-87de-69df009ab501",
      "properties": {
        "description": "Write constructors for subclasses to initialize local and inherited instance variables"
      },
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "objective.key": "e2a86939-8607-4bf3-87de-69df009ab501"
      }
    },
    {
      "key": "ef7532f9-2546-4cc6-a9b8-d228f4bf8dc2",
      "properties": {
        "description": "Refactor code to improve its readability and reusability"
      },
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "objective.key": "ef7532f9-2546-4cc6-a9b8-d228f4bf8dc2"
      }
    },
    {
      "key": "290383fb-3700-43e7-b507-7ab5444f607b",
      "properties": {
        "description": "Identify the components of a method signature"
      },
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "objective.key": "290383fb-3700-43e7-b507-7ab5444f607b"
      }
    },
    {
      "key": "833d6f89-2a77-45fb-ae71-78fb2554daa5",
      "properties": {
        "description": "Write accessor methods for the Dessert class and its subclasses"
      },
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "objective.key": "833d6f89-2a77-45fb-ae71-78fb2554daa5"
      }
    },
    {
      "key": "b2690f1d-3514-422b-a0a7-57e4c176326b",
      "properties": {
        "description": "Output information about the state of an object to the console"
      },
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "objective.key": "b2690f1d-3514-422b-a0a7-57e4c176326b"
      }
    },
    {
      "key": "36bacd16-7bec-416d-897d-dba780f1a22d",
      "properties": {
        "description": "Write expressions involving accessor methods and their return values"
      },
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "objective.key": "36bacd16-7bec-416d-897d-dba780f1a22d"
      }
    },
    {
      "key": "e31d92ed-6eae-40eb-b3be-6fbe2f8ae16e",
      "properties": {
        "description": "Write mutator methods for the `Dessert` class and its subclasses"
      },
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "objective.key": "e31d92ed-6eae-40eb-b3be-6fbe2f8ae16e"
      }
    },
    {
      "key": "3699f8e4-6a6c-4b3c-bfd4-6fddbb08a867",
      "properties": {
        "description": "Explain the meaning of void"
      },
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "objective.key": "3699f8e4-6a6c-4b3c-bfd4-6fddbb08a867"
      }
    },
    {
      "key": "2be45585-f54d-48ee-8eae-7fe79fa18ace",
      "properties": {
        "description": "Describe the relationship between print methods, `Object`, and `toString()` "
      },
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "objective.key": "2be45585-f54d-48ee-8eae-7fe79fa18ace"
      }
    },
    {
      "key": "ed5f4f12-365b-4194-9a36-28e7ed131cfa",
      "properties": {
        "description": "Write `toString()` methods"
      },
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "objective.key": "ed5f4f12-365b-4194-9a36-28e7ed131cfa"
      }
    },
    {
      "key": "54bc9313-e841-4f73-abf5-96d05bebf3dc",
      "properties": {
        "description": "Use escape sequences to format output"
      },
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "objective.key": "54bc9313-e841-4f73-abf5-96d05bebf3dc"
      }
    },
    {
      "key": "b8f722bc-013b-4231-843a-e7baedfdd2f3",
      "properties": {
        "description": "Design a class that can be extended and includes both accessor and mutator methods"
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "objective.key": "b8f722bc-013b-4231-843a-e7baedfdd2f3"
      }
    },
    {
      "key": "23d8a692-f03f-4996-9408-97b16e37fc17",
      "properties": {
        "description": "Implement a class that represents an item for a business in The Neighborhood"
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 1",
        "objective.key": "23d8a692-f03f-4996-9408-97b16e37fc17"
      }
    },
    {
      "key": "4ff63f34-fb63-458a-a3bc-246c5648e27a",
      "properties": {
        "description": "Develop a program to manage a business in The Neighborhood"
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "objective.key": "4ff63f34-fb63-458a-a3bc-246c5648e27a"
      }
    },
    {
      "key": "a2513c25-6f49-438e-ae8a-1a336a35eee5",
      "properties": {
        "description": "Implement a class that extends a superclass"
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "objective.key": "a2513c25-6f49-438e-ae8a-1a336a35eee5"
      }
    },
    {
      "key": "76ae9266-16da-45f3-8296-815528d115f0",
      "properties": {
        "description": "Conduct code reviews to give and receive feedback on program code"
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 2",
        "objective.key": "76ae9266-16da-45f3-8296-815528d115f0"
      }
    },
    {
      "key": "e3ab4ac8-7c38-45c1-8e19-1ac6e7d79a93",
      "properties": {
        "description": "Develop a program to manage a business in The Neighborhood"
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "objective.key": "e3ab4ac8-7c38-45c1-8e19-1ac6e7d79a93"
      }
    },
    {
      "key": "16df9d4f-a8ab-40f8-9d8b-4ed6892ee278",
      "properties": {
        "description": "Implement the main method to allow user interaction with a class"
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "objective.key": "16df9d4f-a8ab-40f8-9d8b-4ed6892ee278"
      }
    },
    {
      "key": "2bec644e-6584-446e-a106-ed03859ef4d0",
      "properties": {
        "description": "Reflect on the development process"
      },
      "seeding_key": {
        "lesson.key": "The Neighborhood Store Management Project - Day 3",
        "objective.key": "2bec644e-6584-446e-a106-ed03859ef4d0"
      }
    },
    {
      "key": "7eace142-e84e-4035-9bce-6e4666f919e2",
      "properties": {
        "description": "Implement a class using inheritance"
      },
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "objective.key": "7eace142-e84e-4035-9bce-6e4666f919e2"
      }
    },
    {
      "key": "011ea4ca-0258-4bd7-97a5-cd223fb3970d",
      "properties": {
        "description": "Implement methods based on a given set of specifications"
      },
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "objective.key": "011ea4ca-0258-4bd7-97a5-cd223fb3970d"
      }
    },
    {
      "key": "54aff3e2-91f0-47e9-af44-873cb35c3a79",
      "properties": {
        "description": "Write and validate code of peers"
      },
      "seeding_key": {
        "lesson.key": "FRQ Day",
        "objective.key": "54aff3e2-91f0-47e9-af44-873cb35c3a79"
      }
    }
  ],
  "lessons_standards": [
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.B.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.B.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.A.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.A.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.A.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.A.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.B.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.A.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Defining Attributes",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.A.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.A.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.B.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.A.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.B.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.B.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.B.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.C.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.C.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.C.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.D.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.D.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Using Variables",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.E.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.C.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.C.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.C.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.C.6"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.D.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.D.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.D.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.E.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.A.5"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.B.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.B.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.C.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.C.5"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Adding Multiple Constructors",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.B.5"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.A.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.A.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.A.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.A.5"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.A.6"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.A.7"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.A.8"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.B.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.B.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "CON-1.B.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Manipulating Variables and Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.E.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.G.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.G.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.G.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Minimizing Errors in Initialization",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.H.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.B.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.B.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.B.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.B.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.B.5"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.B.6"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.B.7"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.B.8"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.B.9"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Writing Constructors for Hierarchies",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.C.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.A.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.E.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.E.5"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.E.6"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.G.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.D.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.D.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.D.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.D.5"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.A.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Accessing Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.E.3"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.E.7"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.F.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-1.F.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.E.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.E.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Modifying Object Data",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-3.A.2"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.D.6"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "framework.shortcode": "csa",
        "standard.shortcode": "MOD-2.D.7"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.A.1"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.E.11"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.E.4"
      }
    },
    {
      "seeding_key": {
        "lesson.key": "Displaying Object Information",
        "framework.shortcode": "csa",
        "standard.shortcode": "VAR-1.E.5"
      }
    }
  ],
  "lessons_opportunity_standards": [

  ]
}