{
  "category_key": "org_code_media",
  "content": "Represents a color as amounts of red, green, and blue (ranging from 0 to 255) that blend together to make a unique color. This class also provides a number of preset colors, like `fuschia`, which can be referenced either by a string value or as one of the constants in this class, e.g. `Color.FUSCHIA`.",
  "examples": "[]",
  "external_documentation": "",
  "fields": "[{\"name\":\"WHITE\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (255, 255, 255)\\n\\n\"},{\"name\":\"SILVER\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (192, 192, 192)\"},{\"name\":\"GRAY\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (128, 128, 128)\"},{\"name\":\"BLACK\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (0, 0, 0)\"},{\"name\":\"RED\",\"type\":\"public static final Color\",\"description\":\"Constant color with the value (255, 0, 0)\"},{\"name\":\"MAROON\",\"type\":\"public static final Color\",\"description\":\"Constant color with the value (128,0,0)\"},{\"name\":\"YELLOW\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (255, 255, 0)\"},{\"name\":\"OLIVE\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (128, 128, 0)\"},{\"name\":\"LIME\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (0, 255, 0)\"},{\"name\":\"GREEN\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (0, 128, 0)\"},{\"name\":\"AQUA\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (0, 255, 255)\"},{\"name\":\"TEAL\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (0, 128, 128)\"},{\"name\":\"BLUE\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (0, 0, 255)\"},{\"name\":\"NAVY\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (0, 0, 128)\"},{\"name\":\"FUSCHIA\",\"type\":\"public static final Color \",\"description\":\"![](https://images.code.org/a27da0d40b32c808dd28bfd02a8859a7-fuschia.png) Constant color with the value (255, 0, 255)\"},{\"name\":\"PURPLE\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (128 ,0, 128)\"},{\"name\":\"PINK\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (255, 192, 203)\\n\\n\"},{\"name\":\"ORANGE\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (255, 165, 0)\"},{\"name\":\"GOLD\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (255, 215, 0)\"},{\"name\":\"BROWN\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (165, 42, 42)\\n\\n\"},{\"name\":\"CHOCOLATE\",\"type\":\"public static final Color \",\"description\":\"Constant color with the value (210, 105, 30)\"},{\"name\":\"TAN\",\"type\":\"public static final Color \"},{\"name\":\"TURQUOISE\",\"type\":\"public static final Color \"},{\"name\":\"INDIGO\",\"type\":\"public static final Color \"},{\"name\":\"VIOLET\",\"type\":\"public static final Color \"},{\"name\":\"BEIGE\",\"type\":\"public static final Color \"},{\"name\":\"IVORY\",\"type\":\"public static final Color \"}]",
  "key": "Color",
  "name": "Color",
  "syntax": "",
  "tips": "",
  "methods": [
    {
      "key": "color",
      "position": 0,
      "name": "Color(String color) throws IllegalArgumentException",
      "content": "Creates a color from a string name, like `\"red\"` or `\"brown\"`. If the name is not recognized, this constructor will throw an `IllegalArgumentException`.",
      "parameters": "[{\"name\":\"color\",\"type\":\"String\",\"required\":true,\"description\":\"The name of the color. See the above list for supported color names.\"}]",
      "examples": "[]",
      "syntax": "Possible color names are:\n![expandable](https://images.code.org/b93be88eb3e0a7ea66fe63503b51dee1-color_names.png)",
      "external_link": null,
      "overload_of": null,
      "return_value": null
    },
    {
      "key": "color2",
      "position": 1,
      "name": "Color(int red, int green, int blue)",
      "content": "Create a new color based on the red, green, and blue values provided. The alpha value will be maximum opacity.",
      "parameters": "[{\"name\":\"red\",\"type\":\"int\",\"required\":true,\"description\":\"the red value from 0 - 255\\n\"},{\"name\":\"green\",\"type\":\"int\",\"required\":true,\"description\":\"the green value from 0 - 255\\n\"},{\"name\":\"blue\",\"type\":\"int\",\"required\":true,\"description\":\"the blue value from 0 - 255\\n\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "overload_of": "color",
      "return_value": null
    },
    {
      "key": "color3",
      "position": 2,
      "name": "public Color(Color color)",
      "content": "Creates a new color that a copy of the provided color.\n",
      "parameters": "[{\"name\":\"color\",\"type\":\"Color\",\"required\":true,\"description\":\"the color to copy\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "overload_of": "color",
      "return_value": null
    },
    {
      "key": "getred",
      "position": 3,
      "name": "public int getRed()",
      "content": "Returns the amount of red (ranging from 0 to 255).",
      "parameters": "[]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "overload_of": null,
      "return_value": null
    },
    {
      "key": "getgreen",
      "position": 4,
      "name": "public int getGreen()",
      "content": "Returns the amount of green (ranging from 0 to 255).\n",
      "parameters": "[]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "overload_of": null,
      "return_value": null
    },
    {
      "key": "getblue",
      "position": 5,
      "name": "public int getBlue()",
      "content": "Returns the amount of blue (ranging from 0 to 255).\n",
      "parameters": "[]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "overload_of": null,
      "return_value": null
    },
    {
      "key": "setred",
      "position": 6,
      "name": "public void setRed(int value)",
      "content": "Sets the amount of red (ranging from 0 to 255). Values below 0 will be ignored and set to 0, and values above 255 will be ignored and set to 255.",
      "parameters": "[{\"name\":\"value\",\"type\":\"int\",\"required\":true,\"description\":\"the amount of red (ranging from 0 to 255) in the color\\n\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "overload_of": null,
      "return_value": null
    },
    {
      "key": "setgreen",
      "position": 7,
      "name": "public void setGreen(int value)",
      "content": "Sets the amount of green (ranging from 0 to 255). Values below 0 will be ignored and set to 0, and values above 255 will be ignored and set to 255.\n",
      "parameters": "[{\"name\":\"value\",\"type\":\"int\",\"required\":true,\"description\":\"the amount of green (ranging from 0 to 255) in the color\\n\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "overload_of": null,
      "return_value": null
    },
    {
      "key": "setblue",
      "position": 8,
      "name": "public int setBlue(int value)",
      "content": null,
      "parameters": "[{\"name\":\"value\",\"type\":\"int\",\"required\":true,\"description\":\"the amount of blue (ranging from 0 to 255) in the color\\n\"}]",
      "examples": "[]",
      "syntax": null,
      "external_link": null,
      "overload_of": null,
      "return_value": null
    }
  ]
}