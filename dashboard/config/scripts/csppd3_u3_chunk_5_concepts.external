name 'CSPPD3-u3 chunk 5 concepts'
css 'unplugged'

markdown <<MARKDOWN
<link rel="stylesheet" type="text/css" href="https://staging.code.org/curriculum/docs/web/k5online.css">

### Unit 3 Overview > Chunk 5: Introduction to Loops and Arrays > Concepts

<br/>
<img src="https://images.code.org/90926d638b13b74fb200b8ecc9cfc00b-image-1446429898526.png" width="550" style="float:right; margin-left:30px">
#### Content Overview
So far in this unit, students have learned about functions, how to program with events, how to use variables to control the computer’s memory, and how to use conditionals to control the flow of a program. In the final instructional chunk of unit 3, students learn about **loops** and **arrays**.
<br><br>
We explore two types of loops in this chunk-- the **while loop** and the **for loop**. A *while loop* is useful when you have a conditional statement in which the "true" branch leads back to the original condition. For example, while it’s raining outside, you will wear a raincoat. In other words, you will perform the action for as long as the condition is true. A *for loop* is used to execute a block of code some number of times. The `repeat` loop we saw back in the first chunk of this unit was actually a version of the `for` loop, but with the statements that make the loop run abstracted away. When setting up a `for` loop, there are three pieces of setup that must be done-  set up a counter variable,  define the conditions for the loop to run, and de/in-crements the value of the counter variable. As we’ll see in this chunk, `for` loops are particularly useful for any situation where we need to execute a piece of code a specific number of times, regardless of if that amount is defined when the program is written or as the program runs.  
<br><br>
**Arrays** are a data type that can store *multiple values* at the same time in *one variable*— in other words, arrays are lists of items. This is useful for situations where a program is keeping track of similar pieces of data, but it would get tedious for the programmer to assign each value to a different variable. In this unit students will get a chance to circle back to digital images (a topic that was covered in unit 1) see how images are actually just large arrays of pixel data. 
<br><br>
#### What it looks like
This chunk starts with structured activities to motivate the concepts of loops and arrays, and then builds up to an open-ended project where students manipulate the pixels of an image. 

<br><br>

##### Introduction to While Loops
Earlier in the unit, students learned about simple loops that served to let them avoid duplicating code by enclosing segments of code inside of the `repeat` loop. In this chunk of lessons students are introduced to the `while` loop, which builds on the work they’ve just done with conditionals, but now rather than executing a piece of code one time when the condition is true, the code is repeated until the condition becomes false. 

<br><br>
>**CS Concepts:** 

>- **While Loops** are a way for us to easily represent a process made up of ***many repeated steps***. 
- Flow charts can be used to represent the logic used with a while loop. 
- Loops can help us write programs that **simulate an experiment** that has a lot of data points (for example: flipping a coin 10,000 times)

##### Introduction to Arrays
As students are generating more data in their programs and need to store more and more information, the prospect of creating individual variables for each piece of data becomes less appealing and harder to keep track of. In these lessons, students develop an understanding of how to use arrays, and build a simple app that stores information in an array that can be controlled by and displayed to the user. 

<br><br>

>**CS Concepts:** 

>- An **array** is a data type that is very useful when writing a program that has a list of items that need to be stored. Without arrays, each items would need to be stored in its own variable, which means as the list grows the number of variables needed grows. An array allows us to store the whole list, or collection of elements, in one place. 
- The contents of an array can change as the program runs.
- We use a **for loop**  to move through the elements of an array.

##### Image Data in Arrays
This chunk ends with a three-lesson sequence where students extend their knowledge and begin to explore digital images as arrays, which are stored as arrays of image data (meta data and pixel data). Students construct mathematical function and apply them to the pixel color values to manipulate the appearance of the image— in effect creating image filters like those you see on image sharing and editing apps like Instagram. 

<br><br>
>**CS Concepts:** 

>- **Images are actually an array of pixel-data.**
- The appearance of an image can be altered by **altering the RGB values of the pixels**, which are stored as numbers in an array. 



<br><br>
<a class="btn btn-large btn-primary next-stage submitButton">Continue</a>


MARKDOWN
