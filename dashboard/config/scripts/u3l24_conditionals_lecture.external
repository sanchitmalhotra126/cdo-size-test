name 'U3L24 Conditionals Lecture'
css 'unplugged'
markdown <<MARKDOWN
<style>

red {color: red}
blue {color: blue}
purple {color: purple}
red {color: red}
orange {color: orange}

</style>

# Breaking Down if/else Statements

What do if/else if/else statements actually do? They let you control the flow of your program. 

<br/>
<img src="https://images.code.org/d62a7b736e7d69957b1c129e0a4ecbe0-image-1437086155945.png" width="300" style="float: left;"></img>

When your computer sees the keyword **if**, (represented by a diamond in these images), it knows it has reached a point where it needs to branch off and decide whether or not to execute a piece of code. How does it decide? Well, it checks the **condition** you put *inside* your if statement. It looks between the parentheses and checks whether your condition is **true** or **false**.

<code style="color: black"><purple>if</purple> (<blue>condition</blue>) { <orange>body</orange>; } </code>

If the condition is true, you computer will follow the following section of code and execute the **body** of the if statement. If the condition is false, your computer will treat the body of the if statement *as if it didn't exist*. It skips it entirely! 

This kind of condition, that can only be evaluated to true or false is called a **Boolean** condition.

<details>
<summary>What's with that funny word *Boolean*?</summary>
<em>
George Boole was a mathematician who was born in England in the mid 1800s who laid the foundation for Boolean algebra - a form of algebra in which the variables are the values *true* and *false* rather than numbers.
</em>
</details>

<img src="https://images.code.org/7f9d457746e3e92324a8e0863aa6088d-image-1437086176386.png" width="400"></img>

<img src="https://images.code.org/588c6bc9181a591ac20f22d7539b6336-image-1437086182350.png" width="300"></img>

<img src="https://images.code.org/90af2fdedbe8040968ea9bb93cc6ef14-image-1437086189088.png" width="300"></img>
MARKDOWN