<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `CellPhone`(#e7e8ea) class represents a cell phone and has an instance variable for the text messages that are sent on the cell phone. The `messages`(#e7e8ea) list is created using the `FileReader.getStringData()`(#e7e8ea) method to read the contents of a file into the list.\r\n\r\n##In CellPhone.java:\r\n\r\nCell phone carriers handle text messages in character batches called segments. Segments are typically limited to 160 characters. If a message is less than 160 characters, it is sent as a single message. If a message is 200 characters, it is sent as two messages.\r\n\r\n1. Write the method `getNumberTexts()`(#e7e8ea) to find the total number of text messages to be sent for all messages.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Call the `getNumberTexts()`(#e7e8ea) method and print the results.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    CellPhone myCellPhone = new CellPhone(\"messages.txt\");\n\n    // TO DO #2: Call the getNumberTexts() method and print the result.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "CellPhone.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a cell phone\n */\npublic class CellPhone {\n\n  private ArrayList<String> messages;   // The list of text messages\n\n  /*\n   * Constructor to create a CellPhone with the\n   * specified file containing the messages\n   */\n  public CellPhone(String filename) {\n    this.messages = FileReader.getStringData(filename);\n  }\n\n  /*\n   * Returns a string containing the number of text messages to be sent for each message\n   */\n  public String getNumberTexts() {\n    // TO DO #1: Calculate the number of text messages to be sent for each\n    // message and return a string containing the information for each line.\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "messages.txt": {
        "text": "",
        "isVisible": true
      }
    },
    "encrypted_examples": [

    ],
    "project_template_level_name": "CSA U6L5-L3d PBT_2022",
    "display_name": "Text Messages",
    "bubble_choice_description": "Find the total number of text messages to be sent based on the length of each message."
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-14T19:27:23.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:27:23.636+00:00\",\"changed\":[\"cloned from \\\"CSA U6L5-L3c_2022\\\"\"],\"cloned_from\":\"CSA U6L5-L3c_2022\"},{\"changed_at\":\"2022-04-14 19:27:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 21:04:17 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 21:08:54 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 23:11:46 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
