<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Create a scene that draws an image of each planet based on the length of their days.\r\n\r\n##In PlanetScene.java:\r\n\r\n1. Write the `createScene()`(#e7e8ea) method to draw each planet's image at a random location in the scene. Traverse the `dayLengths`(#e7e8ea) array and use multi-selection statements to check the length of each day and decide the size to draw the image.\r\n\r\n   * If the length of the day is greater than `100`(#e7e8ea), draw the corresponding planet's image in the `planets`(#e7e8ea) array with a size of `150`(#e7e8ea).\r\n   \r\n   * Else if the length of the day is greater than or equal to `15`(#e7e8ea), draw the corresponding planet's image in the `planets`(#e7e8ea) array with a size of `100`(#e7e8ea).\r\n   \r\n   * Otherwise, draw the corresponding planet's image in the `planets`(#e7e8ea) array with a size of `50`(#e7e8ea).\r\n\r\n##In MyTheater.java:\r\n\r\n2. Call the `createScene()`(#e7e8ea) method with the array.\r\n\r\n3. Use `Theater.playScenes()`(#e7e8ea) to play the scene.\r\n\r\n::: details [**Show Me How**]\r\nA multi-selection statement uses the following syntax:\r\n  \r\n  ```\r\n  if (condition) {\r\n    // code to execute\r\n  }\r\n  else if (condition) {\r\n    // code to execute\r\n  }\r\n  else {\r\n    // code to execute\r\n  }\r\n  ```\r\n\r\nYou can have more than one `else if`(#e7e8ea) if you have additional conditions you need to check.\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    FileReader myFileReader = new FileReader(\"planets.txt\");\n    String[] planets = myFileReader.getStringData(9);\n\n    myFileReader.setFile(\"daylengths.txt\");\n    int[] days = myFileReader.getIntData(9);\n\n    PlanetScene myScene = new PlanetScene(planets, days);\n\n    // TO DO #2: Call the createScene() method.\n\n\n    // TO DO #3: Use Theater.playScenes() to play the scene.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic class FileReader {\n\n  private Scanner fileReader;   // The Scanner object to read the file\n  private File myFile;          // The File object containing the data\n\n  /*\n   * Constructor to create a FileReader with\n   * the specified filename to read\n   */\n  public FileReader(String filename) {\n    setFile(filename);\n  }\n\n  /*\n   * Sets the file to the specified filename\n   */\n  public void setFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read the file\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns an int array containing the values in the file\n   */\n  public int[] getIntData(int numValues) {\n    int[] values = new int[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextInt()) {\n        values[index] = fileReader.nextInt();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a double array containing the values in the file\n   */\n  public double[] getDoubleData(int numValues) {\n    double[] values = new double[numValues];\n    \n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextDouble()) {\n        values[index] = fileReader.nextDouble();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n\n  /*\n   * Returns a String array containing the values in the file\n   */\n  public String[] getStringData(int numValues) {\n    String[] values = new String[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (fileReader.hasNextLine()) {\n        values[index] = fileReader.nextLine();\n      }\n    }\n\n    fileReader.close();\n    return values;\n  }\n  \n}",
        "isVisible": true
      },
      "PlanetScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * A scene visualizing the length of a day for each planet\n */\npublic class PlanetScene extends Scene {\n\n  private String[] planets;     // The list of planet images\n  private int[] dayLengths;     // The list of the length of days for each planet\n\n  /*\n   * Constructor to create a PlanetScene with the\n   * specified arrays of planets and length of days\n   */\n  public PlanetScene(String[] planets, int[] dayLengths) {\n    this.planets = planets;\n    this.dayLengths = dayLengths;\n  }\n\n  /*\n   * Creates the scene by drawing each planet image\n   * based on the length of their days\n   */\n  public void createScene() {    \n    // TO DO #1: Draw each planet image at random locations. Use the\n    // length of their days to inform the size of the image.\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "planets.txt": {
        "text": "mercury.png\nvenus.png\nearth.png\nmars.png\njupiter.png\nsaturn.png\nuranus.png\nneptune.png\npluto.png",
        "isVisible": true
      },
      "daylengths.txt": {
        "text": "4222\n2802\n24\n24\n9\n10\n17\n16\n153",
        "isVisible": true
      }
    },
    "display_name": "Planets",
    "bubble_choice_description": "Draw the images for each planet based on the length of their days.",
    "thumbnail_url": "https://images.code.org/baad52ae8ed2a37bfa00da5ccc375658-image-1650719543283.png",
    "starter_assets": {
      "pluto.png": "253a86ad-b96b-4d7c-99cf-d0cb9f79eb73.png",
      "neptune.png": "af43b0ac-7525-4292-a6b0-438741a029e9.png",
      "uranus.png": "f8900e70-805c-4ad3-a659-3f1b0d18613f.png",
      "saturn.png": "c702d5ff-0356-43eb-8f05-aee10c41129d.png",
      "jupiter.png": "8e16c859-61e8-474d-bb15-0708df82f5bd.png",
      "mars.png": "6f542895-a832-41e9-84c8-f5a8a2dbc6bf.png",
      "earth.png": "a6f87412-cf56-4e23-b148-515d0c420f3b.png",
      "venus.png": "577f8056-2845-42ae-8d8f-ca36dca181c2.png",
      "mercury.png": "adc6cf55-2a14-4cc8-a8d2-8388c68201cb.png"
    },
    "encrypted_exemplar_sources": "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\n"
  },
  "game_id": 68,
  "created_at": "2022-04-07T18:58:22.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-07T18:58:22.559+00:00\",\"changed\":[\"cloned from \\\"CSA U4L10-L3b_2022\\\"\"],\"cloned_from\":\"CSA U4L10-L3b_2022\"},{\"changed_at\":\"2022-04-07 18:58:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:00:27 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:02:33 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:12:33 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 15:25:10 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:14:01 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:19:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:22:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-25 21:25:36 +0000\",\"changed\":[],\"changed_by_id\":13506,\"changed_by_email\":\"sanchit+levelbuilder@code.org\"},{\"changed_at\":\"2022-05-03 12:45:56 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:46:29 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:46:33 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 13:03:47 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 13:04:13 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 13:04:16 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
