<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Create a scene that draws an image of each planet based on the length of their days.\r\n\r\n##In PlanetScene.java:\r\n\r\n1. Write the `createScene()`(#e7e8ea) method to draw each planet's image at a random location in the scene. Traverse the `dayLengths`(#e7e8ea) array and use multi-selection statements to check the length of each day and decide the size to draw the image.\r\n\r\n   * If the length of the day is greater than `100`(#e7e8ea), draw the corresponding planet's image in the `planets`(#e7e8ea) array with a size of `150`(#e7e8ea).\r\n   \r\n   * Else if the length of the day is greater than or equal to `15`(#e7e8ea), draw the corresponding planet's image in the `planets`(#e7e8ea) array with a size of `100`(#e7e8ea).\r\n   \r\n   * Otherwise, draw the corresponding planet's image in the `planets`(#e7e8ea) array with a size of `50`(#e7e8ea).\r\n\r\n##In MyTheater.java:\r\n\r\n2. Call the `createScene()`(#e7e8ea) method with the array.\r\n\r\n3. Use `Theater.playScenes()`(#e7e8ea) to play the scene.\r\n\r\n::: details [**Show Me How**]\r\nA multi-selection statement uses the following syntax:\r\n  \r\n  ```\r\n  if (condition) {\r\n    // code to execute\r\n  }\r\n  else if (condition) {\r\n    // code to execute\r\n  }\r\n  else {\r\n    // code to execute\r\n  }\r\n  ```\r\n\r\nYou can have more than one `else if`(#e7e8ea) if you have additional conditions you need to check.\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    String[] planets = FileReader.readText(\"planets.txt\", 9);\n    int[] dayLengths = FileReader.readNumbers(\"dayLengths.txt\", 9);\n\n    PlanetScene myScene = new PlanetScene(planets, dayLengths);\n\n    // TO DO #2: Call the createScene() method.\n\n\n    // TO DO #3: Use Theater.playScenes() to play the scene.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "PlanetScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * A scene visualizing the length of a day for each planet\n */\npublic class PlanetScene extends Scene {\n\n  private String[] planets;     // The list of planet images\n  private int[] dayLengths;     // The list of the length of days for each planet\n\n  /*\n   * Constructor to create a PlanetScene with the\n   * specified arrays of planet images and day lengths\n   */\n  public PlanetScene(String[] planets, int[] dayLengths) {\n    this.planets = planets;\n    this.dayLengths = dayLengths;\n  }\n\n  /*\n   * Creates the scene by drawing each planet image\n   * based on the length of their days\n   */\n  public void createScene() {    \n    // TO DO #1: Draw each planet image at random locations. Use the\n    // length of their days to inform the size of the image.\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;\n  private static Scanner input;\n\n  /*\n   * Reads numValues integers from a file into\n   * an int 1D array and returns the array\n   */\n  public static int[] readNumbers(String filename, int numValues) {\n    createScanner(filename);\n    int[] values = new int[numValues];\n\n    for (int index = 0; index < values.length; index++) {\n      if (input.hasNextInt()) {\n        values[index] = input.nextInt();\n      }\n    }\n\n    input.close();\n    return values;\n  }\n\n  /*\n   * Reads numValues Strings from a file into\n   * an String 1D array and returns the array\n   */\n  public static String[] readText(String filename, int numValues) {\n    createScanner(filename);\n    String[] text = new String[numValues];\n\n    for (int index = 0; index < text.length; index++) {\n      if (input.hasNextLine()) {\n        text[index] = input.nextLine();\n      }\n    }\n\n    input.close();\n    return text;\n  }\n\n  /*\n   * Creates the input object with the specified file\n   * or notifies the user that the file is not found\n   */\n  public static void createScanner(String filename) {\n    myFile = new File(filename);\n    \n    try {\n      input = new Scanner(myFile);\n    } catch (FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n  }\n  \n}",
        "isVisible": true
      },
      "planets.txt": {
        "text": "mercury.png\nvenus.png\nearth.png\nmars.png\njupiter.png\nsaturn.png\nuranus.png\nneptune.png\npluto.png",
        "isVisible": true
      },
      "dayLengths.txt": {
        "text": "4222\n2802\n24\n24\n9\n10\n17\n16\n153",
        "isVisible": true
      }
    },
    "display_name": "Planets",
    "bubble_choice_description": "Draw the images for each planet based on the length of their days.",
    "thumbnail_url": "https://images.code.org/baad52ae8ed2a37bfa00da5ccc375658-image-1650719543283.png",
    "starter_assets": {
      "pluto.png": "253a86ad-b96b-4d7c-99cf-d0cb9f79eb73.png",
      "neptune.png": "af43b0ac-7525-4292-a6b0-438741a029e9.png",
      "uranus.png": "f8900e70-805c-4ad3-a659-3f1b0d18613f.png",
      "saturn.png": "c702d5ff-0356-43eb-8f05-aee10c41129d.png",
      "jupiter.png": "8e16c859-61e8-474d-bb15-0708df82f5bd.png",
      "mars.png": "6f542895-a832-41e9-84c8-f5a8a2dbc6bf.png",
      "earth.png": "a6f87412-cf56-4e23-b148-515d0c420f3b.png",
      "venus.png": "577f8056-2845-42ae-8d8f-ca36dca181c2.png",
      "mercury.png": "adc6cf55-2a14-4cc8-a8d2-8388c68201cb.png"
    },
    "encrypted_exemplar_sources": "axeM8ErT/JagtM3EkSmeyosysAk2fiMrrkNd39e618EcII5iradtJxriN38H\nJdcIUuRhmgxEc262J8LosL5QOYepQQx3Zja1/g+M8aMjGQinjbqz06v5jBLU\neSXb2azVo4HtJ3qMY3gi6bn7XQdVOY2H2VYS3/+4i8hxWZAr3reOYctW49qI\n5XHWJAFEzJdzKRjaWxM7aGWwzpMfTptJY9+B4FMOkc76ybLqwU07P68uU66m\noPdBBA9fK418kBfTQXXUxA6mMet9zJatFTEseFA/TaMg0p4z0NSzlNe2ylDF\nRLPbVw8eQkPHuOsV1pCPBlUH7AWY08QUkg5KCoH6ERot8mTtGckz7aQbjlH9\n5XyQ+RTtex3X2MvZYb1dtOkz0OoK6woEahC36YNOG1vSobEz0IZLLDtHkYMC\nE5OYzydfAlvoeoGD7K2YFqRUVbZ2tjikKDrQYj2XqVZ7vWZYMA+woDsV6m5L\nyJC/n+b0XSz+oXip3R5e6jbFgfVo3l4vtDyK7MgeAuW4PmL1UtmpRIDHvN1y\nAC8Al0JmVpKQMClxdjLoW9hsRaNgwnfjjx3nu+2HTw5c0FZf2wHILd7DKIxT\nff2lM4+vASKge6GNlwc/3SqsuhipagPS/PKQuroBxpDSHQLCbfKKXXO8Y4LT\n5neqweX+qSznd2lIcY8wU7NIIhjBE/kdL6ZUFzu1u7lkHljK5T67f8hUyPri\n5rf3TBDlVf4J3/B/pW/vuQwK5DrlCbyCTSBJqLB4OEsg0BZbY6pvOIiRPm4E\nsw1kmhjiXqM75xtB5GKAyf7ifNMkR/38T9ITKs6ItZzyevprQLg1tSkhiQaN\n0l/oY4NQpLhmjUYChHpngWDDf42AsP3ijK0Yuw8RUOiL4I++Gn5Te8jQ1aqh\nOmLvDIk+atPRryi2SabKrmeyI83ogUNDZBI76MsKGa6R6d4z52hau2iU/uSn\npIThl0+0tmOTPr4ILwf6bmyKubDOnTQvbX0nn1jXs2qHaTudkyULI1gx6OGH\n9OpbI8UCBwy5MR8qCijIJ2343eh+xgVMwnwzfv7ozT5YRfGekkpVeTVeDYp6\n16dow5p0hRCFSpDwcpk9v61d2IBEVZpQzvuBxsiKsxROUhJZDl3vqdsvwHMj\n4bSSDxskjN7TFcTV08h8OafXqqE7xx6ocbnwL/A1gRJKwOgjXzXwDHMu6VnH\nANP306PmnZT9pTNC6/x+WdFBgKRLJ52p3F0lA/J1GgGNDeih4CNEtgruk+M5\nalzffiJUU9ZNAJnY8f+VPVhYaSktm8N9/oRqCZ3KiePTVZb9rXB9GqaNcD+m\neciAovQfSKgdCN2Q5qw0mVjqeF2DPYx5dieStl7hqOasn4mdfXcCnpimQrqT\nVxbMMXTn3Grn7E82sYkpSj710BhKj44mLaeRCoTo4Nd3oyQwJ1GxwrjQGJTf\nZM1sPrZSQB4CHVIQPONr+V2vtfbkOa3DoSwp92Nu+rwDUiNGNAbPLLfynV2X\nC40HKriOQasi+cYkyXZgzwPzTc/a9lFl2gmAxruOSx8C344AJUNoM6HziEu0\nLQI7wze4JGmlej1hzkNJueAnbODlvUhuiJgIt3vk1AwdmZ27oA2Tywyk+zMX\nSKymj8NtP6CxoMmtAZefQzb1ZjmVAZ2yo8FyxeJ2Ls9tJPblO2uinEewwc52\n9pqfx69rAkmdz5MhLcvCgwgTT0LkRHtstIvygbrReKucJ6skgBavGbLrx6Cj\nR1Z+8Rw4Gk1L8HPvGgDNOVVPv++x9n49L41m1+0+WqUoHo1ib/l/Cdx0Hw+X\n5PG4BLuVB3NrKsnZYAgj06SjqbC9fzHPFltxI7EKD9ZQ0uzLY9nvPzkSZ66p\n9jAZT/JC49/MpAzojkEWGlWEuNzVKAtKKGQT+uIaIuJLOXM6MF0OGfM4gKlX\n2iPbzVg1E+Ks7UCW8cGj+9zEct2b1KG0kalC1tMdJiO9xuNH6vbyoj5+iY3Q\nSpfULV802B3KDHqaLduJhdLIC7jz+n/r6JU+83IYpYLwk161BEGdCNtwqLmu\nBHzvHX3823CrCn7QIcMkXeMUAu0gV9TyaTwDAMg0KmqaQrW3ISpXSX3o06O8\n/D4Yf7X7Nv9TZMGYwntNNUCTk3jrIAKfVBKLRLupEvsXPi2l12fJF+bUwBZW\nTdJrTOkmb2/shXx+Nvne2kNoVkD2wRz4rYwO2NJ30Y49pJUlZ/B2Mvh9Vnos\nxOaa81mh+R70NCvPIDnSMc6hHEn+0DjkBi9Xw+Ptn6fIUS6Ryulcbrh4bmBL\nVnKHp4AQwxzwJxll9B1mWCBq/nppYOWZa2M4VYnkPBlZxAMSwLXw+ZmD0zTH\nlqv2veWQwXazxc9gQ0NT+7HlKH8CLy5YIfCvGZGv0uuMDD40C6ayy0UWuHqS\n/gswIBBMdnCpbqbeEhFnYQlB1copI/jUPdHi2Wp0uQRGbZZAnKsmsvSNZMEn\nlo2a++scQdkA3dHVTdd775dKGHsC3vYY7L9TbE4rQ6eb6XPAk8LNYDYDvLjU\nziX5pOwhIcJWTqLqgaVxDfgJ/zrWheG17BFkT87m4CNElMDzjDVhe8OMkxe8\n80Uu9odN1WgnGqNLpC9aezjMNd0VczNx8NAjhBAZTMqqBIsbStlsv2E5k2rn\nWFB+8pQPqY4/W7aAzCQ/ixBfOeQX0gput7du1WS1oL8Qs83vODEio7rW/eUv\nMfbJFuHlZq0Nc2gDg2L5wH1oSx7Tu+I4rvanprgaL6yqnPN4ERaWdS2Fzqj8\nwr3638snEtdraM060MGoXAjwdlZ2HbXWRzgoFxZfdqSHN7xNi8JOwULlxr08\nwa4VIhPMG2TShr+a4qN46gUAmWRDzw5MhJP0KrX+l8PszA4R/rrkD6mGq/hW\nEAQcatfuWhiLlF0Yh677dg233EuRhcsTjMFykoKt1qX1AaGPGnyU74clFKsV\nBrb9tOXgIYLI52A4Fs3pQaIn4pkQsUmaJB12i7dW4rrjUF2tlhvDejINSQdE\niOC7ywE33W+R4DzcbAhN2Z0N+dRH+m7QnkJLyKjisD6p1xvsBHworLh2Md7j\nA6J7FXIGqHjN2xnrcc5dI14D550Q8vCfFqXxWtbEKBJhjuNjRkVH0EI0bVLq\nOG4YT5L9QLUzj+o/ZEm5cwY7b+LLbF0dRyD1mWX5asWxsBz8Izvv+K7qAe+E\nxjRymk6ap2StsK+1NJUAL8D8Wbvtj9tSiDN/3wAGJD1be/1iRqTa+hbzUyQQ\neuFp1LFW1Q61G08vXwsEYecv06zyEu/FLMHBkO4lzGY/V1aWrxceJlvXXFft\nsUKZtQL6gornE5nGHGLVFfIwhdvhwPMWpDfT0dwebMJfTYTbA1jIEJTH5C89\nweTyFrvFv+0t2Nv6NA5QlwArLiTrYsPGIUi0MksX0QKDWjaqT937ghMpwgN+\nP+uiLPoAEXC/FD44ekhUEuOVvaZ3c8J6DoLzdCuE5F5ix/rGYK9ER2yN17/h\nBZr5lb9+TSNlN82Si2tDIlWSXHiJcIIxwt35JD/WkMmMzYeTTDzpcMQ30RTD\nnuWdPB8HEZSfZdwl2x3xjmc/Ni/BXyz0Aiyp8TfYvXBAipTrIaUFZFbvlRCm\nw8+iNPnjeb4Sw2AKh1ZtYIt7PR3+Q1C7+qlM7X0zD+7YFxqLLpNc77tZNm9m\nM5Tie7i7PqQSThCyWr8l1oYml1YxoF+4kmz+e9o4vxTeYXfRP68j9zU4bp5D\npAHX9U4H0KQH6EKowb0fX9bSJspOf6nKOvDFphYQFsWvIBRFoX3BdlX1fj2J\ngJD9tubKRqA/ASO4RuN0MaD71KCtNQT6atdqOT6mhc7dsS6UluqHFjgwOGIo\n4iJ3etMuxYMz0Dfb6yDBExxwLY4vbwGP9k7qsLAmwjawgHtclP8+oHQU1m+b\nh6z9+uOdegbTho7MFS7OmjdUoKlQYAQcvzlUcOapcxIwmYqTsnFrfwmW5UU0\n9+YaEeH8vsLcxegTGFrJ5O7sTiR+Cnc449V23ovIMGaB9UJ31+hrh6TQS2Wf\nQJFmW9LE2uCwTdqPDw8y8vs1sFrUILAlfIUFsnybhbapDg5MtBdhUZsJxkt6\n5DvVHmnd04kkNCJzLqHOlq/brLD66GZi87pLLhXXjYdk5Zyks2VTCtD4aj6O\ng8I5KPplpvRYPpl5lKpCPhRn6URzE/Aj/xQGsmBc3iuSoH57cKm1QL6eu7Z4\nGFsYh+oKJp1rg/vrBf5OKA9q9k6mLggbB1V3kWJRhhCuS1pwxugYTPiThu3+\nrun7gFRbCPlRPRq/R+G3DuwmjYzn2WIGRtMHP3BYhuBWWp1BYgI5It0F/EVA\nelDUJlcIb65qDVAfsEvFOJTtt+WJfAYHS2xT2qJY0taPFyWitYUR8zfJP/SA\nEpc4WjQy2DqfuNpzpb+LoZmRn0lfoqywXo6ORUd6TcPG7Na4rS+SNcGWFYca\nD/2k0slgEC4c61/UgLlU+syvlHpXdZMYgAiYOcAspM3uEm4ehwL2ytjK9iJg\nBa03eJbbH2r3C9m54J/4JNH+UwWptWtO9vu49sQL8EUb6Av1Fyq2Tcev8Ng7\npJF6uroJ5miuaBbnaaY0rT7xORV7CcoX5lLdVOvmGHGveuBsWt9pmqebm8ju\nBPjYGAV9Ag==\n"
  },
  "game_id": 68,
  "created_at": "2022-04-07T18:58:22.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-07T18:58:22.559+00:00\",\"changed\":[\"cloned from \\\"CSA U4L10-L3b_2022\\\"\"],\"cloned_from\":\"CSA U4L10-L3b_2022\"},{\"changed_at\":\"2022-04-07 18:58:25 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:00:27 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:02:33 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:12:33 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 15:25:10 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:14:01 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:19:26 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:22:44 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-25 21:25:36 +0000\",\"changed\":[],\"changed_by_id\":13506,\"changed_by_email\":\"sanchit+levelbuilder@code.org\"}]"
}]]></config>
</Javalab>
