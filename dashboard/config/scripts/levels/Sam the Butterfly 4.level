<Studio>
  <config><![CDATA[{
  "game_id": 33,
  "created_at": "2014-11-17T18:14:05.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "studio",
    "success_condition": "function () {\r\n  if (!Studio.__hacked) {\r\n    Studio.__hacked = true;\r\n  }\r\n  var originalOnTick = Studio.customLogic.constructor.prototype.onTick.bind(Studio.customLogic);\r\n  Studio.customLogic.constructor.prototype.onTick = function() {\r\n    if (this.studio_.tickCount === 1) {\r\n      this.stopped = {left: false, up: false, right: false, down: false};\r\n    }\r\n    originalOnTick();\r\n    Studio.Globals.succeeded = (this.stopped.left && this.stopped.right) && (this.sam.x < 0 || this.sam.x > 300);\r\n  }\r\n  return Studio.Globals.succeeded;\r\n}",
    "failure_condition": "function () {\r\n  return ((Studio.sprite[0].x < -100) || (Studio.sprite[0].x > 400));\r\n}",
    "maze": "[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,16,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]",
    "soft_buttons": [
      "leftButton",
      "rightButton",
      "downButton",
      "upButton"
    ],
    "instructions": "Huh, we can keep Sam from leaving on the left, or we can keep him from leaving on the right, but how can we keep him from going either direction? Try using the \"AND\" block program the function \"on-screen?\" to check if Sam is safe-left? AND safe-right?",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "true",
    "first_sprite_index": "6",
    "edge_collisions": "false",
    "projectile_collisions": "false",
    "allow_sprites_outside_playspace": "true",
    "sprites_hidden_to_start": "false",
    "coordinate_grid_background": "true",
    "free_play": "false",
    "embed": "false",
    "protaganist_sprite_index": "0",
    "default_num_example_blocks": "2",
    "disable_sharing": "false",
    "min_workspace_height": "1500",
    "generate_function_pass_blocks": "true",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "timeout_after_when_run": "false",
    "custom_game_type": "Sam the Bat",
    "maze_data": null
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="x" type="Number"/>
            <description>Given Sam's x coordinate, check if he is both safe-left? and safe-right?</description>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">on-screen?</title>
          <functional_input name="STACK">
            <block type="functional_logical_and" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_boolean" uservisible="false">
                  <title name="VAL">true</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_boolean" uservisible="false">
                  <title name="VAL">true</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="on-screen?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_logical_and" inline="false" uservisible="false"/>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="on-screen?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">-50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_logical_and" inline="false" uservisible="false"/>
          </functional_input>
        </block>
        <block type="functional_start_setValue" inline="false" deletable="false" movable="false" editable="false">
          <functional_input name="VALUE">
            <block type="functional_pass">
              <mutation name="on-screen?"/>
            </block>
          </functional_input>
        </block>
        <!-- safe-left -->
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="x" type="Number"/>
            <description>Given Sam's x coordinate, return true if his x is greater than -25.</description>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">safe-left?</title>
          <functional_input name="STACK">
            <block type="functional_greater_than" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_parameters_get" uservisible="false">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">x</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">-25</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="safe-left?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">-50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_greater_than" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">-50</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">-25</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="safe-left?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">50</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_greater_than" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">50</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">-25</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <!-- safe-right -->
        <block type="functional_definition" inline="false" uservisible="false">
          <mutation>
            <arg name="x" type="Number"/>
            <description>Given Sam's x coordinate, return true if his x is less than 425.</description>
            <outputtype>Boolean</outputtype>
          </mutation>
          <title name="NAME">safe-right?</title>
          <functional_input name="STACK">
            <block type="functional_less_than" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_parameters_get" uservisible="false">
                  <mutation>
                    <outputtype>Number</outputtype>
                  </mutation>
                  <title name="VAR">x</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">425</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="safe-right?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">450</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_less_than" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">450</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">425</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
        <block type="functional_example" inline="false" uservisible="false">
          <functional_input name="ACTUAL">
            <block type="functional_call" inline="false" uservisible="false">
              <mutation name="safe-right?">
                <arg name="x" type="Number"/>
              </mutation>
              <functional_input name="ARG0">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">150</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
          <functional_input name="EXPECTED">
            <block type="functional_less_than" inline="false" uservisible="false">
              <functional_input name="ARG1">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">150</title>
                </block>
              </functional_input>
              <functional_input name="ARG2">
                <block type="functional_math_number" uservisible="false">
                  <title name="NUM">425</title>
                </block>
              </functional_input>
            </block>
          </functional_input>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Number">
          <block type="functional_plus" inline="false"/>
          <block type="functional_minus" inline="false"/>
          <block type="functional_times" inline="false"/>
          <block type="functional_dividedby" inline="false"/>
          <block type="functional_sqrt" inline="false"/>
          <block type="functional_math_number">
            <title name="NUM">0</title>
          </block>
        </category>
        <category name="Boolean">
          <block type="functional_greater_than" inline="false"/>
          <block type="functional_less_than" inline="false"/>
          <block type="functional_number_equals" inline="false"/>
          <block type="functional_logical_and" inline="false"/>
          <block type="functional_logical_or" inline="false"/>
          <block type="functional_logical_not" inline="false"/>
          <block type="functional_boolean">
            <title name="VAL">true</title>
          </block>
        </category>
        <category name="Functions" custom="PROCEDURE"/>
      </xml>
    </toolbox_blocks>
  </blocks>
</Studio>