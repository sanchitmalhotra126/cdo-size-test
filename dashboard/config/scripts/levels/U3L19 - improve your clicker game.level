<External>
  <config><![CDATA[{
  "game_id": 43,
  "created_at": "2015-05-21T21:53:03.000Z",
  "properties": {
    "options": {
      "skip_dialog": true
    },
    "title": "U3L19 - improve your clicker game",
    "content1": "description here",
    "markdown": "### Programming Challenge\n\nNow, you'll finally get to modify your clicker game.  Making the minimum requirement might be pretty easy at this point.  Consider some of the enhancements suggested.\n\n#### Minimum requirement - Clicker version 1\n\n* Starting from your previous clicker app and use a variable to store a click counter. \n* Declare and initialize your counter variable as a global variable\n* update your counter variable within the click event handler. \n* A textLabel can be updated on each click to output the click counter value along with a message. \n\n#### Enhancements\n\nThere are lots of ways to enhance this app without needing your program to make decisions (we're going to learn how to make decisions next).  Here are some things you can do in no particular order...\n\n* Add a big image which can serve as a background image. If the player clicks on the background image they lose a point. (this is similar to the demonstration app you saw at the very beginning of the lesson).\n* Add a turtle which draws a vertical bar showing the score, or something else that shows something about the state of the game\n* Add a button that lets the user start over - reset the score.\n* Add another image that jumps around randomly, or appears and disappears that the user can click\n* Use arithmetic to change how the score is calculated with each click (e.g. rather than losing a point for doing something wrong, divide the score by 2).  \n* Add more and different event handlers that alter the score in different ways.\n* Use arithmetic to change the size of the image you need to click based on the score.  For example, make the image smaller and smaller as the score gets higher.\n\n\n\n\n\n"
  }
}]]></config>
</External>
