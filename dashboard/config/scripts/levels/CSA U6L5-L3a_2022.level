<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "##Investigate and Modify\r\n\r\nRun the program to observe the results.\r\n\r\nThen, experiment with the program by making the following modifications. Change one line at a time, then run the program after each change to observe the results.\r\n\r\n1. first thing\r\n\r\n2. second thing\r\n\r\n3. third thing\r\n\r\n##Getting Started\r\n1. Import `SomeClass.java`(#e7e8ea) from the ![Backpack](https://images.code.org/b17feeef2e8db2a98abdb4a5860c5c61-image-1642175705297.png)\r\n\r\n*Don't have it or it doesn't work? That's ok! Just copy and paste the code from [**here**](https://linktocode.com).*\r\n\r\n##In MyConsole.java:\r\n\r\n2. first step\r\n\r\n3. second step\r\n\r\n4. third step\r\n\r\n::: details [**Show Me How**]\r\nA `for`(#e7e8ea) loop uses the following syntax:\r\n  \r\n  ```\r\n  for (int variableName = startingValue; condition; variableName_change) {\r\n    // code to execute\r\n  }\r\n  ```\r\n\r\nBe sure to change `variableName`(#e7e8ea) to a name you can easily identify, such as `index`(#e7e8ea), and set the `startingValue`(#e7e8ea) to the value you want to start the loop.\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    Poem myPoem = new Poem(\"some title\", \"poem.txt\");\n\n    // TO DO #2: Call the getLongestLine() method and print the result.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "Poem.java": {
        "text": "import java.util.ArrayList;\n\n/*\n * Represents a poem\n */\npublic class Poem {\n\n  private String title;              // The title of the poem\n  private ArrayList<String> lines;   // The lines of the poem\n\n  /*\n   * Constructor to create a Poem with the specified\n   * title and the file containing the lines\n   */\n  public Poem(String title, String filename) {\n    this.title = title;\n    this.lines = FileReader.getStringData(filename);\n  }\n\n  /*\n   * Returns the longest line in the poem\n   */\n  public String getLongestLine() {\n    // TO DO #1: Find the line that is the longest length in lines.\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "FileReader.java": {
        "text": "import java.io.File;\nimport java.io.FileNotFoundException;\nimport java.util.Scanner;\nimport java.util.ArrayList;\n\n/*\n * Reads data from a file\n */\npublic final class FileReader {\n\n  private static File myFile;          // The File containing the data\n  private static Scanner fileReader;   // The Scanner object to read the file\n\n  /*\n   * Returns an ArrayList of Strings from a file\n   */\n  public static ArrayList<String> getStringData(String filename) {\n    createFile(filename);\n    \n    ArrayList<String> tempList = new ArrayList<String>();\n    \n    while (fileReader.hasNextLine()) {\n      tempList.add(fileReader.nextLine());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of ints from a file\n   */\n  public static ArrayList<Integer> getIntData(String filename) {\n    createFile(filename);\n\n    ArrayList<Integer> tempList = new ArrayList<Integer>();\n\n    while (fileReader.hasNextInt()) {\n      tempList.add(fileReader.nextInt());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Returns an ArrayList of doubles from a file\n   */\n  public static ArrayList<Double> getDoubleData(String filename) {\n    createFile(filename);\n\n    ArrayList<Double> tempList = new ArrayList<Double>();\n\n    while (fileReader.hasNextDouble()) {\n      tempList.add(fileReader.nextDouble());\n    }\n\n    fileReader.close();\n    return tempList;\n  }\n\n  /*\n   * Creates the File and Scanner to read the specified filename\n   */\n  public static void createFile(String filename) {\n    myFile = new File(filename);\n    fileReader = createScanner(myFile);\n  }\n\n  /*\n   * Returns a Scanner object to read a file or notifies the\n   * user if the file is not found\n   */\n  public static Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException e) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n}",
        "isVisible": true
      },
      "poem.txt": {
        "text": "",
        "isVisible": true
      }
    },
    "encrypted_examples": [

    ],
    "project_template_level_name": "CSA U6L5-L3a PBT_2022"
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-14T19:26:50.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-14T19:26:50.896+00:00\",\"changed\":[\"cloned from \\\"CSA U6L5-L2v2_2022\\\"\"],\"cloned_from\":\"CSA U6L5-L2v2_2022\"},{\"changed_at\":\"2022-04-14 19:26:53 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 20:35:27 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 20:37:52 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 20:40:02 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-04 21:12:14 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
