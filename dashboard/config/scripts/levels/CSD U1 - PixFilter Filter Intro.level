<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2016-08-14T18:38:49.000Z",
  "level_num": "custom",
  "user_id": 1,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "onEvent": null,
      "button": null,
      "textInput": null,
      "textLabel": null,
      "dropdown": null,
      "getText": null,
      "setText": null,
      "getNumber": null,
      "setNumber": null,
      "checkbox": null,
      "radioButton": null,
      "getChecked": null,
      "setChecked": null,
      "image": null,
      "getImageURL": null,
      "setImageURL": null,
      "playSound": null,
      "showElement": null,
      "hideElement": null,
      "deleteElement": null,
      "setPosition": null,
      "setSize": null,
      "setProperty": null,
      "write": null,
      "getXPosition": null,
      "getYPosition": null,
      "setScreen": null,
      "createCanvas": null,
      "setActiveCanvas": null,
      "line": null,
      "circle": null,
      "rect": null,
      "setStrokeWidth": null,
      "setStrokeColor": null,
      "setFillColor": null,
      "drawImageURL": null,
      "getImageData": null,
      "putImageData": null,
      "clearCanvas": null,
      "getRed": null,
      "getGreen": null,
      "getBlue": null,
      "getAlpha": null,
      "setRed": null,
      "setGreen": null,
      "setBlue": null,
      "setAlpha": null,
      "setRGB": null,
      "startWebRequest": null,
      "setKeyValue": null,
      "getKeyValue": null,
      "createRecord": null,
      "readRecords": null,
      "updateRecord": null,
      "deleteRecord": null,
      "getUserId": null,
      "drawChart": null,
      "drawChartFromRecords": null,
      "moveForward": null,
      "moveBackward": null,
      "move": null,
      "moveTo": null,
      "dot": null,
      "turnRight": null,
      "turnLeft": null,
      "turnTo": null,
      "arcRight": null,
      "arcLeft": null,
      "getX": null,
      "getY": null,
      "getDirection": null,
      "penUp": null,
      "penDown": null,
      "penWidth": null,
      "penColor": null,
      "penRGB": null,
      "show": null,
      "hide": null,
      "speed": null,
      "forLoop_i_0_4": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "whileBlock": null,
      "setTimeout": null,
      "clearTimeout": null,
      "setInterval": null,
      "clearInterval": null,
      "getTime": null,
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "mathRound": null,
      "mathAbs": null,
      "mathMax": null,
      "mathMin": null,
      "mathRandom": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "declareAssign_str_hello_world": null,
      "substring": null,
      "indexOf": null,
      "includes": null,
      "length": null,
      "toUpperCase": null,
      "toLowerCase": null,
      "declareAssign_list_abd": null,
      "listLength": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null,
      "return": null,
      "comment": null
    },
    "edit_code": true,
    "embed": "true",
    "start_blocks": "var VIEWSIZE = 145;\r\nvar NUMPIX = 16;\r\nvar MARGIN = 1;\r\nvar ICONURL = \"//curriculum.code.org/images/icons/\";\r\nvar colors = [\"red\", \"green\", \"blue\"];\r\ncreateCanvas(\"diagram\", 320, 450);\r\nvar diagram = {\r\n                \"in\": 228,\r\n                \"out\": 265,\r\n                \"red\": 177,\r\n                \"green\": 212,\r\n                \"blue\": 247,\r\n                \"red_clicked\": false,\r\n                \"green_clicked\": false,\r\n                \"blue_clicked\": false,\r\n                \"red_hex\": \"#ff0000\",\r\n                \"green_hex\": \"#00ff00\",\r\n                \"blue_hex\": \"#0000ff\"\r\n              };\r\nvar inPixels = [];\r\nvar outPixels = [];\r\nvar inRows = [];\r\nvar outRows = [];\r\nvar inBin = \"\";\r\nvar clicked = false;\r\nvar currentPixel;\r\n\r\nsetup();\r\n\r\nfunction setup() {\r\n  setStyle(\"binary_text\", \"font-family:monospace\");\r\n  setStyle(\"binary_filtered\", \"font-family:monospace\");\r\n  setStyle(\"binary_example\", \"font-family:monospace; line-height: 15px;\");\r\n  setStyle(\"binary_example2\", \"font-family:monospace; line-height: 15px;\");\r\n  setStyle(\"in_grid\", \"padding: 1px 0 0 1px;\")\r\n  setStyle(\"out_grid\", \"padding: 1px 0 0 1px;\")\r\n  setProperty(\"binary_filtered\", \"readonly\", true);\r\n  \r\n  setProperty(\"red_source\", \"options\", colors);\r\n  setProperty(\"green_source\", \"options\", colors);\r\n  setProperty(\"blue_source\", \"options\", colors);\r\n  setText(\"green_source\", \"red\");\r\n  setText(\"green_source\", \"green\");\r\n  setText(\"blue_source\", \"blue\");\r\n\r\n  buildGrids(NUMPIX);\r\n  \r\n  readRecords(\"drawings\", {}, function(records) {\r\n    var images = [];\r\n    for (var i=0; i<records.length; i++) {\r\n      images[i] = records[i].name;\r\n    }\r\n\r\n    var bin = records[0].bin;\r\n    bin = bin.slice(1, bin.length - 1);\r\n    drawBits(bin, inPixels);\r\n    genBin();\r\n    filterBits();\r\n  });\r\n}\r\n\r\nfunction buildGrids(size) {\r\n  \r\n  for (var i=0; i<inRows.length; i++) {\r\n    deleteElement(inRows[i]);\r\n    deleteElement(outRows[i]);\r\n  }\r\n  \r\n  inRows = [];\r\n  outRows = [];\r\n  inPixels = [];\r\n  outPixels = [];\r\n  \r\n  var pixSize = Math.floor((VIEWSIZE - MARGIN) / size) - MARGIN;\r\n  var pad = Math.floor((VIEWSIZE - (((pixSize + 1) * size) - 1)) / 2);\r\n  var gridPad = \"padding: \" + pad + \"px 0 0 \" + pad + \"px;\";\r\n  setStyle(\"in_grid\", gridPad);\r\n  setStyle(\"out_grid\", gridPad);\r\n  for (var i=0; i<size; i++) {\r\n    var inRow = \"in_grid_row\" + i;\r\n    var outRow = \"out_grid_row\" + i;\r\n    appendItem(inRows, inRow);\r\n    appendItem(outRows, outRow);\r\n    container(inRow, \"\");\r\n    container(outRow, \"\");\r\n    setParent(inRow, \"in_grid\");\r\n    setParent(outRow, \"out_grid\");\r\n    for (var j=0; j<size; j++) {\r\n      var inPix = \"in_grid_pixel_\" + i + \"_\" + j;\r\n      var outPix = \"out_grid_pixel_\" + i + \"_\" + j;\r\n      var color = \"000\";\r\n      container(inPix, color);\r\n      container(outPix, color);\r\n      setParent(inPix, inRow);\r\n      setParent(outPix, outRow);\r\n      setSize(inPix, pixSize, pixSize);\r\n      setSize(outPix, pixSize, pixSize);\r\n      setStyle(inPix, \"float:left; margin: 0 1px 1px 0;\");\r\n      setStyle(outPix, \"float:left; margin: 0 1px 1px 0;\");\r\n      setColor(inPix, color);\r\n      setColor(outPix, color);\r\n      appendItem(inPixels, inPix);\r\n      appendItem(outPixels, outPix);\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawBits(source, pixels) {\r\n  bitpos = 0;\r\n  source = source.replace(/[^01]/g, '');\r\n  for (var i=0; i<pixels.length; i++) {\r\n    var id = pixels[i];\r\n    var color = source.slice(bitpos, bitpos+3);\r\n    if (color.length == undefined || color.length < 3) color = \"000\";\r\n    setColor(id, color);\r\n    bitpos += 3\r\n  }\r\n}\r\n\r\nfunction setColor(id, color) {\r\n  if (color === undefined) {\r\n    color = \"000\";\r\n  }\r\n  var red = color.slice(0,1) * 255;\r\n  var green = color.slice(1,2) * 255;\r\n  var blue = color.slice(2,3) * 255;\r\n  var rgbColor = \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\r\n  setProperty(id, \"background-color\", rgbColor);\r\n  setProperty(id, \"text-color\", rgbColor);\r\n  setText(id, color);\r\n}\r\n\r\nfunction filterBits() {\r\n  var filtered = \"\"\r\n  for (var i=0; i<inPixels.length; i++) {\r\n    var id = inPixels[i];\r\n    var color = getText(id);\r\n    var red = parseInt(color.substring(0,1));\r\n    var green = parseInt(color.substring(1,2));\r\n    var blue = parseInt(color.substring(2,3));\r\n    var newColor = \"\";\r\n    newColor += Number(eval(getText(\"red_source\")));\r\n    newColor += Number(eval(getText(\"green_source\")));\r\n    newColor += Number(eval(getText(\"blue_source\")));\r\n    filtered += newColor;\r\n    filtered += \" \";\r\n  }\r\n  drawDiagram();\r\n  setText(\"binary_filtered\", filtered);\r\n  drawBits(filtered.replace(/[^01]/g, ''), outPixels);\r\n}\r\n\r\nfunction filterBit(bit) {\r\n  var color = getText(bit);\r\n  var outPixel = \"out\" + bit.substring(bit.indexOf('_'), bit.length)\r\n  var red = parseInt(color.substring(0,1));\r\n  var green = parseInt(color.substring(1,2));\r\n  var blue = parseInt(color.substring(2,3));\r\n  var newColor = \"\";\r\n  newColor += Number(eval(getText(\"red_source\")));\r\n  newColor += Number(eval(getText(\"green_source\")));\r\n  newColor += Number(eval(getText(\"blue_source\")));\r\n  setColor(outPixel, newColor);\r\n}\r\n\r\nfunction drawDiagram() {\r\n  clearCanvas();\r\n  var in_RGB = {\"red\":\"00\", \"green\": \"00\", \"blue\": \"00\"};\r\n  var out_RGB = {\"red\":\"00\", \"green\": \"00\", \"blue\": \"00\"};\r\n  for (var i=0; i<colors.length; i++) {\r\n    var out_color = colors[i];\r\n    var in_color = getText(colors[i] + \"_source\");\r\n    if (diagram[in_color + \"_clicked\"] || in_color == 1) {\r\n      setStrokeColor(\"#000\");\r\n      setImageURL(out_color + \"_out\", ICONURL + out_color + \".png\");\r\n      out_RGB[out_color] = \"FF\";\r\n    } else {\r\n      setStrokeColor(\"#CCC\");\r\n      setImageURL(out_color + \"_out\", ICONURL + \"black.png\");\r\n    }\r\n    if (diagram[out_color + \"_clicked\"]) in_RGB[out_color] = \"FF\";\r\n    if (in_color != 1 && in_color != 0) {\r\n      line(diagram[in_color], diagram.in,\r\n         diagram[out_color], diagram.out);\r\n    }\r\n  }\r\n  setProperty(\"pixel_in\", \"background-color\", \"#\" + in_RGB.red + in_RGB.green + in_RGB.blue);\r\n  setProperty(\"pixel_out\", \"background-color\", \"#\" + out_RGB.red + out_RGB.green + out_RGB.blue);\r\n}\r\n\r\nfunction genBin() {\r\n  inBin = \"\";\r\n  for (var i=0; i<inPixels.length; i++) {\r\n    var id = inPixels[i];\r\n    inBin += getText(id);\r\n    inBin += \" \";\r\n  }\r\n  setText(\"binary_text\", inBin)\r\n}\r\n\r\nfunction checkLogic(channel) {\r\n  var logicDropdown = channel + \"_logic\";\r\n  var sourceDropdown = channel + \"_source\";\r\n  var selection = getText(logicDropdown);\r\n  if (selection == \"And\") {\r\n    setProperty(sourceDropdown, \"options\", [\"red && green\", \"red && blue\", \"green && blue\"]);\r\n  } else if (selection == \"Or\") {\r\n    setProperty(sourceDropdown, \"options\", [\"red || green\", \"red || blue\", \"green || blue\"]);\r\n  } else if (selection == \"Not\") {\r\n    setProperty(sourceDropdown, \"options\", [\"!red\", \"!green\", \"!blue\"]);\r\n  } else {\r\n    setProperty(sourceDropdown, \"options\", [\"red\", \"green\", \"blue\", \"0\", \"1\"]);\r\n  }\r\n}\r\n\r\nonEvent(\"binary_text\", \"input\", function(event) {\r\n  var bin = getText(\"binary_text\");\r\n  bin = bin.replace(/[^01]/g, '');\r\n  setText(\"binary_text\", bin);\r\n  if (bin != inBin) {\r\n    inBin = bin;\r\n    drawBits(getText(\"binary_text\"), inPixels);\r\n    genBin();\r\n    filterBits();\r\n  }\r\n});\r\n\r\nonEvent(\"red_source\", \"change\", filterBits);\r\n\r\nonEvent(\"green_source\", \"change\", filterBits);\r\n\r\nonEvent(\"blue_source\", \"change\", filterBits);\r\n\r\nonEvent(\"red_in\", \"click\", function(event) {\r\n  diagram.red_clicked = !diagram.red_clicked;\r\n  if (diagram.red_clicked) {\r\n    setImageURL(\"red_in\", ICONURL + \"red.png\");\r\n  } else {\r\n    setImageURL(\"red_in\", ICONURL + \"black.png\");\r\n  }\r\n  drawDiagram();\r\n});\r\n\r\nonEvent(\"green_in\", \"click\", function(event) {\r\n  diagram.green_clicked = !diagram.green_clicked;\r\n  if (diagram.green_clicked) {\r\n    setImageURL(\"green_in\", ICONURL + \"green.png\");\r\n  } else {\r\n    setImageURL(\"green_in\", ICONURL + \"black.png\");\r\n  }\r\n  drawDiagram();\r\n});\r\n\r\nonEvent(\"blue_in\", \"click\", function(event) {\r\n  diagram.blue_clicked = !diagram.blue_clicked;\r\n  if (diagram.blue_clicked) {\r\n    setImageURL(\"blue_in\", ICONURL + \"blue.png\");\r\n  } else {\r\n    setImageURL(\"blue_in\", ICONURL + \"black.png\");\r\n  }\r\n  drawDiagram();\r\n});\r\n\r\nonEvent(\"help_button\", \"click\", function(event) {\r\n  setScreen(\"help\");\r\n});\r\n\r\nonEvent(\"exit_help\", \"click\", function(event) {\r\n  setScreen(\"screen1\");\r\n});\r\n",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "false",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\">\r\n  <div class=\"screen\" tabindex=\"1\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0;\">\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 25px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 320px; height: 235px; position: absolute; top: 115px; text-align: center; left: 0px;\" id=\"label6\">Diagram</label>\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 25px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 320px; height: 105px; position: absolute; left: 0px; top: 0px; text-align: center; background-color: rgb(238, 238, 238);\" id=\"label4\">Filter</label><img src=\"//curriculum.code.org/images/icons/black.png\" data-canonical-image-url=\"//curriculum.code.org/images/icons/black.png\" id=\"red_in\" style=\"height: 50px; width: 50px; position: absolute; left: 10px; top: 155px; margin: 0px;\"><img src=\"//curriculum.code.org/images/icons/black.png\" data-canonical-image-url=\"//curriculum.code.org/images/icons/black.png\" id=\"green_in\" style=\"height: 50px; width: 50px; position: absolute; left: 75px; top: 155px; margin: 0px;\"><img src=\"//curriculum.code.org/images/icons/black.png\" data-canonical-image-url=\"//curriculum.code.org/images/icons/black.png\" id=\"blue_in\" style=\"height: 50px; width: 50px; position: absolute; left: 140px; top: 155px; margin: 0px;\">\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 15px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 90px; position: absolute; left: 20px; top: 40px; text-align: center; height: 20px;\" id=\"label1\">Red gets</label>\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 15px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 90px; height: 20px; position: absolute; left: 115px; top: 40px; text-align: center;\" id=\"label2\">Green gets</label>\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 15px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 90px; height: 20px; position: absolute; left: 210px; top: 40px; text-align: center;\" id=\"label3\">Blue gets</label>\r\n    <select id=\"red_source\" style=\"width: 90px; height: 30px; font-size: 14px; margin: 0px; color: rgb(255, 255, 255); position: absolute; left: 20px; top: 65px; background-color: rgb(26, 188, 156);\">\r\n      <option>red</option>\r\n      <option>green</option>\r\n      <option>blue</option>\r\n    </select>\r\n    <select id=\"green_source\" style=\"width: 90px; height: 30px; font-size: 14px; margin: 0px; color: rgb(255, 255, 255); position: absolute; left: 115px; top: 65px; background-color: rgb(26, 188, 156);\">\r\n      <option>green</option>\r\n      <option>red</option>\r\n      <option>blue</option>\r\n    </select>\r\n    <select id=\"blue_source\" style=\"width: 90px; height: 30px; font-size: 14px; margin: 0px; color: rgb(255, 255, 255); position: absolute; left: 210px; top: 65px; background-color: rgb(26, 188, 156);\">\r\n      <option>blue</option>\r\n      <option>red</option>\r\n      <option>green</option>\r\n    </select>\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 50px; height: 50px; position: absolute; left: 255px; top: 155px; background-color: rgb(0, 0, 0);\" id=\"pixel_in\"></label>\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 50px; height: 50px; position: absolute; left: 195px; top: 155px; font-size: 45px; text-align: center;\" id=\"label8\">=</label><img src=\"//curriculum.code.org/images/icons/black.png\" data-canonical-image-url=\"//curriculum.code.org/images/icons/black.png\" id=\"red_out\" style=\"height: 50px; width: 50px; position: absolute; left: 10px; top: 280px; margin: 0px;\"><img src=\"//curriculum.code.org/images/icons/black.png\" data-canonical-image-url=\"//curriculum.code.org/images/icons/black.png\" id=\"green_out\" style=\"height: 50px; width: 50px; position: absolute; left: 75px; top: 280px; margin: 0px;\"><img src=\"//curriculum.code.org/images/icons/black.png\" data-canonical-image-url=\"//curriculum.code.org/images/icons/black.png\" id=\"blue_out\" style=\"height: 50px; width: 50px; position: absolute; left: 140px; top: 280px; margin: 0px;\">\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 50px; height: 50px; position: absolute; left: 195px; top: 280px; font-size: 45px; text-align: center;\" id=\"label9\">=</label>\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 14px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 50px; height: 50px; position: absolute; left: 255px; top: 280px; background-color: rgb(0, 0, 0);\" id=\"pixel_out\"></label><img data-canonical-image-url=\"icon://fa-long-arrow-down\" id=\"image4\" style=\"height: 50px; width: 50px; position: absolute; left: 255px; top: 217px; margin: 0px;\">\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 25px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 320px; height: 85px; position: absolute; top: 365px; text-align: center; left: 0px; background-color: rgb(238, 238, 238);\" id=\"label11\">Binary</label>\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 25px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 100px; height: 30px; position: absolute; left: 15px; top: 400px; text-align: center; font-family: monospace;\" id=\"bin_in\">000</label><img data-canonical-image-url=\"icon://fa-long-arrow-right\" id=\"image5\" style=\"height: 50px; width: 50px; position: absolute; left: 135px; top: 395px; margin: 0px;\">\r\n    <label style=\"margin: 0px; padding: 2px; line-height: 1; font-size: 25px; overflow: hidden; word-wrap: break-word; color: rgb(51, 51, 51); max-width: 320px; width: 100px; height: 30px; position: absolute; left: 205px; top: 400px; text-align: center; font-family: monospace;\" id=\"bin_out\">000</label>\r\n  </div>\r\n</div>",
    "submittable": "false",
    "data_tables": "{\r\n  \"drawings\": [\r\n    {\r\n      \"name\": \"blue\",\r\n      \"bin\": \"'001'\"\r\n    }\r\n  ]\r\n}",
    "hide_view_data_button": "true",
    "fail_on_lint_errors": "false",
    "debugger_disabled": "true",
    "markdown_instructions": "# Filtering Pixels\r\nIf you've ever used Instragram you've probably encountered an image filter. Image filters read in each pixel, process it in some way, and the return the filtered pixel. In this tool we're going to start by filtering just a single pixel before moving on to a full image.\r\n\r\nYou’ll notice there are three drop downs under the picture. A red replace, a green replace, and a blue replace. Next to it are drop downs for the colors. How many bits are we working with? Yes, we’re working with 3. We also learned that the bits control the colors. First bit controls R, second bit controls G, third bit controls B.\r\n\r\n\r\n# Do This\r\n* Try changing the color drop downs in the Filter section\r\n* Click on the top row of lightbulbs in the Diagram section to see how the filter will convert the input (top bulbs) to the output (bottom bulbs)\r\n* Look at how the numbers in the Binary section reflect changes to the colors\r\n* Based on how the bits change, can you formulate what replace is doing? Talk to your partner and see if you can figure it out.\r\n\r\n",
    "contained_level_names": null,
    "encrypted_examples": [

    ]
  },
  "published": true,
  "notes": "",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks/>
</Applab>