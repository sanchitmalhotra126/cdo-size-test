<Applab>
  <config><![CDATA[{
  "properties": {
    "skin": "applab",
    "code_functions": {
      "addOperator": null,
      "subtractOperator": null,
      "multiplyOperator": null,
      "divideOperator": null,
      "equalityOperator": null,
      "inequalityOperator": null,
      "greaterThanOperator": null,
      "greaterThanOrEqualOperator": null,
      "lessThanOperator": null,
      "lessThanOrEqualOperator": null,
      "declareAssign_x": null,
      "declareNoAssign_x": null,
      "assign_x": null,
      "declareAssign_x_prompt": null,
      "declareAssign_x_promptNum": null,
      "console.log": null,
      "onEvent": null,
      "ifBlock": null,
      "ifElseBlock": null,
      "getNumber": null,
      "getText": null,
      "setProperty": null,
      "getProperty": null,
      "andOperator": null,
      "orOperator": null,
      "notOperator": null,
      "randomNumber_min_max": null,
      "functionParams_none": null,
      "callMyFunction": null,
      "declareAssign_list_abd": null,
      "length": null,
      "insertItem": null,
      "appendItem": null,
      "removeItem": null,
      "accessListItem": null,
      "listLength": null,
      "playSound": null,
      "stopSound": null,
      "forLoop_i_0_4": null,
      "whileBlock": null,
      "mathRound": null,
      "getList": null,
      "functionParams_n": null,
      "callMyFunction_n": null,
      "return": null,
      "getColumn": null
    },
    "embed": "false",
    "instructions_important": "false",
    "submittable": "false",
    "never_autoplay_video": "false",
    "hide_share_and_remix": "false",
    "droplet_tooltips_disabled": "false",
    "lock_zero_param_functions": "false",
    "free_play": "true",
    "validation_enabled": "true",
    "text_mode_at_start": "false",
    "hide_view_data_button": "false",
    "show_debug_watch": "true",
    "expand_debugger": "false",
    "debugger_disabled": "false",
    "show_turtle_before_run": "false",
    "autocomplete_palette_apis_only": "false",
    "execute_palette_apis_only": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "false",
    "beginner_mode": "false",
    "fail_on_lint_errors": "true",
    "makerlab_enabled": "false",
    "long_instructions": "# Do This\r\n\r\n* Write the code for the `randomChoose` function. When it works correctly this program should print a random name from the Spotify Top 50 lists.",
    "parent_level_id": 18132,
    "mini_rubric": "false",
    "encrypted": "false",
    "start_blocks": "var stateNames = getColumn(\"US States\", \"State Name\");\r\nvar statePopulations = getColumn(\"US States\", \"Population\");\r\nvar countryNames = getColumn(\"Countries and Territories\", \"Country Name\");\r\nvar countryPopulations = getColumn(\"Countries and Territories\", \"Population\");\r\n\r\n\r\nlargestSmallest(\"states\", stateNames, statePopulations);\r\nlargestSmallest(\"countries\", countryNames, countryPopulations);\r\n\r\nfunction largestSmallest(typeOfList, list1, list2){\r\n  var message = \"There are many \" + typeOfList;\r\n  message = message + \" but the one with the smallest population is \" + smallestMatchingString(list1, list2);\r\n  message = message + \" and the one with the largest population is \" + largestMatchingString(list1, list2);\r\n  console.log(message);\r\n}\r\n\r\n// Finds the string at the matching index of the smallest number in a list of the same length\r\n// list1 {list} - a list of strings to search through\r\n// list2 {list} - a list of numbers to search through\r\n// return {string} - the string at the matching index of the largest value from list1\r\nfunction smallestMatchingString(list1, list2){\r\n  \r\n  var smallestNum = list2[0];\r\n  var smallestNumMatchingString = list1[0];\r\n  for(var i = 0; i < list1.length; i++){\r\n    if (list2[i]<smallestNum){\r\n      smallestNumString = list1[i];\r\n    }\r\n  }\r\n  \r\n  return smallestNumMatchingString;\r\n}\r\n\r\n// Finds the string at the matching index of the largest num word in a list\r\n// list1 {list} - a list of strings to search through\r\n// list2 {list} - a list of numbers to search through\r\n// return {string} - the string at the matching index of the largest value from list1\r\nfunction largestMatchingString(list1, list2){\r\n  \r\n  return \"unknown\";\r\n}\r\n\r\n",
    "start_html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\" style=\"display: none; width: 320px; height: 450px;\"><div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"screen1\" style=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\"></div></div>",
    "data_library_tables": "Dogs,US States",
    "widget_mode": "false",
    "libraries_enabled": "false",
    "encrypted_examples": "CPR1V/BbTxgym977pPLJCNQO6g3jP01gP1H1M2UWmII7LLW54IgBY8+MmE6D\nHYwnyen2lugYxOd64gswk0HcjQ==\n",
    "name_suffix": "2022",
    "ai_enabled": "false",
    "display_name": "Random Top 50",
    "bubble_choice_description": "Write a function that returns a random name from the top 50 most-followed Instagram accounts and Spotify Top 50 list.",
    "thumbnail_url": "https://images.code.org/7716646df1f971011d92ed691ff65f13-image-1649369095549.png",
    "preload_asset_list": null
  },
  "game_id": 41,
  "published": true,
  "created_at": "2022-04-07T22:01:36.000Z",
  "level_num": "custom",
  "user_id": 832,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2022-04-07T22:01:36.324+00:00\",\"changed\":[\"cloned from \\\"U7 Param Return Practice Console Choice B\\\"\"],\"cloned_from\":\"U7 Param Return Practice Console Choice B\"},{\"changed_at\":\"2022-04-07 22:09:23 +0000\",\"changed\":[\"code_functions\",\"long_instructions\",\"encrypted_examples\",\"display_name\",\"bubble_choice_description\",\"thumbnail_url\",\"preload_asset_list\"],\"changed_by_id\":1574,\"changed_by_email\":\"ken.akiha@code.org\"}]"
}]]></config>
  <blocks/>
</Applab>