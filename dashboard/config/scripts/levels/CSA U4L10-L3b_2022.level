<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "long_instructions": "Create a scene that draws the logos of basketball teams based on the number of championship wins they have.\r\n\r\n##In BasketballScene.java:\r\n\r\n1. Write the `createScene()`(#e7e8ea) method to draw each basketball team's logo at a random location in the scene. Traverse the `championships`(#e7e8ea) array and use multi-selection statements to check the number of championship wins and decide the size to draw the image.\r\n\r\n   * If the number of wins is greater than `10`(#e7e8ea), draw the corresponding team logo in the `logos`(#e7e8ea) array with a size of `150`(#e7e8ea).\r\n   \r\n   * Else if the number of wins is greater than or equal to `5`(#e7e8ea), draw the corresponding team logo in the `logos`(#e7e8ea) array with a size of `100`(#e7e8ea).\r\n   \r\n   * Otherwise, draw the corresponding team logo in the `logos`(#e7e8ea) array with a size of `50`(#e7e8ea).\r\n\r\n##In MyTheater.java:\r\n\r\n2. Call the `createScene()`(#e7e8ea) method with the array.\r\n\r\n3. Use `Theater.playScenes()`(#e7e8ea) to play the scene.\r\n\r\n::: details [**Show Me How**]\r\nA multi-selection statement uses the following syntax:\r\n  \r\n  ```\r\n  if (condition) {\r\n    // code to execute\r\n  }\r\n  else if (condition) {\r\n    // code to execute\r\n  }\r\n  else {\r\n    // code to execute\r\n  }\r\n  ```\r\n\r\nYou can have more than one `else if`(#e7e8ea) if you have additional conditions you need to check.\r\n:::",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    BasketballScene myScene = new BasketballScene(30);\n\n    myScene.readData(\"logos.txt\", 1);\n    myScene.readData(\"wins.txt\", 2);\n\n    // TO DO #2: Call the createScene() method.\n\n\n    // TO DO #3: Use Theater.playScenes() to play the scene.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "BasketballScene.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport org.code.theater.*;\n\n/*\n * A scene visualizing the number of championship wins\n * for each basketball team\n */\npublic class BasketballScene extends Scene {\n\n  private String[] logos;             // The list of basketball team logos\n  private int[] championships;        // The list of championship wins\n\n  /*\n   * Constructor to create a BasketballScene with the\n   * specified number of values to read\n   */\n  public BasketballScene(int numValues) {\n    this.logos = new String[numValues];\n    this.championships = new int[numValues];\n  }\n\n  /*\n   * Reads the data from the file into the logos\n   * or championships arrays based on choice\n   */\n  public void readData(String filename, int choice) {\n    File myFile = new File(filename);\n    Scanner fileReader = createScanner(myFile);\n\n    if (choice == 1) {\n      for (int index = 0; index < logos.length; index++) {\n        if (fileReader.hasNextLine()) {\n          logos[index] = fileReader.nextLine();\n        }\n      }\n    }\n    else {\n      for (int index = 0; index < championships.length; index++) {\n        if (fileReader.hasNextInt()) {\n          championships[index] = fileReader.nextInt();\n        }\n      }\n    }\n\n    fileReader.close();\n  }\n\n  /*\n   * Returns a Scanner object to read theFile\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Creates the scene by drawing each team logo based\n   * on the number of championship wins they have\n   */\n  public void createScene() {    \n    // TO DO #1: Draw each team logo image at random locations. Use the\n    // number of championship wins to inform the size of the image.\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "logos.txt": {
        "text": "bostonceltics.png\nbrooklynnets.png\nnewyorkknicks.png\nphiladelphia76ers.png\ntorontoraptors.png\nchicagobulls.png\nclevelandcavaliers.png\ndetroitpistons.png\nindianapacers.png\nmilwaukeebucks.png\natlantahawks.png\ncharlottehornets.png\nmiamiheat.png\norlandomagic.png\nwashingtonwizards.png\ndenvernuggets.png\nminnesotatimberwolves.png\nokcthunder.png\nportlandtrailblazers.png\nutahjazz.png\ngoldenstatewarriors.png\nlosangelesclippers.png\nlalakers.png\nphoenixsuns.png\nsacramentokings.png\ndallasmavericks.png\nhoustonrockets.png\nmemphisgrizzlies.png\nneworleanspelicans.png\nsanantoniospurs.png",
        "isVisible": true
      },
      "wins.txt": {
        "text": "17\n0\n2\n3\n1\n6\n1\n3\n0\n1\n1\n0\n3\n0\n1\n0\n0\n1\n1\n0\n6\n0\n16\n0\n1\n1\n2\n0\n0\n5",
        "isVisible": true
      }
    },
    "display_name": "NBA Teams",
    "bubble_choice_description": "Draw the logos for each NBA team based on the number of championship wins they have.",
    "thumbnail_url": "https://images.code.org/4c3552b00321d044c4c44408ddc5af8c-image-1650719208107.png",
    "starter_assets": {
      "bostonceltics.png": "8d0c4cbc-ad44-4fec-b5bb-ea75a2f11845.png",
      "brooklynnets.png": "4ed2f12b-25bb-4a1f-a1a6-de3088a6b146.png",
      "newyorkknicks.png": "973a488c-6506-49e4-b5db-0a1e6307783e.png",
      "philadelphia76ers.png": "b62ef4ce-20e5-4fd2-a0f8-267612e24c44.png",
      "torontoraptors.png": "201e2e9f-e591-4ab2-a109-371d1d080bb7.png",
      "chicagobulls.png": "9c45f74b-e082-4eb0-8d70-b6404302a567.png",
      "clevelandcavaliers.png": "0e990edc-33d4-44b7-9777-06bd84338265.png",
      "detroitpistons.png": "5467cc09-9161-4d50-bb27-570488cf97fe.png",
      "indianapacers.png": "fb42d121-fcdd-477c-9b32-9dcad075b3f8.png",
      "milwaukeebucks.png": "eed23b47-9443-463d-9a7a-95fc668860f1.png",
      "atlantahawks.png": "089bc0ba-0a70-44b4-a2a9-bf770714f94f.png",
      "charlottehornets.png": "7307b9a1-b9cb-4af1-bf4b-11b2f45074fd.png",
      "miamiheat.png": "4c8a15cd-0413-4c84-9ae7-5ae5f4af0434.png",
      "orlandomagic.png": "55a8642f-355b-4f35-8679-dcc2725869aa.png",
      "washingtonwizards.png": "7491cdfa-9f32-4b15-9ff4-c10953d35bf9.png",
      "denvernuggets.png": "3c713d8e-7e68-483e-855c-af30a287d90e.png",
      "minnesotatimberwolves.png": "8c54f077-9c64-4a63-b143-a740aecd24bd.png",
      "okcthunder.png": "19419a54-8649-48b8-8b21-536a523e548b.png",
      "portlandtrailblazers.png": "06937393-537f-4aa6-b4c4-f326baeec984.png",
      "utahjazz.png": "67b4e79a-aae9-4c3e-b1dd-498f85971a63.png",
      "goldenstatewarriors.png": "f06c5338-5b48-45a1-91fb-ccdd990a289f.png",
      "losangelesclippers.png": "9a53038a-651e-486e-bec0-324d68044fc5.png",
      "lalakers.png": "22e61a3c-bcde-4f80-b4e9-983511257d1d.png",
      "phoenixsuns.png": "65dee8d5-28c7-4479-a837-d457a947d738.png",
      "sacramentokings.png": "d5b6b861-8036-4f0e-a55a-cf35dc37fdbe.png",
      "dallasmavericks.png": "f98ff3e0-e9ba-48db-a38d-fa35b55f3844.png",
      "houstonrockets.png": "f7643790-2edb-4ffc-89a6-62c06a7a92b9.png",
      "memphisgrizzlies.png": "e5115728-8b77-42fb-848f-9beba94cec64.png",
      "neworleanspelicans.png": "34dd1e64-8e4a-4d2f-a3f3-9c895d807e48.png",
      "sanantoniospurs.png": "b90c5bbd-2602-4a9d-ac10-fd2d12da00db.png"
    },
    "encrypted_exemplar_sources": "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\n"
  },
  "game_id": 68,
  "created_at": "2022-04-07T18:58:06.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-04-07T18:58:06.768+00:00\",\"changed\":[\"cloned from \\\"CSA U4L10-L3a_2022\\\"\"],\"cloned_from\":\"CSA U4L10-L3a_2022\"},{\"changed_at\":\"2022-04-07 18:58:09 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:00:20 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:02:36 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 13:06:59 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 15:25:01 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 15:36:36 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:08:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:14:36 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:15:43 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-23 16:16:22 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-25 21:15:52 +0000\",\"changed\":[],\"changed_by_id\":13506,\"changed_by_email\":\"sanchit+levelbuilder@code.org\"},{\"changed_at\":\"2022-05-03 12:42:18 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:42:54 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:42:59 +0000\",\"changed\":[\"encrypted_exemplar_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:43:04 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
