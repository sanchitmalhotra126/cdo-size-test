<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "project_template_level_name": "CSA U4L9-L4c PBT_2022",
    "long_instructions": "Create a scene that draws random shapes and images using random colors at random locations in The Theater!\r\n\r\n##In RandomScene.java:\r\n\r\n1. Write the `drawRandomShapes`(#e7e8ea) method to draw the number of shapes specified by the `numShapes`(#e7e8ea) parameter.\r\n\r\n   * Generate a random number (`0`(#e7e8ea) or `1`(#e7e8ea)). Draw a circle if the number is `0`(#e7e8ea), and draw a rectangle if the number is `1`(#e7e8ea).\r\n   \r\n   * Choose a random color from the `colors`(#e7e8ea) array and use `setFillColor()`(#e7e8ea) with the randomly chosen color.\r\n   \r\n   **Hint:** Use `colors.length`(#e7e8ea) to set the range of index values to choose from.\r\n   \r\n   * Choose a random `x`(#e7e8ea) and `y`(#e7e8ea) location to draw the shape.\r\n   \r\n   **Hint:** Use the `getWidth()`(#e7e8ea) and `getHeight()`(#e7e8ea) methods in the `Scene`(#e7e8ea) class to set the range of `x`(#e7e8ea) and `y`(#e7e8ea) locations to choose from.\r\n   \r\n2. Write the `drawRandomImages`(#e7e8ea) method to draw each image in the `images`(#e7e8ea) array.\r\n   \r\n   * Choose a random `x`(#e7e8ea) and `y`(#e7e8ea) location to draw the image.\r\n   \r\n   **Hint:** Use the `getWidth()`(#e7e8ea) and `getHeight()`(#e7e8ea) methods in the `Scene`(#e7e8ea) class to set the range of `x`(#e7e8ea) and `y`(#e7e8ea) locations to choose from.\r\n\r\n##In MyTheater.java:\r\n\r\n3. Call the `createScene()`(#e7e8ea) method with a number of shapes to draw.\r\n\r\n4. Use `Theater.playScenes()`(#e7e8ea) to play the scene.",
    "mini_rubric": "false",
    "submittable": "false",
    "hide_share_and_remix": "false",
    "csa_view_mode": "theater",
    "display_name": "Create a Scene",
    "bubble_choice_description": "Use Math.random() to draw shapes and images in your scene.",
    "starter_assets": {
      "headphones.png": "33537f26-4dda-4c32-9d1a-0d5861a794c9.png",
      "microphone.png": "d9b3b5bc-927e-4784-9c17-51cdb8b03037.png",
      "laptop.png": "3fff54f8-0b8b-4982-8465-4c06571a99d8.png",
      "speaker.png": "94ae5d7c-ff5a-431a-a62a-ae0412b2b761.png",
      "television.png": "14a1d493-16f1-47d3-923d-a9286927674f.png"
    },
    "start_sources": {
      "MyTheater.java": {
        "text": "import org.code.theater.*;\n\npublic class MyTheater {\n  public static void main(String[] args) {\n\n    String[] colors = {\"red\", \"blue\", \"orange\", \"green\", \"purple\"};\n    String[] images = {\"headphones.png\", \"microphone.png\", \"laptop.png\", \"speaker.png\", \"television.png\"};\n    RandomScene myScene = new RandomScene(colors, images);\n\n    // TO DO #2: Call the createScene() method.\n\n\n    // TO DO #3: Use Theater.playScenes() to play the scene.\n\n    \n  }\n}",
        "isVisible": true
      },
      "RandomScene.java": {
        "text": "import org.code.theater.*;\n\n/*\n * A scene that draws random shapes and images\n */\npublic class RandomScene extends Scene {\n\n  private String[] colors;   // The list of colors\n  private String[] images;   // The list of images\n\n  /*\n   * Constructor to create a RandomScene\n   * with specified arrays of colors and images\n   */\n  public RandomScene(String[] colors, String[] images) {\n    this.colors = colors;\n    this.images = images;\n  }\n\n  /*\n   * Creates the scene by drawing circles, rectangles, and images\n   * with random colors and at random locations\n   */\n  public void createScene(int numShapes) {\n    // TO DO #1: Draw numShapes number of circles and rectangles with random\n    // colors and at random locations. Draw each image at a random location.\n\n\n    \n  }\n  \n}",
        "isVisible": true
      }
    },
    "encrypted_examples": [

    ]
  },
  "game_id": 68,
  "published": true,
  "created_at": "2022-04-07T18:44:04.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "audit_log": "[{\"changed_at\":\"2022-04-07T18:44:04.696+00:00\",\"changed\":[\"cloned from \\\"CSA U4L9-L4b_2022\\\"\"],\"cloned_from\":\"CSA U4L9-L4b_2022\"},{\"changed_at\":\"2022-04-07 18:44:12 +0000\",\"changed\":[\"project_template_level_name\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-22 21:46:02 +0000\",\"changed\":[\"contained_level_names\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-22 21:49:36 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-22 21:58:12 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-22 22:45:51 +0000\",\"changed\":[\"long_instructions\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-22 23:01:15 +0000\",\"changed\":[\"long_instructions\",\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-04-22 23:04:28 +0000\",\"changed\":[\"encrypted_examples\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
