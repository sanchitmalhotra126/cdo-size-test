<Karel>
  <config><![CDATA[{
  "game_id": 25,
  "created_at": "2016-11-18T23:06:17.000Z",
  "level_num": "custom",
  "user_id": 285,
  "properties": {
    "skin": "harvester",
    "serialized_maze": "[[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":3,\"range\":3,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":2,\"range\":2,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[2],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":0,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":3,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":2,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":1,\"possibleFeatures\":[1],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"value\":1,\"range\":3,\"possibleFeatures\":[3],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false}],[{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false},{\"tileType\":1,\"possibleFeatures\":[0],\"startsHidden\":false}]]",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "start_direction": "1",
    "step_mode": "1",
    "flower_type": "redWithNectar",
    "fast_get_nectar_animation": "false",
    "instructions_important": "false",
    "ideal": "16",
    "markdown_instructions": "Collect all of the produce to finish this stage.",
    "authored_hints": "[{\"hint_class\":\"content\",\"hint_markdown\":\"You can call the `check and pick` function at every space, even if you know what is there.\",\"hint_id\":\"courseE_farmer_functions9b_a\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/65ec611f0e3ea3eb241d4b574cfb13a9/courseE_farmer_functions9b.mp3\"},{\"hint_class\":\"pointer\",\"hint_markdown\":\"Would a `while` loop or an `if/else` statement be more helpful to go around this path?\",\"hint_id\":\"courseE_farmer_functions9b_b\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/635d642267e5812ebdf8a910e8dd8f07/courseE_farmer_functions9b.mp3\"},{\"hint_class\":\"content\",\"hint_markdown\":\"You can use a `repeat until at pumpkin` loop to get to the end of the path, since there is only one pumpkin in the puzzle.\",\"hint_id\":\"courseE_farmer_functions9b_c\",\"hint_type\":\"general\",\"tts_url\":\"https://tts.code.org/sharon22k/180/100/6bc5fc980cc412aea38744848ef6fd50/courseE_farmer_functions9b.mp3\"}]",
    "callout_json": "[]",
    "step_speed": "1",
    "disable_procedure_autopopulate": "false",
    "hide_share_and_remix": "false",
    "disable_if_else_editing": "false",
    "shape_shift": "false",
    "contained_level_names": null
  },
  "published": true,
  "notes": "",
  "audit_log": "[{\"changed_at\":\"2017-07-14 01:22:51 +0000\",\"changed\":[\"start_blocks\",\"toolbox_blocks\",\"solution_blocks\",\"authored_hints\",\"contained_level_names\"],\"changed_by_id\":302,\"changed_by_email\":\"mara.downing@code.org\"}]",
  "level_concept_difficulty": {
  }
}]]></config>
  <blocks>
    <start_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false"/>
        <block type="procedures_defnoreturn" y="150px">
          <mutation/>
          <title name="NAME">check and pick</title>
          <statement name="STACK">
            <block type="harvester_ifAtCropElse">
              <title name="LOC">Corn</title>
              <statement name="DO">
                <block type="harvester_whileHasCrop">
                  <title name="LOC">Corn</title>
                  <statement name="DO">
                    <block type="harvester_corn"/>
                  </statement>
                </block>
              </statement>
              <statement name="ELSE">
                <block type="harvester_ifAtCropElse">
                  <title name="LOC">Lettuce</title>
                  <statement name="DO">
                    <block type="harvester_whileHasCrop">
                      <title name="LOC">Lettuce</title>
                      <statement name="DO">
                        <block type="harvester_lettuce"/>
                      </statement>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="harvester_ifAtCrop">
                      <title name="LOC">Pumpkin</title>
                      <statement name="DO">
                        <block type="harvester_whileHasCrop">
                          <title name="LOC">Pumpkin</title>
                          <statement name="DO">
                            <block type="harvester_pumpkin"/>
                          </statement>
                        </block>
                      </statement>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </statement>
        </block>
      </xml>
    </start_blocks>
    <toolbox_blocks>
      <xml>
        <category name="Actions">
          <block type="maze_move">
            <title name="DIR">moveForward</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnRight</title>
          </block>
          <block type="maze_turn">
            <title name="DIR">turnLeft</title>
          </block>
          <block type="harvester_corn"/>
          <block type="harvester_pumpkin"/>
          <block type="harvester_lettuce"/>
        </category>
        <category name="Loops">
          <block type="harvester_whileHasCrop" limit="3">
            <title name="LOC">Corn</title>
          </block>
          <block type="maze_untilBlocked"/>
          <block type="harvester_untilAtCrop">
            <title name="LOC">Pumpkin</title>
          </block>
        </category>
        <category name="Conditionals">
          <block type="maze_if" limit="1">
            <title name="DIR">isPathLeft</title>
          </block>
          <block type="harvester_ifAtCropElse">
            <title name="LOC">Corn</title>
          </block>
          <block type="harvester_ifAtCrop">
            <title name="LOC">Corn</title>
          </block>
        </category>
        <category name="Functions" custom="PROCEDURE"/>
      </xml>
    </toolbox_blocks>
    <solution_blocks>
      <xml>
        <block type="when_run" deletable="false" movable="false">
          <next>
            <block type="harvester_untilAtCrop">
              <title name="LOC">Pumpkin</title>
              <statement name="DO">
                <block type="maze_if">
                  <title name="DIR">isPathLeft</title>
                  <statement name="DO">
                    <block type="maze_turn">
                      <title name="DIR">turnLeft</title>
                    </block>
                  </statement>
                  <next>
                    <block type="maze_moveForward">
                      <next>
                        <block type="procedures_callnoreturn">
                          <mutation name="check and pick"/>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </statement>
            </block>
          </next>
        </block>
        <block type="procedures_defnoreturn">
          <mutation/>
          <title name="NAME">check and pick</title>
          <statement name="STACK">
            <block type="harvester_ifAtCropElse">
              <title name="LOC">Corn</title>
              <statement name="DO">
                <block type="harvester_whileHasCrop">
                  <title name="LOC">Corn</title>
                  <statement name="DO">
                    <block type="harvester_corn"/>
                  </statement>
                </block>
              </statement>
              <statement name="ELSE">
                <block type="harvester_ifAtCropElse">
                  <title name="LOC">Lettuce</title>
                  <statement name="DO">
                    <block type="harvester_whileHasCrop">
                      <title name="LOC">Lettuce</title>
                      <statement name="DO">
                        <block type="harvester_lettuce"/>
                      </statement>
                    </block>
                  </statement>
                  <statement name="ELSE">
                    <block type="harvester_ifAtCrop">
                      <title name="LOC">Pumpkin</title>
                      <statement name="DO">
                        <block type="harvester_whileHasCrop">
                          <title name="LOC">Pumpkin</title>
                          <statement name="DO">
                            <block type="harvester_pumpkin"/>
                          </statement>
                        </block>
                      </statement>
                    </block>
                  </statement>
                </block>
              </statement>
            </block>
          </statement>
        </block>
      </xml>
    </solution_blocks>
  </blocks>
</Karel>