<Applab>
  <config><![CDATA[{
  "game_id": 41,
  "created_at": "2015-09-16T15:58:15.000Z",
  "level_num": "custom",
  "user_id": 106,
  "properties": {
    "skin": "applab",
    "code_functions": {
      "moveForward": null,
      "moveTo": null,
      "turnRight": null,
      "turnLeft": null,
      "penUp": null,
      "penDown": null,
      "functionParams_none": null,
      "functionParams_n": null,
      "callMyFunction": null,
      "callMyFunction_n": null
    },
    "edit_code": true,
    "encrypted_examples": [

    ],
    "embed": "false",
    "markdown_instructions": "# Defining and using a function with a parameter\r\n\r\nAs you probably noticed in the previous exercise, defining multiple functions to draw different sized squares results in highly repetitive functions. **You can \"copy-paste\" the majority of the code!** \r\n\r\nIn this exercise we've provided you with a version of `drawSquare()` that uses a parameter to **remove this redundancy**. \r\n\r\n**Check out** this side-by-side comparison of the old square functions without parameters and the new one with them. Notice that in the first two functions were identical except for the length of the sides. By creating a version of this function with a parameter we can let the user provide a value to decide any length they want the square to be.\r\n\r\n![](https://images.code.org/8f1b87b103b8f5938662ede32d498b00-image-1442420998213.25.09 AM.png)\r\n\r\n**Picking good parameter names** is just like picking good function names. You should pick a name that is **descriptive and meaningful**. Here `size` was chosen because the user is picking the overall size they want the square to be.\r\n\r\n# To Do\r\n**Use** the version of the function with parameters to draw the same figure from before. There are blank lines in the code where you can put the function calls.\r\n\r\n![](https://images.code.org/61d623834aa8780f6684e702c2d9c003-image-1442439874887.43.52 PM.png)\r\n\r\n![](https://images.code.org/3eae30651dabc2f83a8bbbbbf8bea7ad-image-1442420537113.26.34 AM.png)",
    "start_blocks": "penUp();\r\nmoveTo(150,200);\r\n\r\nmoveTo(100,350);\r\n\r\nfunction drawSquare(size){\r\n  penDown();\r\n  moveForward(size);\r\n  turnRight();\r\n  moveForward(size);\r\n  turnRight();\r\n  moveForward(size);\r\n  turnRight();\r\n  moveForward(size);\r\n  turnRight();\r\n  penUp();\r\n}",
    "is_k1": "false",
    "skip_instructions_popup": "false",
    "never_autoplay_video": "false",
    "slider_speed": "1",
    "disable_param_editing": "true",
    "disable_variable_editing": "false",
    "use_modal_function_editor": "false",
    "use_contract_editor": "false",
    "contract_highlight": "false",
    "contract_collapse": "false",
    "examples_highlight": "false",
    "examples_collapse": "false",
    "examples_required": "false",
    "definition_highlight": "false",
    "definition_collapse": "false",
    "disable_examples": "false",
    "app_width": "320",
    "app_height": "480",
    "free_play": "true",
    "show_turtle_before_run": "true",
    "autocomplete_palette_apis_only": "true",
    "text_mode_at_start": "false",
    "design_mode_at_start": "false",
    "hide_design_mode": "true",
    "beginner_mode": "true",
    "instructions": "Use drawSquare() to recreate the image of both squares, this time using parameters. (Click to see full instructions)"
  }
}]]></config>
  <blocks/>
</Applab>