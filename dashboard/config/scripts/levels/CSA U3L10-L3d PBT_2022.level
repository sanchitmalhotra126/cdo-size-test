<Javalab>
  <config><![CDATA[{
  "properties": {
    "encrypted": "false",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    NetflixStats myNetflixStats = new NetflixStats(65);\n\n    myNetflixStats.readData(\"countries.txt\", 1);\n    myNetflixStats.readData(\"fees.txt\", 2);\n\n    // TO DO #2: Print the result of a call to hasDuplicates().\n\n\n    \n  }\n}",
        "isVisible": true
      },
      "NetflixStats.java": {
        "text": "import java.util.Scanner;\nimport java.io.File;\nimport java.io.FileNotFoundException;\n\n/*\n * Analyzes data about Netflix subscription fees in different countries\n */\npublic class NetflixStats {\n\n  private String[] countries;\n  private double[] subscriptionFees;\n\n  /*\n   * Constructor to create an NetflixStats object\n   * with the specified number of values to read\n   */\n  public NetflixStats(int numValues) {\n    this.countries = new String[numValues];\n    this.subscriptionFees = new double[numValues];\n  }\n\n  /*\n   * Reads the data from the file into the countries\n   * or the subscriptionFees array based on choice\n   */\n  public void readData(String filename, int choice) {\n    File myFile = new File(filename);\n    Scanner fileReader = createScanner(myFile);\n\n    if (choice == 1) {\n      for (int index = 0; index < countries.length; index++) {\n        if (fileReader.hasNextLine()) {\n          countries[index] = fileReader.nextLine();\n        }\n      }\n    }\n    else {\n      for (int index = 0; index < subscriptionFees.length; index++) {\n        if (fileReader.hasNextDouble()) {\n          subscriptionFees[index] = fileReader.nextDouble();\n        }\n      }\n    }\n\n    fileReader.close();\n  }\n\n  /*\n   * Returns a Scanner object to read theFile\n   * or notifies the user if the file is not found\n   */\n  public Scanner createScanner(File theFile) {\n    Scanner tempScanner = null;\n\n    try {\n      tempScanner = new Scanner(theFile);\n    } catch(FileNotFoundException error) {\n      System.out.println(\"File not found.\");\n    }\n\n    return tempScanner;\n  }\n\n  /*\n   * Returns true if there are duplicate years in\n   * the subscriptionFees array, otherwise returns false\n   */\n  public boolean hasDuplicates() {\n    // TO DO #1: Traverse the subscriptionFees array to determine if there\n    // are duplicate values and return the result.\n\n\n    \n  }\n  \n}",
        "isVisible": true
      },
      "countries.txt": {
        "text": "Argentina\nAustralia\nAustria\nBelgium\nBolivia\nBrazil\nBulgaria\nCanada\nChile\nColombia\nCosta Rica\nCroatia\nCzechia\nDenmark\nEcuador\nEstonia\nFinland\nFrance\nGermany\nGibraltar\nGreece\nGuatemala\nHonduras\nHong Kong\nHungary\nIceland\nIndia\nIndonesia\nIreland\nIsrael\nItaly\nJapan\nLatvia\nLiechtenstein\nLithuania\nMalaysia\nMexico\nMoldova\nMonaco\nNetherlands\nNew Zealand\nNorway\nParaguay\nPeru\nPhilippines\nPoland\nPortugal\nRomania\nRussia\nSan Marino\nSingapore\nSlovakia\nSouth Africa\nSouth Korea\nSpain\nSweden\nSwitzerland\nTaiwan\nThailand\nTurkey\nUkraine\nUnited Kingdom\nUnited States\nUruguay\nVenezuela",
        "isVisible": true
      },
      "fees.txt": {
        "text": "6.3\n12.12\n14.67\n15.24\n10.99\n7.11\n11.29\n11.87\n9.91\n6.86\n12.99\n11.29\n11.49\n15.04\n10.99\n11.29\n13.54\n15.24\n14.67\n14.67\n12.42\n10.99\n10.99\n10\n10.71\n14.67\n6.61\n10.66\n14.67\n15.05\n14.67\n13.13\n11.29\n20.46\n11.29\n10.65\n10.43\n11.29\n13.54\n13.54\n12.53\n12.17\n11.49\n8.56\n9.14\n10.58\n13.54\n11.29\n10.84\n14.67\n12.81\n11.29\n10.05\n11.47\n14.67\n14.2\n20.46\n11.9\n10.43\n3\n8.46\n13.2\n13.99\n12.99\n10.99",
        "isVisible": true
      }
    }
  },
  "game_id": 68,
  "created_at": "2022-03-25T13:20:07.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-03-25T13:20:07.554+00:00\",\"changed\":[\"cloned from \\\"CSA U3L10-L3c PBT_2022\\\"\"],\"cloned_from\":\"CSA U3L10-L3c PBT_2022\"},{\"changed_at\":\"2022-03-25 13:20:10 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 21:05:26 +0000\",\"changed\":[],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 21:15:13 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-03-31 21:16:40 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"},{\"changed_at\":\"2022-05-03 12:21:51 +0000\",\"changed\":[\"start_sources\"],\"changed_by_id\":16889,\"changed_by_email\":\"jamila+lb@code.org\"}]"
}]]></config>
</Javalab>
