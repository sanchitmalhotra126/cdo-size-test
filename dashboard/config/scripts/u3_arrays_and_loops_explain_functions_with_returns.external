name 'U3 - Arrays and Loops - Explain Functions with Returns'
href 'path/to/html/in/asset/folder'
css 'unplugged'
markdown <<MARKDOWN
# Using output from functions

We have just added parameters to our functions in order to **provide input values** to our functions. It is also possible for functions to **generate output values**. 

We have already seen many examples of **functions that generate output**, including:
 * `randomNumber()` 
 * `includes()`
 * `promptNum()`
 * `getText()`
 * `toUpperCase()`
 * `toLowerCase()`. 
 
You may not have thought of it at the time, but when you called these functions you treated them **as if they were a value**. In reality you were using the **output generated by these functions**.


|**Using the `randomNumber` function as a number** | **Using the `getText` function as a string** | 
| --- | --- |
|![](https://images.code.org/2b600bb438230da22acc3b74693bf386-image-1447697995804.19.17 PM.png) | ![](https://images.code.org/cd6e2a40b398fc097a415221ff89b117-image-1447698000658.19.44 PM.png) |

We already have used many functions that generate output, and now we are going to learn how to write them ourselves.

# Return values

When you call a function you are telling the computer to run a piece of code elsewhere in your program. When that function is finished running, execution of the program **returns** to the point in the code where the function was called. In some programming languages you must explicitly tell the program to return at the end of a function, but in JavaScript this just happens automatically when you reach the last line of your function.

It is possible to make your program return at any point using the `return` command. This command tells the function to stop executing immediately, skipping any commands that appear after it within the function.

```
Example of Return

myFunction();

function myFunction(){
  console.log("This line always runs");
  return;
  console.log("But this one never does");
}
```

Used alone `return` isn't all that useful since any commands that appear after it will never run 

**Rules For Writing Functions that Return Values:**

* A function can **only return a single value.**
* You **must use the word `return`** in the code, it is a command that makes the computer return control back to the place in the code where the function was called from in the first place. **Note:** All of the functions we've written so far have an implied return statement - when the execution hits the last curly brace it returns back to where it left off
* **When the function returns you can also send a value along with it,** when you did this you say the function returns a value

<a class="btn btn-large btn-primary next-stage submitButton">Continue</a>



MARKDOWN
