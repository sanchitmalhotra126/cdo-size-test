name 'CSP Algorithms Map'
css 'unplugged'
markdown <<MARKDOWN
# Algorithms - Solving the problems

## What is an algorithm?

<img src="https://images.code.org/87bf4d18fa54a7a8ff281fef40582567-image-1513366166566.png" style="float:right;width:100px; margin-left: 10px">

**Definition**

An algorithm is a precise sequence of instructions for a process that completes a task.

**Using algorithms in daily life**

Daily life is made up of tasks big and small. You need to get dressed, prepare meals, pack a bag, travel from one place to another, and manage relationships. For some of these tasks we either want or need to complete them a little bit differently each time. We wouldn't want a script for our conversations with friends for example! In other context, like tying your shoes or getting to school, you just want a step by step process that you know will reliably accomplish the task every time. In case where you use a series of steps to reliably accomplish a task, you're using an algorithm.

<div style="clear: both"> </div>

## Algorithms and Computer Science

<div style="float: right; width: 250px; margin-left: 10px; background-color: #ffffff; color: #0094ca">
  <img src="https://images.code.org/922f0ea03649c735ae4e27531bb12508-image-1513368088093.00.43 PM.png" style="width: 90%">    
  <br><br>
  <em>drawRectangle()</em> and <em>right()</em> are examples of abstraction because they capture the code for more complex behavior and simplify the representation of that behavior by giving it a single name.
</div>

**Programming - Communicating algorithms to a computer**

A program is a set of instructions to complete some task using the tools made available to you in a programming language. In other words, a program is an algorithm for completing a task. The difference between a computer and human algorithm is the extreme precision of a programming language. Computers require instructions that can only have a single, unambiguous meaning. Computer languages only contain a relatively small set of single individual commands that the computer is capable of running. In order to design an algorithm, you need to combine these commands together.

**Sequence, Selection, Iteration**

Algorithms are created by combining the types of instructions that a computer can complete in three ways. In fact, using these three you can describe ANY algorithm completed by a computer.

* **Sequence:** This is placing commands in an order. When you write a program that runs line by line you are defining the order in which a computer should run the fundamental commands that it understands.

* **Selection:** This is when a computer chooses to run one of two or more sections of code. When you use an if-statement you are making use of selection.

* **Iteration:** Repeating a section of code. In programming this means using a loop.

**Algorithms and Creativity**

There are many (conceivably infinite) ways to write a program to complete a task. Some may be more efficient or easier to understand than others, but there is typically no single "right" algorithm to complete a task. There also typically isn't an "algorithm for writing algorithms". You need to investigate and understand the problem you are trying to solve, and then get creative with how you'll combine the tools the programming language provides you.

<div style="clear: both"> </div>

## Algorithms, Unit 5, and the AP Exam

**Algorithms and AP Computer Science Principles**

(1) Algorithms is one of the seven big ideas of AP Computer Science Principles.

(2) For the AP Create Performance Task you need to...

<div style="width: 50%; margin-left: 40px; background-color: #EEEEEE; font-family: serif; font-size: 12pt; padding: 10px">
[identify] a code segment that contains an algorithm you developed...[and]...explain how the algorithm helps achieve the purpose of your program.
</div>
<br>
MARKDOWN

teacher_markdown <<MARKDOWN
#### How to use this level

This level has a lot of text. Ways you might use it / incorporate it into your class:

* Assign as reading for students the day before
* Have students stop at this level during the normal progression and read as a group - discuss key points.
* Read and summarize for your students
* Make note of it as a reference for students that explains "algorithms"
* Use in conjunction with a preview of the AP Create Performance Task
MARKDOWN
