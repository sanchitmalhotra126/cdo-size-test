name 'U3L20 - combining And and Or explanation'
title 'title'
description 'description here'
href 'path/to/html/in/asset/folder'
markdown <<MARKDOWN
# Combining AND and OR

You can express more complex conditions by combining **AND** and **OR** in one statement.  You should use parentheses to group expressions together to make it clear which expressions are being "and-ed" or "or-ed" together. 

For example: this statement will evaluate to true if the day is Tuesday or Thursday AND their age is 15 or 16.

![](https://images.code.org/33681e68bc0e321aeba7483034ba048c-image-1446485973724.png)


# Misconception Alert - using incomplete expressions with boolean operators

Many beginning programmers make a mistake (which reasonable but wrong) while trying to write the expression above. Notice the subtle difference between the correct code above and this version...

![](https://images.code.org/a7bf3004b3902db217e8694752016e9a-image-1446486624001.png)

An expression like: `(day == "Tuesday" || "Thursday")` is incorrect because unfortunately the computer cannot assume or infer that you are trying to compare "Thursday" to the value that is in the variable **day**.  

Because the string "Thursday" by itself isn't an expression that evaluates to true or false it *should not* be used as an expression in a boolean operator.

Even more unfortunately, <code>(day == "Tuesday" || "Thursday")</code> **doesn't do what you might think**...it turns out it will run without error and it will *always* be true. 



<p></p>
<details>
<summary><strong>(optional) Read more about using single values in if statements</strong> (click to expand)</summary>

In JavaScript a value on its own, when used in an if statement is *always true*.  For example: <code>if("Thursday")</code> is true. <code>if(15)</code>...<code>if(23423)</code> both true.  This means that <code>if( day=="Tuesday" || "Thursday")</code> is also always true.  
<p></p>
Some single values such as <code>0</code> and the empty string <code>""</code> evaluate to <strong>false</strong> inside an if statement.
<p></p>
There are other examples of bizarre expressions that evaluate to true or false when used inside an if statement but almost none of them are used intentionally.
</details>
<p></p>

<img src="https://images.code.org/addc9f770e5f25d3be4d656acabfd1f8-image-1446485780702.png" style="width: 200px; float: right">

Just remember to follow the rules of boolean operators...

The boolean operators **OR** and **AND** *require* that there be an expression that *evaluates to true or false* on **both sides** of the operator.

Most of the time you're going to use an expression that uses one of the comparison operators `< > == !=` or function that returns a true/false value.

Let's now try using an **AND** and an **OR** in one combined expression... 


MARKDOWN
