name '4.5 - 4.7 Lesson Connections'
css 'unplugged'
markdown <<MARKDOWN
# 4.5-7 Lesson Connections


The activities around data encryption follow a pattern: introduce an encryption concept through an unplugged activity or thinking prompt, and then “plug it in” by using a Code.org widget to explore the concept further. The purpose of the widgets is to allow students time to play with some of the ideas ­ often mathematical in nature ­ underlying different methods of encryption and why they might be susceptible to being “cracked.” These explorations lead towards an understanding of computationally hard problems and the fact that **algorithms can solve many but not all computational problems (4.2)**. In particular students should come away with a high level understanding of how asymmetric encryption works and why it makes certain things possible (sending encrypted data without a shared key) and certain things basically impossible (cracking a key). By investigating some of the mathematical foundations of encryption we build toward the enduring understanding that **cybersecurity is an important concern for the Internet and the systems built on it (6.3)** and as always **there are trade offs when representing information as digital data (3.3)**.


## Encryption Progression
In this set of lessons, students are introduced to a relatively simple Caesar cypher to get them thinking about both the value of encryption in computing.  They are then introduced to the Vigenère cypher and delve deeper into what makes a “strong” encryption and quickly introduce the idea of **computationally hard** problems - problems that would take the computer a prohibitively long time to solve.  Finally, students are introduced to asymmetric encryption algorithms that rely on modulo operations (mathematical properties that make public key encryption possible) and encouraged to consider the benefits of public key cryptography.
## Lesson 5: Simple Encryption
**Lesson Type:** Unplugged | Encryption Widget | Individual and Group Discovery


<a href = “https://curriculum.code.org/csp/unit4/5/” target=_blank> Lesson Plan Link <i class="fa fa-external-link-square"/></a>


To begin this lesson, students recall some of the facts they learned in Unit 1 while using the Internet Simulator.
The Internet is not inherently secure.
Packets traveling across the Internet move through many routers, each of which could be owned by different people or organizations.
So we should assume all information traveling across the Internet to be public, as if written on a postcard and sent through the mail.


This motivates a series of lessons about cryptography and encryption. “Encryption” is a process for transforming a message so that the original is “hidden” from anyone who is not the intended recipient. Encryption is not just for the military and spies anymore. We use encryption everyday on the Internet, primarily to conduct commercial transactions, and without it our economy might grind to a halt.


This lesson gives students a first taste of the kind of thinking that goes into encrypting messages in the face of computational tools. Computational tools dramatically increase the strength and complexity of the algorithms we use to encrypt information, but these same tools also increase our ability to crack an encryption. Developing strong encryption relies on knowledge of problems that are “hard” for computers to solve, and using that knowledge to encrypt messages.

<br>
<hr />


## Lesson 6: Encryption with Keys and Passwords
**Lesson Type:** Vigenère Widget| Individual and Group Discovery


<a href = “https://curriculum.code.org/csp/unit4/6/” target=_blank> Lesson Plan Link <i class="fa fa-external-link-square"/></a>


Cryptography and encryption are important and far-reaching fields within computer science. This lesson begins to get students’ feet wet with the human side of cybersecurity: choosing good passwords through an exploration of the classic Vigenère Cipher. We also learn that the Vigenère cipher is actually susceptible to frequency analysis (though at first glance it is not) and in subsequent lessons we learn that better methods are used today. In this lesson we focus on making a good key and students explain in broad terms what makes a key difficult to “crack”, while in subsequent lessons we learn more about problems and algorithms that are **computationally hard**.
<br>
<hr />


## Lesson 7: Public Key Cryptography
**Lesson Type:** Unplugged| Modeling | Individual and Group Discovery


<a href = “https://curriculum.code.org/csp/unit4/7/” target=_blank> Lesson Plan Link <i class="fa fa-external-link-square"/></a>


Students have done encryption before, but those methods always required both parties knowing a secret key to encrypt and decrypt. A major problem that arises: how can two parties establish a secret key without meeting ahead of time? If we can solve that problem, then we have a way for people (or computers) to establish keys over the Internet to enable secure transactions. Public key cryptography does away with this problem by introducing asymmetric keys – that is, using one key to encrypt a message and a different key to decrypt. For this to work the keys need to be mathematically related in ways we explain in the lesson. In this way, messages can be sent between people who have never met before, by making a person’s encryption key public, and their decryption key private.

MARKDOWN
