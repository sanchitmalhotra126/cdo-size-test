name 'OPD-K5 Outline_copy_2021'
skip_dialog true
markdown <<MARKDOWN
# Online Course Overview

Below is an outline of the lessons included in this online course, along with a brief description of what to expect in each lesson.  Time to complete each lesson and part is suggested.  However, feel free to start and stop at your own pace and take more or less time to meet your needs.

## Part I:  Implementing and Teaching CS Fundamentals (90 minutes total)

Part I:  Implementing and Teaching Computer Science Fundamentals focuses on steps, practices, and strategies to help you get started creating and establishing an inclusive CS Fundamentals classroom. 

### **Lesson 1: Introduction** (15 minutes)

Lesson 1:  Introduction provides a brief overview of Code.org, Computer Science Fundamentals courses, and computer science.

### **Lesson 2: Getting Started** (20 minutes)

Lesson 2:  Getting Started includes instructions to help you get started using teacher tools and resources.  Lesson 2 also provides where to find help and support after completing this online course.  In addition, Lesson 2 introduces the organization and content of Computer Science Fundamentals courses.


### **Lesson 3:  CS Teaching and Student Practices** (15 minutes) 

Lesson 3: CS Teaching and Student Practices focuses on CS teaching and student practices that may be applied to any Computer Science Fundamentals lesson. Lesson 3 also introduces two CS teaching strategies Debugging and Pair Programming built into lessons.

### **Lesson 4: Implementation Approaches and Barriers** (15 minutes) 

Lesson 4:  Implementation Approaches and Barriers provides a strategy for applying an equity lens to consider when implementing CS Fundamentals courses with your students.  In addition, Lesson 4 identifies the most common implementation barriers to help you further prepare for implementing CS Fundamentals courses.

### **Lesson 5:  Lesson Planning** (25 minutes)

Lesson 5:  Lesson Planning guides you through preparing a Computer Science Fundamentals lesson to try out with your students.

## CS Fundamentals Concepts

### Lesson 6: Sequencing (15-45 minutes)
- Define "program" and "algorithm"
- Identify where sequencing is introduced in the Computer Science Fundamentals courses
- Use the Code.org visual programming engine to write simple programs
- Explore an unplugged lesson on sequencing and reflect on classroom application
- Think about how to use lesson plans

### Lesson 7: Sprite Lab (15-45 minutes)
- Define "sprite" and "behavior"
- Identify where sprites and behaviors are introduced in the Computer Science Fundamentals courses
- Explore the coding environment Sprite Lab

### Lesson 8: Events (15-45 minutes)
- Define "events" and explain their importance
- Identify where events are introduced in the Computer Science Fundamentals courses
- Explore an unplugged lesson on events and reflect on classroom application
- Practice coding simple events
- Understand the debugging process

### Lesson 9: Conditionals (15-45 minutes)
- Define "conditionals" and explain their importance
- Identify where conditionals are introduced in the Computer Science Fundamentals courses
- Explore an unplugged lesson on conditionals and reflect on classroom application
- Practice coding simple conditionals
- Understand the teaching practice of journaling

### Lesson 10: End of Course Projects (15-45 minutes)
- Understand the benefit of end of course projects
- Identify where end of course projects are introduced in the Computer Science Fundamentals courses
- Practice coding a project

### Lesson 11: Functions (30-45 minutes)
- Identify if you will be teaching Courses E or F to students
- Define "functions" and explain their importance
- Identify where functions are introduced in the Computer Science Fundamentals courses
- Explore the unplugged lesson on functions and reflect on classroom application
- Practice coding simple functions

### Lesson 12: Variables (30-45 minutes)
- Define "variable" and explain its importance
- Identify where variables are introduced in the Computer Science Fundamentals courses
- Explore the unplugged lesson on variables and reflect on classroom application
- Practice coding with variables

### Lesson 13: For Loops (30-45 minutes)
- Define "for loops" and explain its importance
- Identify where for loops are introduced in the Computer Science Fundamentals courses
- Explore the unplugged lesson on for loops and reflect on classroom application
- Practice coding with for loops

- Define "loops" and explain their importance
- Identify where loops are introduced in the Computer Science Fundamentals courses
- Explore an unplugged lesson on loops and reflect on classroom application
- Practice coding simple loops
- Understand the benefits of pair programming


## Next Steps

### Lesson 14: Reviewing your Reflections (15 minutes)
- Review the reflections you have made throughout the course so far

### Lesson 15: Next Steps (15 minutes)
- Explore teacher resources
- Plan for next steps you can take to continue your learning
- Connect with a global community of fellow educators interested in computer science education
- Share your takeaways and feedback on this course

**Note**: Suggested times are provided above to help you plan your learning. Please note that you may want to spend more or less time on a given stage, depending on your prior knowledge, interest and capacity. Keep in mind that this course is entirely self-paced; you can always leave the course and come back or revisit any stage or level at any time. 

MARKDOWN
