name 'U3L19 - variable scope explanation pt2'
title 'U3L19 - variable scope explanation pt2'
description 'description here'


markdown <<MARKDOWN
## Creating variables in the right place

### Understanding variable scope

In the previous page the problem with code was the line **var count = count + 1**.  To fix it you need to remove the word **var**.

You already know the main reason this caused a problem and why:

* using **var count** is like saying "create a new variable called count" and in this case you didn't want to create a new variable.  You wanted to reference the one created at the top of the program.

But there is something else we can now tell you....

### Variables created inside functions go away once the function has completed execution.

You can think of variables created inside functions as temporary - they only live to serve the running of one call to the function.  

If a variable is created inside a button click event like this...
<pre style=“display: inline-block”>
onEvent("myButton", "click", function(){
   ...
   <strong> var count = 0; </strong>
   ...
});
</pre>

You may also be wondering:
* Does that mean that a new variable is created every time the button is clicked?
* Where do all these variables go?  Can I see them?
* Is it possible for many variables to have the same name?

Well, the answer is yes, a new variable is created each time, but *only* the code inside the function can see it.  And both the variable and its value are lost once the function is done running.

Here is an example of this in action...

<a class="btn btn-large btn-primary next-stage submitButton">Continue to see example</a>

   



MARKDOWN