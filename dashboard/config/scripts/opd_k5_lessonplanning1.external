name 'OPD-K5 LessonPlanning1'
skip_dialog true
markdown <<MARKDOWN
# Lesson Planning Overview
**Total Suggested Time:**

Let's dive into the CS Fundamentals course structure, lessons, and resources available to use as you plan.  Are you familiar with Code.org's Hour of Code? CS Fundamentals courses and Hour of code are not the same thing.  Hour of Code introduces students to CS while CS Fundamentals courses support students in building CS knowledge and skills.

## What is CS Fundamentals?

CS Fundamentals is:
* Developed with Curriculum Values in mind with a Pedagogical Approach to Curriculum Values
* Designed with K12 Computer Science Framework practices and CSTA K-12 standards
* Courses for each K-5 grade level for both pre-readers and readers

**Task: Read the Curriculum Values and Pedagogical Approach to Curriculum Values**

## Course Structure
* **Concept Chunks** - big ideas in each course which lessons are based on 
	* the repetition throughout Courses A-F to strengthen students’ CS knowledge and skills 
	* each course is designed to stand alone and does not require a student to take a course in sequence
    * students can begin learning CS with any course

* **Digital Citizenship** - lessons from Common Sense Media that are included in every course to teach students about online safety

## Lesson Types
* **Unplugged/Introduction:** off the computer to introduce a new concept in a hands-on way
* **Skill building:** on the computer to practice using a new tool or programming concept
* **Application:** on the computer to apply learned concepts in creative ways
* **Mini-projects and End of course projects:** on and off the computer, open-ended projects


## Lesson Structure
* **Lesson Progression:** typically follows a lesson sequence of a warm up, followed by a main activity (that may or may not be on the computer), and a warm up
* **Lesson Resources:** student handouts and teacher prep resources
* **Code Studio learning platform:** when students are on the computer they engage with the learning platform for skill building, making predictions, solving puzzles, lesson extras, watching videos, or creating mini-projects.  Note:  not all courses include what is listed here in order to provide age appropriate lessons.

## Flexible Implementation
* Examples of common course implementations:
	* Once a week in a general classroom
	* Every class session in a tech classroom
	* Once a month in a library setting
	* Multiple periods a week for a few months as a “unit”
	* Included during other content instruction
	* lessons are mapped to Common Core ELA/Math Standards and Next Generation Science Standards


<img src="https://images.code.org/80a1fa04481359759d2b86ddca9b33a4-image-1433972662378.png" class="level-image">


    

MARKDOWN
