name 'PDK5 Course Descriptions'
title 'Overview of Courses 1, 2, and 3'

markdown <<MARKDOWN
### Who is this for?

**Kids as young as five years-old!**

Courses 1, 2, and 3 are designed primarily for an elementary school audience, but new courses are being planned for older students as well.

**Teachers! (in-school, after-school, or home-school)**

This curriculum has been developed for use by all educators of young children. We assume no prior computer science knowledge and have provided clear, detailed lesson plans that can be customized to different situations. Learn with your students!

### Which Course is for me?

Code.org’s K-5 computer science experience consists of three courses:

- **Course 1**: beginners, early-readers (ages 4-6)
- **Course 2**: beginners, readers (ages 6+)
- **Course 3**: prerequisite is Course 2 (ages 6+)


The courses are designed to be flexibly implemented. Rather than a rigid pathway based on grade levels, the courses are based on developmental level and prior experience. Teachers and schools can use the course structure to tailor a course sequence to their students’ needs and evolving experience.

### Course Structure

The courses use a spiraling curriculum design, in which concepts and skills are revisited in each course while delving deeper each time.

Each course experience is a blend of online activities and "unplugged" activities, lessons in which students can learn computing concepts with or without a computer. The online experiences are composed of self-guided and self-paced tutorials, which use scaffolded sets of programming instructions to explore and practice algorithmic thinking. The unplugged lessons take a hands-on, often kinesthetic approach, making use of physical manipulatives to model computational concepts.

Each course consists of about 18 to 20 lessons, each lasting between 25 and 45 minutes. They can be taught at a comfortable pace whether in consecutive days as a sub-unit or one day a week for 18 weeks. The content of each course builds conceptually on the previous course, so that a student can progress through all three experiences learning new concepts along the way.

Code.org’s K-5 curriculum aligns to CSTA Computer Science Standards and ISTE standards, while some lessons also integrate national Math, English Language Arts, and Science standards.

The use of *Computer Science Themes* scaffolds the development of ideas and recognizes the continual construction of knowledge:

- Algorithms
- Data
- Abstraction
- Computing Practice and Programming (Use of computational tools)
- Computers and Communication Devices (Elements of computing devices and networks)
- Community, Global, and Ethical Impacts

Across the entire K-5 curriculum, students will develop the skills of a computer scientist through the development of *Computational Thinking Practices*:

- Creativity
- Collaboration
- Communication
- Persistence
- Problem Solving

#### Which course is appropriate for the students you'll be working with?
MARKDOWN

placeholder 'I am going to start with Course...' 