#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
# A daemonized version of 'process_queues' supporting the following
# "init-script" arguments: start, stop, restart, reload, and status.

require 'daemons'
require 'pathname'

pwd  = File.dirname(File.expand_path(__FILE__))
log_dir = Pathname.new(File.join(pwd, '../../log/')).cleanpath
config_dir = Pathname.new(File.join(pwd, '../../config/')).cleanpath

if ARGV.size < 1 || ARGV.size > 2
  puts "Usage: #{$0} start|stop|restart|reload|status [CONFIG_FILE_PATH]"
  exit
end

command = ARGV.shift
if ARGV.size > 0
  config_file = ARGV.shift
else
  config_file = "#{config_dir}/queue_config.json.erb"
end

argv = [command, '--', config_file]

options =  {
  dir_mode: :normal, # Use absolute directory paths.
  dir: config_dir, # directory where pid file will be stored
  log_dir: log_dir,
  backtrace: true,   # Log uncaught exceptions to ‘[app_name].log’ in the pid-file directory.
  monitor: true,     # Monitor the program and restart crashed instances.
  log_output: true,  # Log the output to process_queues.output in the config directory.
  multiple: true,    # Allow multiple instances of the queue processor on one machine.
  ARGV: argv
}

if command == 'start'
  # Make sure the config file exists.
  raise "#{config_file} does not exist" unless File.exists?(config_file)
  raise "#{config_file} is not readable" unless File.readable?(config_file)

  puts " * Using config #{config_file}"
  puts " * Logging to #{log_dir}/process_queues.output"
end

Daemons.run("#{pwd}/process_queues", options)
